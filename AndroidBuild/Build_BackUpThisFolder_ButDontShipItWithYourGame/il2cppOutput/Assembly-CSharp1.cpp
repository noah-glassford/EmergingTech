#include "pch-cpp.hpp"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <limits>


struct VirtualActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct VirtualActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct VirtualFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1>
struct InvokerActionInvoker1
{
	static inline void Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1 p1)
	{
		void* params[1] = { &p1 };
		method->invoker_method(methodPtr, method, obj, params, NULL);
	}
};
template <typename T1, typename T2>
struct InvokerActionInvoker2
{
	static inline void Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1 p1, T2 p2)
	{
		void* params[2] = { &p1, &p2 };
		method->invoker_method(methodPtr, method, obj, params, NULL);
	}
};
template <typename T1, typename T2>
struct InvokerActionInvoker2<T1*, T2>
{
	static inline void Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1* p1, T2 p2)
	{
		void* params[2] = { p1, &p2 };
		method->invoker_method(methodPtr, method, obj, params, NULL);
	}
};
template <typename T1, typename T2>
struct InvokerActionInvoker2<T1, T2*>
{
	static inline void Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1 p1, T2* p2)
	{
		void* params[2] = { &p1, p2 };
		method->invoker_method(methodPtr, method, obj, params, NULL);
	}
};
template <typename T1, typename T2>
struct InvokerActionInvoker2<T1*, T2*>
{
	static inline void Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1* p1, T2* p2)
	{
		void* params[2] = { p1, p2 };
		method->invoker_method(methodPtr, method, obj, params, NULL);
	}
};
template <typename T1, typename T2, typename T3>
struct InvokerActionInvoker3;
template <typename T1, typename T2, typename T3>
struct InvokerActionInvoker3<T1*, T2, T3>
{
	static inline void Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1* p1, T2 p2, T3 p3)
	{
		void* params[3] = { p1, &p2, &p3 };
		method->invoker_method(methodPtr, method, obj, params, NULL);
	}
};
template <typename T1, typename T2, typename T3>
struct InvokerActionInvoker3<T1*, T2, T3*>
{
	static inline void Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1* p1, T2 p2, T3* p3)
	{
		void* params[3] = { p1, &p2, p3 };
		method->invoker_method(methodPtr, method, obj, params, NULL);
	}
};
template <typename T1, typename T2, typename T3>
struct InvokerActionInvoker3<T1*, T2*, T3*>
{
	static inline void Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1* p1, T2* p2, T3* p3)
	{
		void* params[3] = { p1, p2, p3 };
		method->invoker_method(methodPtr, method, obj, params, NULL);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InvokerActionInvoker4
{
	static inline void Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		void* params[4] = { &p1, &p2, &p3, &p4 };
		method->invoker_method(methodPtr, method, obj, params, NULL);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InvokerActionInvoker5;
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InvokerActionInvoker5<T1*, T2, T3, T4, T5>
{
	static inline void Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1* p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		void* params[5] = { p1, &p2, &p3, &p4, &p5 };
		method->invoker_method(methodPtr, method, obj, params, NULL);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct InvokerFuncInvoker6;
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct InvokerFuncInvoker6<R, T1, T2*, T3*, T4*, T5, T6>
{
	static inline R Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1 p1, T2* p2, T3* p3, T4* p4, T5 p5, T6 p6)
	{
		R ret;
		void* params[6] = { &p1, p2, p3, p4, &p5, &p6 };
		method->invoker_method(methodPtr, method, obj, params, &ret);
		return ret;
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct InvokerFuncInvoker7;
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct InvokerFuncInvoker7<R, T1*, T2, T3*, T4*, T5*, T6, T7>
{
	static inline R Invoke (Il2CppMethodPointer methodPtr, const RuntimeMethod* method, void* obj, T1* p1, T2 p2, T3* p3, T4* p4, T5* p5, T6 p6, T7 p7)
	{
		R ret;
		void* params[7] = { p1, &p2, p3, p4, p5, &p6, &p7 };
		method->invoker_method(methodPtr, method, obj, params, &ret);
		return ret;
	}
};

// System.Action`1<UnityEngine.XR.ARFoundation.ARAnchorsChangedEventArgs>
struct Action_1_t11340E5174173030E076A75316E18A395082F8A5;
// System.Action`1<UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs>
struct Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074;
// System.Action`1<UnityEngine.XR.ARFoundation.ARPlanesChangedEventArgs>
struct Action_1_t009680BF19017ECA60753C7F605CBD85C56C6560;
// System.Action`1<System.Int32>
struct Action_1_tD69A6DC9FBE94131E52F5A73B2A9D4AB51EEC404;
// System.Comparison`1<UnityEngine.XR.ARFoundation.ARRaycastHit>
struct Comparison_1_t0E0A9C99A8D29FBC5FA5ED9B9B2175A13C6578C0;
// System.Collections.Generic.Dictionary`2<System.String,System.Int32>
struct Dictionary_2_t5C8F46F5D57502270DD9E1DA8303B23C7FE85588;
// System.Collections.Generic.Dictionary`2<System.String,System.String>
struct Dictionary_2_t46B2DB028096FA2B828359E52F37F3105A83AD83;
// System.Collections.Generic.Dictionary`2<UnityEngine.XR.ARSubsystems.TrackableId,UnityEngine.XR.ARFoundation.ARAnchor>
struct Dictionary_2_t525DE08A369658A5AE7D624D571ED15216817535;
// System.Collections.Generic.Dictionary`2<UnityEngine.XR.ARSubsystems.TrackableId,UnityEngine.XR.ARFoundation.ARPlane>
struct Dictionary_2_t26A4820BA6F451105138232941B7A9466E583A6C;
// System.Collections.Generic.Dictionary`2<UnityEngine.XR.ARSubsystems.TrackableId,UnityEngine.XR.ARFoundation.ARRaycast>
struct Dictionary_2_t4D1D3AB1188A73B9F0416424BA9B873577C418FD;
// OpenCvSharp.Util.Func`2<System.Byte[],System.Int32>
struct Func_2_tEEF2968C54FE351F4C1BD8E2B735BA4ACBED483D;
// OpenCvSharp.Util.Func`2<OpenCvSharp.DMatch[],System.Int32>
struct Func_2_t11AEBBE7586E8E012359A8E8016F05517F1601A4;
// OpenCvSharp.Util.Func`2<OpenCvSharp.Point[],System.Int32>
struct Func_2_t71EC06A5BC9A90610CC01B1AE7B4FF39F18500D4;
// OpenCvSharp.Util.Func`2<OpenCvSharp.HierarchyIndex,OpenCvSharp.Vec4i>
struct Func_2_tFA115147C8997639BC21630246E7B2650E1F386F;
// OpenCvSharp.Util.Func`2<OpenCvSharp.Mat,OpenCvSharp.InputArray>
struct Func_2_tBB78AFBE411FBB1B95B0874B873DD0B6199B062A;
// OpenCvSharp.Util.Func`2<OpenCvSharp.Mat,OpenCvSharp.Vec3d>
struct Func_2_tAADBDE8BF83395E5778CA4F78B7E75A6A79A30C0;
// OpenCvSharp.Util.Func`2<OpenCvSharp.Rangef,System.Single[]>
struct Func_2_t26EB3A27A4414D19234FA1ED64270ED766E221DB;
// System.Func`4<UnityEngine.Ray,UnityEngine.XR.ARSubsystems.TrackableType,Unity.Collections.Allocator,Unity.Collections.NativeArray`1<UnityEngine.XR.ARSubsystems.XRRaycastHit>>
struct Func_4_t917A5E0B468B7C0436CA84D065BEB6FC43C9B906;
// System.Func`4<UnityEngine.Vector2,UnityEngine.XR.ARSubsystems.TrackableType,Unity.Collections.Allocator,Unity.Collections.NativeArray`1<UnityEngine.XR.ARSubsystems.XRRaycastHit>>
struct Func_4_t0755A61145E99905AC47DF85416091FB30758B8A;
// System.Collections.Generic.IEnumerable`1<OpenCvSharp.DMatch>
struct IEnumerable_1_t70E8B5342E90FA23E5E12ACEC3675D9703900C9D;
// System.Collections.Generic.IEnumerable`1<OpenCvSharp.KeyPoint>
struct IEnumerable_1_tBF43BCA6AD83E5B9E655249E9766B376E0DB1122;
// System.Collections.Generic.IEnumerable`1<System.Object>
struct IEnumerable_1_tF95C9E01A913DD50575531C8305932628663D9E9;
// System.Collections.Generic.IEnumerable`1<System.String>
struct IEnumerable_1_t349E66EC5F09B881A8E52EE40A1AB9EC60E08E44;
// System.Collections.Generic.List`1<Unity.Collections.NativeArray`1<UnityEngine.XR.ARSubsystems.XRRaycastHit>>
struct List_1_t554F70DABEBFEED67B5400AB73777A6D987F0D36;
// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARAnchor>
struct List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53;
// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARPlane>
struct List_1_t10BA05B555C92BD54800DFF82DCAAFC9DE44A077;
// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycast>
struct List_1_tE7BEADF38CADBCC46B040CF07A1B719A7F7E5123;
// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycastHit>
struct List_1_t0754071572EFE7A5C92A59495D2524FC935364E3;
// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.IRaycaster>
struct List_1_t50405350B03FC84D28784364F500CB08B82435B5;
// System.Collections.Generic.List`1<System.Object>
struct List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D;
// System.Collections.Generic.List`1<System.String>
struct List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD;
// System.Collections.Generic.List`1<UnityEngine.Vector3>
struct List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B;
// System.Collections.Generic.List`1<UnityEngine.XR.ARSubsystems.XRAnchorSubsystem>
struct List_1_t9F2B0C5D9A34683317CA96A0A733BA6B33CC089A;
// System.Collections.Generic.List`1<UnityEngine.XR.ARSubsystems.XRAnchorSubsystemDescriptor>
struct List_1_t65387FE114D984E6DCFF71774BFC19CEB318A9BE;
// System.Collections.Generic.List`1<UnityEngine.XR.ARSubsystems.XRPlaneSubsystem>
struct List_1_t6630EC2D13FD2DC6D86447667371501266C9B3E8;
// System.Collections.Generic.List`1<UnityEngine.XR.ARSubsystems.XRPlaneSubsystemDescriptor>
struct List_1_tD705D57B270C006E488F9C9B55BA0768A11125D0;
// System.Collections.Generic.List`1<UnityEngine.XR.ARSubsystems.XRRaycastSubsystem>
struct List_1_tD793A24512B84D46F925E4CE4DBD30955A42C94C;
// System.Collections.Generic.List`1<UnityEngine.XR.ARSubsystems.XRRaycastSubsystemDescriptor>
struct List_1_t97C3D1A8E80E095D7CE223BC4D02400F78DA063F;
// OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorGMG>
struct Ptr_1_tD22569946308A3D2387E04238F3B86016A293509;
// OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorMOG>
struct Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11;
// OpenCvSharp.Ptr`1<System.Object>
struct Ptr_1_tF4CE47B9E9F464FDD6C62445FAF1D89228128255;
// OpenCvSharp.Ptr`1<OpenCvSharp.StereoBM>
struct Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC;
// OpenCvSharp.Ptr`1<OpenCvSharp.StereoSGBM>
struct Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38;
// System.Threading.Tasks.Task`1<System.Int32>
struct Task_1_t4C228DE57804012969575431CFF12D57C875552D;
// UnityEngine.UI.CoroutineTween.TweenRunner`1<UnityEngine.UI.CoroutineTween.ColorTween>
struct TweenRunner_1_t5BB0582F926E75E2FE795492679A6CF55A4B4BC4;
// UnityEngine.Events.UnityEvent`1<UnityEngine.SpriteRenderer>
struct UnityEvent_1_t8ABE5544759145B8D7A09F1C54FFCB6907EDD56E;
// UnityEngine.XR.ARFoundation.ARAnchor[]
struct ARAnchorU5BU5D_t589CB7678527B30DBFABED0E377BC500C9D3454A;
// UnityEngine.XR.ARFoundation.ARRaycastHit[]
struct ARRaycastHitU5BU5D_t34FE14E360F945895923A0FE69CC277E7D13027E;
// System.Byte[]
struct ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031;
// UnityEngine.Rendering.CameraEvent[]
struct CameraEventU5BU5D_tCE64254E9E2B285C33AE3AA6C3D1E9AA3BE6CE1E;
// System.Char[]
struct CharU5BU5D_t799905CF001DD5F13F7DBB310181FC4D8B7D0AAB;
// OpenCvSharp.DMatch[]
struct DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34;
// System.Delegate[]
struct DelegateU5BU5D_tC5AB7E8F745616680F337909D3A8E6C722CDF771;
// System.Double[]
struct DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE;
// System.Int16[]
struct Int16U5BU5D_t8175CE8DD9C9F9FB0CF4F58E45BC570575B43CFB;
// System.Int32[]
struct Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C;
// System.IntPtr[]
struct IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832;
// OpenCvSharp.KeyPoint[]
struct KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17;
// System.Object[]
struct ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918;
// OpenCvSharp.Point[]
struct PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B;
// OpenCvSharp.Point2d[]
struct Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485;
// OpenCvSharp.Point2f[]
struct Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953;
// OpenCvSharp.Point3d[]
struct Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D;
// OpenCvSharp.Point3f[]
struct Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2;
// OpenCvSharp.Point3i[]
struct Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC;
// OpenCvSharp.Range[]
struct RangeU5BU5D_t7A815EED0DB267C51F9F6C0507B9579B68391756;
// OpenCvSharp.Rect[]
struct RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A;
// System.Single[]
struct SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C;
// System.Diagnostics.StackTrace[]
struct StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF;
// System.String[]
struct StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248;
// System.Type[]
struct TypeU5BU5D_t97234E1129B564EB38B8D85CAC2AD8B5B9522FFB;
// System.UInt16[]
struct UInt16U5BU5D_tEB7C42D811D999D2AA815BADC3FCCDD9C67B3F83;
// OpenCvSharp.Vec2f[]
struct Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF;
// OpenCvSharp.Vec3b[]
struct Vec3bU5BU5D_t65AD1F336D24EA9AD600B4A6CB27B3B517C138EE;
// OpenCvSharp.Vec3d[]
struct Vec3dU5BU5D_t7F6500BD6738D9EF9379BBF49E20270DD8FE005E;
// OpenCvSharp.Vec3f[]
struct Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D;
// OpenCvSharp.Vec4d[]
struct Vec4dU5BU5D_t4CD1D642D7FE8D7D780F5089E9047773F65F29E7;
// OpenCvSharp.Vec4f[]
struct Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64;
// OpenCvSharp.Vec4i[]
struct Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157;
// OpenCvSharp.Vec6d[]
struct Vec6dU5BU5D_tD00B137B3DBEF1DB6F17CA62572E730E9D27FE42;
// OpenCvSharp.Vec6f[]
struct Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3;
// UnityEngine.Vector2[]
struct Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA;
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C;
// System.Byte[,]
struct ByteU5BU2CU5D_tFF0F8305C018904B90DCD1740962BABBC458B638;
// System.Double[,]
struct DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE;
// UnityEngine.GameObject[,]
struct GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E;
// System.Int16[,]
struct Int16U5BU2CU5D_tA1085F28F76441E5B3C4F55200C853889884825E;
// System.Int32[,]
struct Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F;
// UnityEngine.MeshRenderer[,]
struct MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7;
// OpenCvSharp.Point[,]
struct PointU5BU2CU5D_t75336C640C8EF9A5D74131EF2FF56ADE1E04A0A3;
// OpenCvSharp.Point2d[,]
struct Point2dU5BU2CU5D_t7484AAFF04C19494AB4D23D45BE7FB1371C8B4DE;
// OpenCvSharp.Point2f[,]
struct Point2fU5BU2CU5D_t534637B478C32FFC446C173967390F3A2A61FBEF;
// OpenCvSharp.Point3d[,]
struct Point3dU5BU2CU5D_tF448DE8BEF99C9C7200AC09879C34D2B9BB16E43;
// OpenCvSharp.Point3f[,]
struct Point3fU5BU2CU5D_t956F68C0D8D3E941181E3BDAA0CDF49861545B6C;
// OpenCvSharp.Point3i[,]
struct Point3iU5BU2CU5D_t9D63D6246F01F8C00A5D07420A3EC8F43E7EB075;
// OpenCvSharp.Rect[,]
struct RectU5BU2CU5D_t466728D2C4C1410891B29B2693FA0796C414CC2D;
// System.Single[,]
struct SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4;
// System.UInt16[,]
struct UInt16U5BU2CU5D_t2C918D9FF94D8CF06CE395FB8C6B931FA8B8AE1B;
// OpenCvSharp.Vec3b[,]
struct Vec3bU5BU2CU5D_tE90BFA4A10C08A985D030E3187325900CBF521B5;
// OpenCvSharp.Vec3d[,]
struct Vec3dU5BU2CU5D_t29CB373947AD17A0ECF7B4EEB20936B21D140804;
// OpenCvSharp.Vec4f[,]
struct Vec4fU5BU2CU5D_t54D8EA2F459F41BD179635792BF550EB3E317FDF;
// OpenCvSharp.Vec4i[,]
struct Vec4iU5BU2CU5D_t438C08E75365B75E4142B910325D19F21F4C6CD9;
// OpenCvSharp.Vec6f[,]
struct Vec6fU5BU2CU5D_t7C67D2C5EDBC06D656BC54F1A2409DE9F3334AAE;
// UnityEngine.XR.ARFoundation.ARAnchor
struct ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06;
// UnityEngine.XR.ARFoundation.ARAnchorManager
struct ARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E;
// UnityEngine.XR.ARFoundation.ARCameraBackground
struct ARCameraBackground_t5E400069BEB27E2F5ECE553C3C23475FC80A1703;
// UnityEngine.XR.ARFoundation.ARCameraManager
struct ARCameraManager_t6E957EA922911B8447D086D9FB1F860EC967BD9F;
// ARFeatheredPlaneMeshVisualizer
struct ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955;
// UnityEngine.XR.ARFoundation.AROcclusionManager
struct AROcclusionManager_t9EDE9F76050AF892E2AC6704D0F76EDAC370609D;
// UnityEngine.XR.ARFoundation.ARPlane
struct ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0;
// UnityEngine.XR.ARFoundation.ARPlaneManager
struct ARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928;
// UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer
struct ARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F;
// UnityEngine.XR.ARFoundation.ARRaycastManager
struct ARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44;
// UnityEngine.XR.ARFoundation.ARSessionOrigin
struct ARSessionOrigin_tE7B28A1A19500BCC02711397A19E330425830BC3;
// UnityEngine.XR.ARFoundation.ARTrackable
struct ARTrackable_t1D98417758C08E98A333CDEC0C2C1688CE10B2E0;
// OpenCvSharp.Algorithm
struct Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111;
// AnchorCreator
struct AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED;
// System.ArgumentNullException
struct ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129;
// System.ArgumentOutOfRangeException
struct ArgumentOutOfRangeException_tEA2822DAF62B10EEED00E0E3A341D4BAF78CF85F;
// System.AsyncCallback
struct AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C;
// OpenCvSharp.BackgroundSubtractor
struct BackgroundSubtractor_t1041DECAB76BA253B12C2AE840B600A35456C4E6;
// OpenCvSharp.BackgroundSubtractorGMG
struct BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D;
// OpenCvSharp.BackgroundSubtractorMOG
struct BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4;
// System.Reflection.Binder
struct Binder_t91BFCE95A7057FADF4D8A1A342AFE52872246235;
// UnityEngine.Camera
struct Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184;
// OpenCvSharp.CameraScenePassthrough
struct CameraScenePassthrough_t4775120A040BD72E8844090020568DAA649D6770;
// UnityEngine.Canvas
struct Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26;
// UnityEngine.CanvasRenderer
struct CanvasRenderer_tAB9A55A976C4E3B2B37D0CE5616E5685A8B43860;
// ChessBoard
struct ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191;
// UnityEngine.Rendering.CommandBuffer
struct CommandBuffer_tB56007DC84EF56296C325EC32DD12AC1E3DC91F7;
// UnityEngine.Component
struct Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3;
// OpenCvSharp.Constants
struct Constants_t23876486BA2EB76C9B8017BD26AA893550D303A3;
// OpenCvSharp.CvErrorCallback
struct CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D;
// OpenCvSharp.CvMouseCallback
struct CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB;
// OpenCvSharp.CvObject
struct CvObject_t470E08FFB594E86FEAB1822321B927074DB887B9;
// OpenCvSharp.CvTrackbarCallback
struct CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3;
// OpenCvSharp.CvTrackbarCallback2
struct CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7;
// OpenCvSharp.CvTrackbarCallback2Native
struct CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E;
// OpenCvSharp.DisposableCvObject
struct DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184;
// OpenCvSharp.DisposableObject
struct DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41;
// System.Exception
struct Exception_t;
// OpenCvSharp.FileNode
struct FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5;
// System.IO.FileNotFoundException
struct FileNotFoundException_t17F1B49AD996E4A60C87C7ADC9D3A25EB5808A9A;
// OpenCvSharp.FileStorage
struct FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058;
// UnityEngine.GameObject
struct GameObject_t76FEDD663AB33C991A9C9A23129337651094216F;
// OpenCvSharp.HierarchyIndex
struct HierarchyIndex_t9900FD90BA1ECED471DD979EE00CB097A9BA49D0;
// System.IAsyncResult
struct IAsyncResult_t7B9B5A0ECB35DCEC31B8A8122C37D687369253B5;
// OpenCvSharp.ICvPtrHolder
struct ICvPtrHolder_t6269FC224CF706D0369A3BF6C89E04CADB7BCB41;
// System.Collections.IDictionary
struct IDictionary_t6D03155AF1FA9083817AA5B6AD7DEEACC26AB220;
// ImageToBackground
struct ImageToBackground_t38A93F35104A62583BA7C07FEA7FF61D24D9DEB9;
// OpenCvSharp.InputArray
struct InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F;
// LobbyScript
struct LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31;
// OpenCvSharp.Mat
struct Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE;
// OpenCvSharp.MatForeachFunctionByte
struct MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3;
// OpenCvSharp.MatForeachFunctionDouble
struct MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A;
// OpenCvSharp.MatForeachFunctionFloat
struct MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A;
// OpenCvSharp.MatForeachFunctionInt16
struct MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1;
// OpenCvSharp.MatForeachFunctionInt32
struct MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA;
// OpenCvSharp.MatForeachFunctionVec2b
struct MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828;
// OpenCvSharp.MatForeachFunctionVec2d
struct MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10;
// OpenCvSharp.MatForeachFunctionVec2f
struct MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2;
// OpenCvSharp.MatForeachFunctionVec2i
struct MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131;
// OpenCvSharp.MatForeachFunctionVec2s
struct MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392;
// OpenCvSharp.MatForeachFunctionVec3b
struct MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6;
// OpenCvSharp.MatForeachFunctionVec3d
struct MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5;
// OpenCvSharp.MatForeachFunctionVec3f
struct MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2;
// OpenCvSharp.MatForeachFunctionVec3i
struct MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593;
// OpenCvSharp.MatForeachFunctionVec3s
struct MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A;
// OpenCvSharp.MatForeachFunctionVec4b
struct MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A;
// OpenCvSharp.MatForeachFunctionVec4d
struct MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466;
// OpenCvSharp.MatForeachFunctionVec4f
struct MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29;
// OpenCvSharp.MatForeachFunctionVec4i
struct MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3;
// OpenCvSharp.MatForeachFunctionVec4s
struct MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613;
// OpenCvSharp.MatForeachFunctionVec6b
struct MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4;
// OpenCvSharp.MatForeachFunctionVec6d
struct MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46;
// OpenCvSharp.MatForeachFunctionVec6f
struct MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52;
// OpenCvSharp.MatForeachFunctionVec6i
struct MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C;
// OpenCvSharp.MatForeachFunctionVec6s
struct MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89;
// OpenCvSharp.MatProxy
struct MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8;
// UnityEngine.Material
struct Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3;
// System.Reflection.MemberFilter
struct MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553;
// System.IO.MemoryStream
struct MemoryStream_tAAED1B42172E3390584E4194308AB878E786AAC2;
// UnityEngine.Mesh
struct Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4;
// UnityEngine.MeshRenderer
struct MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// UnityEngine.MonoBehaviour
struct MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71;
// UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C;
// System.ObjectDisposedException
struct ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB;
// OpenCvSharp.OpenCVException
struct OpenCVException_tE58DF4848C655F3CB2CFE810F36B55EDC7A8B01A;
// OpenCvSharp.OpenCvSharpException
struct OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A;
// System.OperatingSystem
struct OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557;
// Piece
struct Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D;
// System.Random
struct Random_t79716069EDE67D1D7734F60AE402D0CA3FB6B4C8;
// UnityEngine.UI.RawImage
struct RawImage_tFF12F7DB574FBDC1863CF607C7A12A5D9F8D6179;
// UnityEngine.UI.RectMask2D
struct RectMask2D_tACF92BE999C791A665BD1ADEABF5BCEB82846670;
// UnityEngine.RectTransform
struct RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5;
// System.Text.RegularExpressions.Regex
struct Regex_tE773142C2BE45C5D362B0F815AFF831707A51772;
// UnityEngine.Renderer
struct Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF;
// System.Runtime.Serialization.SafeSerializationManager
struct SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6;
// System.Threading.SemaphoreSlim
struct SemaphoreSlim_t0D5CB5685D9BFA5BF95CEC6E7395490F933E8DB2;
// OpenCvSharp.ShapePredictor
struct ShapePredictor_tCD381ACDA05D89BAE24A7D0887BDA064C5C385BD;
// OpenCvSharp.SparseMat
struct SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB;
// UnityEngine.Sprite
struct Sprite_tAFF74BC83CD68037494CB0B4F28CBDF8971CAB99;
// UnityEngine.SpriteRenderer
struct SpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B;
// OpenCvSharp.StereoBM
struct StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B;
// OpenCvSharp.StereoMatcher
struct StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA;
// OpenCvSharp.StereoSGBM
struct StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C;
// System.IO.Stream
struct Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE;
// System.String
struct String_t;
// System.Text.StringBuilder
struct StringBuilder_t;
// UnityEngine.Texture
struct Texture_t791CBB51219779964E0E8A2ED7C1AA5F92A4A700;
// UnityEngine.Texture2D
struct Texture2D_tE6505BC111DD8A424A9DBE8E05D7D09E11FFFCF4;
// UnityEngine.Transform
struct Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1;
// System.Type
struct Type_t;
// UnityEngine.Events.UnityAction
struct UnityAction_t11A1F3B953B365C072A5DCC32677EE1796A962A7;
// OpenCvSharp.VectorOfDMatch
struct VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35;
// OpenCvSharp.VectorOfKeyPoint
struct VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242;
// OpenCvSharp.VectorOfPoint
struct VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636;
// System.Version
struct Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7;
// UnityEngine.UI.VertexHelper
struct VertexHelper_tB905FCB02AE67CBEE5F265FE37A5938FC5D136FE;
// System.Void
struct Void_t4861ACF8F4594C3437BB48B6E56783494B843915;
// OpenCvSharp.Util.WindowsLibraryLoader
struct WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7;
// UnityEngine.XR.ARSubsystems.XRAnchorSubsystem
struct XRAnchorSubsystem_tB8B108EFBD93D4AFD53DCE7BD599009F79D214AF;
// UnityEngine.XR.ARSubsystems.XRCameraSubsystem
struct XRCameraSubsystem_t1F15E4BAEF03223F63AB57E49D1B5DE06749D140;
// UnityEngine.XR.ARSubsystems.XRPlaneSubsystem
struct XRPlaneSubsystem_t6FC18D5B1FF10EE9B4A751977B526F44A16EDB62;
// UnityEngine.XR.ARSubsystems.XRRaycastSubsystem
struct XRRaycastSubsystem_t48087E79DE9617C7E866875C8DDD3124C9E068B7;
// OpenCvSharp.Cv2/<>c
struct U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D;
// UnityEngine.UI.MaskableGraphic/CullStateChangedEvent
struct CullStateChangedEvent_t6073CD0D951EC1256BF74B8F9107D68FC89B99B8;
// OpenCvSharp.Mat/ColExprIndexer
struct ColExprIndexer_t65FB4C7E258DB30905ABF1ABB4FD463F5D634A07;
// OpenCvSharp.Mat/ColIndexer
struct ColIndexer_tD1E32BF4DFBD130EA0A93833D7EEFE241DCEF668;
// OpenCvSharp.Mat/MatExprIndexer
struct MatExprIndexer_tB64CDE6A7443CDD5A196B278BEB4E5BE9B6F9B92;
// OpenCvSharp.Mat/RowExprIndexer
struct RowExprIndexer_tFB0C258EBBEC534D72ACC58CF0AFB2F172A39BB2;
// OpenCvSharp.Mat/RowIndexer
struct RowIndexer_t4CD4C726A6D6CDB3E9283B4821460A138800DBB0;
// OpenCvSharp.NativeMethods/<>c
struct U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7;
// OpenCvSharp.PtrNativeFunctions/ObjFunc
struct ObjFunc_tADFA8072AC5CCB4A4464BBF25935C8B601957A5D;
// OpenCvSharp.PtrNativeFunctions/ReleaseFunc
struct ReleaseFunc_t91CA4A54F761CA77DDBB5ECE0B266BCAFE7264B0;
// System.IO.Stream/ReadWriteTask
struct ReadWriteTask_t0821BF49EE38596C7734E86E1A6A39D769BE2C05;

IL2CPP_EXTERN_C RuntimeClass* ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ArgumentOutOfRangeException_tEA2822DAF62B10EEED00E0E3A341D4BAF78CF85F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BadImageFormatException_t7EBAEDCD74D3274D00106EC0051755C18D20E552_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Console_t5EDF9498D011BD48287171978EDBBA6964829C3E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DllNotFoundException_t8CAE636A394C482C9FCF38FB7B7929506319D534_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ErrorCode_t03156D693FE7804F428FB11893D1F57FDE3E30A6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Exception_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* FileNotFoundException_t17F1B49AD996E4A60C87C7ADC9D3A25EB5808A9A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* IntPtr_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t0754071572EFE7A5C92A59495D2524FC935364E3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Math_tEB65DE7CA8B083C412C969C92981C030865486CE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MemoryStream_tAAED1B42172E3390584E4194308AB878E786AAC2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* MouseEvent_t0C9B57DCCAC62FD740BF31C3769C5E262690A588_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OpenCVException_tE58DF4848C655F3CB2CFE810F36B55EDC7A8B01A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Ptr_1_tD22569946308A3D2387E04238F3B86016A293509_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* RuntimeObject_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SceneManager_tA0EF56A88ACA4A15731AF7FDC10A869FA4C698FA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringBuilder_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral06EE6726823EC0809D607A02E5C8310F206646E9;
IL2CPP_EXTERN_C String_t* _stringLiteral131018280018B48DB9FF86A96C7535E6FA339C24;
IL2CPP_EXTERN_C String_t* _stringLiteral198AA065BF0F912BD6F5F93869BD5C361671F98B;
IL2CPP_EXTERN_C String_t* _stringLiteral1CE6EBB1B7F62CB9F0B2AA7EC1E63359E4543634;
IL2CPP_EXTERN_C String_t* _stringLiteral1EA15EE8A42A561588097A07567DD53324EF7A07;
IL2CPP_EXTERN_C String_t* _stringLiteral1EED0D5F1E33AA2FFB7DBFEECB26B18409E1CD1B;
IL2CPP_EXTERN_C String_t* _stringLiteral2386E77CF610F786B06A91AF2C1B3FD2282D2745;
IL2CPP_EXTERN_C String_t* _stringLiteral2C3D4826D5236B3C9A914C5CE2E3D8CEA48AC7CE;
IL2CPP_EXTERN_C String_t* _stringLiteral37A50091974FE11FAC57C870272F76245820AA18;
IL2CPP_EXTERN_C String_t* _stringLiteral3B2C1C62D4D1C2A0C8A9AC42DB00D33C654F9AD0;
IL2CPP_EXTERN_C String_t* _stringLiteral3D714DD3E8E77A697EF557E85ED2B014A96328C5;
IL2CPP_EXTERN_C String_t* _stringLiteral3EE2B7884D8BAA386714E3413F22889095B05B25;
IL2CPP_EXTERN_C String_t* _stringLiteral430E518F836082E0683698AB9E3F79D39C7F5140;
IL2CPP_EXTERN_C String_t* _stringLiteral4609D79FE2FAD95C38B6DA64FC671E8594984D4C;
IL2CPP_EXTERN_C String_t* _stringLiteral49A7EA21ECB328D154FA2262BB41626D795F4D90;
IL2CPP_EXTERN_C String_t* _stringLiteral4C9ECEDF5B1FB9420A92A5B02A141FADFDF52ED6;
IL2CPP_EXTERN_C String_t* _stringLiteral5E53EDC430BADDAA3A01D2F8074B9DC71802F871;
IL2CPP_EXTERN_C String_t* _stringLiteral6F87F470C5F3D18A1C19D5CC121CB12DC511B7EC;
IL2CPP_EXTERN_C String_t* _stringLiteral72BBD11044FC7AD5727FB44739D1A1DE080DC8A9;
IL2CPP_EXTERN_C String_t* _stringLiteral75C2BFAB5A72471574AED87ED97BFE36AD3C2A89;
IL2CPP_EXTERN_C String_t* _stringLiteral79AD99A8F867BAA9972639D17AA53B3047D3C3C2;
IL2CPP_EXTERN_C String_t* _stringLiteral80591287EBB6C3DAE4EAABE7E21796F9EFC25F64;
IL2CPP_EXTERN_C String_t* _stringLiteral81151D1E9FF5F53A008A360CAFF19A0083D10880;
IL2CPP_EXTERN_C String_t* _stringLiteral849043193B4849A97BE2F08CFC3CAC883A0F096C;
IL2CPP_EXTERN_C String_t* _stringLiteral8528CDFE4AAF036976077F3DD300CA7AC2A580FE;
IL2CPP_EXTERN_C String_t* _stringLiteral86BBAACC00198DBB3046818AD3FC2AA10AE48DE1;
IL2CPP_EXTERN_C String_t* _stringLiteral8BC1BE912C60049D1A5807B0E0C2428B7BC863F5;
IL2CPP_EXTERN_C String_t* _stringLiteral924CB591C7F83A8003577672F4A8CAFA3D9C6F31;
IL2CPP_EXTERN_C String_t* _stringLiteralA15C898F015A9B0BC3268E8883CD03008A56DE26;
IL2CPP_EXTERN_C String_t* _stringLiteralA18A4AE569C5BE88A9C406093C040EFEBFF78C5E;
IL2CPP_EXTERN_C String_t* _stringLiteralA1A7D50681230E7E150C94A27558DFAEC996E473;
IL2CPP_EXTERN_C String_t* _stringLiteralA33A5CAE02B786C2060461DF8C6764B4C05E9423;
IL2CPP_EXTERN_C String_t* _stringLiteralA9FEAF5F50923952C1AC3A473DE3C7E17D23B907;
IL2CPP_EXTERN_C String_t* _stringLiteralAB69FA1AB6BB831506EFCAD83900FEE751E85F6F;
IL2CPP_EXTERN_C String_t* _stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666;
IL2CPP_EXTERN_C String_t* _stringLiteralB1399DA80A9082F14CB8BD1C9C162707A5229DA9;
IL2CPP_EXTERN_C String_t* _stringLiteralB6C90BBDA8CAB763DF7E75324B19AA1C99993487;
IL2CPP_EXTERN_C String_t* _stringLiteralC0A1E5BF9A329D566F9251BA953A656E4F950794;
IL2CPP_EXTERN_C String_t* _stringLiteralD0B4DC3CEEB2A8F14F1AAB21CDC7388AF9D9AE02;
IL2CPP_EXTERN_C String_t* _stringLiteralD3935EFAE8603CC750F07F1D7D9717F8980D7D2F;
IL2CPP_EXTERN_C String_t* _stringLiteralD90AE71EBB34FF6A78254DE308A8EB5A61FF74D5;
IL2CPP_EXTERN_C String_t* _stringLiteralD9A17E555A67914614CD3B43372AD80D3E6B943B;
IL2CPP_EXTERN_C String_t* _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709;
IL2CPP_EXTERN_C String_t* _stringLiteralE0FBA51FC52C69B2ABD9870ACEB5E8E904FE5E69;
IL2CPP_EXTERN_C String_t* _stringLiteralE42E8BB820D4F7550A0F04619F4E15FDC56943B9;
IL2CPP_EXTERN_C String_t* _stringLiteralEB6EF8C308F5C67887945DB057157A820EDB1DDF;
IL2CPP_EXTERN_C String_t* _stringLiteralF0AC132CA38D942F0E4DBF229157DC9396FF7C7E;
IL2CPP_EXTERN_C String_t* _stringLiteralF2592D1B795517C40777277CE0CE15E9437CC7DD;
IL2CPP_EXTERN_C String_t* _stringLiteralF65558919B3B3417B82F7EA45471452B4AACA3E2;
IL2CPP_EXTERN_C String_t* _stringLiteralF944DCD635F9801F7AC90A407FBC479964DEC024;
IL2CPP_EXTERN_C String_t* _stringLiteralFCA440D9A4F7E2D10772A726D6FB427BAE128D34;
IL2CPP_EXTERN_C const RuntimeMethod* ARFeatheredPlaneMeshVisualizer_ARPlane_boundaryUpdated_mB3D9BBD14EA1FE3ECDBACC2DB89C1B110B8B6B5F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Algorithm_GetDefaultName_mD8D648CD6A6F31A60B9803F0B94692192C59891E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Algorithm_Read_m6A6C7CB42278D413FB44A1B76C4802A1B65A0507_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Algorithm_Save_m3B1CC029043070FD1058BAC9DF6F19765674D08D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Algorithm_Write_m2C670EF5FD1C382C2344CD05ADB14CCABB81738F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Algorithm_get_Empty_m8D4308F83C9987CD4D745AF33A7ECEBD027F4444_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_get_BackgroundPrior_m6274E0B0DAD21FC7438E5093FC1CBAA5A067B910_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_get_DecisionThreshold_m90BEBB38DE0F9007EC25BCDA834268222EC3A64A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_get_DefaultLearningRate_m5C131C9EFF93FF8FACA2C43144B2462BC2BE92AB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_get_MaxFeatures_m15AB12BBB16426E8C5F9363CF29387872C430088_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_get_MaxVal_m670ADA9C0FD3B011DD7A4D3397EEFB7056CDD55A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_get_MinVal_m82DBCA5018753C82D952BF38AB54EC14EC8ABC8D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_get_NumFrames_m1B40953BA2B0AAE61806C22531B0346D6E623CC6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_get_QuantizationLevels_mE88F1A5D933D4487D9C544459C82B6EE67F37053_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_get_SmoothingRadius_mB9A91FBF0BED1D039C4A140E159F9DCCA7D2C23A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_get_UpdateBackgroundModel_mFF2730C5CA5E8DD47938B2BCD1CB12C9C638644C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_set_BackgroundPrior_m51FDA85992BDC85CF0C1422CD62D6FBF376D7F11_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_set_DecisionThreshold_mBC3FB758C097EB1A0C536BBA44A953A1BC2926F9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_set_DefaultLearningRate_m699432B03AD8861E35C34E8BA4F4C547E1C1F7E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_set_MaxFeatures_m421598D9F99F8E5C560F438EC09B632B2E18B721_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_set_MaxVal_m8D521FB6943D3490656259DEE80815878C0B6AED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_set_MinVal_m39046350862F13425269FA015F31B3DBF8B49144_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_set_NumFrames_mBA3D14071268242B5134CFA8EAE270525467756B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_set_QuantizationLevels_mCC91D60A26B0726030376BCCCA793D1C05D5A383_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_set_SmoothingRadius_mCF50217823CFB7DEE2CD6E997476FE1219E8E5AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorGMG_set_UpdateBackgroundModel_mBC1E4EF813CC67DBB49AE82E2B701BBAA2F5E1C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorMOG_get_BackgroundRatio_mA581A3D52F2682A65C50D571D00317D874EBA45F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorMOG_get_History_m702685280203565A899D8F7987A26F7C1CC51C87_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorMOG_get_NMixtures_m4824721550C7311B9BED8AB2CBBABA17D1DC25D9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorMOG_get_NoiseSigma_mA8472923CE792F549EE2D65B52AADF8E1579E204_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorMOG_set_BackgroundRatio_mAA95FCE2EB07DF1B47FDDB25E1689C8A7470ADEE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorMOG_set_History_m5FCC9CC2ACC25452B44AA7E77850C2420E19F4EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorMOG_set_NMixtures_mBD2D772EA614726C76D7FC05B1B029F5908063B1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* BackgroundSubtractorMOG_set_NoiseSigma_m2B8E7885EC6321C88F5FE8FF828811AE04E024C7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E_mABCA912A8D3AFCEEA2F2FE0EF30C541DA7DD7907_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928_m668A6CC15F573ABC389E612A2423599B5ADDC2EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F_m41229EDC62D1149A73F81E7B0BE27B4C1C293A01_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0_m8005DAC7F65600404981B996A714B5C7D29A359F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44_m255D1364D056A608CF5BB4AAB1BA1AD4CB78DE83_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisMeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE_m0EDA0079FA3617687C4A28623B79A37D618D9CFB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Component_GetComponent_TisSpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B_m6181F10C09FC1650DAE0EF2308D344A2F170AA45_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DisposableObject_AllocGCHandle_mE7F2A120B64B01E711AEC06AD8A16222C95F38B0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DisposableObject_AllocMemory_mDFD32B464D5B6FC99468C1D09301075C70B19EED_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DisposableObject_NotifyMemoryPressure_mC00A1BF0C19CA5A3F25C036C04FF993CDBF23692_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* DisposableObject_ThrowIfDisposed_mA5F51D2CAF32F7920CB1138EC3EC17B47BF25E7A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* EnumerableEx_ToArray_TisString_t_mCA90F3B45146DE88899CA1E3A6C69AE7D279AEDC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_Dispose_m8A7D84A46E830A9A7C690AFD40780E721E0212D3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_MoveNext_mE9F6469E9C52AF5A301EC8FEF983A3C5BFBF2C4F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Enumerator_get_Current_m765B5B047B9C59BB1A6DF6B8B884A1714DF83060_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_ReadObj_m2EE011F68833E4ECFF5B8491F8071E46DC81E3B1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_ReadRaw_mA1C1BA995B7CD40A396EF315E57879BA06CB1056_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_Empty_mA333083EE2DDC5E569883E72E11B21660CC188FF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_IsInt_m5050BFFD9DC6AFFEA6C60F43211CAE509DB26B3F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_IsMap_mA709954E1FDC91B8AE61F8C09841935DA0D5BC17_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_IsNamed_m8CBDA3CE447A6542B5A97BE7A2CE5CE5962329EB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_IsNone_mD22D89198D9A0F6D108DD961AC8776992E6E7231_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_IsReal_m984892CFC1FB7601F205969A6E6436F1F642B107_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_IsSeq_m744B2ED4621A083E188A649762CE44F2B06F3AF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_IsString_mE1181EFB80B8D8A549ADA53646DE8130E494EBCC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_Item_m5FA2C96D87B686D2484097832264D774DBBAD1AA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_Item_mD7AD8B5DDAD0DE45A3E36D4CC6D3A3B1D4B8B339_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_Name_mA3749C126AB71ADAD9ACAB41B13B144175FA2812_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_get_Size_m0A4C247F80F6AE9A5B7B7ED2603EA899BD12AD54_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_op_Explicit_m295570D4D21334293463918042747C714D7D4B54_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_op_Explicit_m55769AEA1CFEA9909BAE672917F51B93E222A2EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_op_Explicit_m8CBDEC93CAFC0F2848BFF9F77E96F41348F73B2C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_op_Explicit_mB66DEB1C1A2B140C48D53FA0C9737BF4EB72504B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileNode_op_Explicit_mD926DECB3D151BC4A6BDBC1310A12351FA06A661_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_GetDefaultObjectName_mE66FF56E7B93148A01564442C8F0A85C5E0466AE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_GetFirstTopLevelNode_m649A279BFEB464A5AC76E5C352C60F153156D218_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_IsOpened_m1D024EBF55C2730197F8E93CA1A1B386E6B26FE1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Open_m05A185EDECB12BE4017DA4CC1EB8AFFC2E978B99_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_ReleaseAndGetString_m0924D21A99238E05773FB9B4D5226E37936E0946_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Release_m9CFDBE79C07CD2E52A454F2A9279EC9B5698FC31_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Root_mD4B04F245802E22921CBE8DCA83F1194DECDD90F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_WriteObj_mA47C82F1271C9B5AA79327343DD34AF4D86C7C84_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_WriteRaw_m550A9553BBB35DD1FCB48E434C1647DDEAD1DB4B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_WriteScalar_mDEC3B95210E19D633F2DBD6EB015A7B80672F934_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Write_m02B2365D0C07CF65ED8C89451C7ABDFF647C75C7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Write_m2F9F3DF5AF5EB48E0C070627CA55D4B1F89102BD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Write_m3087C67DA0E06A9D46F6984EE26E734C78B5A25C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Write_m885C4A42A3A2943CCCB3A318DC838C4D1D1860CE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Write_m8CB7281153CD2C59090535107CC7F977A3D844D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Write_mC78F2F2E465BB6486ECD3100BDD97C9D58BFEF3D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Write_mE3EC56A2EF6939C6A58104712A1193D7F10B8891_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_Write_mF283254779A90A7CEB56FB3865FD34A9BB1AEB63_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage__ctor_m454D549E179511FFF412D596CEC8D8AAAA6900CE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_get_ElName_mDA923984230FE7571BFF172BF8D0C3B1C17B6E91_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_get_Item_m14288AA68219584ACCF271294F136E2DEFC7AAE7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_get_State_m2590B0A9D2289BD9A7ED4705AB5FEAEEDB3C512F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* FileStorage_get_Structs_mB2A7755681C702D3681939AEEE87E0CF88644880_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisMeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE_m7FF948365C38BC39333D82B235A7C4EAD219960D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m79E50C4F592B1703F4B76A8BE7B4855515460CA1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m9DD96A685E24BAB041179C80B0CF8875AE04426A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mF10DB1D3CBB0B14215F0E4F8AB4934A1955E5351_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_m455780C5A45049F9BDC25EAD3BA10A681D16385D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Clear_m5FC367B31C239426FA8CCE3EEB6D76AA2684BCAC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_GetEnumerator_mEE1B2EFD76218372C2F754E07BFDE6CA16244502_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m0BAB01B25B1D62E100CC97401B1A9972D6DEB6EC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m6B5722DD0A8C0D3D4A1656C5A5E8D0A784DC85B9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m97CA83C0EF5D88B61FDF3CE17A6A4A8677697DD4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_mC54E2BCBE43279A96FC082F5CDE2D76388BD8F9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Capacity_m1810FC505867C713DCDDD7468F8BA2BF1DF0D3B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m46EEFFA770BE665EA0CB3A5332E941DA4B3C1D37_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m443F0D48247776D4257E06597AF794BCF6D8020F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m8F2E15FC96DA75186C51228128A0660709E4E810_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_set_Capacity_mF3F5104AB534524CF6D04659241FBD48C9080FFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* MatProxy_CreateBitmapStream_m48BB40C82BC3454B80BC454A58B7C077BBC29C86_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Mat_Get_TisVec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD_m3C678AC2069EB01F91569DA353351F87B75CC523_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* NativeMethods_IsMono_m913A306478F83546BB60FF065B17F92C6789C095_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* NativeMethods_TryPInvoke_mFFF8E81F7A8BACC0028BE71C3F15443E415501BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Object_Instantiate_TisGameObject_t76FEDD663AB33C991A9C9A23129337651094216F_m58C654F1134533E29502629CA67645682B404811_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Ptr_1__ctor_m2AC43EFDA6E3C373C60786FB540BD967B27A7609_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Ptr_1__ctor_m915520204369BC56040F82EA9DFE8301242526EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Ptr_1__ctor_m94746AB5A3C199F0AE82A73D9E5F88086A5CB590_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Ptr_1__ctor_m9EFD8ADA6C06D57D386A6B147E9C28C548EE9CBE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_get_PreFilterCap_m2F2A1768EBF902405DCEC9ED49E216C87996AA9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_get_PreFilterSize_m26CAC7655DE07F75C8254BC961CC001EF54F102E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_get_PreFilterType_mACD61A7E96A26A27D541D419CB97A83D02F31E5A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_get_ROI1_mD484005985115BDC348CB74DFA0D9DE25DD0548B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_get_ROI2_m0F5D2D4D2148EF5D65D92124BB3A720662B8D474_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_get_SmallerBlockSize_m6045DD88A1D3BF8DDA348A00BF86AD6BEF845B02_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_get_TextureThreshold_mA50534C66AAF7311EDCB3B942A17D3FDFF37D977_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_get_UniquenessRatio_m22CB0FEABAE41533B21274EEC4049DC0B22FE281_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_set_PreFilterCap_m0D66B85EE4BE0F82DFF3E7C05F0DD7C16E6F7E13_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_set_PreFilterSize_mD2A1AB0615D7DFCCED92D1B4D203BA181FFB4FFC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_set_PreFilterType_m9A9BE8611F20F56A60FB5A21EA152BAE60FB4D35_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_set_ROI1_m49FC53BCCC078105AE2B176A47B8400FCBBD02E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_set_ROI2_m6295852239D93E7C77FA7CF6237FD925D2E509DC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_set_SmallerBlockSize_m0075BF71B27D56A7F0F8429FFC88F99AC795B36C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_set_TextureThreshold_m0D10632E3504396AB97C3A251195E17BFFBB6BF8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoBM_set_UniquenessRatio_m67752D9C1094ADB70E31682BF29048EB19BBA5A1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoSGBM_get_Mode_m268C3C3B1B38799F21991CA771B5F1C0F9B7ADC6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoSGBM_get_P1_m42B876B6B950C5E5BD80C6F97EC179EB67F59862_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoSGBM_get_P2_m7B4133A298F5818BA79F324DC72B4D3A4AE782AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoSGBM_get_PreFilterCap_m72EA29AE3709316EFB23B113DB67290632F5289F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoSGBM_get_UniquenessRatio_m897ED43AA5DB228E861B13D941EDA89C7AC897A4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoSGBM_set_Mode_m203320AEE176AF592D8BBE28B2729F0F8E363426_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoSGBM_set_P1_m3E42C8185EFF3AF01B3E912C00089C4B520CBDBD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoSGBM_set_P2_m4616DDA20C68D8F4DF72C50442114BCADE59A76A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoSGBM_set_PreFilterCap_m27A652F36B6C49E828BD864D581F86DCA06F0DF0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* StereoSGBM_set_UniquenessRatio_m43CA7CFA6FB321770651E6E192EC1241266FAF29_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* Type_GetType_m71A077E0B5DA3BD1DC0AB9AE387056CFCF56F93F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CU3Ec_U3C_cctorU3Eb__1286_0_m3CEB893697AD4AF356D15350AAE6136FB0D0A49B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* U3CU3Ec_U3C_cctorU3Eb__1286_1_m71C25B4F275F33A4FF39BFEC18D7EBBA195B06BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_0_0_0_var;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;
struct Exception_t_marshaled_com;
struct Exception_t_marshaled_pinvoke;

struct ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031;
struct DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34;
struct DelegateU5BU5D_tC5AB7E8F745616680F337909D3A8E6C722CDF771;
struct DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE;
struct Int16U5BU5D_t8175CE8DD9C9F9FB0CF4F58E45BC570575B43CFB;
struct Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C;
struct IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832;
struct KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17;
struct ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918;
struct PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B;
struct Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485;
struct Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953;
struct Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D;
struct Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2;
struct Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC;
struct RangeU5BU5D_t7A815EED0DB267C51F9F6C0507B9579B68391756;
struct RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A;
struct SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C;
struct StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248;
struct UInt16U5BU5D_tEB7C42D811D999D2AA815BADC3FCCDD9C67B3F83;
struct Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF;
struct Vec3bU5BU5D_t65AD1F336D24EA9AD600B4A6CB27B3B517C138EE;
struct Vec3dU5BU5D_t7F6500BD6738D9EF9379BBF49E20270DD8FE005E;
struct Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D;
struct Vec4dU5BU5D_t4CD1D642D7FE8D7D780F5089E9047773F65F29E7;
struct Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64;
struct Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157;
struct Vec6dU5BU5D_tD00B137B3DBEF1DB6F17CA62572E730E9D27FE42;
struct Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3;
struct Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C;
struct ByteU5BU2CU5D_tFF0F8305C018904B90DCD1740962BABBC458B638;
struct DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE;
struct GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E;
struct Int16U5BU2CU5D_tA1085F28F76441E5B3C4F55200C853889884825E;
struct Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F;
struct MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7;
struct PointU5BU2CU5D_t75336C640C8EF9A5D74131EF2FF56ADE1E04A0A3;
struct Point2dU5BU2CU5D_t7484AAFF04C19494AB4D23D45BE7FB1371C8B4DE;
struct Point2fU5BU2CU5D_t534637B478C32FFC446C173967390F3A2A61FBEF;
struct Point3dU5BU2CU5D_tF448DE8BEF99C9C7200AC09879C34D2B9BB16E43;
struct Point3fU5BU2CU5D_t956F68C0D8D3E941181E3BDAA0CDF49861545B6C;
struct Point3iU5BU2CU5D_t9D63D6246F01F8C00A5D07420A3EC8F43E7EB075;
struct RectU5BU2CU5D_t466728D2C4C1410891B29B2693FA0796C414CC2D;
struct SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4;
struct UInt16U5BU2CU5D_t2C918D9FF94D8CF06CE395FB8C6B931FA8B8AE1B;
struct Vec3bU5BU2CU5D_tE90BFA4A10C08A985D030E3187325900CBF521B5;
struct Vec3dU5BU2CU5D_t29CB373947AD17A0ECF7B4EEB20936B21D140804;
struct Vec4fU5BU2CU5D_t54D8EA2F459F41BD179635792BF550EB3E317FDF;
struct Vec4iU5BU2CU5D_t438C08E75365B75E4142B910325D19F21F4C6CD9;
struct Vec6fU5BU2CU5D_t7C67D2C5EDBC06D656BC54F1A2409DE9F3334AAE;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// <Module>
struct U3CModuleU3E_tBB65183F1134474D09FF49B95625D25472B9BA8B 
{
};

// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARAnchor>
struct List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	ARAnchorU5BU5D_t589CB7678527B30DBFABED0E377BC500C9D3454A* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycastHit>
struct List_1_t0754071572EFE7A5C92A59495D2524FC935364E3  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	ARRaycastHitU5BU5D_t34FE14E360F945895923A0FE69CC277E7D13027E* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Collections.Generic.List`1<System.Object>
struct List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Collections.Generic.List`1<System.String>
struct List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// System.Collections.Generic.List`1<UnityEngine.Vector3>
struct List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B  : public RuntimeObject
{
	// T[] System.Collections.Generic.List`1::_items
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject* ____syncRoot_4;
};

// OpenCvSharp.Constants
struct Constants_t23876486BA2EB76C9B8017BD26AA893550D303A3  : public RuntimeObject
{
};

// OpenCvSharp.HierarchyIndex
struct HierarchyIndex_t9900FD90BA1ECED471DD979EE00CB097A9BA49D0  : public RuntimeObject
{
	// System.Int32 OpenCvSharp.HierarchyIndex::<Next>k__BackingField
	int32_t ___U3CNextU3Ek__BackingField_0;
	// System.Int32 OpenCvSharp.HierarchyIndex::<Previous>k__BackingField
	int32_t ___U3CPreviousU3Ek__BackingField_1;
	// System.Int32 OpenCvSharp.HierarchyIndex::<Child>k__BackingField
	int32_t ___U3CChildU3Ek__BackingField_2;
	// System.Int32 OpenCvSharp.HierarchyIndex::<Parent>k__BackingField
	int32_t ___U3CParentU3Ek__BackingField_3;
};

// System.MarshalByRefObject
struct MarshalByRefObject_t8C2F4C5854177FD60439EB1FCCFC1B3CFAFE8DCE  : public RuntimeObject
{
	// System.Object System.MarshalByRefObject::_identity
	RuntimeObject* ____identity_0;
};
// Native definition for P/Invoke marshalling of System.MarshalByRefObject
struct MarshalByRefObject_t8C2F4C5854177FD60439EB1FCCFC1B3CFAFE8DCE_marshaled_pinvoke
{
	Il2CppIUnknown* ____identity_0;
};
// Native definition for COM marshalling of System.MarshalByRefObject
struct MarshalByRefObject_t8C2F4C5854177FD60439EB1FCCFC1B3CFAFE8DCE_marshaled_com
{
	Il2CppIUnknown* ____identity_0;
};

// OpenCvSharp.MatProxy
struct MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8  : public RuntimeObject
{
	// System.Byte[] OpenCvSharp.MatProxy::<ImageData>k__BackingField
	ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___U3CImageDataU3Ek__BackingField_0;
};

// System.Reflection.MemberInfo
struct MemberInfo_t  : public RuntimeObject
{
};

// OpenCvSharp.NativeMethods
struct NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC  : public RuntimeObject
{
};

// System.OperatingSystem
struct OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557  : public RuntimeObject
{
	// System.Version System.OperatingSystem::_version
	Version_tE426DB5655D0F22920AE16A2AA9AB7781B8255A7* ____version_0;
	// System.PlatformID System.OperatingSystem::_platform
	int32_t ____platform_1;
	// System.String System.OperatingSystem::_servicePack
	String_t* ____servicePack_2;
	// System.String System.OperatingSystem::_versionString
	String_t* ____versionString_3;
};

// System.String
struct String_t  : public RuntimeObject
{
	// System.Int32 System.String::_stringLength
	int32_t ____stringLength_4;
	// System.Char System.String::_firstChar
	Il2CppChar ____firstChar_5;
};

// System.Text.StringBuilder
struct StringBuilder_t  : public RuntimeObject
{
	// System.Char[] System.Text.StringBuilder::m_ChunkChars
	CharU5BU5D_t799905CF001DD5F13F7DBB310181FC4D8B7D0AAB* ___m_ChunkChars_0;
	// System.Text.StringBuilder System.Text.StringBuilder::m_ChunkPrevious
	StringBuilder_t* ___m_ChunkPrevious_1;
	// System.Int32 System.Text.StringBuilder::m_ChunkLength
	int32_t ___m_ChunkLength_2;
	// System.Int32 System.Text.StringBuilder::m_ChunkOffset
	int32_t ___m_ChunkOffset_3;
	// System.Int32 System.Text.StringBuilder::m_MaxCapacity
	int32_t ___m_MaxCapacity_4;
};

// System.ValueType
struct ValueType_t6D9B272BD21782F0A9A14F2E41F85A50E97A986F  : public RuntimeObject
{
};
// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t6D9B272BD21782F0A9A14F2E41F85A50E97A986F_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t6D9B272BD21782F0A9A14F2E41F85A50E97A986F_marshaled_com
{
};

// OpenCvSharp.Util.WindowsLibraryLoader
struct WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7  : public RuntimeObject
{
	// System.Collections.Generic.List`1<System.String> OpenCvSharp.Util.WindowsLibraryLoader::loadedAssemblies
	List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* ___loadedAssemblies_4;
	// System.Collections.Generic.Dictionary`2<System.String,System.String> OpenCvSharp.Util.WindowsLibraryLoader::processorArchitecturePlatforms
	Dictionary_2_t46B2DB028096FA2B828359E52F37F3105A83AD83* ___processorArchitecturePlatforms_5;
	// System.Collections.Generic.Dictionary`2<System.String,System.Int32> OpenCvSharp.Util.WindowsLibraryLoader::processorArchitectureAddressWidthPlatforms
	Dictionary_2_t5C8F46F5D57502270DD9E1DA8303B23C7FE85588* ___processorArchitectureAddressWidthPlatforms_6;
	// System.Collections.Generic.List`1<System.String> OpenCvSharp.Util.WindowsLibraryLoader::<AdditionalPaths>k__BackingField
	List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* ___U3CAdditionalPathsU3Ek__BackingField_7;
	// System.Object OpenCvSharp.Util.WindowsLibraryLoader::syncLock
	RuntimeObject* ___syncLock_8;
};

// OpenCvSharp.Cv2/<>c
struct U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D  : public RuntimeObject
{
};

// OpenCvSharp.NativeMethods/<>c
struct U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7  : public RuntimeObject
{
};

// System.Collections.Generic.List`1/Enumerator<UnityEngine.XR.ARFoundation.ARAnchor>
struct Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054 
{
	// System.Collections.Generic.List`1<T> System.Collections.Generic.List`1/Enumerator::_list
	List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53* ____list_0;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::_index
	int32_t ____index_1;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::_version
	int32_t ____version_2;
	// T System.Collections.Generic.List`1/Enumerator::_current
	ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* ____current_3;
};

// System.Collections.Generic.List`1/Enumerator<System.Object>
struct Enumerator_t9473BAB568A27E2339D48C1F91319E0F6D244D7A 
{
	// System.Collections.Generic.List`1<T> System.Collections.Generic.List`1/Enumerator::_list
	List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* ____list_0;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::_index
	int32_t ____index_1;
	// System.Int32 System.Collections.Generic.List`1/Enumerator::_version
	int32_t ____version_2;
	// T System.Collections.Generic.List`1/Enumerator::_current
	RuntimeObject* ____current_3;
};

// Unity.Collections.NativeArray`1<UnityEngine.Vector2>
struct NativeArray_1_t0BB246A2F65C2C705F83BEBE1B62D9543C330B70 
{
	// System.Void* Unity.Collections.NativeArray`1::m_Buffer
	void* ___m_Buffer_0;
	// System.Int32 Unity.Collections.NativeArray`1::m_Length
	int32_t ___m_Length_1;
	// Unity.Collections.Allocator Unity.Collections.NativeArray`1::m_AllocatorLabel
	int32_t ___m_AllocatorLabel_2;
};

// System.Nullable`1<UnityEngine.CameraClearFlags>
struct Nullable_1_t14BBC3DE3B6A54EBB06977978775A190F1D6DA44 
{
	// System.Boolean System.Nullable`1::hasValue
	bool ___hasValue_0;
	// T System.Nullable`1::value
	int32_t ___value_1;
};

// System.Nullable`1<System.Single>
struct Nullable_1_t3D746CBB6123D4569FF4DEA60BC4240F32C6FE75 
{
	// System.Boolean System.Nullable`1::hasValue
	bool ___hasValue_0;
	// T System.Nullable`1::value
	float ___value_1;
};

// UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs
struct ARPlaneBoundaryChangedEventArgs_tE59EDE94575C8947AD3F1F8DA1370D0A426A5FFC 
{
	// UnityEngine.XR.ARFoundation.ARPlane UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs::<plane>k__BackingField
	ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* ___U3CplaneU3Ek__BackingField_0;
};
// Native definition for P/Invoke marshalling of UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs
struct ARPlaneBoundaryChangedEventArgs_tE59EDE94575C8947AD3F1F8DA1370D0A426A5FFC_marshaled_pinvoke
{
	ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* ___U3CplaneU3Ek__BackingField_0;
};
// Native definition for COM marshalling of UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs
struct ARPlaneBoundaryChangedEventArgs_tE59EDE94575C8947AD3F1F8DA1370D0A426A5FFC_marshaled_com
{
	ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* ___U3CplaneU3Ek__BackingField_0;
};

// System.Boolean
struct Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22 
{
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;
};

// System.Byte
struct Byte_t94D9231AC217BE4D2E004C4CD32DF6D099EA41A3 
{
	// System.Byte System.Byte::m_value
	uint8_t ___m_value_0;
};

// UnityEngine.Color
struct Color_tD001788D726C3A7F1379BEED0260B9591F440C1F 
{
	// System.Single UnityEngine.Color::r
	float ___r_0;
	// System.Single UnityEngine.Color::g
	float ___g_1;
	// System.Single UnityEngine.Color::b
	float ___b_2;
	// System.Single UnityEngine.Color::a
	float ___a_3;
};

// OpenCvSharp.DMatch
struct DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A 
{
	// System.Int32 OpenCvSharp.DMatch::QueryIdx
	int32_t ___QueryIdx_0;
	// System.Int32 OpenCvSharp.DMatch::TrainIdx
	int32_t ___TrainIdx_1;
	// System.Int32 OpenCvSharp.DMatch::ImgIdx
	int32_t ___ImgIdx_2;
	// System.Single OpenCvSharp.DMatch::Distance
	float ___Distance_3;
};

// System.Double
struct Double_tE150EF3D1D43DEE85D533810AB4C742307EEDE5F 
{
	// System.Double System.Double::m_value
	double ___m_value_0;
};

// System.Guid
struct Guid_t 
{
	// System.Int32 System.Guid::_a
	int32_t ____a_1;
	// System.Int16 System.Guid::_b
	int16_t ____b_2;
	// System.Int16 System.Guid::_c
	int16_t ____c_3;
	// System.Byte System.Guid::_d
	uint8_t ____d_4;
	// System.Byte System.Guid::_e
	uint8_t ____e_5;
	// System.Byte System.Guid::_f
	uint8_t ____f_6;
	// System.Byte System.Guid::_g
	uint8_t ____g_7;
	// System.Byte System.Guid::_h
	uint8_t ____h_8;
	// System.Byte System.Guid::_i
	uint8_t ____i_9;
	// System.Byte System.Guid::_j
	uint8_t ____j_10;
	// System.Byte System.Guid::_k
	uint8_t ____k_11;
};

// System.Int16
struct Int16_tB8EF286A9C33492FA6E6D6E67320BE93E794A175 
{
	// System.Int16 System.Int16::m_value
	int16_t ___m_value_0;
};

// System.Int32
struct Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C 
{
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;
};

// System.Int64
struct Int64_t092CFB123BE63C28ACDAF65C68F21A526050DBA3 
{
	// System.Int64 System.Int64::m_value
	int64_t ___m_value_0;
};

// System.IntPtr
struct IntPtr_t 
{
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;
};

// OpenCvSharp.ML.ParamGrid
struct ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D 
{
	// System.Double OpenCvSharp.ML.ParamGrid::MinVal
	double ___MinVal_0;
	// System.Double OpenCvSharp.ML.ParamGrid::MaxVal
	double ___MaxVal_1;
	// System.Double OpenCvSharp.ML.ParamGrid::LogStep
	double ___LogStep_2;
};

// OpenCvSharp.Point
struct Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC 
{
	// System.Int32 OpenCvSharp.Point::X
	int32_t ___X_0;
	// System.Int32 OpenCvSharp.Point::Y
	int32_t ___Y_1;
};

// OpenCvSharp.Point2d
struct Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C 
{
	// System.Double OpenCvSharp.Point2d::X
	double ___X_0;
	// System.Double OpenCvSharp.Point2d::Y
	double ___Y_1;
};

// OpenCvSharp.Point2f
struct Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 
{
	// System.Single OpenCvSharp.Point2f::X
	float ___X_0;
	// System.Single OpenCvSharp.Point2f::Y
	float ___Y_1;
};

// OpenCvSharp.Point3d
struct Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC 
{
	// System.Double OpenCvSharp.Point3d::X
	double ___X_0;
	// System.Double OpenCvSharp.Point3d::Y
	double ___Y_1;
	// System.Double OpenCvSharp.Point3d::Z
	double ___Z_2;
};

// OpenCvSharp.Point3f
struct Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 
{
	// System.Single OpenCvSharp.Point3f::X
	float ___X_0;
	// System.Single OpenCvSharp.Point3f::Y
	float ___Y_1;
	// System.Single OpenCvSharp.Point3f::Z
	float ___Z_2;
};

// OpenCvSharp.Point3i
struct Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B 
{
	// System.Int32 OpenCvSharp.Point3i::X
	int32_t ___X_0;
	// System.Int32 OpenCvSharp.Point3i::Y
	int32_t ___Y_1;
	// System.Int32 OpenCvSharp.Point3i::Z
	int32_t ___Z_2;
};

// UnityEngine.Quaternion
struct Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 
{
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;
};

// OpenCvSharp.Range
struct Range_t981FA0C4141FE7585A1C292A250B431019099C09 
{
	// System.Int32 OpenCvSharp.Range::Start
	int32_t ___Start_0;
	// System.Int32 OpenCvSharp.Range::End
	int32_t ___End_1;
};

// OpenCvSharp.Rangef
struct Rangef_t901609B3177ED2D50EEC5B3F261D283AE72DB280 
{
	// System.Single OpenCvSharp.Rangef::Start
	float ___Start_0;
	// System.Single OpenCvSharp.Rangef::End
	float ___End_1;
};

// OpenCvSharp.Rect
struct Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A 
{
	// System.Int32 OpenCvSharp.Rect::X
	int32_t ___X_0;
	// System.Int32 OpenCvSharp.Rect::Y
	int32_t ___Y_1;
	// System.Int32 OpenCvSharp.Rect::Width
	int32_t ___Width_2;
	// System.Int32 OpenCvSharp.Rect::Height
	int32_t ___Height_3;
};

// UnityEngine.Rect
struct Rect_tA04E0F8A1830E767F40FB27ECD8D309303571F0D 
{
	// System.Single UnityEngine.Rect::m_XMin
	float ___m_XMin_0;
	// System.Single UnityEngine.Rect::m_YMin
	float ___m_YMin_1;
	// System.Single UnityEngine.Rect::m_Width
	float ___m_Width_2;
	// System.Single UnityEngine.Rect::m_Height
	float ___m_Height_3;
};

// OpenCvSharp.Rect2d
struct Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133 
{
	// System.Double OpenCvSharp.Rect2d::X
	double ___X_0;
	// System.Double OpenCvSharp.Rect2d::Y
	double ___Y_1;
	// System.Double OpenCvSharp.Rect2d::Width
	double ___Width_2;
	// System.Double OpenCvSharp.Rect2d::Height
	double ___Height_3;
};

// System.SByte
struct SByte_tFEFFEF5D2FEBF5207950AE6FAC150FC53B668DB5 
{
	// System.SByte System.SByte::m_value
	int8_t ___m_value_0;
};

// OpenCvSharp.Scalar
struct Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 
{
	// System.Double OpenCvSharp.Scalar::Val0
	double ___Val0_0;
	// System.Double OpenCvSharp.Scalar::Val1
	double ___Val1_1;
	// System.Double OpenCvSharp.Scalar::Val2
	double ___Val2_2;
	// System.Double OpenCvSharp.Scalar::Val3
	double ___Val3_3;
};

// System.Single
struct Single_t4530F2FF86FCB0DC29F35385CA1BD21BE294761C 
{
	// System.Single System.Single::m_value
	float ___m_value_0;
};

// OpenCvSharp.Size
struct Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 
{
	// System.Int32 OpenCvSharp.Size::Width
	int32_t ___Width_0;
	// System.Int32 OpenCvSharp.Size::Height
	int32_t ___Height_1;
};

// OpenCvSharp.Size2f
struct Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7 
{
	// System.Single OpenCvSharp.Size2f::Width
	float ___Width_0;
	// System.Single OpenCvSharp.Size2f::Height
	float ___Height_1;
};

// System.IO.Stream
struct Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE  : public MarshalByRefObject_t8C2F4C5854177FD60439EB1FCCFC1B3CFAFE8DCE
{
	// System.IO.Stream/ReadWriteTask System.IO.Stream::_activeReadWriteTask
	ReadWriteTask_t0821BF49EE38596C7734E86E1A6A39D769BE2C05* ____activeReadWriteTask_2;
	// System.Threading.SemaphoreSlim System.IO.Stream::_asyncActiveSemaphore
	SemaphoreSlim_t0D5CB5685D9BFA5BF95CEC6E7395490F933E8DB2* ____asyncActiveSemaphore_3;
};

// OpenCvSharp.TermCriteria
struct TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 
{
	// OpenCvSharp.CriteriaType OpenCvSharp.TermCriteria::Type
	int32_t ___Type_0;
	// System.Int32 OpenCvSharp.TermCriteria::MaxCount
	int32_t ___MaxCount_1;
	// System.Double OpenCvSharp.TermCriteria::Epsilon
	double ___Epsilon_2;
};

// UnityEngine.XR.ARSubsystems.TrackableId
struct TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 
{
	// System.UInt64 UnityEngine.XR.ARSubsystems.TrackableId::m_SubId1
	uint64_t ___m_SubId1_2;
	// System.UInt64 UnityEngine.XR.ARSubsystems.TrackableId::m_SubId2
	uint64_t ___m_SubId2_3;
};

// System.UInt16
struct UInt16_tF4C148C876015C212FD72652D0B6ED8CC247A455 
{
	// System.UInt16 System.UInt16::m_value
	uint16_t ___m_value_0;
};

// System.UInt32
struct UInt32_t1833D51FFA667B18A5AA4B8D34DE284F8495D29B 
{
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;
};

// System.UInt64
struct UInt64_t8F12534CC8FC4B5860F2A2CD1EE79D322E7A41AF 
{
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;
};

// OpenCvSharp.Vec2b
struct Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C 
{
	// System.Byte OpenCvSharp.Vec2b::Item0
	uint8_t ___Item0_0;
	// System.Byte OpenCvSharp.Vec2b::Item1
	uint8_t ___Item1_1;
};

// OpenCvSharp.Vec2d
struct Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 
{
	// System.Double OpenCvSharp.Vec2d::Item0
	double ___Item0_0;
	// System.Double OpenCvSharp.Vec2d::Item1
	double ___Item1_1;
};

// OpenCvSharp.Vec2f
struct Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E 
{
	// System.Single OpenCvSharp.Vec2f::Item0
	float ___Item0_0;
	// System.Single OpenCvSharp.Vec2f::Item1
	float ___Item1_1;
};

// OpenCvSharp.Vec2i
struct Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37 
{
	// System.Int32 OpenCvSharp.Vec2i::Item0
	int32_t ___Item0_0;
	// System.Int32 OpenCvSharp.Vec2i::Item1
	int32_t ___Item1_1;
};

// OpenCvSharp.Vec2s
struct Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68 
{
	// System.Int16 OpenCvSharp.Vec2s::Item0
	int16_t ___Item0_0;
	// System.Int16 OpenCvSharp.Vec2s::Item1
	int16_t ___Item1_1;
};

// OpenCvSharp.Vec2w
struct Vec2w_tC86992B28B612E016C5DFE0C6AEFB352CA530B97 
{
	// System.UInt16 OpenCvSharp.Vec2w::Item0
	uint16_t ___Item0_0;
	// System.UInt16 OpenCvSharp.Vec2w::Item1
	uint16_t ___Item1_1;
};

// OpenCvSharp.Vec3b
struct Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 
{
	// System.Byte OpenCvSharp.Vec3b::Item0
	uint8_t ___Item0_0;
	// System.Byte OpenCvSharp.Vec3b::Item1
	uint8_t ___Item1_1;
	// System.Byte OpenCvSharp.Vec3b::Item2
	uint8_t ___Item2_2;
};

// OpenCvSharp.Vec3d
struct Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD 
{
	// System.Double OpenCvSharp.Vec3d::Item0
	double ___Item0_0;
	// System.Double OpenCvSharp.Vec3d::Item1
	double ___Item1_1;
	// System.Double OpenCvSharp.Vec3d::Item2
	double ___Item2_2;
};

// OpenCvSharp.Vec3f
struct Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 
{
	// System.Single OpenCvSharp.Vec3f::Item0
	float ___Item0_0;
	// System.Single OpenCvSharp.Vec3f::Item1
	float ___Item1_1;
	// System.Single OpenCvSharp.Vec3f::Item2
	float ___Item2_2;
};

// OpenCvSharp.Vec3i
struct Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5 
{
	// System.Int32 OpenCvSharp.Vec3i::Item0
	int32_t ___Item0_0;
	// System.Int32 OpenCvSharp.Vec3i::Item1
	int32_t ___Item1_1;
	// System.Int32 OpenCvSharp.Vec3i::Item2
	int32_t ___Item2_2;
};

// OpenCvSharp.Vec3s
struct Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA 
{
	// System.Int16 OpenCvSharp.Vec3s::Item0
	int16_t ___Item0_0;
	// System.Int16 OpenCvSharp.Vec3s::Item1
	int16_t ___Item1_1;
	// System.Int16 OpenCvSharp.Vec3s::Item2
	int16_t ___Item2_2;
};

// OpenCvSharp.Vec3w
struct Vec3w_t639AB866E901F11C8B2102D9AABF3D326C187343 
{
	// System.UInt16 OpenCvSharp.Vec3w::Item0
	uint16_t ___Item0_0;
	// System.UInt16 OpenCvSharp.Vec3w::Item1
	uint16_t ___Item1_1;
	// System.UInt16 OpenCvSharp.Vec3w::Item2
	uint16_t ___Item2_2;
};

// OpenCvSharp.Vec4b
struct Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68 
{
	// System.Byte OpenCvSharp.Vec4b::Item0
	uint8_t ___Item0_0;
	// System.Byte OpenCvSharp.Vec4b::Item1
	uint8_t ___Item1_1;
	// System.Byte OpenCvSharp.Vec4b::Item2
	uint8_t ___Item2_2;
	// System.Byte OpenCvSharp.Vec4b::Item3
	uint8_t ___Item3_3;
};

// OpenCvSharp.Vec4d
struct Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D 
{
	// System.Double OpenCvSharp.Vec4d::Item0
	double ___Item0_0;
	// System.Double OpenCvSharp.Vec4d::Item1
	double ___Item1_1;
	// System.Double OpenCvSharp.Vec4d::Item2
	double ___Item2_2;
	// System.Double OpenCvSharp.Vec4d::Item3
	double ___Item3_3;
};

// OpenCvSharp.Vec4f
struct Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 
{
	// System.Single OpenCvSharp.Vec4f::Item0
	float ___Item0_0;
	// System.Single OpenCvSharp.Vec4f::Item1
	float ___Item1_1;
	// System.Single OpenCvSharp.Vec4f::Item2
	float ___Item2_2;
	// System.Single OpenCvSharp.Vec4f::Item3
	float ___Item3_3;
};

// OpenCvSharp.Vec4i
struct Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB 
{
	// System.Int32 OpenCvSharp.Vec4i::Item0
	int32_t ___Item0_0;
	// System.Int32 OpenCvSharp.Vec4i::Item1
	int32_t ___Item1_1;
	// System.Int32 OpenCvSharp.Vec4i::Item2
	int32_t ___Item2_2;
	// System.Int32 OpenCvSharp.Vec4i::Item3
	int32_t ___Item3_3;
};

// OpenCvSharp.Vec4s
struct Vec4s_t36070B932676A14293929ED30FF39D45635126B5 
{
	// System.Int16 OpenCvSharp.Vec4s::Item0
	int16_t ___Item0_0;
	// System.Int16 OpenCvSharp.Vec4s::Item1
	int16_t ___Item1_1;
	// System.Int16 OpenCvSharp.Vec4s::Item2
	int16_t ___Item2_2;
	// System.Int16 OpenCvSharp.Vec4s::Item3
	int16_t ___Item3_3;
};

// OpenCvSharp.Vec4w
struct Vec4w_tA5261E05040FD831243C9A62E36D8644449ECA63 
{
	// System.UInt16 OpenCvSharp.Vec4w::Item0
	uint16_t ___Item0_0;
	// System.UInt16 OpenCvSharp.Vec4w::Item1
	uint16_t ___Item1_1;
	// System.UInt16 OpenCvSharp.Vec4w::Item2
	uint16_t ___Item2_2;
	// System.UInt16 OpenCvSharp.Vec4w::Item3
	uint16_t ___Item3_3;
};

// OpenCvSharp.Vec6b
struct Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C 
{
	// System.Byte OpenCvSharp.Vec6b::Item0
	uint8_t ___Item0_0;
	// System.Byte OpenCvSharp.Vec6b::Item1
	uint8_t ___Item1_1;
	// System.Byte OpenCvSharp.Vec6b::Item2
	uint8_t ___Item2_2;
	// System.Byte OpenCvSharp.Vec6b::Item3
	uint8_t ___Item3_3;
	// System.Byte OpenCvSharp.Vec6b::Item4
	uint8_t ___Item4_4;
	// System.Byte OpenCvSharp.Vec6b::Item5
	uint8_t ___Item5_5;
};

// OpenCvSharp.Vec6d
struct Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 
{
	// System.Double OpenCvSharp.Vec6d::Item0
	double ___Item0_0;
	// System.Double OpenCvSharp.Vec6d::Item1
	double ___Item1_1;
	// System.Double OpenCvSharp.Vec6d::Item2
	double ___Item2_2;
	// System.Double OpenCvSharp.Vec6d::Item3
	double ___Item3_3;
	// System.Double OpenCvSharp.Vec6d::Item4
	double ___Item4_4;
	// System.Double OpenCvSharp.Vec6d::Item5
	double ___Item5_5;
};

// OpenCvSharp.Vec6f
struct Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E 
{
	// System.Single OpenCvSharp.Vec6f::Item0
	float ___Item0_0;
	// System.Single OpenCvSharp.Vec6f::Item1
	float ___Item1_1;
	// System.Single OpenCvSharp.Vec6f::Item2
	float ___Item2_2;
	// System.Single OpenCvSharp.Vec6f::Item3
	float ___Item3_3;
	// System.Single OpenCvSharp.Vec6f::Item4
	float ___Item4_4;
	// System.Single OpenCvSharp.Vec6f::Item5
	float ___Item5_5;
};

// OpenCvSharp.Vec6i
struct Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4 
{
	// System.Int32 OpenCvSharp.Vec6i::Item0
	int32_t ___Item0_0;
	// System.Int32 OpenCvSharp.Vec6i::Item1
	int32_t ___Item1_1;
	// System.Int32 OpenCvSharp.Vec6i::Item2
	int32_t ___Item2_2;
	// System.Int32 OpenCvSharp.Vec6i::Item3
	int32_t ___Item3_3;
	// System.Int32 OpenCvSharp.Vec6i::Item4
	int32_t ___Item4_4;
	// System.Int32 OpenCvSharp.Vec6i::Item5
	int32_t ___Item5_5;
};

// OpenCvSharp.Vec6s
struct Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB 
{
	// System.Int16 OpenCvSharp.Vec6s::Item0
	int16_t ___Item0_0;
	// System.Int16 OpenCvSharp.Vec6s::Item1
	int16_t ___Item1_1;
	// System.Int16 OpenCvSharp.Vec6s::Item2
	int16_t ___Item2_2;
	// System.Int16 OpenCvSharp.Vec6s::Item3
	int16_t ___Item3_3;
	// System.Int16 OpenCvSharp.Vec6s::Item4
	int16_t ___Item4_4;
	// System.Int16 OpenCvSharp.Vec6s::Item5
	int16_t ___Item5_5;
};

// OpenCvSharp.Vec6w
struct Vec6w_tAB37C7CF73E1BD9071AF39DA9F4F30A4A0D667D9 
{
	// System.UInt16 OpenCvSharp.Vec6w::Item0
	uint16_t ___Item0_0;
	// System.UInt16 OpenCvSharp.Vec6w::Item1
	uint16_t ___Item1_1;
	// System.UInt16 OpenCvSharp.Vec6w::Item2
	uint16_t ___Item2_2;
	// System.UInt16 OpenCvSharp.Vec6w::Item3
	uint16_t ___Item3_3;
	// System.UInt16 OpenCvSharp.Vec6w::Item4
	uint16_t ___Item4_4;
	// System.UInt16 OpenCvSharp.Vec6w::Item5
	uint16_t ___Item5_5;
};

// UnityEngine.Vector2
struct Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 
{
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;
};

// UnityEngine.Vector3
struct Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 
{
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;
};

// UnityEngine.Vector4
struct Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 
{
	// System.Single UnityEngine.Vector4::x
	float ___x_1;
	// System.Single UnityEngine.Vector4::y
	float ___y_2;
	// System.Single UnityEngine.Vector4::z
	float ___z_3;
	// System.Single UnityEngine.Vector4::w
	float ___w_4;
};

// System.Void
struct Void_t4861ACF8F4594C3437BB48B6E56783494B843915 
{
	union
	{
		struct
		{
		};
		uint8_t Void_t4861ACF8F4594C3437BB48B6E56783494B843915__padding[1];
	};
};

// OpenCvSharp.Moments/NativeStruct
struct NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 
{
	// System.Double OpenCvSharp.Moments/NativeStruct::m00
	double ___m00_0;
	// System.Double OpenCvSharp.Moments/NativeStruct::m10
	double ___m10_1;
	// System.Double OpenCvSharp.Moments/NativeStruct::m01
	double ___m01_2;
	// System.Double OpenCvSharp.Moments/NativeStruct::m20
	double ___m20_3;
	// System.Double OpenCvSharp.Moments/NativeStruct::m11
	double ___m11_4;
	// System.Double OpenCvSharp.Moments/NativeStruct::m02
	double ___m02_5;
	// System.Double OpenCvSharp.Moments/NativeStruct::m30
	double ___m30_6;
	// System.Double OpenCvSharp.Moments/NativeStruct::m21
	double ___m21_7;
	// System.Double OpenCvSharp.Moments/NativeStruct::m12
	double ___m12_8;
	// System.Double OpenCvSharp.Moments/NativeStruct::m03
	double ___m03_9;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu20
	double ___mu20_10;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu11
	double ___mu11_11;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu02
	double ___mu02_12;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu30
	double ___mu30_13;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu21
	double ___mu21_14;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu12
	double ___mu12_15;
	// System.Double OpenCvSharp.Moments/NativeStruct::mu03
	double ___mu03_16;
	// System.Double OpenCvSharp.Moments/NativeStruct::inv_sqrt_m00
	double ___inv_sqrt_m00_17;
};

// OpenCvSharp.SimpleBlobDetector/WParams
struct WParams_tF352D7BCB627DF6ABFC3538BAE8B601298495A54 
{
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::thresholdStep
	float ___thresholdStep_0;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minThreshold
	float ___minThreshold_1;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::maxThreshold
	float ___maxThreshold_2;
	// System.UInt32 OpenCvSharp.SimpleBlobDetector/WParams::minRepeatability
	uint32_t ___minRepeatability_3;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minDistBetweenBlobs
	float ___minDistBetweenBlobs_4;
	// System.Int32 OpenCvSharp.SimpleBlobDetector/WParams::filterByColor
	int32_t ___filterByColor_5;
	// System.Byte OpenCvSharp.SimpleBlobDetector/WParams::blobColor
	uint8_t ___blobColor_6;
	// System.Int32 OpenCvSharp.SimpleBlobDetector/WParams::filterByArea
	int32_t ___filterByArea_7;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minArea
	float ___minArea_8;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::maxArea
	float ___maxArea_9;
	// System.Int32 OpenCvSharp.SimpleBlobDetector/WParams::filterByCircularity
	int32_t ___filterByCircularity_10;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minCircularity
	float ___minCircularity_11;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::maxCircularity
	float ___maxCircularity_12;
	// System.Int32 OpenCvSharp.SimpleBlobDetector/WParams::filterByInertia
	int32_t ___filterByInertia_13;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minInertiaRatio
	float ___minInertiaRatio_14;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::maxInertiaRatio
	float ___maxInertiaRatio_15;
	// System.Int32 OpenCvSharp.SimpleBlobDetector/WParams::filterByConvexity
	int32_t ___filterByConvexity_16;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::minConvexity
	float ___minConvexity_17;
	// System.Single OpenCvSharp.SimpleBlobDetector/WParams::maxConvexity
	float ___maxConvexity_18;
};

// OpenCvSharp.CvObject
struct CvObject_t470E08FFB594E86FEAB1822321B927074DB887B9  : public RuntimeObject
{
	// System.IntPtr OpenCvSharp.CvObject::ptr
	intptr_t ___ptr_0;
};

// System.Delegate
struct Delegate_t  : public RuntimeObject
{
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject* ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.IntPtr System.Delegate::interp_method
	intptr_t ___interp_method_7;
	// System.IntPtr System.Delegate::interp_invoke_impl
	intptr_t ___interp_invoke_impl_8;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t* ___method_info_9;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t* ___original_method_info_10;
	// System.DelegateData System.Delegate::data
	DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E* ___data_11;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_12;
};
// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	intptr_t ___interp_method_7;
	intptr_t ___interp_invoke_impl_8;
	MethodInfo_t* ___method_info_9;
	MethodInfo_t* ___original_method_info_10;
	DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E* ___data_11;
	int32_t ___method_is_virtual_12;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	intptr_t ___interp_method_7;
	intptr_t ___interp_invoke_impl_8;
	MethodInfo_t* ___method_info_9;
	MethodInfo_t* ___original_method_info_10;
	DelegateData_t9B286B493293CD2D23A5B2B5EF0E5B1324C2B77E* ___data_11;
	int32_t ___method_is_virtual_12;
};

// System.Exception
struct Exception_t  : public RuntimeObject
{
	// System.String System.Exception::_className
	String_t* ____className_1;
	// System.String System.Exception::_message
	String_t* ____message_2;
	// System.Collections.IDictionary System.Exception::_data
	RuntimeObject* ____data_3;
	// System.Exception System.Exception::_innerException
	Exception_t* ____innerException_4;
	// System.String System.Exception::_helpURL
	String_t* ____helpURL_5;
	// System.Object System.Exception::_stackTrace
	RuntimeObject* ____stackTrace_6;
	// System.String System.Exception::_stackTraceString
	String_t* ____stackTraceString_7;
	// System.String System.Exception::_remoteStackTraceString
	String_t* ____remoteStackTraceString_8;
	// System.Int32 System.Exception::_remoteStackIndex
	int32_t ____remoteStackIndex_9;
	// System.Object System.Exception::_dynamicMethods
	RuntimeObject* ____dynamicMethods_10;
	// System.Int32 System.Exception::_HResult
	int32_t ____HResult_11;
	// System.String System.Exception::_source
	String_t* ____source_12;
	// System.Runtime.Serialization.SafeSerializationManager System.Exception::_safeSerializationManager
	SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6* ____safeSerializationManager_13;
	// System.Diagnostics.StackTrace[] System.Exception::captured_traces
	StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF* ___captured_traces_14;
	// System.IntPtr[] System.Exception::native_trace_ips
	IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___native_trace_ips_15;
	// System.Int32 System.Exception::caught_in_unmanaged
	int32_t ___caught_in_unmanaged_16;
};
// Native definition for P/Invoke marshalling of System.Exception
struct Exception_t_marshaled_pinvoke
{
	char* ____className_1;
	char* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_pinvoke* ____innerException_4;
	char* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	char* ____stackTraceString_7;
	char* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	char* ____source_12;
	SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6* ____safeSerializationManager_13;
	StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
	int32_t ___caught_in_unmanaged_16;
};
// Native definition for COM marshalling of System.Exception
struct Exception_t_marshaled_com
{
	Il2CppChar* ____className_1;
	Il2CppChar* ____message_2;
	RuntimeObject* ____data_3;
	Exception_t_marshaled_com* ____innerException_4;
	Il2CppChar* ____helpURL_5;
	Il2CppIUnknown* ____stackTrace_6;
	Il2CppChar* ____stackTraceString_7;
	Il2CppChar* ____remoteStackTraceString_8;
	int32_t ____remoteStackIndex_9;
	Il2CppIUnknown* ____dynamicMethods_10;
	int32_t ____HResult_11;
	Il2CppChar* ____source_12;
	SafeSerializationManager_tCBB85B95DFD1634237140CD892E82D06ECB3F5E6* ____safeSerializationManager_13;
	StackTraceU5BU5D_t32FBCB20930EAF5BAE3F450FF75228E5450DA0DF* ___captured_traces_14;
	Il2CppSafeArray/*NONE*/* ___native_trace_ips_15;
	int32_t ___caught_in_unmanaged_16;
};

// System.Runtime.InteropServices.GCHandle
struct GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC 
{
	// System.IntPtr System.Runtime.InteropServices.GCHandle::handle
	intptr_t ___handle_0;
};

// OpenCvSharp.KeyPoint
struct KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA 
{
	// OpenCvSharp.Point2f OpenCvSharp.KeyPoint::Pt
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___Pt_0;
	// System.Single OpenCvSharp.KeyPoint::Size
	float ___Size_1;
	// System.Single OpenCvSharp.KeyPoint::Angle
	float ___Angle_2;
	// System.Single OpenCvSharp.KeyPoint::Response
	float ___Response_3;
	// System.Int32 OpenCvSharp.KeyPoint::Octave
	int32_t ___Octave_4;
	// System.Int32 OpenCvSharp.KeyPoint::ClassId
	int32_t ___ClassId_5;
};

// System.IO.MemoryStream
struct MemoryStream_tAAED1B42172E3390584E4194308AB878E786AAC2  : public Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE
{
	// System.Byte[] System.IO.MemoryStream::_buffer
	ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ____buffer_4;
	// System.Int32 System.IO.MemoryStream::_origin
	int32_t ____origin_5;
	// System.Int32 System.IO.MemoryStream::_position
	int32_t ____position_6;
	// System.Int32 System.IO.MemoryStream::_length
	int32_t ____length_7;
	// System.Int32 System.IO.MemoryStream::_capacity
	int32_t ____capacity_8;
	// System.Boolean System.IO.MemoryStream::_expandable
	bool ____expandable_9;
	// System.Boolean System.IO.MemoryStream::_writable
	bool ____writable_10;
	// System.Boolean System.IO.MemoryStream::_exposable
	bool ____exposable_11;
	// System.Boolean System.IO.MemoryStream::_isOpen
	bool ____isOpen_12;
	// System.Threading.Tasks.Task`1<System.Int32> System.IO.MemoryStream::_lastReadTask
	Task_1_t4C228DE57804012969575431CFF12D57C875552D* ____lastReadTask_13;
};

// UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C  : public RuntimeObject
{
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;
};
// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// UnityEngine.Pose
struct Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971 
{
	// UnityEngine.Vector3 UnityEngine.Pose::position
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___position_0;
	// UnityEngine.Quaternion UnityEngine.Pose::rotation
	Quaternion_tDA59F214EF07D7700B26E40E562F267AF7306974 ___rotation_1;
};

// OpenCvSharp.RotatedRect
struct RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 
{
	// OpenCvSharp.Point2f OpenCvSharp.RotatedRect::Center
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___Center_0;
	// OpenCvSharp.Size2f OpenCvSharp.RotatedRect::Size
	Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7 ___Size_1;
	// System.Single OpenCvSharp.RotatedRect::Angle
	float ___Angle_2;
};

// System.RuntimeTypeHandle
struct RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B 
{
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;
};

// UnityEngine.Touch
struct Touch_t03E51455ED508492B3F278903A0114FA0E87B417 
{
	// System.Int32 UnityEngine.Touch::m_FingerId
	int32_t ___m_FingerId_0;
	// UnityEngine.Vector2 UnityEngine.Touch::m_Position
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___m_Position_1;
	// UnityEngine.Vector2 UnityEngine.Touch::m_RawPosition
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___m_RawPosition_2;
	// UnityEngine.Vector2 UnityEngine.Touch::m_PositionDelta
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___m_PositionDelta_3;
	// System.Single UnityEngine.Touch::m_TimeDelta
	float ___m_TimeDelta_4;
	// System.Int32 UnityEngine.Touch::m_TapCount
	int32_t ___m_TapCount_5;
	// UnityEngine.TouchPhase UnityEngine.Touch::m_Phase
	int32_t ___m_Phase_6;
	// UnityEngine.TouchType UnityEngine.Touch::m_Type
	int32_t ___m_Type_7;
	// System.Single UnityEngine.Touch::m_Pressure
	float ___m_Pressure_8;
	// System.Single UnityEngine.Touch::m_maximumPossiblePressure
	float ___m_maximumPossiblePressure_9;
	// System.Single UnityEngine.Touch::m_Radius
	float ___m_Radius_10;
	// System.Single UnityEngine.Touch::m_RadiusVariance
	float ___m_RadiusVariance_11;
	// System.Single UnityEngine.Touch::m_AltitudeAngle
	float ___m_AltitudeAngle_12;
	// System.Single UnityEngine.Touch::m_AzimuthAngle
	float ___m_AzimuthAngle_13;
};

// System.ApplicationException
struct ApplicationException_tA744BED4E90266BD255285CD4CF909BAB3EE811A  : public Exception_t
{
};

// UnityEngine.XR.ARSubsystems.BoundedPlane
struct BoundedPlane_tF51C315A8961EB42F0A1B60D47158646E5AF75CE 
{
	// UnityEngine.XR.ARSubsystems.TrackableId UnityEngine.XR.ARSubsystems.BoundedPlane::m_TrackableId
	TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 ___m_TrackableId_1;
	// UnityEngine.XR.ARSubsystems.TrackableId UnityEngine.XR.ARSubsystems.BoundedPlane::m_SubsumedById
	TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 ___m_SubsumedById_2;
	// UnityEngine.Vector2 UnityEngine.XR.ARSubsystems.BoundedPlane::m_Center
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___m_Center_3;
	// UnityEngine.Pose UnityEngine.XR.ARSubsystems.BoundedPlane::m_Pose
	Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971 ___m_Pose_4;
	// UnityEngine.Vector2 UnityEngine.XR.ARSubsystems.BoundedPlane::m_Size
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___m_Size_5;
	// UnityEngine.XR.ARSubsystems.PlaneAlignment UnityEngine.XR.ARSubsystems.BoundedPlane::m_Alignment
	int32_t ___m_Alignment_6;
	// UnityEngine.XR.ARSubsystems.TrackingState UnityEngine.XR.ARSubsystems.BoundedPlane::m_TrackingState
	int32_t ___m_TrackingState_7;
	// System.IntPtr UnityEngine.XR.ARSubsystems.BoundedPlane::m_NativePtr
	intptr_t ___m_NativePtr_8;
	// UnityEngine.XR.ARSubsystems.PlaneClassification UnityEngine.XR.ARSubsystems.BoundedPlane::m_Classification
	int32_t ___m_Classification_9;
};

// UnityEngine.Component
struct Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// OpenCvSharp.DisposableObject
struct DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41  : public RuntimeObject
{
	// System.Boolean OpenCvSharp.DisposableObject::<IsDisposed>k__BackingField
	bool ___U3CIsDisposedU3Ek__BackingField_0;
	// System.Boolean OpenCvSharp.DisposableObject::<IsEnabledDispose>k__BackingField
	bool ___U3CIsEnabledDisposeU3Ek__BackingField_1;
	// System.Runtime.InteropServices.GCHandle OpenCvSharp.DisposableObject::dataHandle
	GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC ___dataHandle_2;
	// System.IntPtr OpenCvSharp.DisposableObject::<AllocatedMemory>k__BackingField
	intptr_t ___U3CAllocatedMemoryU3Ek__BackingField_3;
	// System.Int64 OpenCvSharp.DisposableObject::<AllocatedMemorySize>k__BackingField
	int64_t ___U3CAllocatedMemorySizeU3Ek__BackingField_4;
};

// UnityEngine.GameObject
struct GameObject_t76FEDD663AB33C991A9C9A23129337651094216F  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// UnityEngine.Material
struct Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// UnityEngine.Mesh
struct Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// System.MulticastDelegate
struct MulticastDelegate_t  : public Delegate_t
{
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tC5AB7E8F745616680F337909D3A8E6C722CDF771* ___delegates_13;
};
// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_13;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_13;
};

// UnityEngine.Sprite
struct Sprite_tAFF74BC83CD68037494CB0B4F28CBDF8971CAB99  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// System.SystemException
struct SystemException_tCC48D868298F4C0705279823E34B00F4FBDB7295  : public Exception_t
{
};

// UnityEngine.Texture
struct Texture_t791CBB51219779964E0E8A2ED7C1AA5F92A4A700  : public Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C
{
};

// System.Type
struct Type_t  : public MemberInfo_t
{
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B ____impl_8;
};

// UnityEngine.XR.ARSubsystems.XRAnchor
struct XRAnchor_tDD427E66CAA09DE7B058EA76223EF7DC3880FE82 
{
	// UnityEngine.XR.ARSubsystems.TrackableId UnityEngine.XR.ARSubsystems.XRAnchor::m_Id
	TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 ___m_Id_1;
	// UnityEngine.Pose UnityEngine.XR.ARSubsystems.XRAnchor::m_Pose
	Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971 ___m_Pose_2;
	// UnityEngine.XR.ARSubsystems.TrackingState UnityEngine.XR.ARSubsystems.XRAnchor::m_TrackingState
	int32_t ___m_TrackingState_3;
	// System.IntPtr UnityEngine.XR.ARSubsystems.XRAnchor::m_NativePtr
	intptr_t ___m_NativePtr_4;
	// System.Guid UnityEngine.XR.ARSubsystems.XRAnchor::m_SessionId
	Guid_t ___m_SessionId_5;
};

// UnityEngine.XR.ARSubsystems.XRRaycastHit
struct XRRaycastHit_t87A29A58C1D41AF1B3995B73777A7494B0695780 
{
	// UnityEngine.XR.ARSubsystems.TrackableId UnityEngine.XR.ARSubsystems.XRRaycastHit::m_TrackableId
	TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 ___m_TrackableId_1;
	// UnityEngine.Pose UnityEngine.XR.ARSubsystems.XRRaycastHit::m_Pose
	Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971 ___m_Pose_2;
	// System.Single UnityEngine.XR.ARSubsystems.XRRaycastHit::m_Distance
	float ___m_Distance_3;
	// UnityEngine.XR.ARSubsystems.TrackableType UnityEngine.XR.ARSubsystems.XRRaycastHit::m_HitType
	int32_t ___m_HitType_4;
};

// System.Action`1<UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs>
struct Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074  : public MulticastDelegate_t
{
};

// UnityEngine.XR.ARFoundation.ARRaycastHit
struct ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70 
{
	// System.Single UnityEngine.XR.ARFoundation.ARRaycastHit::<distance>k__BackingField
	float ___U3CdistanceU3Ek__BackingField_0;
	// UnityEngine.XR.ARFoundation.ARTrackable UnityEngine.XR.ARFoundation.ARRaycastHit::<trackable>k__BackingField
	ARTrackable_t1D98417758C08E98A333CDEC0C2C1688CE10B2E0* ___U3CtrackableU3Ek__BackingField_1;
	// UnityEngine.XR.ARSubsystems.XRRaycastHit UnityEngine.XR.ARFoundation.ARRaycastHit::m_Hit
	XRRaycastHit_t87A29A58C1D41AF1B3995B73777A7494B0695780 ___m_Hit_2;
	// UnityEngine.Transform UnityEngine.XR.ARFoundation.ARRaycastHit::m_Transform
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___m_Transform_3;
};
// Native definition for P/Invoke marshalling of UnityEngine.XR.ARFoundation.ARRaycastHit
struct ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70_marshaled_pinvoke
{
	float ___U3CdistanceU3Ek__BackingField_0;
	ARTrackable_t1D98417758C08E98A333CDEC0C2C1688CE10B2E0* ___U3CtrackableU3Ek__BackingField_1;
	XRRaycastHit_t87A29A58C1D41AF1B3995B73777A7494B0695780 ___m_Hit_2;
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___m_Transform_3;
};
// Native definition for COM marshalling of UnityEngine.XR.ARFoundation.ARRaycastHit
struct ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70_marshaled_com
{
	float ___U3CdistanceU3Ek__BackingField_0;
	ARTrackable_t1D98417758C08E98A333CDEC0C2C1688CE10B2E0* ___U3CtrackableU3Ek__BackingField_1;
	XRRaycastHit_t87A29A58C1D41AF1B3995B73777A7494B0695780 ___m_Hit_2;
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___m_Transform_3;
};

// System.ArgumentException
struct ArgumentException_tAD90411542A20A9C72D5CDA3A84181D8B947A263  : public SystemException_tCC48D868298F4C0705279823E34B00F4FBDB7295
{
	// System.String System.ArgumentException::_paramName
	String_t* ____paramName_18;
};

// System.AsyncCallback
struct AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C  : public MulticastDelegate_t
{
};

// System.BadImageFormatException
struct BadImageFormatException_t7EBAEDCD74D3274D00106EC0051755C18D20E552  : public SystemException_tCC48D868298F4C0705279823E34B00F4FBDB7295
{
	// System.String System.BadImageFormatException::_fileName
	String_t* ____fileName_18;
	// System.String System.BadImageFormatException::_fusionLog
	String_t* ____fusionLog_19;
};

// UnityEngine.Behaviour
struct Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA  : public Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3
{
};

// OpenCvSharp.CvErrorCallback
struct CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D  : public MulticastDelegate_t
{
};

// OpenCvSharp.CvMouseCallback
struct CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB  : public MulticastDelegate_t
{
};

// OpenCvSharp.CvTrackbarCallback
struct CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3  : public MulticastDelegate_t
{
};

// OpenCvSharp.CvTrackbarCallback2
struct CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7  : public MulticastDelegate_t
{
};

// OpenCvSharp.CvTrackbarCallback2Native
struct CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D  : public MulticastDelegate_t
{
};

// OpenCvSharp.DisposableCvObject
struct DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184  : public DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41
{
	// System.IntPtr OpenCvSharp.DisposableCvObject::ptr
	intptr_t ___ptr_5;
	// System.Boolean OpenCvSharp.DisposableCvObject::disposed
	bool ___disposed_6;
};

// System.IO.IOException
struct IOException_t5D599190B003D41D45D4839A9B6B9AB53A755910  : public SystemException_tCC48D868298F4C0705279823E34B00F4FBDB7295
{
};

// System.InvalidOperationException
struct InvalidOperationException_t5DDE4D49B7405FAAB1E4576F4715A42A3FAD4BAB  : public SystemException_tCC48D868298F4C0705279823E34B00F4FBDB7295
{
};

// OpenCvSharp.MatForeachFunctionByte
struct MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionDouble
struct MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionFloat
struct MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionInt16
struct MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionInt32
struct MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec2b
struct MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec2d
struct MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec2f
struct MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec2i
struct MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec2s
struct MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec3b
struct MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec3d
struct MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec3f
struct MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec3i
struct MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec3s
struct MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec4b
struct MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec4d
struct MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec4f
struct MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec4i
struct MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec4s
struct MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec6b
struct MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec6d
struct MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec6f
struct MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec6i
struct MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C  : public MulticastDelegate_t
{
};

// OpenCvSharp.MatForeachFunctionVec6s
struct MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89  : public MulticastDelegate_t
{
};

// OpenCvSharp.OpenCVException
struct OpenCVException_tE58DF4848C655F3CB2CFE810F36B55EDC7A8B01A  : public ApplicationException_tA744BED4E90266BD255285CD4CF909BAB3EE811A
{
	// OpenCvSharp.ErrorCode OpenCvSharp.OpenCVException::<Status>k__BackingField
	int32_t ___U3CStatusU3Ek__BackingField_18;
	// System.String OpenCvSharp.OpenCVException::<FuncName>k__BackingField
	String_t* ___U3CFuncNameU3Ek__BackingField_19;
	// System.String OpenCvSharp.OpenCVException::<ErrMsg>k__BackingField
	String_t* ___U3CErrMsgU3Ek__BackingField_20;
	// System.String OpenCvSharp.OpenCVException::<FileName>k__BackingField
	String_t* ___U3CFileNameU3Ek__BackingField_21;
	// System.Int32 OpenCvSharp.OpenCVException::<Line>k__BackingField
	int32_t ___U3CLineU3Ek__BackingField_22;
};

// OpenCvSharp.OpenCvSharpException
struct OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A  : public ApplicationException_tA744BED4E90266BD255285CD4CF909BAB3EE811A
{
};

// UnityEngine.Renderer
struct Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF  : public Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3
{
};

// UnityEngine.Texture2D
struct Texture2D_tE6505BC111DD8A424A9DBE8E05D7D09E11FFFCF4  : public Texture_t791CBB51219779964E0E8A2ED7C1AA5F92A4A700
{
};

// UnityEngine.Transform
struct Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1  : public Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3
{
};

// System.TypeLoadException
struct TypeLoadException_t6333E3083F7BFF1A582969E6F67ACBA8B0035C32  : public SystemException_tCC48D868298F4C0705279823E34B00F4FBDB7295
{
	// System.String System.TypeLoadException::ClassName
	String_t* ___ClassName_18;
	// System.String System.TypeLoadException::AssemblyName
	String_t* ___AssemblyName_19;
	// System.String System.TypeLoadException::MessageArg
	String_t* ___MessageArg_20;
	// System.Int32 System.TypeLoadException::ResourceId
	int32_t ___ResourceId_21;
};

// OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorGMG>
struct Ptr_1_tD22569946308A3D2387E04238F3B86016A293509  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.Ptr`1::disposed
	bool ___disposed_7;
	// OpenCvSharp.PtrNativeFunctions/ReleaseFunc OpenCvSharp.Ptr`1::releaseFunc
	ReleaseFunc_t91CA4A54F761CA77DDBB5ECE0B266BCAFE7264B0* ___releaseFunc_8;
	// OpenCvSharp.PtrNativeFunctions/ObjFunc OpenCvSharp.Ptr`1::getFunc
	ObjFunc_tADFA8072AC5CCB4A4464BBF25935C8B601957A5D* ___getFunc_9;
};

// OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorMOG>
struct Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.Ptr`1::disposed
	bool ___disposed_7;
	// OpenCvSharp.PtrNativeFunctions/ReleaseFunc OpenCvSharp.Ptr`1::releaseFunc
	ReleaseFunc_t91CA4A54F761CA77DDBB5ECE0B266BCAFE7264B0* ___releaseFunc_8;
	// OpenCvSharp.PtrNativeFunctions/ObjFunc OpenCvSharp.Ptr`1::getFunc
	ObjFunc_tADFA8072AC5CCB4A4464BBF25935C8B601957A5D* ___getFunc_9;
};

// OpenCvSharp.Ptr`1<OpenCvSharp.StereoBM>
struct Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.Ptr`1::disposed
	bool ___disposed_7;
	// OpenCvSharp.PtrNativeFunctions/ReleaseFunc OpenCvSharp.Ptr`1::releaseFunc
	ReleaseFunc_t91CA4A54F761CA77DDBB5ECE0B266BCAFE7264B0* ___releaseFunc_8;
	// OpenCvSharp.PtrNativeFunctions/ObjFunc OpenCvSharp.Ptr`1::getFunc
	ObjFunc_tADFA8072AC5CCB4A4464BBF25935C8B601957A5D* ___getFunc_9;
};

// OpenCvSharp.Ptr`1<OpenCvSharp.StereoSGBM>
struct Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.Ptr`1::disposed
	bool ___disposed_7;
	// OpenCvSharp.PtrNativeFunctions/ReleaseFunc OpenCvSharp.Ptr`1::releaseFunc
	ReleaseFunc_t91CA4A54F761CA77DDBB5ECE0B266BCAFE7264B0* ___releaseFunc_8;
	// OpenCvSharp.PtrNativeFunctions/ObjFunc OpenCvSharp.Ptr`1::getFunc
	ObjFunc_tADFA8072AC5CCB4A4464BBF25935C8B601957A5D* ___getFunc_9;
};

// OpenCvSharp.Algorithm
struct Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
};

// System.ArgumentNullException
struct ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129  : public ArgumentException_tAD90411542A20A9C72D5CDA3A84181D8B947A263
{
};

// System.ArgumentOutOfRangeException
struct ArgumentOutOfRangeException_tEA2822DAF62B10EEED00E0E3A341D4BAF78CF85F  : public ArgumentException_tAD90411542A20A9C72D5CDA3A84181D8B947A263
{
	// System.Object System.ArgumentOutOfRangeException::_actualValue
	RuntimeObject* ____actualValue_19;
};

// System.DllNotFoundException
struct DllNotFoundException_t8CAE636A394C482C9FCF38FB7B7929506319D534  : public TypeLoadException_t6333E3083F7BFF1A582969E6F67ACBA8B0035C32
{
};

// OpenCvSharp.FileNode
struct FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.FileNode::disposed
	bool ___disposed_7;
};

// System.IO.FileNotFoundException
struct FileNotFoundException_t17F1B49AD996E4A60C87C7ADC9D3A25EB5808A9A  : public IOException_t5D599190B003D41D45D4839A9B6B9AB53A755910
{
	// System.String System.IO.FileNotFoundException::<FileName>k__BackingField
	String_t* ___U3CFileNameU3Ek__BackingField_18;
	// System.String System.IO.FileNotFoundException::<FusionLog>k__BackingField
	String_t* ___U3CFusionLogU3Ek__BackingField_19;
};

// OpenCvSharp.FileStorage
struct FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.FileStorage::disposed
	bool ___disposed_7;
};

// OpenCvSharp.InputArray
struct InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.InputArray::disposed
	bool ___disposed_7;
	// System.Object OpenCvSharp.InputArray::obj
	RuntimeObject* ___obj_8;
};

// OpenCvSharp.Mat
struct Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.Mat::disposed
	bool ___disposed_7;
	// OpenCvSharp.Mat/MatExprIndexer OpenCvSharp.Mat::matExprIndexer
	MatExprIndexer_tB64CDE6A7443CDD5A196B278BEB4E5BE9B6F9B92* ___matExprIndexer_9;
	// OpenCvSharp.Mat/ColExprIndexer OpenCvSharp.Mat::colExprIndexer
	ColExprIndexer_t65FB4C7E258DB30905ABF1ABB4FD463F5D634A07* ___colExprIndexer_10;
	// OpenCvSharp.Mat/RowExprIndexer OpenCvSharp.Mat::rowExprIndexer
	RowExprIndexer_tFB0C258EBBEC534D72ACC58CF0AFB2F172A39BB2* ___rowExprIndexer_11;
	// OpenCvSharp.Mat/ColIndexer OpenCvSharp.Mat::colIndexer
	ColIndexer_tD1E32BF4DFBD130EA0A93833D7EEFE241DCEF668* ___colIndexer_12;
	// OpenCvSharp.Mat/RowIndexer OpenCvSharp.Mat::rowIndexer
	RowIndexer_t4CD4C726A6D6CDB3E9283B4821460A138800DBB0* ___rowIndexer_13;
};

// UnityEngine.MeshRenderer
struct MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE  : public Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF
{
};

// UnityEngine.MonoBehaviour
struct MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71  : public Behaviour_t01970CFBBA658497AE30F311C447DB0440BAB7FA
{
};

// System.ObjectDisposedException
struct ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB  : public InvalidOperationException_t5DDE4D49B7405FAAB1E4576F4715A42A3FAD4BAB
{
	// System.String System.ObjectDisposedException::_objectName
	String_t* ____objectName_18;
};

// OpenCvSharp.ShapePredictor
struct ShapePredictor_tCD381ACDA05D89BAE24A7D0887BDA064C5C385BD  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.ShapePredictor::disposed
	bool ___disposed_7;
};

// OpenCvSharp.SparseMat
struct SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.SparseMat::disposed
	bool ___disposed_7;
};

// UnityEngine.SpriteRenderer
struct SpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B  : public Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF
{
	// UnityEngine.Events.UnityEvent`1<UnityEngine.SpriteRenderer> UnityEngine.SpriteRenderer::m_SpriteChangeEvent
	UnityEvent_1_t8ABE5544759145B8D7A09F1C54FFCB6907EDD56E* ___m_SpriteChangeEvent_4;
};

// OpenCvSharp.VectorOfDMatch
struct VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.VectorOfDMatch::disposed
	bool ___disposed_7;
};

// OpenCvSharp.VectorOfKeyPoint
struct VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.VectorOfKeyPoint::disposed
	bool ___disposed_7;
};

// OpenCvSharp.VectorOfPoint
struct VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636  : public DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184
{
	// System.Boolean OpenCvSharp.VectorOfPoint::disposed
	bool ___disposed_7;
};

// UnityEngine.XR.ARFoundation.SubsystemLifecycleManager`3<UnityEngine.XR.ARSubsystems.XRAnchorSubsystem,UnityEngine.XR.ARSubsystems.XRAnchorSubsystemDescriptor,UnityEngine.XR.ARSubsystems.XRAnchorSubsystem/Provider>
struct SubsystemLifecycleManager_3_tAE0BB0092EB47B81AA111C370381E3BA14C88DD3  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TSubsystem UnityEngine.XR.ARFoundation.SubsystemLifecycleManager`3::<subsystem>k__BackingField
	XRAnchorSubsystem_tB8B108EFBD93D4AFD53DCE7BD599009F79D214AF* ___U3CsubsystemU3Ek__BackingField_4;
};

// UnityEngine.XR.ARFoundation.SubsystemLifecycleManager`3<UnityEngine.XR.ARSubsystems.XRPlaneSubsystem,UnityEngine.XR.ARSubsystems.XRPlaneSubsystemDescriptor,UnityEngine.XR.ARSubsystems.XRPlaneSubsystem/Provider>
struct SubsystemLifecycleManager_3_t7FE0F4D0E7C0B4044705703906B62335E93547A6  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TSubsystem UnityEngine.XR.ARFoundation.SubsystemLifecycleManager`3::<subsystem>k__BackingField
	XRPlaneSubsystem_t6FC18D5B1FF10EE9B4A751977B526F44A16EDB62* ___U3CsubsystemU3Ek__BackingField_4;
};

// UnityEngine.XR.ARFoundation.SubsystemLifecycleManager`3<UnityEngine.XR.ARSubsystems.XRRaycastSubsystem,UnityEngine.XR.ARSubsystems.XRRaycastSubsystemDescriptor,UnityEngine.XR.ARSubsystems.XRRaycastSubsystem/Provider>
struct SubsystemLifecycleManager_3_tF871EF43DE89B354DB5832CC545E7E0EEF19DC8C  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// TSubsystem UnityEngine.XR.ARFoundation.SubsystemLifecycleManager`3::<subsystem>k__BackingField
	XRRaycastSubsystem_t48087E79DE9617C7E866875C8DDD3124C9E068B7* ___U3CsubsystemU3Ek__BackingField_4;
};

// UnityEngine.XR.ARFoundation.ARCameraBackground
struct ARCameraBackground_t5E400069BEB27E2F5ECE553C3C23475FC80A1703  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// UnityEngine.Camera UnityEngine.XR.ARFoundation.ARCameraBackground::m_Camera
	Camera_tA92CC927D7439999BC82DBEDC0AA45B470F9E184* ___m_Camera_10;
	// UnityEngine.XR.ARFoundation.ARCameraManager UnityEngine.XR.ARFoundation.ARCameraBackground::m_CameraManager
	ARCameraManager_t6E957EA922911B8447D086D9FB1F860EC967BD9F* ___m_CameraManager_11;
	// UnityEngine.XR.ARFoundation.AROcclusionManager UnityEngine.XR.ARFoundation.ARCameraBackground::m_OcclusionManager
	AROcclusionManager_t9EDE9F76050AF892E2AC6704D0F76EDAC370609D* ___m_OcclusionManager_12;
	// UnityEngine.Rendering.CommandBuffer UnityEngine.XR.ARFoundation.ARCameraBackground::m_CommandBuffer
	CommandBuffer_tB56007DC84EF56296C325EC32DD12AC1E3DC91F7* ___m_CommandBuffer_13;
	// System.Boolean UnityEngine.XR.ARFoundation.ARCameraBackground::m_UseCustomMaterial
	bool ___m_UseCustomMaterial_14;
	// UnityEngine.Material UnityEngine.XR.ARFoundation.ARCameraBackground::m_CustomMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_CustomMaterial_15;
	// UnityEngine.Material UnityEngine.XR.ARFoundation.ARCameraBackground::m_DefaultMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_DefaultMaterial_16;
	// System.Nullable`1<UnityEngine.CameraClearFlags> UnityEngine.XR.ARFoundation.ARCameraBackground::m_PreviousCameraClearFlags
	Nullable_1_t14BBC3DE3B6A54EBB06977978775A190F1D6DA44 ___m_PreviousCameraClearFlags_17;
	// System.Nullable`1<System.Single> UnityEngine.XR.ARFoundation.ARCameraBackground::m_PreviousCameraFieldOfView
	Nullable_1_t3D746CBB6123D4569FF4DEA60BC4240F32C6FE75 ___m_PreviousCameraFieldOfView_18;
	// System.Boolean UnityEngine.XR.ARFoundation.ARCameraBackground::m_BackgroundRenderingEnabled
	bool ___m_BackgroundRenderingEnabled_19;
	// System.Boolean UnityEngine.XR.ARFoundation.ARCameraBackground::m_CommandBufferCullingState
	bool ___m_CommandBufferCullingState_20;
};

// ARFeatheredPlaneMeshVisualizer
struct ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.Single ARFeatheredPlaneMeshVisualizer::m_FeatheringWidth
	float ___m_FeatheringWidth_4;
	// UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer ARFeatheredPlaneMeshVisualizer::m_PlaneMeshVisualizer
	ARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F* ___m_PlaneMeshVisualizer_7;
	// UnityEngine.XR.ARFoundation.ARPlane ARFeatheredPlaneMeshVisualizer::m_Plane
	ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* ___m_Plane_8;
	// UnityEngine.Material ARFeatheredPlaneMeshVisualizer::m_FeatheredPlaneMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_FeatheredPlaneMaterial_9;
};

// UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer
struct ARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// UnityEngine.Mesh UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer::<mesh>k__BackingField
	Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ___U3CmeshU3Ek__BackingField_4;
	// UnityEngine.XR.ARSubsystems.TrackingState UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer::m_TrackingStateVisibilityThreshold
	int32_t ___m_TrackingStateVisibilityThreshold_5;
	// System.Boolean UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer::m_HideSubsumed
	bool ___m_HideSubsumed_6;
	// System.Nullable`1<System.Single> UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer::m_InitialLineWidthMultiplier
	Nullable_1_t3D746CBB6123D4569FF4DEA60BC4240F32C6FE75 ___m_InitialLineWidthMultiplier_7;
	// UnityEngine.XR.ARFoundation.ARPlane UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer::m_Plane
	ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* ___m_Plane_8;
};

// UnityEngine.XR.ARFoundation.ARTrackable
struct ARTrackable_t1D98417758C08E98A333CDEC0C2C1688CE10B2E0  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
};

// AnchorCreator
struct AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// UnityEngine.GameObject AnchorCreator::m_AnchorPrefab
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___m_AnchorPrefab_4;
	// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARAnchor> AnchorCreator::m_AnchorPoints
	List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53* ___m_AnchorPoints_6;
	// UnityEngine.XR.ARFoundation.ARRaycastManager AnchorCreator::m_RaycastManager
	ARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44* ___m_RaycastManager_7;
	// UnityEngine.XR.ARFoundation.ARAnchorManager AnchorCreator::m_AnchorManager
	ARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E* ___m_AnchorManager_8;
	// UnityEngine.XR.ARFoundation.ARPlaneManager AnchorCreator::m_PlaneManager
	ARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928* ___m_PlaneManager_9;
};

// OpenCvSharp.BackgroundSubtractor
struct BackgroundSubtractor_t1041DECAB76BA253B12C2AE840B600A35456C4E6  : public Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111
{
};

// OpenCvSharp.CameraScenePassthrough
struct CameraScenePassthrough_t4775120A040BD72E8844090020568DAA649D6770  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// UnityEngine.Texture2D OpenCvSharp.CameraScenePassthrough::camOutput
	Texture2D_tE6505BC111DD8A424A9DBE8E05D7D09E11FFFCF4* ___camOutput_4;
	// UnityEngine.XR.ARFoundation.ARCameraManager OpenCvSharp.CameraScenePassthrough::m_CameraManager
	ARCameraManager_t6E957EA922911B8447D086D9FB1F860EC967BD9F* ___m_CameraManager_5;
};

// ChessBoard
struct ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// UnityEngine.Color ChessBoard::lightColor
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___lightColor_4;
	// UnityEngine.Color ChessBoard::darkColor
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___darkColor_5;
	// UnityEngine.MeshRenderer[,] ChessBoard::squareRenderers
	MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7* ___squareRenderers_6;
	// UnityEngine.Material ChessBoard::squareMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___squareMaterial_7;
	// UnityEngine.GameObject ChessBoard::WhiteKing
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteKing_8;
	// UnityEngine.GameObject ChessBoard::WhiteQueen
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteQueen_9;
	// UnityEngine.GameObject ChessBoard::WhiteBishopQ
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteBishopQ_10;
	// UnityEngine.GameObject ChessBoard::WhiteKnightQ
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteKnightQ_11;
	// UnityEngine.GameObject ChessBoard::WhiteRookQ
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteRookQ_12;
	// UnityEngine.GameObject ChessBoard::WhiteBishopK
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteBishopK_13;
	// UnityEngine.GameObject ChessBoard::WhiteKnightK
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteKnightK_14;
	// UnityEngine.GameObject ChessBoard::WhiteRookK
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteRookK_15;
	// UnityEngine.GameObject ChessBoard::WhiteAPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteAPawn_16;
	// UnityEngine.GameObject ChessBoard::WhiteBPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteBPawn_17;
	// UnityEngine.GameObject ChessBoard::WhiteCPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteCPawn_18;
	// UnityEngine.GameObject ChessBoard::WhiteDPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteDPawn_19;
	// UnityEngine.GameObject ChessBoard::WhiteEPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteEPawn_20;
	// UnityEngine.GameObject ChessBoard::WhiteFPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteFPawn_21;
	// UnityEngine.GameObject ChessBoard::WhiteGPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteGPawn_22;
	// UnityEngine.GameObject ChessBoard::WhiteHPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___WhiteHPawn_23;
	// UnityEngine.GameObject ChessBoard::BlackKing
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackKing_24;
	// UnityEngine.GameObject ChessBoard::BlackQueen
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackQueen_25;
	// UnityEngine.GameObject ChessBoard::BlackBishopQ
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackBishopQ_26;
	// UnityEngine.GameObject ChessBoard::BlackKnightQ
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackKnightQ_27;
	// UnityEngine.GameObject ChessBoard::BlackRookQ
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackRookQ_28;
	// UnityEngine.GameObject ChessBoard::BlackBishopK
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackBishopK_29;
	// UnityEngine.GameObject ChessBoard::BlackKnightK
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackKnightK_30;
	// UnityEngine.GameObject ChessBoard::BlackRookK
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackRookK_31;
	// UnityEngine.GameObject ChessBoard::BlackAPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackAPawn_32;
	// UnityEngine.GameObject ChessBoard::BlackBPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackBPawn_33;
	// UnityEngine.GameObject ChessBoard::BlackCPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackCPawn_34;
	// UnityEngine.GameObject ChessBoard::BlackDPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackDPawn_35;
	// UnityEngine.GameObject ChessBoard::BlackEPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackEPawn_36;
	// UnityEngine.GameObject ChessBoard::BlackFPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackFPawn_37;
	// UnityEngine.GameObject ChessBoard::BlackGPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackGPawn_38;
	// UnityEngine.GameObject ChessBoard::BlackHPawn
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___BlackHPawn_39;
	// UnityEngine.GameObject[,] ChessBoard::boardRepresentation
	GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* ___boardRepresentation_40;
};

// ImageToBackground
struct ImageToBackground_t38A93F35104A62583BA7C07FEA7FF61D24D9DEB9  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// OpenCvSharp.CameraScenePassthrough ImageToBackground::passthrough
	CameraScenePassthrough_t4775120A040BD72E8844090020568DAA649D6770* ___passthrough_4;
	// UnityEngine.XR.ARFoundation.ARCameraBackground ImageToBackground::cameraBackground
	ARCameraBackground_t5E400069BEB27E2F5ECE553C3C23475FC80A1703* ___cameraBackground_5;
	// UnityEngine.UI.RawImage ImageToBackground::debug
	RawImage_tFF12F7DB574FBDC1863CF607C7A12A5D9F8D6179* ___debug_6;
};

// LobbyScript
struct LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// System.String LobbyScript::currentScene
	String_t* ___currentScene_4;
	// UnityEngine.GameObject LobbyScript::mainMenu
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___mainMenu_5;
	// UnityEngine.GameObject LobbyScript::backMenu
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___backMenu_6;
};

// Piece
struct Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
	// UnityEngine.Sprite Piece::pieceSprite
	Sprite_tAFF74BC83CD68037494CB0B4F28CBDF8971CAB99* ___pieceSprite_4;
	// System.Boolean Piece::color
	bool ___color_5;
	// System.Boolean Piece::CanCastle
	bool ___CanCastle_6;
	// System.Int32[,] Piece::position
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* ___position_7;
	// PieceTypes Piece::pieceType
	int32_t ___pieceType_8;
};

// OpenCvSharp.StereoMatcher
struct StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA  : public Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111
{
};

// UnityEngine.EventSystems.UIBehaviour
struct UIBehaviour_tB9D4295827BD2EEDEF0749200C6CA7090C742A9D  : public MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71
{
};

// UnityEngine.XR.ARFoundation.ARTrackableManager`5<UnityEngine.XR.ARSubsystems.XRAnchorSubsystem,UnityEngine.XR.ARSubsystems.XRAnchorSubsystemDescriptor,UnityEngine.XR.ARSubsystems.XRAnchorSubsystem/Provider,UnityEngine.XR.ARSubsystems.XRAnchor,UnityEngine.XR.ARFoundation.ARAnchor>
struct ARTrackableManager_5_t58BCDA2A5956989C6A20CC1E41B0F6DBEED545B6  : public SubsystemLifecycleManager_3_tAE0BB0092EB47B81AA111C370381E3BA14C88DD3
{
	// UnityEngine.XR.ARFoundation.ARSessionOrigin UnityEngine.XR.ARFoundation.ARTrackableManager`5::<sessionOrigin>k__BackingField
	ARSessionOrigin_tE7B28A1A19500BCC02711397A19E330425830BC3* ___U3CsessionOriginU3Ek__BackingField_8;
	// System.Collections.Generic.Dictionary`2<UnityEngine.XR.ARSubsystems.TrackableId,TTrackable> UnityEngine.XR.ARFoundation.ARTrackableManager`5::m_Trackables
	Dictionary_2_t525DE08A369658A5AE7D624D571ED15216817535* ___m_Trackables_9;
	// System.Collections.Generic.Dictionary`2<UnityEngine.XR.ARSubsystems.TrackableId,TTrackable> UnityEngine.XR.ARFoundation.ARTrackableManager`5::m_PendingAdds
	Dictionary_2_t525DE08A369658A5AE7D624D571ED15216817535* ___m_PendingAdds_10;
};

// UnityEngine.XR.ARFoundation.ARTrackableManager`5<UnityEngine.XR.ARSubsystems.XRPlaneSubsystem,UnityEngine.XR.ARSubsystems.XRPlaneSubsystemDescriptor,UnityEngine.XR.ARSubsystems.XRPlaneSubsystem/Provider,UnityEngine.XR.ARSubsystems.BoundedPlane,UnityEngine.XR.ARFoundation.ARPlane>
struct ARTrackableManager_5_t1F9F85442D84B92DE0BC4C518768C0154AB69103  : public SubsystemLifecycleManager_3_t7FE0F4D0E7C0B4044705703906B62335E93547A6
{
	// UnityEngine.XR.ARFoundation.ARSessionOrigin UnityEngine.XR.ARFoundation.ARTrackableManager`5::<sessionOrigin>k__BackingField
	ARSessionOrigin_tE7B28A1A19500BCC02711397A19E330425830BC3* ___U3CsessionOriginU3Ek__BackingField_8;
	// System.Collections.Generic.Dictionary`2<UnityEngine.XR.ARSubsystems.TrackableId,TTrackable> UnityEngine.XR.ARFoundation.ARTrackableManager`5::m_Trackables
	Dictionary_2_t26A4820BA6F451105138232941B7A9466E583A6C* ___m_Trackables_9;
	// System.Collections.Generic.Dictionary`2<UnityEngine.XR.ARSubsystems.TrackableId,TTrackable> UnityEngine.XR.ARFoundation.ARTrackableManager`5::m_PendingAdds
	Dictionary_2_t26A4820BA6F451105138232941B7A9466E583A6C* ___m_PendingAdds_10;
};

// UnityEngine.XR.ARFoundation.ARTrackableManager`5<UnityEngine.XR.ARSubsystems.XRRaycastSubsystem,UnityEngine.XR.ARSubsystems.XRRaycastSubsystemDescriptor,UnityEngine.XR.ARSubsystems.XRRaycastSubsystem/Provider,UnityEngine.XR.ARSubsystems.XRRaycast,UnityEngine.XR.ARFoundation.ARRaycast>
struct ARTrackableManager_5_tB0551B87CFE2349D3C8AD77F1642F669F950A409  : public SubsystemLifecycleManager_3_tF871EF43DE89B354DB5832CC545E7E0EEF19DC8C
{
	// UnityEngine.XR.ARFoundation.ARSessionOrigin UnityEngine.XR.ARFoundation.ARTrackableManager`5::<sessionOrigin>k__BackingField
	ARSessionOrigin_tE7B28A1A19500BCC02711397A19E330425830BC3* ___U3CsessionOriginU3Ek__BackingField_8;
	// System.Collections.Generic.Dictionary`2<UnityEngine.XR.ARSubsystems.TrackableId,TTrackable> UnityEngine.XR.ARFoundation.ARTrackableManager`5::m_Trackables
	Dictionary_2_t4D1D3AB1188A73B9F0416424BA9B873577C418FD* ___m_Trackables_9;
	// System.Collections.Generic.Dictionary`2<UnityEngine.XR.ARSubsystems.TrackableId,TTrackable> UnityEngine.XR.ARFoundation.ARTrackableManager`5::m_PendingAdds
	Dictionary_2_t4D1D3AB1188A73B9F0416424BA9B873577C418FD* ___m_PendingAdds_10;
};

// UnityEngine.XR.ARFoundation.ARTrackable`2<UnityEngine.XR.ARSubsystems.BoundedPlane,UnityEngine.XR.ARFoundation.ARPlane>
struct ARTrackable_2_t758FABA4E5998A283C2E8C792EE90E0FC3482341  : public ARTrackable_t1D98417758C08E98A333CDEC0C2C1688CE10B2E0
{
	// System.Boolean UnityEngine.XR.ARFoundation.ARTrackable`2::m_DestroyOnRemoval
	bool ___m_DestroyOnRemoval_4;
	// System.Boolean UnityEngine.XR.ARFoundation.ARTrackable`2::<pending>k__BackingField
	bool ___U3CpendingU3Ek__BackingField_5;
	// TSessionRelativeData UnityEngine.XR.ARFoundation.ARTrackable`2::<sessionRelativeData>k__BackingField
	BoundedPlane_tF51C315A8961EB42F0A1B60D47158646E5AF75CE ___U3CsessionRelativeDataU3Ek__BackingField_6;
};

// UnityEngine.XR.ARFoundation.ARTrackable`2<UnityEngine.XR.ARSubsystems.XRAnchor,UnityEngine.XR.ARFoundation.ARAnchor>
struct ARTrackable_2_tE57413318307EA1D5A47931CA675B32B49A1D79B  : public ARTrackable_t1D98417758C08E98A333CDEC0C2C1688CE10B2E0
{
	// System.Boolean UnityEngine.XR.ARFoundation.ARTrackable`2::m_DestroyOnRemoval
	bool ___m_DestroyOnRemoval_4;
	// System.Boolean UnityEngine.XR.ARFoundation.ARTrackable`2::<pending>k__BackingField
	bool ___U3CpendingU3Ek__BackingField_5;
	// TSessionRelativeData UnityEngine.XR.ARFoundation.ARTrackable`2::<sessionRelativeData>k__BackingField
	XRAnchor_tDD427E66CAA09DE7B058EA76223EF7DC3880FE82 ___U3CsessionRelativeDataU3Ek__BackingField_6;
};

// OpenCvSharp.BackgroundSubtractorGMG
struct BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D  : public BackgroundSubtractor_t1041DECAB76BA253B12C2AE840B600A35456C4E6
{
	// OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorGMG> OpenCvSharp.BackgroundSubtractorGMG::objectPtr
	Ptr_1_tD22569946308A3D2387E04238F3B86016A293509* ___objectPtr_7;
	// System.Boolean OpenCvSharp.BackgroundSubtractorGMG::disposed
	bool ___disposed_8;
};

// OpenCvSharp.BackgroundSubtractorMOG
struct BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4  : public BackgroundSubtractor_t1041DECAB76BA253B12C2AE840B600A35456C4E6
{
	// OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorMOG> OpenCvSharp.BackgroundSubtractorMOG::objectPtr
	Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11* ___objectPtr_7;
	// System.Boolean OpenCvSharp.BackgroundSubtractorMOG::disposed
	bool ___disposed_8;
};

// UnityEngine.UI.Graphic
struct Graphic_tCBFCA4585A19E2B75465AECFEAC43F4016BF7931  : public UIBehaviour_tB9D4295827BD2EEDEF0749200C6CA7090C742A9D
{
	// UnityEngine.Material UnityEngine.UI.Graphic::m_Material
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_Material_6;
	// UnityEngine.Color UnityEngine.UI.Graphic::m_Color
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___m_Color_7;
	// System.Boolean UnityEngine.UI.Graphic::m_SkipLayoutUpdate
	bool ___m_SkipLayoutUpdate_8;
	// System.Boolean UnityEngine.UI.Graphic::m_SkipMaterialUpdate
	bool ___m_SkipMaterialUpdate_9;
	// System.Boolean UnityEngine.UI.Graphic::m_RaycastTarget
	bool ___m_RaycastTarget_10;
	// System.Boolean UnityEngine.UI.Graphic::m_RaycastTargetCache
	bool ___m_RaycastTargetCache_11;
	// UnityEngine.Vector4 UnityEngine.UI.Graphic::m_RaycastPadding
	Vector4_t58B63D32F48C0DBF50DE2C60794C4676C80EDBE3 ___m_RaycastPadding_12;
	// UnityEngine.RectTransform UnityEngine.UI.Graphic::m_RectTransform
	RectTransform_t6C5DA5E41A89E0F488B001E45E58963480E543A5* ___m_RectTransform_13;
	// UnityEngine.CanvasRenderer UnityEngine.UI.Graphic::m_CanvasRenderer
	CanvasRenderer_tAB9A55A976C4E3B2B37D0CE5616E5685A8B43860* ___m_CanvasRenderer_14;
	// UnityEngine.Canvas UnityEngine.UI.Graphic::m_Canvas
	Canvas_t2DB4CEFDFF732884866C83F11ABF75F5AE8FFB26* ___m_Canvas_15;
	// System.Boolean UnityEngine.UI.Graphic::m_VertsDirty
	bool ___m_VertsDirty_16;
	// System.Boolean UnityEngine.UI.Graphic::m_MaterialDirty
	bool ___m_MaterialDirty_17;
	// UnityEngine.Events.UnityAction UnityEngine.UI.Graphic::m_OnDirtyLayoutCallback
	UnityAction_t11A1F3B953B365C072A5DCC32677EE1796A962A7* ___m_OnDirtyLayoutCallback_18;
	// UnityEngine.Events.UnityAction UnityEngine.UI.Graphic::m_OnDirtyVertsCallback
	UnityAction_t11A1F3B953B365C072A5DCC32677EE1796A962A7* ___m_OnDirtyVertsCallback_19;
	// UnityEngine.Events.UnityAction UnityEngine.UI.Graphic::m_OnDirtyMaterialCallback
	UnityAction_t11A1F3B953B365C072A5DCC32677EE1796A962A7* ___m_OnDirtyMaterialCallback_20;
	// UnityEngine.Mesh UnityEngine.UI.Graphic::m_CachedMesh
	Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ___m_CachedMesh_23;
	// UnityEngine.Vector2[] UnityEngine.UI.Graphic::m_CachedUvs
	Vector2U5BU5D_tFEBBC94BCC6C9C88277BA04047D2B3FDB6ED7FDA* ___m_CachedUvs_24;
	// UnityEngine.UI.CoroutineTween.TweenRunner`1<UnityEngine.UI.CoroutineTween.ColorTween> UnityEngine.UI.Graphic::m_ColorTweenRunner
	TweenRunner_1_t5BB0582F926E75E2FE795492679A6CF55A4B4BC4* ___m_ColorTweenRunner_25;
	// System.Boolean UnityEngine.UI.Graphic::<useLegacyMeshGeneration>k__BackingField
	bool ___U3CuseLegacyMeshGenerationU3Ek__BackingField_26;
};

// OpenCvSharp.StereoBM
struct StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B  : public StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA
{
	// System.Boolean OpenCvSharp.StereoBM::disposed
	bool ___disposed_7;
	// OpenCvSharp.Ptr`1<OpenCvSharp.StereoBM> OpenCvSharp.StereoBM::ptrObj
	Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC* ___ptrObj_8;
};

// OpenCvSharp.StereoSGBM
struct StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C  : public StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA
{
	// System.Boolean OpenCvSharp.StereoSGBM::disposed
	bool ___disposed_7;
	// OpenCvSharp.Ptr`1<OpenCvSharp.StereoSGBM> OpenCvSharp.StereoSGBM::ptrObj
	Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38* ___ptrObj_8;
};

// UnityEngine.XR.ARFoundation.ARAnchor
struct ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06  : public ARTrackable_2_tE57413318307EA1D5A47931CA675B32B49A1D79B
{
};

// UnityEngine.XR.ARFoundation.ARAnchorManager
struct ARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E  : public ARTrackableManager_5_t58BCDA2A5956989C6A20CC1E41B0F6DBEED545B6
{
	// UnityEngine.GameObject UnityEngine.XR.ARFoundation.ARAnchorManager::m_AnchorPrefab
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___m_AnchorPrefab_14;
	// System.Action`1<UnityEngine.XR.ARFoundation.ARAnchorsChangedEventArgs> UnityEngine.XR.ARFoundation.ARAnchorManager::anchorsChanged
	Action_1_t11340E5174173030E076A75316E18A395082F8A5* ___anchorsChanged_15;
};

// UnityEngine.XR.ARFoundation.ARPlane
struct ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0  : public ARTrackable_2_t758FABA4E5998A283C2E8C792EE90E0FC3482341
{
	// System.Single UnityEngine.XR.ARFoundation.ARPlane::m_VertexChangedThreshold
	float ___m_VertexChangedThreshold_7;
	// System.Action`1<UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs> UnityEngine.XR.ARFoundation.ARPlane::boundaryChanged
	Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074* ___boundaryChanged_8;
	// UnityEngine.XR.ARFoundation.ARPlane UnityEngine.XR.ARFoundation.ARPlane::<subsumedBy>k__BackingField
	ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* ___U3CsubsumedByU3Ek__BackingField_9;
	// Unity.Collections.NativeArray`1<UnityEngine.Vector2> UnityEngine.XR.ARFoundation.ARPlane::m_Boundary
	NativeArray_1_t0BB246A2F65C2C705F83BEBE1B62D9543C330B70 ___m_Boundary_10;
	// Unity.Collections.NativeArray`1<UnityEngine.Vector2> UnityEngine.XR.ARFoundation.ARPlane::m_OldBoundary
	NativeArray_1_t0BB246A2F65C2C705F83BEBE1B62D9543C330B70 ___m_OldBoundary_11;
	// System.Boolean UnityEngine.XR.ARFoundation.ARPlane::m_HasBoundaryChanged
	bool ___m_HasBoundaryChanged_12;
};

// UnityEngine.XR.ARFoundation.ARPlaneManager
struct ARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928  : public ARTrackableManager_5_t1F9F85442D84B92DE0BC4C518768C0154AB69103
{
	// UnityEngine.GameObject UnityEngine.XR.ARFoundation.ARPlaneManager::m_PlanePrefab
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___m_PlanePrefab_14;
	// UnityEngine.XR.ARSubsystems.PlaneDetectionMode UnityEngine.XR.ARFoundation.ARPlaneManager::m_DetectionMode
	int32_t ___m_DetectionMode_15;
	// System.Action`1<UnityEngine.XR.ARFoundation.ARPlanesChangedEventArgs> UnityEngine.XR.ARFoundation.ARPlaneManager::planesChanged
	Action_1_t009680BF19017ECA60753C7F605CBD85C56C6560* ___planesChanged_16;
};

// UnityEngine.XR.ARFoundation.ARRaycastManager
struct ARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44  : public ARTrackableManager_5_tB0551B87CFE2349D3C8AD77F1642F669F950A409
{
	// UnityEngine.GameObject UnityEngine.XR.ARFoundation.ARRaycastManager::m_RaycastPrefab
	GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___m_RaycastPrefab_14;
	// System.Func`4<UnityEngine.Vector2,UnityEngine.XR.ARSubsystems.TrackableType,Unity.Collections.Allocator,Unity.Collections.NativeArray`1<UnityEngine.XR.ARSubsystems.XRRaycastHit>> UnityEngine.XR.ARFoundation.ARRaycastManager::m_RaycastViewportDelegate
	Func_4_t0755A61145E99905AC47DF85416091FB30758B8A* ___m_RaycastViewportDelegate_17;
	// System.Func`4<UnityEngine.Ray,UnityEngine.XR.ARSubsystems.TrackableType,Unity.Collections.Allocator,Unity.Collections.NativeArray`1<UnityEngine.XR.ARSubsystems.XRRaycastHit>> UnityEngine.XR.ARFoundation.ARRaycastManager::m_RaycastRayDelegate
	Func_4_t917A5E0B468B7C0436CA84D065BEB6FC43C9B906* ___m_RaycastRayDelegate_18;
	// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.IRaycaster> UnityEngine.XR.ARFoundation.ARRaycastManager::m_Raycasters
	List_1_t50405350B03FC84D28784364F500CB08B82435B5* ___m_Raycasters_19;
};

// UnityEngine.UI.MaskableGraphic
struct MaskableGraphic_tFC5B6BE351C90DE53744DF2A70940242774B361E  : public Graphic_tCBFCA4585A19E2B75465AECFEAC43F4016BF7931
{
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_ShouldRecalculateStencil
	bool ___m_ShouldRecalculateStencil_27;
	// UnityEngine.Material UnityEngine.UI.MaskableGraphic::m_MaskMaterial
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___m_MaskMaterial_28;
	// UnityEngine.UI.RectMask2D UnityEngine.UI.MaskableGraphic::m_ParentMask
	RectMask2D_tACF92BE999C791A665BD1ADEABF5BCEB82846670* ___m_ParentMask_29;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_Maskable
	bool ___m_Maskable_30;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_IsMaskingGraphic
	bool ___m_IsMaskingGraphic_31;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_IncludeForMasking
	bool ___m_IncludeForMasking_32;
	// UnityEngine.UI.MaskableGraphic/CullStateChangedEvent UnityEngine.UI.MaskableGraphic::m_OnCullStateChanged
	CullStateChangedEvent_t6073CD0D951EC1256BF74B8F9107D68FC89B99B8* ___m_OnCullStateChanged_33;
	// System.Boolean UnityEngine.UI.MaskableGraphic::m_ShouldRecalculate
	bool ___m_ShouldRecalculate_34;
	// System.Int32 UnityEngine.UI.MaskableGraphic::m_StencilValue
	int32_t ___m_StencilValue_35;
	// UnityEngine.Vector3[] UnityEngine.UI.MaskableGraphic::m_Corners
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___m_Corners_36;
};

// UnityEngine.UI.RawImage
struct RawImage_tFF12F7DB574FBDC1863CF607C7A12A5D9F8D6179  : public MaskableGraphic_tFC5B6BE351C90DE53744DF2A70940242774B361E
{
	// UnityEngine.Texture UnityEngine.UI.RawImage::m_Texture
	Texture_t791CBB51219779964E0E8A2ED7C1AA5F92A4A700* ___m_Texture_37;
	// UnityEngine.Rect UnityEngine.UI.RawImage::m_UVRect
	Rect_tA04E0F8A1830E767F40FB27ECD8D309303571F0D ___m_UVRect_38;
};

// <Module>

// <Module>

// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARAnchor>
struct List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	ARAnchorU5BU5D_t589CB7678527B30DBFABED0E377BC500C9D3454A* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARAnchor>

// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycastHit>
struct List_1_t0754071572EFE7A5C92A59495D2524FC935364E3_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	ARRaycastHitU5BU5D_t34FE14E360F945895923A0FE69CC277E7D13027E* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycastHit>

// System.Collections.Generic.List`1<System.Object>
struct List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<System.Object>

// System.Collections.Generic.List`1<System.String>
struct List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<System.String>

// System.Collections.Generic.List`1<UnityEngine.Vector3>
struct List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B_StaticFields
{
	// T[] System.Collections.Generic.List`1::s_emptyArray
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* ___s_emptyArray_5;
};

// System.Collections.Generic.List`1<UnityEngine.Vector3>

// OpenCvSharp.Constants

// OpenCvSharp.Constants

// OpenCvSharp.HierarchyIndex

// OpenCvSharp.HierarchyIndex

// OpenCvSharp.MatProxy

// OpenCvSharp.MatProxy

// System.Reflection.MemberInfo

// System.Reflection.MemberInfo

// OpenCvSharp.NativeMethods
struct NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields
{
	// System.Boolean OpenCvSharp.NativeMethods::tried
	bool ___tried_0;
	// System.String[] OpenCvSharp.NativeMethods::RuntimeDllNames
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ___RuntimeDllNames_5;
	// System.String[] OpenCvSharp.NativeMethods::OpenCVDllNames
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* ___OpenCVDllNames_6;
	// OpenCvSharp.CvErrorCallback OpenCvSharp.NativeMethods::ErrorHandlerThrowException
	CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* ___ErrorHandlerThrowException_9;
	// OpenCvSharp.CvErrorCallback OpenCvSharp.NativeMethods::ErrorHandlerIgnorance
	CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* ___ErrorHandlerIgnorance_10;
	// OpenCvSharp.CvErrorCallback OpenCvSharp.NativeMethods::ErrorHandlerDefault
	CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* ___ErrorHandlerDefault_11;
};

// OpenCvSharp.NativeMethods

// System.OperatingSystem

// System.OperatingSystem

// System.String
struct String_t_StaticFields
{
	// System.String System.String::Empty
	String_t* ___Empty_6;
};

// System.String

// System.Text.StringBuilder

// System.Text.StringBuilder

// OpenCvSharp.Util.WindowsLibraryLoader
struct WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_StaticFields
{
	// OpenCvSharp.Util.WindowsLibraryLoader OpenCvSharp.Util.WindowsLibraryLoader::instance
	WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* ___instance_0;
};

// OpenCvSharp.Util.WindowsLibraryLoader

// OpenCvSharp.Cv2/<>c
struct U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D_StaticFields
{
	// OpenCvSharp.Cv2/<>c OpenCvSharp.Cv2/<>c::<>9
	U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* ___U3CU3E9_0;
	// OpenCvSharp.Util.Func`2<OpenCvSharp.Mat,OpenCvSharp.Vec3d> OpenCvSharp.Cv2/<>c::<>9__38_0
	Func_2_tAADBDE8BF83395E5778CA4F78B7E75A6A79A30C0* ___U3CU3E9__38_0_1;
	// OpenCvSharp.Util.Func`2<OpenCvSharp.Mat,OpenCvSharp.Vec3d> OpenCvSharp.Cv2/<>c::<>9__38_1
	Func_2_tAADBDE8BF83395E5778CA4F78B7E75A6A79A30C0* ___U3CU3E9__38_1_2;
	// OpenCvSharp.Util.Func`2<OpenCvSharp.DMatch[],System.Int32> OpenCvSharp.Cv2/<>c::<>9__227_0
	Func_2_t11AEBBE7586E8E012359A8E8016F05517F1601A4* ___U3CU3E9__227_0_3;
	// OpenCvSharp.Util.Func`2<System.Byte[],System.Int32> OpenCvSharp.Cv2/<>c::<>9__227_1
	Func_2_tEEF2968C54FE351F4C1BD8E2B735BA4ACBED483D* ___U3CU3E9__227_1_4;
	// OpenCvSharp.Util.Func`2<OpenCvSharp.Rangef,System.Single[]> OpenCvSharp.Cv2/<>c::<>9__321_0
	Func_2_t26EB3A27A4414D19234FA1ED64270ED766E221DB* ___U3CU3E9__321_0_5;
	// OpenCvSharp.Util.Func`2<OpenCvSharp.Rangef,System.Single[]> OpenCvSharp.Cv2/<>c::<>9__323_0
	Func_2_t26EB3A27A4414D19234FA1ED64270ED766E221DB* ___U3CU3E9__323_0_6;
	// OpenCvSharp.Util.Func`2<OpenCvSharp.Point[],System.Int32> OpenCvSharp.Cv2/<>c::<>9__423_0
	Func_2_t71EC06A5BC9A90610CC01B1AE7B4FF39F18500D4* ___U3CU3E9__423_0_7;
	// OpenCvSharp.Util.Func`2<OpenCvSharp.HierarchyIndex,OpenCvSharp.Vec4i> OpenCvSharp.Cv2/<>c::<>9__423_1
	Func_2_tFA115147C8997639BC21630246E7B2650E1F386F* ___U3CU3E9__423_1_8;
	// OpenCvSharp.Util.Func`2<OpenCvSharp.Mat,OpenCvSharp.InputArray> OpenCvSharp.Cv2/<>c::<>9__446_0
	Func_2_tBB78AFBE411FBB1B95B0874B873DD0B6199B062A* ___U3CU3E9__446_0_9;
	// OpenCvSharp.Util.Func`2<OpenCvSharp.Mat,OpenCvSharp.InputArray> OpenCvSharp.Cv2/<>c::<>9__448_0
	Func_2_tBB78AFBE411FBB1B95B0874B873DD0B6199B062A* ___U3CU3E9__448_0_10;
};

// OpenCvSharp.Cv2/<>c

// OpenCvSharp.NativeMethods/<>c
struct U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_StaticFields
{
	// OpenCvSharp.NativeMethods/<>c OpenCvSharp.NativeMethods/<>c::<>9
	U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* ___U3CU3E9_0;
};

// OpenCvSharp.NativeMethods/<>c

// System.Collections.Generic.List`1/Enumerator<UnityEngine.XR.ARFoundation.ARAnchor>

// System.Collections.Generic.List`1/Enumerator<UnityEngine.XR.ARFoundation.ARAnchor>

// System.Collections.Generic.List`1/Enumerator<System.Object>

// System.Collections.Generic.List`1/Enumerator<System.Object>

// UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs

// UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs

// System.Boolean
struct Boolean_t09A6377A54BE2F9E6985A8149F19234FD7DDFE22_StaticFields
{
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;
};

// System.Boolean

// System.Byte

// System.Byte

// UnityEngine.Color

// UnityEngine.Color

// OpenCvSharp.DMatch

// OpenCvSharp.DMatch

// System.Double

// System.Double

// System.Int16

// System.Int16

// System.Int32

// System.Int32

// System.Int64

// System.Int64

// System.IntPtr
struct IntPtr_t_StaticFields
{
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;
};

// System.IntPtr

// OpenCvSharp.ML.ParamGrid

// OpenCvSharp.ML.ParamGrid

// OpenCvSharp.Point

// OpenCvSharp.Point

// OpenCvSharp.Point2d

// OpenCvSharp.Point2d

// OpenCvSharp.Point2f

// OpenCvSharp.Point2f

// OpenCvSharp.Point3d

// OpenCvSharp.Point3d

// OpenCvSharp.Point3f

// OpenCvSharp.Point3f

// OpenCvSharp.Point3i

// OpenCvSharp.Point3i

// OpenCvSharp.Range

// OpenCvSharp.Range

// OpenCvSharp.Rangef

// OpenCvSharp.Rangef

// OpenCvSharp.Rect
struct Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A_StaticFields
{
	// OpenCvSharp.Rect OpenCvSharp.Rect::Empty
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___Empty_5;
};

// OpenCvSharp.Rect

// OpenCvSharp.Rect2d
struct Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133_StaticFields
{
	// OpenCvSharp.Rect2d OpenCvSharp.Rect2d::Empty
	Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133 ___Empty_5;
};

// OpenCvSharp.Rect2d

// System.SByte

// System.SByte

// OpenCvSharp.Scalar
struct Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3_StaticFields
{
	// System.Random OpenCvSharp.Scalar::random
	Random_t79716069EDE67D1D7734F60AE402D0CA3FB6B4C8* ___random_4;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::AliceBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___AliceBlue_5;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::AntiqueWhite
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___AntiqueWhite_6;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Aqua
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Aqua_7;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Aquamarine
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Aquamarine_8;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Azure
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Azure_9;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Beige
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Beige_10;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Bisque
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Bisque_11;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Black
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Black_12;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::BlanchedAlmond
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___BlanchedAlmond_13;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Blue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Blue_14;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::BlueViolet
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___BlueViolet_15;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Brown
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Brown_16;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::BurlyWood
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___BurlyWood_17;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::CadetBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___CadetBlue_18;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Chartreuse
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Chartreuse_19;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Chocolate
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Chocolate_20;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Coral
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Coral_21;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::CornflowerBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___CornflowerBlue_22;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Cornsilk
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Cornsilk_23;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Crimson
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Crimson_24;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Cyan
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Cyan_25;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkBlue_26;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkCyan
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkCyan_27;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkGoldenrod
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkGoldenrod_28;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkGray_29;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkGreen_30;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkKhaki
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkKhaki_31;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkMagenta
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkMagenta_32;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkOliveGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkOliveGreen_33;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkOrange
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkOrange_34;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkOrchid
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkOrchid_35;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkRed
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkRed_36;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkSalmon
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkSalmon_37;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkSeaGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkSeaGreen_38;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkSlateBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkSlateBlue_39;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkSlateGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkSlateGray_40;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkTurquoise
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkTurquoise_41;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DarkViolet
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DarkViolet_42;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DeepPink
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DeepPink_43;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DeepSkyBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DeepSkyBlue_44;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DimGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DimGray_45;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::DodgerBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___DodgerBlue_46;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Firebrick
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Firebrick_47;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::FloralWhite
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___FloralWhite_48;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::ForestGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___ForestGreen_49;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Fuchsia
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Fuchsia_50;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Gainsboro
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Gainsboro_51;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::GhostWhite
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___GhostWhite_52;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Gold
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Gold_53;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Goldenrod
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Goldenrod_54;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Gray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Gray_55;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Green
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Green_56;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::GreenYellow
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___GreenYellow_57;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Honeydew
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Honeydew_58;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::HotPink
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___HotPink_59;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::IndianRed
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___IndianRed_60;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Indigo
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Indigo_61;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Ivory
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Ivory_62;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Khaki
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Khaki_63;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Lavender
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Lavender_64;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LavenderBlush
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LavenderBlush_65;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LawnGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LawnGreen_66;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LemonChiffon
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LemonChiffon_67;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightBlue_68;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightCoral
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightCoral_69;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightCyan
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightCyan_70;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightGoldenrodYellow
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightGoldenrodYellow_71;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightGray_72;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightGreen_73;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightPink
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightPink_74;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightSalmon
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightSalmon_75;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightSeaGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightSeaGreen_76;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightSkyBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightSkyBlue_77;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightSlateGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightSlateGray_78;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightSteelBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightSteelBlue_79;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LightYellow
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LightYellow_80;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Lime
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Lime_81;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::LimeGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___LimeGreen_82;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Linen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Linen_83;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Magenta
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Magenta_84;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Maroon
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Maroon_85;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumAquamarine
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumAquamarine_86;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumBlue_87;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumOrchid
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumOrchid_88;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumPurple
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumPurple_89;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumSeaGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumSeaGreen_90;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumSlateBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumSlateBlue_91;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumSpringGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumSpringGreen_92;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumTurquoise
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumTurquoise_93;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MediumVioletRed
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MediumVioletRed_94;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MidnightBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MidnightBlue_95;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MintCream
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MintCream_96;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::MistyRose
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___MistyRose_97;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Moccasin
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Moccasin_98;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::NavajoWhite
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___NavajoWhite_99;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Navy
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Navy_100;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::OldLace
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___OldLace_101;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Olive
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Olive_102;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::OliveDrab
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___OliveDrab_103;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Orange
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Orange_104;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::OrangeRed
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___OrangeRed_105;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Orchid
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Orchid_106;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PaleGoldenrod
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PaleGoldenrod_107;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PaleGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PaleGreen_108;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PaleTurquoise
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PaleTurquoise_109;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PaleVioletRed
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PaleVioletRed_110;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PapayaWhip
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PapayaWhip_111;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PeachPuff
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PeachPuff_112;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Peru
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Peru_113;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Pink
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Pink_114;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Plum
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Plum_115;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::PowderBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___PowderBlue_116;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Purple
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Purple_117;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Red
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Red_118;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::RosyBrown
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___RosyBrown_119;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::RoyalBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___RoyalBlue_120;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SaddleBrown
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SaddleBrown_121;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Salmon
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Salmon_122;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SandyBrown
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SandyBrown_123;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SeaGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SeaGreen_124;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SeaShell
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SeaShell_125;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Sienna
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Sienna_126;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Silver
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Silver_127;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SkyBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SkyBlue_128;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SlateBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SlateBlue_129;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SlateGray
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SlateGray_130;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Snow
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Snow_131;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SpringGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SpringGreen_132;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::SteelBlue
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___SteelBlue_133;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Tan
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Tan_134;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Teal
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Teal_135;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Thistle
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Thistle_136;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Tomato
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Tomato_137;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Turquoise
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Turquoise_138;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Violet
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Violet_139;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Wheat
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Wheat_140;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::White
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___White_141;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::WhiteSmoke
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___WhiteSmoke_142;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::Yellow
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___Yellow_143;
	// OpenCvSharp.Scalar OpenCvSharp.Scalar::YellowGreen
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___YellowGreen_144;
};

// OpenCvSharp.Scalar

// System.Single

// System.Single

// OpenCvSharp.Size

// OpenCvSharp.Size

// OpenCvSharp.Size2f

// OpenCvSharp.Size2f

// System.IO.Stream
struct Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE_StaticFields
{
	// System.IO.Stream System.IO.Stream::Null
	Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE* ___Null_1;
};

// System.IO.Stream

// OpenCvSharp.TermCriteria

// OpenCvSharp.TermCriteria

// UnityEngine.XR.ARSubsystems.TrackableId
struct TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7_StaticFields
{
	// System.Text.RegularExpressions.Regex UnityEngine.XR.ARSubsystems.TrackableId::s_TrackableIdRegex
	Regex_tE773142C2BE45C5D362B0F815AFF831707A51772* ___s_TrackableIdRegex_0;
	// UnityEngine.XR.ARSubsystems.TrackableId UnityEngine.XR.ARSubsystems.TrackableId::s_InvalidId
	TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 ___s_InvalidId_1;
};

// UnityEngine.XR.ARSubsystems.TrackableId

// System.UInt16

// System.UInt16

// System.UInt32

// System.UInt32

// System.UInt64

// System.UInt64

// OpenCvSharp.Vec2b

// OpenCvSharp.Vec2b

// OpenCvSharp.Vec2d

// OpenCvSharp.Vec2d

// OpenCvSharp.Vec2f

// OpenCvSharp.Vec2f

// OpenCvSharp.Vec2i

// OpenCvSharp.Vec2i

// OpenCvSharp.Vec2s

// OpenCvSharp.Vec2s

// OpenCvSharp.Vec2w

// OpenCvSharp.Vec2w

// OpenCvSharp.Vec3b

// OpenCvSharp.Vec3b

// OpenCvSharp.Vec3d

// OpenCvSharp.Vec3d

// OpenCvSharp.Vec3f

// OpenCvSharp.Vec3f

// OpenCvSharp.Vec3i

// OpenCvSharp.Vec3i

// OpenCvSharp.Vec3s

// OpenCvSharp.Vec3s

// OpenCvSharp.Vec3w

// OpenCvSharp.Vec3w

// OpenCvSharp.Vec4b

// OpenCvSharp.Vec4b

// OpenCvSharp.Vec4d

// OpenCvSharp.Vec4d

// OpenCvSharp.Vec4f

// OpenCvSharp.Vec4f

// OpenCvSharp.Vec4i

// OpenCvSharp.Vec4i

// OpenCvSharp.Vec4s

// OpenCvSharp.Vec4s

// OpenCvSharp.Vec4w

// OpenCvSharp.Vec4w

// OpenCvSharp.Vec6b

// OpenCvSharp.Vec6b

// OpenCvSharp.Vec6d

// OpenCvSharp.Vec6d

// OpenCvSharp.Vec6f

// OpenCvSharp.Vec6f

// OpenCvSharp.Vec6i

// OpenCvSharp.Vec6i

// OpenCvSharp.Vec6s

// OpenCvSharp.Vec6s

// OpenCvSharp.Vec6w

// OpenCvSharp.Vec6w

// UnityEngine.Vector2
struct Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7_StaticFields
{
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___negativeInfinityVector_9;
};

// UnityEngine.Vector2

// UnityEngine.Vector3
struct Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_StaticFields
{
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___negativeInfinityVector_14;
};

// UnityEngine.Vector3

// System.Void

// System.Void

// OpenCvSharp.Moments/NativeStruct

// OpenCvSharp.Moments/NativeStruct

// OpenCvSharp.SimpleBlobDetector/WParams

// OpenCvSharp.SimpleBlobDetector/WParams

// OpenCvSharp.CvObject

// OpenCvSharp.CvObject

// System.Delegate

// System.Delegate

// System.Exception
struct Exception_t_StaticFields
{
	// System.Object System.Exception::s_EDILock
	RuntimeObject* ___s_EDILock_0;
};

// System.Exception

// System.Runtime.InteropServices.GCHandle

// System.Runtime.InteropServices.GCHandle

// OpenCvSharp.KeyPoint

// OpenCvSharp.KeyPoint

// System.IO.MemoryStream

// System.IO.MemoryStream

// UnityEngine.Object
struct Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_StaticFields
{
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;
};

// UnityEngine.Object

// UnityEngine.Pose
struct Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971_StaticFields
{
	// UnityEngine.Pose UnityEngine.Pose::k_Identity
	Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971 ___k_Identity_2;
};

// UnityEngine.Pose

// OpenCvSharp.RotatedRect

// OpenCvSharp.RotatedRect

// System.RuntimeTypeHandle

// System.RuntimeTypeHandle

// UnityEngine.Touch

// UnityEngine.Touch

// UnityEngine.Component

// UnityEngine.Component

// OpenCvSharp.DisposableObject

// OpenCvSharp.DisposableObject

// UnityEngine.GameObject

// UnityEngine.GameObject

// UnityEngine.Material

// UnityEngine.Material

// UnityEngine.Mesh

// UnityEngine.Mesh

// UnityEngine.Sprite

// UnityEngine.Sprite

// UnityEngine.Texture
struct Texture_t791CBB51219779964E0E8A2ED7C1AA5F92A4A700_StaticFields
{
	// System.Int32 UnityEngine.Texture::GenerateAllMips
	int32_t ___GenerateAllMips_4;
};

// UnityEngine.Texture

// System.Type
struct Type_t_StaticFields
{
	// System.Reflection.Binder modreq(System.Runtime.CompilerServices.IsVolatile) System.Type::s_defaultBinder
	Binder_t91BFCE95A7057FADF4D8A1A342AFE52872246235* ___s_defaultBinder_0;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_1;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t97234E1129B564EB38B8D85CAC2AD8B5B9522FFB* ___EmptyTypes_2;
	// System.Object System.Type::Missing
	RuntimeObject* ___Missing_3;
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553* ___FilterAttribute_4;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553* ___FilterName_5;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_tF644F1AE82F611B677CE1964D5A3277DDA21D553* ___FilterNameIgnoreCase_6;
};

// System.Type

// System.Action`1<UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs>

// System.Action`1<UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs>

// UnityEngine.XR.ARFoundation.ARRaycastHit

// UnityEngine.XR.ARFoundation.ARRaycastHit

// System.AsyncCallback

// System.AsyncCallback

// System.BadImageFormatException

// System.BadImageFormatException

// OpenCvSharp.CvErrorCallback

// OpenCvSharp.CvErrorCallback

// OpenCvSharp.CvMouseCallback

// OpenCvSharp.CvMouseCallback

// OpenCvSharp.CvTrackbarCallback

// OpenCvSharp.CvTrackbarCallback

// OpenCvSharp.CvTrackbarCallback2

// OpenCvSharp.CvTrackbarCallback2

// OpenCvSharp.CvTrackbarCallback2Native

// OpenCvSharp.CvTrackbarCallback2Native

// OpenCvSharp.DisposableCvObject

// OpenCvSharp.DisposableCvObject

// OpenCvSharp.MatForeachFunctionByte

// OpenCvSharp.MatForeachFunctionByte

// OpenCvSharp.MatForeachFunctionDouble

// OpenCvSharp.MatForeachFunctionDouble

// OpenCvSharp.MatForeachFunctionFloat

// OpenCvSharp.MatForeachFunctionFloat

// OpenCvSharp.MatForeachFunctionInt16

// OpenCvSharp.MatForeachFunctionInt16

// OpenCvSharp.MatForeachFunctionInt32

// OpenCvSharp.MatForeachFunctionInt32

// OpenCvSharp.MatForeachFunctionVec2b

// OpenCvSharp.MatForeachFunctionVec2b

// OpenCvSharp.MatForeachFunctionVec2d

// OpenCvSharp.MatForeachFunctionVec2d

// OpenCvSharp.MatForeachFunctionVec2f

// OpenCvSharp.MatForeachFunctionVec2f

// OpenCvSharp.MatForeachFunctionVec2i

// OpenCvSharp.MatForeachFunctionVec2i

// OpenCvSharp.MatForeachFunctionVec2s

// OpenCvSharp.MatForeachFunctionVec2s

// OpenCvSharp.MatForeachFunctionVec3b

// OpenCvSharp.MatForeachFunctionVec3b

// OpenCvSharp.MatForeachFunctionVec3d

// OpenCvSharp.MatForeachFunctionVec3d

// OpenCvSharp.MatForeachFunctionVec3f

// OpenCvSharp.MatForeachFunctionVec3f

// OpenCvSharp.MatForeachFunctionVec3i

// OpenCvSharp.MatForeachFunctionVec3i

// OpenCvSharp.MatForeachFunctionVec3s

// OpenCvSharp.MatForeachFunctionVec3s

// OpenCvSharp.MatForeachFunctionVec4b

// OpenCvSharp.MatForeachFunctionVec4b

// OpenCvSharp.MatForeachFunctionVec4d

// OpenCvSharp.MatForeachFunctionVec4d

// OpenCvSharp.MatForeachFunctionVec4f

// OpenCvSharp.MatForeachFunctionVec4f

// OpenCvSharp.MatForeachFunctionVec4i

// OpenCvSharp.MatForeachFunctionVec4i

// OpenCvSharp.MatForeachFunctionVec4s

// OpenCvSharp.MatForeachFunctionVec4s

// OpenCvSharp.MatForeachFunctionVec6b

// OpenCvSharp.MatForeachFunctionVec6b

// OpenCvSharp.MatForeachFunctionVec6d

// OpenCvSharp.MatForeachFunctionVec6d

// OpenCvSharp.MatForeachFunctionVec6f

// OpenCvSharp.MatForeachFunctionVec6f

// OpenCvSharp.MatForeachFunctionVec6i

// OpenCvSharp.MatForeachFunctionVec6i

// OpenCvSharp.MatForeachFunctionVec6s

// OpenCvSharp.MatForeachFunctionVec6s

// OpenCvSharp.OpenCVException

// OpenCvSharp.OpenCVException

// OpenCvSharp.OpenCvSharpException

// OpenCvSharp.OpenCvSharpException

// UnityEngine.Renderer

// UnityEngine.Renderer

// UnityEngine.Texture2D

// UnityEngine.Texture2D

// UnityEngine.Transform

// UnityEngine.Transform

// OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorGMG>

// OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorGMG>

// OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorMOG>

// OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorMOG>

// OpenCvSharp.Ptr`1<OpenCvSharp.StereoBM>

// OpenCvSharp.Ptr`1<OpenCvSharp.StereoBM>

// OpenCvSharp.Ptr`1<OpenCvSharp.StereoSGBM>

// OpenCvSharp.Ptr`1<OpenCvSharp.StereoSGBM>

// OpenCvSharp.Algorithm

// OpenCvSharp.Algorithm

// System.ArgumentNullException

// System.ArgumentNullException

// System.ArgumentOutOfRangeException

// System.ArgumentOutOfRangeException

// System.DllNotFoundException

// System.DllNotFoundException

// OpenCvSharp.FileNode

// OpenCvSharp.FileNode

// System.IO.FileNotFoundException

// System.IO.FileNotFoundException

// OpenCvSharp.FileStorage

// OpenCvSharp.FileStorage

// OpenCvSharp.InputArray

// OpenCvSharp.InputArray

// OpenCvSharp.Mat
struct Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE_StaticFields
{
	// System.Int32 OpenCvSharp.Mat::SizeOf
	int32_t ___SizeOf_8;
};

// OpenCvSharp.Mat

// UnityEngine.MeshRenderer

// UnityEngine.MeshRenderer

// UnityEngine.MonoBehaviour

// UnityEngine.MonoBehaviour

// System.ObjectDisposedException

// System.ObjectDisposedException

// OpenCvSharp.ShapePredictor

// OpenCvSharp.ShapePredictor

// OpenCvSharp.SparseMat
struct SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB_StaticFields
{
	// System.Int32 OpenCvSharp.SparseMat::SizeOf
	int32_t ___SizeOf_8;
};

// OpenCvSharp.SparseMat

// UnityEngine.SpriteRenderer

// UnityEngine.SpriteRenderer

// OpenCvSharp.VectorOfDMatch

// OpenCvSharp.VectorOfDMatch

// OpenCvSharp.VectorOfKeyPoint

// OpenCvSharp.VectorOfKeyPoint

// OpenCvSharp.VectorOfPoint

// OpenCvSharp.VectorOfPoint

// UnityEngine.XR.ARFoundation.ARCameraBackground
struct ARCameraBackground_t5E400069BEB27E2F5ECE553C3C23475FC80A1703_StaticFields
{
	// System.Int32 UnityEngine.XR.ARFoundation.ARCameraBackground::k_MainTexId
	int32_t ___k_MainTexId_7;
	// System.Int32 UnityEngine.XR.ARFoundation.ARCameraBackground::k_DisplayTransformId
	int32_t ___k_DisplayTransformId_8;
	// System.Int32 UnityEngine.XR.ARFoundation.ARCameraBackground::k_CameraForwardScaleId
	int32_t ___k_CameraForwardScaleId_9;
	// System.Action`1<System.Int32> UnityEngine.XR.ARFoundation.ARCameraBackground::s_BeforeBackgroundRenderHandler
	Action_1_tD69A6DC9FBE94131E52F5A73B2A9D4AB51EEC404* ___s_BeforeBackgroundRenderHandler_21;
	// System.IntPtr UnityEngine.XR.ARFoundation.ARCameraBackground::s_BeforeBackgroundRenderHandlerFuncPtr
	intptr_t ___s_BeforeBackgroundRenderHandlerFuncPtr_22;
	// UnityEngine.XR.ARSubsystems.XRCameraSubsystem UnityEngine.XR.ARFoundation.ARCameraBackground::s_CameraSubsystem
	XRCameraSubsystem_t1F15E4BAEF03223F63AB57E49D1B5DE06749D140* ___s_CameraSubsystem_23;
	// UnityEngine.Rendering.CameraEvent[] UnityEngine.XR.ARFoundation.ARCameraBackground::s_DefaultCameraEvents
	CameraEventU5BU5D_tCE64254E9E2B285C33AE3AA6C3D1E9AA3BE6CE1E* ___s_DefaultCameraEvents_24;
};

// UnityEngine.XR.ARFoundation.ARCameraBackground

// ARFeatheredPlaneMeshVisualizer
struct ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields
{
	// System.Collections.Generic.List`1<UnityEngine.Vector3> ARFeatheredPlaneMeshVisualizer::s_FeatheringUVs
	List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* ___s_FeatheringUVs_5;
	// System.Collections.Generic.List`1<UnityEngine.Vector3> ARFeatheredPlaneMeshVisualizer::s_Vertices
	List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* ___s_Vertices_6;
};

// ARFeatheredPlaneMeshVisualizer

// UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer

// UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer

// AnchorCreator
struct AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_StaticFields
{
	// System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycastHit> AnchorCreator::s_Hits
	List_1_t0754071572EFE7A5C92A59495D2524FC935364E3* ___s_Hits_5;
};

// AnchorCreator

// OpenCvSharp.BackgroundSubtractor

// OpenCvSharp.BackgroundSubtractor

// OpenCvSharp.CameraScenePassthrough

// OpenCvSharp.CameraScenePassthrough

// ChessBoard

// ChessBoard

// ImageToBackground

// ImageToBackground

// LobbyScript

// LobbyScript

// Piece

// Piece

// OpenCvSharp.StereoMatcher

// OpenCvSharp.StereoMatcher

// OpenCvSharp.BackgroundSubtractorGMG

// OpenCvSharp.BackgroundSubtractorGMG

// OpenCvSharp.BackgroundSubtractorMOG

// OpenCvSharp.BackgroundSubtractorMOG

// OpenCvSharp.StereoBM

// OpenCvSharp.StereoBM

// OpenCvSharp.StereoSGBM

// OpenCvSharp.StereoSGBM

// UnityEngine.XR.ARFoundation.ARAnchor

// UnityEngine.XR.ARFoundation.ARAnchor

// UnityEngine.XR.ARFoundation.ARAnchorManager

// UnityEngine.XR.ARFoundation.ARAnchorManager

// UnityEngine.XR.ARFoundation.ARPlane

// UnityEngine.XR.ARFoundation.ARPlane

// UnityEngine.XR.ARFoundation.ARPlaneManager

// UnityEngine.XR.ARFoundation.ARPlaneManager

// UnityEngine.XR.ARFoundation.ARRaycastManager
struct ARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44_StaticFields
{
	// System.Comparison`1<UnityEngine.XR.ARFoundation.ARRaycastHit> UnityEngine.XR.ARFoundation.ARRaycastManager::s_RaycastHitComparer
	Comparison_1_t0E0A9C99A8D29FBC5FA5ED9B9B2175A13C6578C0* ___s_RaycastHitComparer_15;
	// System.Collections.Generic.List`1<Unity.Collections.NativeArray`1<UnityEngine.XR.ARSubsystems.XRRaycastHit>> UnityEngine.XR.ARFoundation.ARRaycastManager::s_NativeRaycastHits
	List_1_t554F70DABEBFEED67B5400AB73777A6D987F0D36* ___s_NativeRaycastHits_16;
};

// UnityEngine.XR.ARFoundation.ARRaycastManager

// UnityEngine.UI.RawImage

// UnityEngine.UI.RawImage
#ifdef __clang__
#pragma clang diagnostic pop
#endif
// UnityEngine.GameObject[,]
struct GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E  : public RuntimeArray
{
	ALIGN_FIELD (8) GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* m_Items[1];

	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F** GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F** GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Int32[,]
struct Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F  : public RuntimeArray
{
	ALIGN_FIELD (8) int32_t m_Items[1];

	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
	inline int32_t GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, int32_t value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, int32_t value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// UnityEngine.MeshRenderer[,]
struct MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7  : public RuntimeArray
{
	ALIGN_FIELD (8) MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* m_Items[1];

	inline MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE** GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE** GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Byte[]
struct ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031  : public RuntimeArray
{
	ALIGN_FIELD (8) uint8_t m_Items[1];

	inline uint8_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint8_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint8_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint8_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint8_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint8_t value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point2d[]
struct Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485  : public RuntimeArray
{
	ALIGN_FIELD (8) Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C m_Items[1];

	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3f[]
struct Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 m_Items[1];

	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point2f[]
struct Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953  : public RuntimeArray
{
	ALIGN_FIELD (8) Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 m_Items[1];

	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		m_Items[index] = value;
	}
};
// System.Double[]
struct DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE  : public RuntimeArray
{
	ALIGN_FIELD (8) double m_Items[1];

	inline double GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline double* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, double value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline double GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline double* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, double value)
	{
		m_Items[index] = value;
	}
};
// System.IntPtr[]
struct IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832  : public RuntimeArray
{
	ALIGN_FIELD (8) intptr_t m_Items[1];

	inline intptr_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline intptr_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, intptr_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline intptr_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline intptr_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, intptr_t value)
	{
		m_Items[index] = value;
	}
};
// System.Int32[]
struct Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C  : public RuntimeArray
{
	ALIGN_FIELD (8) int32_t m_Items[1];

	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// System.Double[,]
struct DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE  : public RuntimeArray
{
	ALIGN_FIELD (8) double m_Items[1];

	inline double GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline double* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, double value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline double GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline double* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, double value)
	{
		m_Items[index] = value;
	}
	inline double GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline double* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, double value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline double GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline double* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, double value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec2f[]
struct Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E m_Items[1];

	inline Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec3f[]
struct Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 m_Items[1];

	inline Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec4f[]
struct Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 m_Items[1];

	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3d[]
struct Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC m_Items[1];

	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec4d[]
struct Vec4dU5BU5D_t4CD1D642D7FE8D7D780F5089E9047773F65F29E7  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D m_Items[1];

	inline Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Range[]
struct RangeU5BU5D_t7A815EED0DB267C51F9F6C0507B9579B68391756  : public RuntimeArray
{
	ALIGN_FIELD (8) Range_t981FA0C4141FE7585A1C292A250B431019099C09 m_Items[1];

	inline Range_t981FA0C4141FE7585A1C292A250B431019099C09 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Range_t981FA0C4141FE7585A1C292A250B431019099C09* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Range_t981FA0C4141FE7585A1C292A250B431019099C09 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Range_t981FA0C4141FE7585A1C292A250B431019099C09 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Range_t981FA0C4141FE7585A1C292A250B431019099C09* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Range_t981FA0C4141FE7585A1C292A250B431019099C09 value)
	{
		m_Items[index] = value;
	}
};
// System.Byte[,]
struct ByteU5BU2CU5D_tFF0F8305C018904B90DCD1740962BABBC458B638  : public RuntimeArray
{
	ALIGN_FIELD (8) uint8_t m_Items[1];

	inline uint8_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint8_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint8_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint8_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint8_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint8_t value)
	{
		m_Items[index] = value;
	}
	inline uint8_t GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline uint8_t* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, uint8_t value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline uint8_t GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline uint8_t* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, uint8_t value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// System.Int16[]
struct Int16U5BU5D_t8175CE8DD9C9F9FB0CF4F58E45BC570575B43CFB  : public RuntimeArray
{
	ALIGN_FIELD (8) int16_t m_Items[1];

	inline int16_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int16_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int16_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int16_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int16_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int16_t value)
	{
		m_Items[index] = value;
	}
};
// System.Int16[,]
struct Int16U5BU2CU5D_tA1085F28F76441E5B3C4F55200C853889884825E  : public RuntimeArray
{
	ALIGN_FIELD (8) int16_t m_Items[1];

	inline int16_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int16_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int16_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int16_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int16_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int16_t value)
	{
		m_Items[index] = value;
	}
	inline int16_t GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline int16_t* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, int16_t value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline int16_t GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline int16_t* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, int16_t value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// System.UInt16[]
struct UInt16U5BU5D_tEB7C42D811D999D2AA815BADC3FCCDD9C67B3F83  : public RuntimeArray
{
	ALIGN_FIELD (8) uint16_t m_Items[1];

	inline uint16_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint16_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint16_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint16_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint16_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint16_t value)
	{
		m_Items[index] = value;
	}
};
// System.UInt16[,]
struct UInt16U5BU2CU5D_t2C918D9FF94D8CF06CE395FB8C6B931FA8B8AE1B  : public RuntimeArray
{
	ALIGN_FIELD (8) uint16_t m_Items[1];

	inline uint16_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint16_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint16_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint16_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint16_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint16_t value)
	{
		m_Items[index] = value;
	}
	inline uint16_t GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline uint16_t* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, uint16_t value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline uint16_t GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline uint16_t* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, uint16_t value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// System.Single[]
struct SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C  : public RuntimeArray
{
	ALIGN_FIELD (8) float m_Items[1];

	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
};
// System.Single[,]
struct SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4  : public RuntimeArray
{
	ALIGN_FIELD (8) float m_Items[1];

	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
	inline float GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, float value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, float value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec3b[]
struct Vec3bU5BU5D_t65AD1F336D24EA9AD600B4A6CB27B3B517C138EE  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 m_Items[1];

	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec3b[,]
struct Vec3bU5BU2CU5D_tE90BFA4A10C08A985D030E3187325900CBF521B5  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 m_Items[1];

	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		m_Items[index] = value;
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec3d[]
struct Vec3dU5BU5D_t7F6500BD6738D9EF9379BBF49E20270DD8FE005E  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD m_Items[1];

	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec3d[,]
struct Vec3dU5BU2CU5D_t29CB373947AD17A0ECF7B4EEB20936B21D140804  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD m_Items[1];

	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		m_Items[index] = value;
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec4f[,]
struct Vec4fU5BU2CU5D_t54D8EA2F459F41BD179635792BF550EB3E317FDF  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 m_Items[1];

	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		m_Items[index] = value;
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec6f[]
struct Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E m_Items[1];

	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec6f[,]
struct Vec6fU5BU2CU5D_t7C67D2C5EDBC06D656BC54F1A2409DE9F3334AAE  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E m_Items[1];

	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		m_Items[index] = value;
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec4i[]
struct Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB m_Items[1];

	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Vec4i[,]
struct Vec4iU5BU2CU5D_t438C08E75365B75E4142B910325D19F21F4C6CD9  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB m_Items[1];

	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		m_Items[index] = value;
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point[]
struct PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B  : public RuntimeArray
{
	ALIGN_FIELD (8) Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC m_Items[1];

	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point[,]
struct PointU5BU2CU5D_t75336C640C8EF9A5D74131EF2FF56ADE1E04A0A3  : public RuntimeArray
{
	ALIGN_FIELD (8) Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC m_Items[1];

	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		m_Items[index] = value;
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point2f[,]
struct Point2fU5BU2CU5D_t534637B478C32FFC446C173967390F3A2A61FBEF  : public RuntimeArray
{
	ALIGN_FIELD (8) Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 m_Items[1];

	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		m_Items[index] = value;
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point2d[,]
struct Point2dU5BU2CU5D_t7484AAFF04C19494AB4D23D45BE7FB1371C8B4DE  : public RuntimeArray
{
	ALIGN_FIELD (8) Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C m_Items[1];

	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		m_Items[index] = value;
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3i[]
struct Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B m_Items[1];

	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3i[,]
struct Point3iU5BU2CU5D_t9D63D6246F01F8C00A5D07420A3EC8F43E7EB075  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B m_Items[1];

	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		m_Items[index] = value;
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3f[,]
struct Point3fU5BU2CU5D_t956F68C0D8D3E941181E3BDAA0CDF49861545B6C  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 m_Items[1];

	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		m_Items[index] = value;
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Point3d[,]
struct Point3dU5BU2CU5D_tF448DE8BEF99C9C7200AC09879C34D2B9BB16E43  : public RuntimeArray
{
	ALIGN_FIELD (8) Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC m_Items[1];

	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		m_Items[index] = value;
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.Rect[]
struct RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A  : public RuntimeArray
{
	ALIGN_FIELD (8) Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A m_Items[1];

	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.Rect[,]
struct RectU5BU2CU5D_t466728D2C4C1410891B29B2693FA0796C414CC2D  : public RuntimeArray
{
	ALIGN_FIELD (8) Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A m_Items[1];

	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		m_Items[index] = value;
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAt(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAt(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t i, il2cpp_array_size_t j, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		il2cpp_array_size_t iBound = bounds[0].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(i, iBound);
		il2cpp_array_size_t jBound = bounds[1].length;
		IL2CPP_ARRAY_BOUNDS_CHECK(j, jBound);

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A GetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j) const
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items[index];
	}
	inline Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* GetAddressAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t i, il2cpp_array_size_t j, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A value)
	{
		il2cpp_array_size_t jBound = bounds[1].length;

		il2cpp_array_size_t index = i * jBound + j;
		m_Items[index] = value;
	}
};
// OpenCvSharp.KeyPoint[]
struct KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17  : public RuntimeArray
{
	ALIGN_FIELD (8) KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA m_Items[1];

	inline KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA value)
	{
		m_Items[index] = value;
	}
};
// OpenCvSharp.DMatch[]
struct DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34  : public RuntimeArray
{
	ALIGN_FIELD (8) DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A m_Items[1];

	inline DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A value)
	{
		m_Items[index] = value;
	}
};
// System.String[]
struct StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248  : public RuntimeArray
{
	ALIGN_FIELD (8) String_t* m_Items[1];

	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// OpenCvSharp.Vec6d[]
struct Vec6dU5BU5D_tD00B137B3DBEF1DB6F17CA62572E730E9D27FE42  : public RuntimeArray
{
	ALIGN_FIELD (8) Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 m_Items[1];

	inline Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 value)
	{
		m_Items[index] = value;
	}
};
// System.Delegate[]
struct DelegateU5BU5D_tC5AB7E8F745616680F337909D3A8E6C722CDF771  : public RuntimeArray
{
	ALIGN_FIELD (8) Delegate_t* m_Items[1];

	inline Delegate_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Delegate_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Object[]
struct ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918  : public RuntimeArray
{
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// UnityEngine.Vector3[]
struct Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C  : public RuntimeArray
{
	ALIGN_FIELD (8) Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 m_Items[1];

	inline Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 value)
	{
		m_Items[index] = value;
	}
};


// System.Collections.Generic.List`1/Enumerator<T> System.Collections.Generic.List`1<System.Object>::GetEnumerator()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Enumerator_t9473BAB568A27E2339D48C1F91319E0F6D244D7A List_1_GetEnumerator_mD8294A7FA2BEB1929487127D476F8EC1CDC23BFC_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1/Enumerator<System.Object>::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Enumerator_Dispose_mD9DC3E3C3697830A4823047AB29A77DBBB5ED419_gshared (Enumerator_t9473BAB568A27E2339D48C1F91319E0F6D244D7A* __this, const RuntimeMethod* method) ;
// T System.Collections.Generic.List`1/Enumerator<System.Object>::get_Current()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR RuntimeObject* Enumerator_get_Current_m6330F15D18EE4F547C05DF9BF83C5EB710376027_gshared_inline (Enumerator_t9473BAB568A27E2339D48C1F91319E0F6D244D7A* __this, const RuntimeMethod* method) ;
// System.Boolean System.Collections.Generic.List`1/Enumerator<System.Object>::MoveNext()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Enumerator_MoveNext_mE921CC8F29FBBDE7CC3209A0ED0D921D58D00BCB_gshared (Enumerator_t9473BAB568A27E2339D48C1F91319E0F6D244D7A* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::Clear()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Clear_m16C1F2C61FED5955F10EB36BC1CB2DF34B128994_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, const RuntimeMethod* method) ;
// T UnityEngine.Component::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_m7F078BB342729BDF11327FD89D7872265328F690_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, const RuntimeMethod* method) ;
// T System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycastHit>::get_Item(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70 List_1_get_Item_m443F0D48247776D4257E06597AF794BCF6D8020F_gshared (List_1_t0754071572EFE7A5C92A59495D2524FC935364E3* __this, int32_t ___0_index, const RuntimeMethod* method) ;
// T UnityEngine.Object::Instantiate<System.Object>(T,UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* Object_Instantiate_TisRuntimeObject_m75BF3B0A3747B60491845FA41612FE7F795F0A59_gshared (RuntimeObject* ___0_original, Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___1_parent, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::Add(T)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, RuntimeObject* ___0_item, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycastHit>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_m6B5722DD0A8C0D3D4A1656C5A5E8D0A784DC85B9_gshared (List_1_t0754071572EFE7A5C92A59495D2524FC935364E3* __this, const RuntimeMethod* method) ;
// System.Void System.Action`1<UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs>::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Action_1__ctor_m83B9B49A5CEF71BC8798C9C8B7989333626CF3E1_gshared (Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::Clear()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Clear_m455780C5A45049F9BDC25EAD3BA10A681D16385D_gshared_inline (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, const RuntimeMethod* method) ;
// System.Int32 System.Collections.Generic.List`1<UnityEngine.Vector3>::get_Capacity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t List_1_get_Capacity_m1810FC505867C713DCDDD7468F8BA2BF1DF0D3B6_gshared (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::set_Capacity(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_set_Capacity_mF3F5104AB534524CF6D04659241FBD48C9080FFE_gshared (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, int32_t ___0_value, const RuntimeMethod* method) ;
// System.Int32 System.Collections.Generic.List`1<UnityEngine.Vector3>::get_Count()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m46EEFFA770BE665EA0CB3A5332E941DA4B3C1D37_gshared_inline (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, const RuntimeMethod* method) ;
// T System.Collections.Generic.List`1<UnityEngine.Vector3>::get_Item(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 List_1_get_Item_m8F2E15FC96DA75186C51228128A0660709E4E810_gshared (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, int32_t ___0_index, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::Add(T)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_m79E50C4F592B1703F4B76A8BE7B4855515460CA1_gshared_inline (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_item, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mC54E2BCBE43279A96FC082F5CDE2D76388BD8F9C_gshared (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::GetComponent<System.Object>()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* GameObject_GetComponent_TisRuntimeObject_m6EAED4AA356F0F48288F67899E5958792395563B_gshared (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method) ;
// TSource[] OpenCvSharp.Util.EnumerableEx::ToArray<System.Object>(System.Collections.Generic.IEnumerable`1<TSource>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* EnumerableEx_ToArray_TisRuntimeObject_mCEFDB01418495958F0B6C42711712088A2B27326_gshared (RuntimeObject* ___0_enumerable, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.Object>::.ctor(System.Collections.Generic.IEnumerable`1<T>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mE097DBD72433D1AFC11733F5678602603A756424_gshared (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, RuntimeObject* ___0_collection, const RuntimeMethod* method) ;
// T OpenCvSharp.Mat::Get<OpenCvSharp.Vec3d>(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD Mat_Get_TisVec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD_m3C678AC2069EB01F91569DA353351F87B75CC523_gshared (Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* __this, int32_t ___0_i0, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.Ptr`1<System.Object>::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Ptr_1__ctor_m15E28642C0D8C08EA631DCBFF9BF1D4B449A2DF4_gshared (Ptr_1_tF4CE47B9E9F464FDD6C62445FAF1D89228128255* __this, intptr_t ___0_ptr, const RuntimeMethod* method) ;

// System.Collections.Generic.List`1/Enumerator<T> System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARAnchor>::GetEnumerator()
inline Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054 List_1_GetEnumerator_mEE1B2EFD76218372C2F754E07BFDE6CA16244502 (List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53* __this, const RuntimeMethod* method)
{
	return ((  Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054 (*) (List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53*, const RuntimeMethod*))List_1_GetEnumerator_mD8294A7FA2BEB1929487127D476F8EC1CDC23BFC_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1/Enumerator<UnityEngine.XR.ARFoundation.ARAnchor>::Dispose()
inline void Enumerator_Dispose_m8A7D84A46E830A9A7C690AFD40780E721E0212D3 (Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054* __this, const RuntimeMethod* method)
{
	((  void (*) (Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054*, const RuntimeMethod*))Enumerator_Dispose_mD9DC3E3C3697830A4823047AB29A77DBBB5ED419_gshared)(__this, method);
}
// T System.Collections.Generic.List`1/Enumerator<UnityEngine.XR.ARFoundation.ARAnchor>::get_Current()
inline ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* Enumerator_get_Current_m765B5B047B9C59BB1A6DF6B8B884A1714DF83060_inline (Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054* __this, const RuntimeMethod* method)
{
	return ((  ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* (*) (Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054*, const RuntimeMethod*))Enumerator_get_Current_m6330F15D18EE4F547C05DF9BF83C5EB710376027_gshared_inline)(__this, method);
}
// System.Void UnityEngine.Object::Destroy(UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_Destroy_mE97D0A766419A81296E8D4E5C23D01D3FE91ACBB (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___0_obj, const RuntimeMethod* method) ;
// System.Boolean System.Collections.Generic.List`1/Enumerator<UnityEngine.XR.ARFoundation.ARAnchor>::MoveNext()
inline bool Enumerator_MoveNext_mE9F6469E9C52AF5A301EC8FEF983A3C5BFBF2C4F (Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054* __this, const RuntimeMethod* method)
{
	return ((  bool (*) (Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054*, const RuntimeMethod*))Enumerator_MoveNext_mE921CC8F29FBBDE7CC3209A0ED0D921D58D00BCB_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARAnchor>::Clear()
inline void List_1_Clear_m5FC367B31C239426FA8CCE3EEB6D76AA2684BCAC_inline (List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53*, const RuntimeMethod*))List_1_Clear_m16C1F2C61FED5955F10EB36BC1CB2DF34B128994_gshared_inline)(__this, method);
}
// T UnityEngine.Component::GetComponent<UnityEngine.XR.ARFoundation.ARRaycastManager>()
inline ARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44* Component_GetComponent_TisARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44_m255D1364D056A608CF5BB4AAB1BA1AD4CB78DE83 (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  ARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// T UnityEngine.Component::GetComponent<UnityEngine.XR.ARFoundation.ARAnchorManager>()
inline ARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E* Component_GetComponent_TisARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E_mABCA912A8D3AFCEEA2F2FE0EF30C541DA7DD7907 (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  ARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// T UnityEngine.Component::GetComponent<UnityEngine.XR.ARFoundation.ARPlaneManager>()
inline ARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928* Component_GetComponent_TisARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928_m668A6CC15F573ABC389E612A2423599B5ADDC2EF (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  ARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARAnchor>::.ctor()
inline void List_1__ctor_m97CA83C0EF5D88B61FDF3CE17A6A4A8677697DD4 (List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53*, const RuntimeMethod*))List_1__ctor_m7F078BB342729BDF11327FD89D7872265328F690_gshared)(__this, method);
}
// System.Int32 UnityEngine.Input::get_touchCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Input_get_touchCount_m057388BFC67A0F4CA53764B1022867ED81D01E39 (const RuntimeMethod* method) ;
// UnityEngine.Touch UnityEngine.Input::GetTouch(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Touch_t03E51455ED508492B3F278903A0114FA0E87B417 Input_GetTouch_m75D99FE801A94279874FA8DC6B6ADAD35F5123B1 (int32_t ___0_index, const RuntimeMethod* method) ;
// UnityEngine.TouchPhase UnityEngine.Touch::get_phase()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Touch_get_phase_mB82409FB2BE1C32ABDBA6A72E52A099D28AB70B0 (Touch_t03E51455ED508492B3F278903A0114FA0E87B417* __this, const RuntimeMethod* method) ;
// UnityEngine.Vector2 UnityEngine.Touch::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 Touch_get_position_m41B9EB0F3F3E1BE98CEB388253A9E31979CB964A (Touch_t03E51455ED508492B3F278903A0114FA0E87B417* __this, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.XR.ARFoundation.ARRaycastManager::Raycast(UnityEngine.Vector2,System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycastHit>,UnityEngine.XR.ARSubsystems.TrackableType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool ARRaycastManager_Raycast_mF56A1E2D7CBB61131E4D844ADA9D0CC1F6B53EAC (ARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44* __this, Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 ___0_screenPoint, List_1_t0754071572EFE7A5C92A59495D2524FC935364E3* ___1_hitResults, int32_t ___2_trackableTypes, const RuntimeMethod* method) ;
// T System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycastHit>::get_Item(System.Int32)
inline ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70 List_1_get_Item_m443F0D48247776D4257E06597AF794BCF6D8020F (List_1_t0754071572EFE7A5C92A59495D2524FC935364E3* __this, int32_t ___0_index, const RuntimeMethod* method)
{
	return ((  ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70 (*) (List_1_t0754071572EFE7A5C92A59495D2524FC935364E3*, int32_t, const RuntimeMethod*))List_1_get_Item_m443F0D48247776D4257E06597AF794BCF6D8020F_gshared)(__this, ___0_index, method);
}
// UnityEngine.Pose UnityEngine.XR.ARFoundation.ARRaycastHit::get_pose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971 ARRaycastHit_get_pose_m84C13E71E21FE12CBA9AAD98DC28B1E414C9EFFD (ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70* __this, const RuntimeMethod* method) ;
// UnityEngine.XR.ARSubsystems.TrackableId UnityEngine.XR.ARFoundation.ARRaycastHit::get_trackableId()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 ARRaycastHit_get_trackableId_m4E510F2C326AFF23086203E4241C8F9B293616C3 (ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70* __this, const RuntimeMethod* method) ;
// UnityEngine.XR.ARFoundation.ARPlane UnityEngine.XR.ARFoundation.ARPlaneManager::GetPlane(UnityEngine.XR.ARSubsystems.TrackableId)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* ARPlaneManager_GetPlane_m49FC33F6BC0DCFE67C4FC5F5CEE99CC8A7036FAE (ARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928* __this, TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 ___0_trackableId, const RuntimeMethod* method) ;
// UnityEngine.XR.ARFoundation.ARAnchor UnityEngine.XR.ARFoundation.ARAnchorManager::AttachAnchor(UnityEngine.XR.ARFoundation.ARPlane,UnityEngine.Pose)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* ARAnchorManager_AttachAnchor_m8FA6B772401F90B38A06F43B8EA1B02EA82FFA75 (ARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E* __this, ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* ___0_plane, Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971 ___1_pose, const RuntimeMethod* method) ;
// UnityEngine.Transform UnityEngine.Component::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371 (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// T UnityEngine.Object::Instantiate<UnityEngine.GameObject>(T,UnityEngine.Transform)
inline GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* Object_Instantiate_TisGameObject_t76FEDD663AB33C991A9C9A23129337651094216F_m58C654F1134533E29502629CA67645682B404811 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___0_original, Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___1_parent, const RuntimeMethod* method)
{
	return ((  GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1*, const RuntimeMethod*))Object_Instantiate_TisRuntimeObject_m75BF3B0A3747B60491845FA41612FE7F795F0A59_gshared)(___0_original, ___1_parent, method);
}
// System.Boolean UnityEngine.Object::op_Equality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Equality_mB6120F782D83091EF56A198FCEBCF066DB4A9605 (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___0_x, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___1_y, const RuntimeMethod* method) ;
// System.Void UnityEngine.Debug::Log(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB (RuntimeObject* ___0_message, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARAnchor>::Add(T)
inline void List_1_Add_m9DD96A685E24BAB041179C80B0CF8875AE04426A_inline (List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53* __this, ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* ___0_item, const RuntimeMethod* method)
{
	((  void (*) (List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53*, ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06*, const RuntimeMethod*))List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline)(__this, ___0_item, method);
}
// System.Void UnityEngine.MonoBehaviour::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E (MonoBehaviour_t532A11E69716D348D8AA7F854AFCBFCB8AD17F71* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.XR.ARFoundation.ARRaycastHit>::.ctor()
inline void List_1__ctor_m6B5722DD0A8C0D3D4A1656C5A5E8D0A784DC85B9 (List_1_t0754071572EFE7A5C92A59495D2524FC935364E3* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t0754071572EFE7A5C92A59495D2524FC935364E3*, const RuntimeMethod*))List_1__ctor_m6B5722DD0A8C0D3D4A1656C5A5E8D0A784DC85B9_gshared)(__this, method);
}
// T UnityEngine.Component::GetComponent<UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer>()
inline ARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F* Component_GetComponent_TisARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F_m41229EDC62D1149A73F81E7B0BE27B4C1C293A01 (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  ARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// T UnityEngine.Component::GetComponent<UnityEngine.MeshRenderer>()
inline MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* Component_GetComponent_TisMeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE_m0EDA0079FA3617687C4A28623B79A37D618D9CFB (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// UnityEngine.Material UnityEngine.Renderer::get_material()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* Renderer_get_material_m5BA2A00816C4CC66580D4B2E409CF10718C15656 (Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF* __this, const RuntimeMethod* method) ;
// T UnityEngine.Component::GetComponent<UnityEngine.XR.ARFoundation.ARPlane>()
inline ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* Component_GetComponent_TisARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0_m8005DAC7F65600404981B996A714B5C7D29A359F (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// System.Void System.Action`1<UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs>::.ctor(System.Object,System.IntPtr)
inline void Action_1__ctor_m83B9B49A5CEF71BC8798C9C8B7989333626CF3E1 (Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method)
{
	((  void (*) (Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074*, RuntimeObject*, intptr_t, const RuntimeMethod*))Action_1__ctor_m83B9B49A5CEF71BC8798C9C8B7989333626CF3E1_gshared)(__this, ___0_object, ___1_method, method);
}
// System.Void UnityEngine.XR.ARFoundation.ARPlane::add_boundaryChanged(System.Action`1<UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARPlane_add_boundaryChanged_m6A9CA2ADF4742C004EF7BCFD48A7C820320616AA (ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* __this, Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074* ___0_value, const RuntimeMethod* method) ;
// System.Void UnityEngine.XR.ARFoundation.ARPlane::remove_boundaryChanged(System.Action`1<UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARPlane_remove_boundaryChanged_m6F71EEF2CD3C71AF069C5FE6CD993906BD8A9A10 (ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* __this, Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074* ___0_value, const RuntimeMethod* method) ;
// UnityEngine.Mesh UnityEngine.XR.ARFoundation.ARPlaneMeshVisualizer::get_mesh()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ARPlaneMeshVisualizer_get_mesh_m6C1A730CECE8AE0A0549ED615AB3B3D66E4A0FD8_inline (ARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F* __this, const RuntimeMethod* method) ;
// System.Void ARFeatheredPlaneMeshVisualizer::GenerateBoundaryUVs(UnityEngine.Mesh)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARFeatheredPlaneMeshVisualizer_GenerateBoundaryUVs_mF756D3C1F7925A69CD8C7C8CCE56209AB321FEF5 (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ___0_mesh, const RuntimeMethod* method) ;
// System.Int32 UnityEngine.Mesh::get_vertexCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Mesh_get_vertexCount_mB7BE0340AAF272933068D830C8E711FC8978E12C (Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* __this, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::Clear()
inline void List_1_Clear_m455780C5A45049F9BDC25EAD3BA10A681D16385D_inline (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B*, const RuntimeMethod*))List_1_Clear_m455780C5A45049F9BDC25EAD3BA10A681D16385D_gshared_inline)(__this, method);
}
// System.Int32 System.Collections.Generic.List`1<UnityEngine.Vector3>::get_Capacity()
inline int32_t List_1_get_Capacity_m1810FC505867C713DCDDD7468F8BA2BF1DF0D3B6 (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B*, const RuntimeMethod*))List_1_get_Capacity_m1810FC505867C713DCDDD7468F8BA2BF1DF0D3B6_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::set_Capacity(System.Int32)
inline void List_1_set_Capacity_mF3F5104AB534524CF6D04659241FBD48C9080FFE (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, int32_t ___0_value, const RuntimeMethod* method)
{
	((  void (*) (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B*, int32_t, const RuntimeMethod*))List_1_set_Capacity_mF3F5104AB534524CF6D04659241FBD48C9080FFE_gshared)(__this, ___0_value, method);
}
// System.Void UnityEngine.Mesh::GetVertices(System.Collections.Generic.List`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Mesh_GetVertices_m5BF8777074E383AD8C4B9974D27E4AB52963D92E (Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* __this, List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* ___0_vertices, const RuntimeMethod* method) ;
// System.Int32 System.Collections.Generic.List`1<UnityEngine.Vector3>::get_Count()
inline int32_t List_1_get_Count_m46EEFFA770BE665EA0CB3A5332E941DA4B3C1D37_inline (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B*, const RuntimeMethod*))List_1_get_Count_m46EEFFA770BE665EA0CB3A5332E941DA4B3C1D37_gshared_inline)(__this, method);
}
// T System.Collections.Generic.List`1<UnityEngine.Vector3>::get_Item(System.Int32)
inline Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 List_1_get_Item_m8F2E15FC96DA75186C51228128A0660709E4E810 (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, int32_t ___0_index, const RuntimeMethod* method)
{
	return ((  Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 (*) (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B*, int32_t, const RuntimeMethod*))List_1_get_Item_m8F2E15FC96DA75186C51228128A0660709E4E810_gshared)(__this, ___0_index, method);
}
// System.Void UnityEngine.Vector3::.ctor(System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, float ___0_x, float ___1_y, float ___2_z, const RuntimeMethod* method) ;
// System.Single UnityEngine.Vector3::Distance(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Vector3_Distance_m2314DB9B8BD01157E013DF87BEA557375C7F9FF9_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_a, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___1_b, const RuntimeMethod* method) ;
// System.Single ARFeatheredPlaneMeshVisualizer::get_featheringWidth()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float ARFeatheredPlaneMeshVisualizer_get_featheringWidth_m14D3A8BE3E9A745E6FD525B19ADDC892B8399B4D_inline (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, const RuntimeMethod* method) ;
// System.Single UnityEngine.Mathf::Max(System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Max_mF5379E63D2BBAC76D090748695D833934F8AD051_inline (float ___0_a, float ___1_b, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::Add(T)
inline void List_1_Add_m79E50C4F592B1703F4B76A8BE7B4855515460CA1_inline (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_item, const RuntimeMethod* method)
{
	((  void (*) (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B*, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2, const RuntimeMethod*))List_1_Add_m79E50C4F592B1703F4B76A8BE7B4855515460CA1_gshared_inline)(__this, ___0_item, method);
}
// System.Void UnityEngine.Material::SetFloat(System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Material_SetFloat_m879CF81D740BAE6F23C9822400679F4D16365836 (Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* __this, String_t* ___0_name, float ___1_value, const RuntimeMethod* method) ;
// System.Void UnityEngine.Vector3::Set(System.Single,System.Single,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector3_Set_m1C7E543216734FB513F9CEBA44C50E6FC2AFD49D_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, float ___0_newX, float ___1_newY, float ___2_newZ, const RuntimeMethod* method) ;
// System.Void UnityEngine.Mesh::SetUVs(System.Int32,System.Collections.Generic.List`1<UnityEngine.Vector3>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Mesh_SetUVs_mFEE20B5977AA358DAFA31CF621BBC4B0247789B2 (Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* __this, int32_t ___0_channel, List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* ___1_uvs, const RuntimeMethod* method) ;
// System.Void UnityEngine.Mesh::UploadMeshData(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Mesh_UploadMeshData_mE4C94F263DAA8CAC1641FE137E1CE7D3F09396EB (Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* __this, bool ___0_markNoLongerReadable, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<UnityEngine.Vector3>::.ctor()
inline void List_1__ctor_mC54E2BCBE43279A96FC082F5CDE2D76388BD8F9C (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B*, const RuntimeMethod*))List_1__ctor_mC54E2BCBE43279A96FC082F5CDE2D76388BD8F9C_gshared)(__this, method);
}
// System.Void LobbyScript::NavigateTo(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, String_t* ___0_sceneName, const RuntimeMethod* method) ;
// System.Void LobbyScript::UnloadScene()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_UnloadScene_mAEE2CAEE5A3063F23887D6DA9DA57C7E10A37C3B (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.GameObject::SetActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GameObject_SetActive_m638E92E1E75E519E5B24CF150B08CA8E0CDFAB92 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, bool ___0_value, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.SceneManagement.SceneManager::UnloadScene(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SceneManager_UnloadScene_m741C54265CC598E066D4F9E6B78AD59AC5F1B66E (String_t* ___0_sceneName, const RuntimeMethod* method) ;
// System.Void UnityEngine.SceneManagement.SceneManager::LoadScene(System.String,UnityEngine.SceneManagement.LoadSceneMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SceneManager_LoadScene_m2841705C02C450E42A44B5EEE2A6A2C4261FA3AF (String_t* ___0_sceneName, int32_t ___1_mode, const RuntimeMethod* method) ;
// System.Void ChessBoard::CreateBoard()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChessBoard_CreateBoard_m1DB2242535EB6DB34AA8F4072836E983273ABA97 (ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191* __this, const RuntimeMethod* method) ;
// System.String ChessBoard::GetAllPiecePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* ChessBoard_GetAllPiecePositions_m23FC2A99F20F5301594AB0AE1AAA62E138A4E981 (ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191* __this, const RuntimeMethod* method) ;
// UnityEngine.GameObject UnityEngine.GameObject::CreatePrimitive(UnityEngine.PrimitiveType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* GameObject_CreatePrimitive_m13C0A691E679A83DD595913200A1DD9A906EB47B (int32_t ___0_type, const RuntimeMethod* method) ;
// UnityEngine.Transform UnityEngine.GameObject::get_transform()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::set_parent(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_parent_m9BD5E563B539DD5BEC342736B03F97B38A243234 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* ___0_value, const RuntimeMethod* method) ;
// UnityEngine.Vector3 ChessBoard::PositionFromCoord(System.Int32,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ChessBoard_PositionFromCoord_m83D0AF6AAEACC0BA9826317D93DCDE324D0B63B1 (ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191* __this, int32_t ___0_file, int32_t ___1_rank, float ___2_depth, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::set_position(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_value, const RuntimeMethod* method) ;
// UnityEngine.GameObject UnityEngine.Component::get_gameObject()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::GetComponent<UnityEngine.MeshRenderer>()
inline MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* GameObject_GetComponent_TisMeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE_m7FF948365C38BC39333D82B235A7C4EAD219960D (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_m6EAED4AA356F0F48288F67899E5958792395563B_gshared)(__this, method);
}
// System.Void UnityEngine.Renderer::set_material(UnityEngine.Material)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Renderer_set_material_m21E88977071E0A914D62F3D9CFF0193B3117C45A (Renderer_t320575F223BCB177A982E5DDB5DB19FAA89E7FBF* __this, Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ___0_value, const RuntimeMethod* method) ;
// System.Void UnityEngine.Material::set_color(UnityEngine.Color)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Material_set_color_m5C32DEBB215FF9EE35E7B575297D8C2F29CC2A2D (Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* __this, Color_tD001788D726C3A7F1379BEED0260B9591F440C1F ___0_value, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Transform::get_position()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::get_one()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline (const RuntimeMethod* method) ;
// UnityEngine.Vector3 UnityEngine.Vector3::op_Multiply(UnityEngine.Vector3,System.Single)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_a, float ___1_d, const RuntimeMethod* method) ;
// System.Void UnityEngine.Transform::set_localScale(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633 (Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_value, const RuntimeMethod* method) ;
// T UnityEngine.GameObject::GetComponent<Piece>()
inline Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772 (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* __this, const RuntimeMethod* method)
{
	return ((  Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* (*) (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*, const RuntimeMethod*))GameObject_GetComponent_TisRuntimeObject_m6EAED4AA356F0F48288F67899E5958792395563B_gshared)(__this, method);
}
// System.String System.Int32::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5 (int32_t* __this, const RuntimeMethod* method) ;
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m9E3155FB84015C823606188F53B47CB44C444991 (String_t* ___0_str0, String_t* ___1_str1, const RuntimeMethod* method) ;
// System.Boolean UnityEngine.Object::op_Inequality(UnityEngine.Object,UnityEngine.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602 (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___0_x, Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C* ___1_y, const RuntimeMethod* method) ;
// System.String System.String::Concat(System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m8855A6DE10F84DA7F4EC113CADDB59873A25573B (String_t* ___0_str0, String_t* ___1_str1, String_t* ___2_str2, const RuntimeMethod* method) ;
// System.Void UnityEngine.UI.RawImage::set_texture(UnityEngine.Texture)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void RawImage_set_texture_mC016318C95CC17A826D57DD219DBCB6DFD295C02 (RawImage_tFF12F7DB574FBDC1863CF607C7A12A5D9F8D6179* __this, Texture_t791CBB51219779964E0E8A2ED7C1AA5F92A4A700* ___0_value, const RuntimeMethod* method) ;
// UnityEngine.Material UnityEngine.XR.ARFoundation.ARCameraBackground::get_material()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* ARCameraBackground_get_material_mD444C30747216E7E7B5FF0F714EE0DF57CC93EC8 (ARCameraBackground_t5E400069BEB27E2F5ECE553C3C23475FC80A1703* __this, const RuntimeMethod* method) ;
// System.Void UnityEngine.Material::SetTexture(System.String,UnityEngine.Texture)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Material_SetTexture_m06083C3F52EF02FFB1177901D9907314F280F9A5 (Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* __this, String_t* ___0_name, Texture_t791CBB51219779964E0E8A2ED7C1AA5F92A4A700* ___1_value, const RuntimeMethod* method) ;
// T UnityEngine.Component::GetComponent<UnityEngine.SpriteRenderer>()
inline SpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B* Component_GetComponent_TisSpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B_m6181F10C09FC1650DAE0EF2308D344A2F170AA45 (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3* __this, const RuntimeMethod* method)
{
	return ((  SpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B* (*) (Component_t39FBE53E5EFCF4409111FB22C15FF73717632EC3*, const RuntimeMethod*))Component_GetComponent_TisRuntimeObject_m7181F81CAEC2CF53F5D2BC79B7425C16E1F80D33_gshared)(__this, method);
}
// System.Void UnityEngine.SpriteRenderer::set_sprite(UnityEngine.Sprite)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SpriteRenderer_set_sprite_m7B176E33955108C60CAE21DFC153A0FAC674CB53 (SpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B* __this, Sprite_tAFF74BC83CD68037494CB0B4F28CBDF8971CAB99* ___0_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.CvErrorCallback::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvErrorCallback__ctor_mFAA228DCA256624CAC949BDCEBE1027F94C57D44 (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) ;
// OpenCvSharp.Util.WindowsLibraryLoader OpenCvSharp.Util.WindowsLibraryLoader::get_Instance()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* WindowsLibraryLoader_get_Instance_m11C2C03E0669B2812F5A54BE2630DC036A41BBFD_inline (const RuntimeMethod* method) ;
// System.Collections.Generic.List`1<System.String> OpenCvSharp.Util.WindowsLibraryLoader::get_AdditionalPaths()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* WindowsLibraryLoader_get_AdditionalPaths_m3305759C5A1160F085A7B8E8842870B8D1E36E19_inline (WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::LoadLibraries(System.Collections.Generic.IEnumerable`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_LoadLibraries_m13273F98CC7A19457FDEB9DC147CAF9F074FDBC8 (RuntimeObject* ___0_additionalPaths, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::TryPInvoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_TryPInvoke_mFFF8E81F7A8BACC0028BE71C3F15443E415501BC (const RuntimeMethod* method) ;
// System.Boolean OpenCvSharp.NativeMethods::IsUnix()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_IsUnix_m055B37F48B586F5C2B0B448329A206BFC1327D72 (const RuntimeMethod* method) ;
// TSource[] OpenCvSharp.Util.EnumerableEx::ToArray<System.String>(System.Collections.Generic.IEnumerable`1<TSource>)
inline StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* EnumerableEx_ToArray_TisString_t_mCA90F3B45146DE88899CA1E3A6C69AE7D279AEDC (RuntimeObject* ___0_enumerable, const RuntimeMethod* method)
{
	return ((  StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* (*) (RuntimeObject*, const RuntimeMethod*))EnumerableEx_ToArray_TisRuntimeObject_mCEFDB01418495958F0B6C42711712088A2B27326_gshared)(___0_enumerable, method);
}
// System.Void System.Collections.Generic.List`1<System.String>::.ctor(System.Collections.Generic.IEnumerable`1<T>)
inline void List_1__ctor_m0BAB01B25B1D62E100CC97401B1A9972D6DEB6EC (List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* __this, RuntimeObject* ___0_collection, const RuntimeMethod* method)
{
	((  void (*) (List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD*, RuntimeObject*, const RuntimeMethod*))List_1__ctor_mE097DBD72433D1AFC11733F5678602603A756424_gshared)(__this, ___0_collection, method);
}
// System.String System.Environment::GetFolderPath(System.Environment/SpecialFolder)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Environment_GetFolderPath_m8D283450E7FCF2F2CAFFF157D599C3EBA212B58C (int32_t ___0_folder, const RuntimeMethod* method) ;
// System.Void System.Collections.Generic.List`1<System.String>::Add(T)
inline void List_1_Add_mF10DB1D3CBB0B14215F0E4F8AB4934A1955E5351_inline (List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* __this, String_t* ___0_item, const RuntimeMethod* method)
{
	((  void (*) (List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD*, String_t*, const RuntimeMethod*))List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline)(__this, ___0_item, method);
}
// System.Void OpenCvSharp.Util.WindowsLibraryLoader::LoadLibrary(System.String,System.Collections.Generic.IEnumerable`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void WindowsLibraryLoader_LoadLibrary_m05228C618D3CD3D6EB2D1763FFB1426103464FDA (WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* __this, String_t* ___0_dllName, RuntimeObject* ___1_additionalPaths, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::redirectError(OpenCvSharp.CvErrorCallback,System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_redirectError_mB9D0FD5DE6877218A0C72F29D9184A3C331E8412 (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* ___0_errCallback, intptr_t ___1_userdata, intptr_t* ___2_prevUserdata, const RuntimeMethod* method) ;
// System.Boolean System.IntPtr::op_Inequality(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool IntPtr_op_Inequality_m90EFC9C4CAD9A33E309F2DDF98EE4E1DD253637B (intptr_t ___0_value1, intptr_t ___1_value2, const RuntimeMethod* method) ;
// System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t* Type_GetTypeFromHandle_m6062B81682F79A4D6DF2640692EE6D9987858C57 (RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B ___0_handle, const RuntimeMethod* method) ;
// System.Delegate System.Runtime.InteropServices.Marshal::GetDelegateForFunctionPointer(System.IntPtr,System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t* Marshal_GetDelegateForFunctionPointer_mC8100D33A78463ADEEECC4D86AA17B5809FBB304 (intptr_t ___0_ptr, Type_t* ___1_t, const RuntimeMethod* method) ;
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_sizeof()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_sizeof_m1D86AFD8D85DAA5EE37ED46C693855D0A7770997 (const RuntimeMethod* method) ;
// OpenCvSharp.OpenCvSharpException OpenCvSharp.Util.PInvokeHelper::CreateException(System.Exception)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* PInvokeHelper_CreateException_mF9C1E5CE049D3E526D144EBAE7528097401108D1 (Exception_t* ___0_ex, const RuntimeMethod* method) ;
// System.Void System.Console::WriteLine(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Console_WriteLine_m77CEDA0C084428F0D6220988DA66992EC1925AEA (String_t* ___0_value, const RuntimeMethod* method) ;
// System.Exception System.Exception::get_InnerException()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Exception_t* Exception_get_InnerException_m0C1BDB339C786BA4DA7D2C1AD214571CFBBB1410_inline (Exception_t* __this, const RuntimeMethod* method) ;
// System.OperatingSystem System.Environment::get_OSVersion()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557* Environment_get_OSVersion_mDDD265F5864A2086664CAE56D7C4B59E9A50AF66 (const RuntimeMethod* method) ;
// System.PlatformID System.OperatingSystem::get_Platform()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t OperatingSystem_get_Platform_m01AF3D6217E4031C3AA824481BBE9E2933347E26_inline (OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557* __this, const RuntimeMethod* method) ;
// System.Boolean System.Type::op_Inequality(System.Type,System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Type_op_Inequality_m83209C7BB3C05DFBEA3B6199B0BEFE8037301172 (Type_t* ___0_left, Type_t* ___1_right, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods/<>c::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CU3Ec__ctor_m08282DEC2D5496A0AC2F427D08A5A5E4A5A4E265 (U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* __this, const RuntimeMethod* method) ;
// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2 (RuntimeObject* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.OpenCVException::.ctor(OpenCvSharp.ErrorCode,System.String,System.String,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void OpenCVException__ctor_m1B56B7220EA2702D2C3A4C72EDEF87652D591E24 (OpenCVException_tE58DF4848C655F3CB2CFE810F36B55EDC7A8B01A* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableCvObject::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableCvObject__ctor_m05A31FCADC967DF10B188DE00FFF3694F95C995F (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::dlib_shapePredictor_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_dlib_shapePredictor_new_mC96102500A262780D91C905CEB389E60CDABE102 (const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableCvObject::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableCvObject_Dispose_mCA9D565F6EDDDFAAFEA0D38A92CEE3F7BD207A30 (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, bool ___0_disposing, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::dlib_shapePredictor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_dlib_shapePredictor_delete_m656579F232C5FB0BFD6E1DD670A1E9908DFD23DC (intptr_t ___0_instance, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::dlib_shapePredictor_loadData(System.IntPtr,System.Byte[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_dlib_shapePredictor_loadData_m77AD192A1F5680E519ED565788EFB3D4A10E9370 (intptr_t ___0_predictor, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___1_data, int32_t ___2_dataSize, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.DisposableCvObject::get_CvPtr()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02 (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, const RuntimeMethod* method) ;
// System.Boolean OpenCvSharp.NativeMethods::dlib_shapePredictor_detectLandmarks(System.IntPtr,System.IntPtr,OpenCvSharp.Rect,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_dlib_shapePredictor_detectLandmarks_mC09E86EADDEDC8D5450A93B6A3842E842E281463 (intptr_t ___0_predictor, intptr_t ___1_image, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___2_roi, intptr_t* ___3_landmarks, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.VectorOfPoint::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VectorOfPoint__ctor_mEB8FAB6E418A1037F2D59A233DF44A386DDD56F9 (VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636* __this, intptr_t ___0_ptr, const RuntimeMethod* method) ;
// OpenCvSharp.Point[] OpenCvSharp.VectorOfPoint::ToArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* VectorOfPoint_ToArray_mEC4FF6862D7A078D3FBD666544A2C2172F408CB7 (VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.Cv2/<>c::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CU3Ec__ctor_mB62F99C73962FFD773E386D65C3FD94D65C4F693 (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, const RuntimeMethod* method) ;
// T OpenCvSharp.Mat::Get<OpenCvSharp.Vec3d>(System.Int32)
inline Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD Mat_Get_TisVec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD_m3C678AC2069EB01F91569DA353351F87B75CC523 (Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* __this, int32_t ___0_i0, const RuntimeMethod* method)
{
	return ((  Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD (*) (Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE*, int32_t, const RuntimeMethod*))Mat_Get_TisVec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD_m3C678AC2069EB01F91569DA353351F87B75CC523_gshared)(__this, ___0_i0, method);
}
// OpenCvSharp.Vec4i OpenCvSharp.HierarchyIndex::ToVec4i()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB HierarchyIndex_ToVec4i_m752BCBE366C9535DBFB46D31609EF6ACA2EC1A4F (HierarchyIndex_t9900FD90BA1ECED471DD979EE00CB097A9BA49D0* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.InputArray::.ctor(OpenCvSharp.Mat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void InputArray__ctor_m78E7DEED61A6BC284FA755FCCF7F43AC3181D5D0 (InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F* __this, Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___0_mat, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableCvObject::.ctor(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableCvObject__ctor_m41887DAB638C665CF365855F8C3D82E9336DC9E1 (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, bool ___0_isEnabledDispose, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableCvObject::.ctor(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableCvObject__ctor_mC31F76092B568A6963897A966AEF1DAF527CE716 (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, intptr_t ___0_ptr, bool ___1_isEnabledDispose, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableObject::.ctor(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject__ctor_m36FD2664A3D1B6AA9663FC911CCC25FC01792138 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, bool ___0_isEnabledDispose, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableObject::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_Dispose_m6D7DA763F8714523AA45C02F531467F1CCE1C224 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, bool ___0_disposing, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableObject::ThrowIfDisposed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_ThrowIfDisposed_mA5F51D2CAF32F7920CB1138EC3EC17B47BF25E7A (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableObject::set_IsDisposed(System.Boolean)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void DisposableObject_set_IsDisposed_mA0005D0FD1A0BB5E8DA844657B2E152A8ECE3ADC_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, bool ___0_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableObject::set_IsEnabledDispose(System.Boolean)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void DisposableObject_set_IsEnabledDispose_mB886867456A19E213A63A8707821F084F869C9DF_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, bool ___0_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableObject::set_AllocatedMemory(System.IntPtr)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void DisposableObject_set_AllocatedMemory_mC4FA83EBA3AC845682C433724E5BE2BE7F99204F_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, intptr_t ___0_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableObject::set_AllocatedMemorySize(System.Int64)
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void DisposableObject_set_AllocatedMemorySize_m7C716591244CD0B57AD7ACF322F30628E0C3736B_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, int64_t ___0_value, const RuntimeMethod* method) ;
// System.Void System.GC::SuppressFinalize(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GC_SuppressFinalize_m71815DBD5A0CD2EA1BE43317B08B7A14949EDC65 (RuntimeObject* ___0_obj, const RuntimeMethod* method) ;
// System.Boolean OpenCvSharp.DisposableObject::get_IsDisposed()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool DisposableObject_get_IsDisposed_mF81D363015F20AD14CEE607DC64317A7FDCB3C5E_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) ;
// System.Boolean System.Runtime.InteropServices.GCHandle::get_IsAllocated()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool GCHandle_get_IsAllocated_m241908103D8D867E11CCAB73C918729825E86843 (GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC* __this, const RuntimeMethod* method) ;
// System.Void System.Runtime.InteropServices.GCHandle::Free()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GCHandle_Free_m1320A260E487EB1EA6D95F9E54BFFCB5A4EF83A3 (GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC* __this, const RuntimeMethod* method) ;
// System.Int64 OpenCvSharp.DisposableObject::get_AllocatedMemorySize()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int64_t DisposableObject_get_AllocatedMemorySize_m89AE6049FB8157D330B952DCED0D83015BDF2784_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) ;
// System.Void System.GC::RemoveMemoryPressure(System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GC_RemoveMemoryPressure_m3EE41BF97E0111CE4A622AD1405D80AB2A13E9C9 (int64_t ___0_bytesAllocated, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.DisposableObject::get_AllocatedMemory()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR intptr_t DisposableObject_get_AllocatedMemory_m3EB0D007AFC7D603BD7EB8047B3722AD3F5AFCB5_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) ;
// System.Void System.Runtime.InteropServices.Marshal::FreeHGlobal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Marshal_FreeHGlobal_m298EF0650E82E326EDA8048488DC384BB9171EB9 (intptr_t ___0_hglobal, const RuntimeMethod* method) ;
// System.Void System.Object::Finalize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object_Finalize_mC98C96301CCABFE00F1A7EF8E15DF507CACD42B2 (RuntimeObject* __this, const RuntimeMethod* method) ;
// System.Void System.ArgumentNullException::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* __this, String_t* ___0_paramName, const RuntimeMethod* method) ;
// System.Runtime.InteropServices.GCHandle System.Runtime.InteropServices.GCHandle::Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC GCHandle_Alloc_m3BFD398427352FC756FFE078F01A504B681352EC (RuntimeObject* ___0_value, int32_t ___1_type, const RuntimeMethod* method) ;
// System.Void System.ArgumentOutOfRangeException::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ArgumentOutOfRangeException__ctor_mBC1D5DEEA1BA41DE77228CB27D6BAFEB6DCCBF4A (ArgumentOutOfRangeException_tEA2822DAF62B10EEED00E0E3A341D4BAF78CF85F* __this, String_t* ___0_paramName, const RuntimeMethod* method) ;
// System.IntPtr System.Runtime.InteropServices.Marshal::AllocHGlobal(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t Marshal_AllocHGlobal_mE1D700DF967E28BE8AB3E0D67C81A96B4FCC8F4F (int32_t ___0_cb, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.DisposableObject::NotifyMemoryPressure(System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_NotifyMemoryPressure_mC00A1BF0C19CA5A3F25C036C04FF993CDBF23692 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, int64_t ___0_size, const RuntimeMethod* method) ;
// System.Boolean OpenCvSharp.DisposableObject::get_IsEnabledDispose()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool DisposableObject_get_IsEnabledDispose_mFCE8D52E214E0DB33641495A16EB7A1131EA3CF4_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) ;
// System.Void System.GC::AddMemoryPressure(System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void GC_AddMemoryPressure_m6B1B48F81C8FB61E1E5E838BCAC7B91DFBAA690F (int64_t ___0_bytesAllocated, const RuntimeMethod* method) ;
// System.Type System.Object::GetType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t* Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3 (RuntimeObject* __this, const RuntimeMethod* method) ;
// System.Void System.ObjectDisposedException::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48 (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* __this, String_t* ___0_objectName, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.Mat::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Mat__ctor_m0A8F1AFED1627CE035E6F7239B618819CEDFDA2A (Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.Cv2::ConvertImage(OpenCvSharp.Mat,OpenCvSharp.Mat,OpenCvSharp.ConvertImageModes)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Cv2_ConvertImage_mBF93C206A75E82A888A031E4D32884DDABD1F7B4 (Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___0_src, Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___1_dst, int32_t ___2_flags, const RuntimeMethod* method) ;
// System.Byte[] OpenCvSharp.Mat::ToBytes(System.String,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* Mat_ToBytes_m840E137FAC14517B4E1358AD173FAD2B152B591B (Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* __this, String_t* ___0_ext, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_prms, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.MatProxy::set_ImageData(System.Byte[])
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void MatProxy_set_ImageData_m5EC27313F53BC18F0CA955F5E1852304963D700F_inline (MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8* __this, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_value, const RuntimeMethod* method) ;
// System.Byte[] OpenCvSharp.MatProxy::get_ImageData()
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* MatProxy_get_ImageData_m6CEDD6EEA6CA151909D5849120B047B3462CC049_inline (MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8* __this, const RuntimeMethod* method) ;
// System.Void System.Exception::.ctor(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Exception__ctor_m9B2BD92CD68916245A75109105D9071C9D430E7F (Exception_t* __this, String_t* ___0_message, const RuntimeMethod* method) ;
// System.Void System.IO.MemoryStream::.ctor(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MemoryStream__ctor_m662CA0D5A0004A2E3B475FE8DCD687B654870AA2 (MemoryStream_tAAED1B42172E3390584E4194308AB878E786AAC2* __this, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_buffer, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::bgsegm_createBackgroundSubtractorGMG(System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_bgsegm_createBackgroundSubtractorGMG_mF432F351B79FE09B1258E2104B8ABD13D3D026A4 (int32_t ___0_initializationFrames, double ___1_decisionThreshold, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.BackgroundSubtractorGMG::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG__ctor_m2E977A400EA93798FDBC07DBB44B14A65EC7A715 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.BackgroundSubtractor::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractor__ctor_m20DDAC97675BA2270B2167508E2FCF87971D8FC6 (BackgroundSubtractor_t1041DECAB76BA253B12C2AE840B600A35456C4E6* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorGMG>::.ctor(System.IntPtr)
inline void Ptr_1__ctor_m94746AB5A3C199F0AE82A73D9E5F88086A5CB590 (Ptr_1_tD22569946308A3D2387E04238F3B86016A293509* __this, intptr_t ___0_ptr, const RuntimeMethod* method)
{
	((  void (*) (Ptr_1_tD22569946308A3D2387E04238F3B86016A293509*, intptr_t, const RuntimeMethod*))Ptr_1__ctor_m15E28642C0D8C08EA631DCBFF9BF1D4B449A2DF4_gshared)(__this, ___0_ptr, method);
}
// System.Void OpenCvSharp.DisposableObject::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_Dispose_m623521DB9F2CD39AE5FE628B6117275CDB50E549 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getMaxFeatures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getMaxFeatures_m63031B6F8BFF6B336D818C73E91AF7C82389CA10 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setMaxFeatures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setMaxFeatures_mE92697EB6FA5437261686004FC463560219051AD (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate_m95F77F961FE0AE58489245DEC13B1C3C728EF291 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate_mB6E704F9952A759E8E638CC0AD3075FA2EAEB9EA (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getNumFrames(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getNumFrames_mB9A3DA5E136B56B8EFB003011E7063A60DCE182B (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setNumFrames(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setNumFrames_mBAD4A9731C20B815A4C86C665E06970EF89A0ED5 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getQuantizationLevels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getQuantizationLevels_m0823D53B6EF140AE877F3ECCCB554C8EE276E19B (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setQuantizationLevels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setQuantizationLevels_m4A58F3E6E9E8FB71C4E85C8DB1EF32FBB8C03FAC (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getBackgroundPrior(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getBackgroundPrior_m6FE9207319E4987D2A53E8DBA43352C6A4E00113 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setBackgroundPrior(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setBackgroundPrior_mC73830E4C6E8F313D1FF1F081218130152D60DD7 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getSmoothingRadius(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getSmoothingRadius_m16EC6C8B1A3ABE4C04D5F12A710657C576B23EC6 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setSmoothingRadius(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setSmoothingRadius_m7B8FABC59AE7D0AC74BB3918A88416D9830AEB23 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getDecisionThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getDecisionThreshold_m1B96DA81D16DF56BA910794082292B6BD58C0046 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setDecisionThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setDecisionThreshold_m366B56BF98AF9D1CD4388B2FBF4CA5CC16785EC8 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel_mEBAA9845C8708FA80C2F49E25A0CA5E0BACA68B4 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel_mE56C5210272F81D26F816669693CEE4E9CCC78FD (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getMinVal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getMinVal_m9195EF9CFA1FC0F810AF57496BFB926FF0C4D2EF (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setMinVal(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setMinVal_m3A2E7BE1F2FE252A0FE9975AEB0BC1369359258A (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) ;
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getMaxVal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getMaxVal_m3509211EE923D69AA64CFC52C62AA5AB66B5111F (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setMaxVal(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setMaxVal_m043335F79D117FC4FD6C723B6270318F7138336E (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::bgsegm_createBackgroundSubtractorMOG(System.Int32,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_bgsegm_createBackgroundSubtractorMOG_mD3553F98D1E5A47B37CD66559B1778B7B3C5BB59 (int32_t ___0_history, int32_t ___1_nmixtures, double ___2_backgroundRatio, double ___3_noiseSigma, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.BackgroundSubtractorMOG::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorMOG__ctor_m66BA59EF54638D065F26C6BBD170D3879F6923D8 (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorMOG>::.ctor(System.IntPtr)
inline void Ptr_1__ctor_m2AC43EFDA6E3C373C60786FB540BD967B27A7609 (Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11* __this, intptr_t ___0_ptr, const RuntimeMethod* method)
{
	((  void (*) (Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11*, intptr_t, const RuntimeMethod*))Ptr_1__ctor_m15E28642C0D8C08EA631DCBFF9BF1D4B449A2DF4_gshared)(__this, ___0_ptr, method);
}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getHistory(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorMOG_getHistory_m8AA1E6DB10A83CC0719AA7AC632C4CF8B2543F57 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setHistory(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setHistory_m1DA569899B88FCDA4E60F162D6BD06E75DA2AF7B (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getNMixtures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorMOG_getNMixtures_m2CBE8EB0AC47783366B9357DF58E5A35C2470283 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setNMixtures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setNMixtures_m78C266C7069D991ED9F971893B50B4F4BF1B4079 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getBackgroundRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorMOG_getBackgroundRatio_m67A9216C0A2B8D8C365D54EB7DD2B342BDF568E5 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setBackgroundRatio(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setBackgroundRatio_m1C3811C253AF6CFCE59C524CA4E82EF06A3D9D75 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) ;
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getNoiseSigma(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorMOG_getNoiseSigma_mABF73CF4BBB4508A17CFC2849F5AFE5AD4094A61 (intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setNoiseSigma(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setNoiseSigma_mC981AD991B0EB1C9B2250AEC88D01914F9CE41BA (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.StereoMatcher::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoMatcher__ctor_mD33CF57EDED0608F5245EBFCA32F060BFB16C46B (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.Ptr`1<OpenCvSharp.StereoBM>::.ctor(System.IntPtr)
inline void Ptr_1__ctor_m915520204369BC56040F82EA9DFE8301242526EE (Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC* __this, intptr_t ___0_ptr, const RuntimeMethod* method)
{
	((  void (*) (Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC*, intptr_t, const RuntimeMethod*))Ptr_1__ctor_m15E28642C0D8C08EA631DCBFF9BF1D4B449A2DF4_gshared)(__this, ___0_ptr, method);
}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_StereoBM_create(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_StereoBM_create_mA21FC1C0E3B079E2310BC6D37F4A194886F38974 (int32_t ___0_numDisparities, int32_t ___1_blockSize, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.StereoBM::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM__ctor_m996FEE1AC7B3B02C3BA59AC68BD587209F178360 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getPreFilterType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getPreFilterType_m6F035D48C954AD518DD8403B0E0EF7330B44328A (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setPreFilterType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setPreFilterType_m39BCF206E6341C9E88850769708E0F9E9DE10D3D (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getPreFilterSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getPreFilterSize_m3FFAB7F108CA61F880D16ECBEAC54CE1A7A1CBF8 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setPreFilterSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setPreFilterSize_m9064C14B27570A256B2E5F631327738BA6BFC123 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getPreFilterCap(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getPreFilterCap_m3CCFFAE1E1A0C94399F779D087002583BD953059 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setPreFilterCap(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setPreFilterCap_m5C7A907AB6CC04822F70A118E3D80EB862A97E53 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getTextureThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getTextureThreshold_mDA3A702F92AC7CCC280C583D19546F1350E20317 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setTextureThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setTextureThreshold_m4DBD53EBCB25E98ED7F60B369C376EF863699B5A (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getUniquenessRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getUniquenessRatio_mF9933E060A8B4C4D4E8580064A85BD2DFF5C94A4 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setUniquenessRatio(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setUniquenessRatio_mD65502F6E23D4301A117CF947A5EE87B1CEB4512 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getSmallerBlockSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getSmallerBlockSize_m2147578C934ECBBB1C7D796D4BF48BFE9E695630 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setSmallerBlockSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setSmallerBlockSize_m578635AE869082E20443688FC7033001B6924EE3 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::calib3d_StereoBM_getROI1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_calib3d_StereoBM_getROI1_m593F606BDBBA5D2880D6E1C6A8564AEE45D29A55 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setROI1(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setROI1_m187F90BDC8720F47B7B71A596DC6E2565A19BD89 (intptr_t ___0_obj, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___1_value, const RuntimeMethod* method) ;
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::calib3d_StereoBM_getROI2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_calib3d_StereoBM_getROI2_mA61E7D619B705ECC28A148392623CBB37073D006 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setROI2(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setROI2_mDD2695090CD4C68F915EC701842745F76B62D5DF (intptr_t ___0_obj, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___1_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.Algorithm::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Algorithm__ctor_mB2BEC15E084F478C6AE8F899B4C9AF68D92EE61D (Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111* __this, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getMinDisparity(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getMinDisparity_m3D9B3A29943D2DD16C1176AE244E470419D58B83 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setMinDisparity(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setMinDisparity_m1B270733DA7A52E21C570AE694D9D66A5E38DA04 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getNumDisparities(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getNumDisparities_m7A278A66F020A03F119790C95BF4325BDCEE78A2 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setNumDisparities(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setNumDisparities_mD83D4873B556100A863AFE4494D556B854F5DB46 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getBlockSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getBlockSize_m6379D63988E808F7B980A54A9B2D72AD5DD70118 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setBlockSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setBlockSize_mCAD371CCC475A20DE032D4EE22700B8BDEC55BE4 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getSpeckleWindowSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getSpeckleWindowSize_m72F99D295DD0558EE35DF55FA55A26385E4FC6E1 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setSpeckleWindowSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setSpeckleWindowSize_m18DBE09DF90C33237CE3B3AFF54ED1C70CEB636B (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getSpeckleRange(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getSpeckleRange_mAFE0C4E2814C0DE15A41D02DD6A164B2258879A4 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setSpeckleRange(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setSpeckleRange_m9B4181A532630CE1BA9AF9E2C9668A923CECB4F4 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getDisp12MaxDiff(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getDisp12MaxDiff_m82817AAF436480F7F296265B17E2F3F4310AE26B (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setDisp12MaxDiff(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setDisp12MaxDiff_m5A2EBD6559E91E8FCC96C6E200A642BF68CF580D (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.Ptr`1<OpenCvSharp.StereoSGBM>::.ctor(System.IntPtr)
inline void Ptr_1__ctor_m9EFD8ADA6C06D57D386A6B147E9C28C548EE9CBE (Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38* __this, intptr_t ___0_ptr, const RuntimeMethod* method)
{
	((  void (*) (Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38*, intptr_t, const RuntimeMethod*))Ptr_1__ctor_m15E28642C0D8C08EA631DCBFF9BF1D4B449A2DF4_gshared)(__this, ___0_ptr, method);
}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_StereoSGBM_create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_StereoSGBM_create_m1157846505CD16FC8AA3A6C7A4F64C616DB2BE8F (int32_t ___0_minDisparity, int32_t ___1_numDisparities, int32_t ___2_blockSize, int32_t ___3_P1, int32_t ___4_P2, int32_t ___5_disp12MaxDiff, int32_t ___6_preFilterCap, int32_t ___7_uniquenessRatio, int32_t ___8_speckleWindowSize, int32_t ___9_speckleRange, int32_t ___10_mode, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.StereoSGBM::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoSGBM__ctor_m73BEF0B6EB02349ED212F720006D68A0C5C66414 (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getPreFilterCap(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getPreFilterCap_m3B882C835F241D497A601A531FC2762DCB93D914 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setPreFilterCap(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setPreFilterCap_mB326B744EDD486C80F63186A2D30D6462896A0D1 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getUniquenessRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getUniquenessRatio_m682AC11EC723D6A211B7448C6285B8B17C99AC3D (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setUniquenessRatio(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setUniquenessRatio_m9A5A04C68C08BE5212EC02E8C640E65E2809C336 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getP1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getP1_m0BB6A9DA144DC658331FBDF9FC6B29D28B08ADA5 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setP1(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setP1_mEF643EC6CD98E1FFB562959DE44E5A38AC8CDE18 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getP2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getP2_mC9C10788E166D436A962328C1629B91F36AB082A (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setP2(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setP2_m26253FF348CF1080B991DF25A4EE7930F611C842 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getMode(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getMode_m2CE34A9955EF80546D45D76E6557C7CDE8C3039B (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setMode(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setMode_m9B42B6EB7BA376EDCC287B7957A1117D52140164 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Boolean System.IntPtr::op_Equality(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271 (intptr_t ___0_value1, intptr_t ___1_value2, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_write(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_write_mB3E3A03BDC8FD67E2DDF8D78ABAB6253B58E5396 (intptr_t ___0_obj, intptr_t ___1_fs, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_read(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_read_mEA85981C881E2078406E9BD37D62F424E68F5C8C (intptr_t ___0_obj, intptr_t ___1_fn, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_Algorithm_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Algorithm_empty_m357935738FF86629CA0DD036989E323999B365C8 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_save(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_save_m13B65EFADF4BCB791DB1FBE6012CF2A85223C73B (intptr_t ___0_obj, String_t* ___1_filename, const RuntimeMethod* method) ;
// System.Void System.Text.StringBuilder::.ctor(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StringBuilder__ctor_m2619CA8D2C3476DF1A302D9D941498BB1C6164C5 (StringBuilder_t* __this, int32_t ___0_capacity, const RuntimeMethod* method) ;
// System.Int32 System.Text.StringBuilder::get_Capacity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StringBuilder_get_Capacity_m9DBF3B3940BC0BB882CA26F0EDB53896A491AD1E (StringBuilder_t* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_getDefaultName(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_getDefaultName_mCA4435D968157F330A8BA06BEF7304470C339631 (intptr_t ___0_obj, StringBuilder_t* ___1_buf, int32_t ___2_bufLength, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_new1_mDBFF2D31090D143C6B64C63DC623AD6FE2C67C1A (const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_delete_mC988648394EB2C9FD44C97B409763CEF5D7A32FD (intptr_t ___0_node, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_toInt(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_toInt_m6ECB9A998E6E2FB47B1A13A4B8B436DB3E93A727 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Single OpenCvSharp.NativeMethods::core_FileNode_toFloat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_core_FileNode_toFloat_m9C5024776EE2E81703715B67C9E6B196C88ADBEB (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Double OpenCvSharp.NativeMethods::core_FileNode_toDouble(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_FileNode_toDouble_mFC91CC20FCF22A6F4BF5445E7075316A82ABB897 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_toString(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_toString_m3B60EDF78944CAB7043783805F982E37869C72F4 (intptr_t ___0_obj, StringBuilder_t* ___1_buf, int32_t ___2_bufLength, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_toMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_toMat_m740A9EC0900B2C3C19DBFF7451084982180B721F (intptr_t ___0_obj, intptr_t ___1_m, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_operatorThis_byString(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_operatorThis_byString_m0EF8A4DC23855187C34C432044563BEB276690B3 (intptr_t ___0_obj, String_t* ___1_nodeName, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.FileNode::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileNode__ctor_mCFB99BF6734BB33533E7079EE319D7F89745DC81 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, intptr_t ___0_ptr, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_operatorThis_byInt(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_operatorThis_byInt_mF349B3B53F57E9A32645DB4501199B860CF73968 (intptr_t ___0_obj, int32_t ___1_i, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_empty_mA1439B9A19757C66630402C28208ACF2EE631252 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isNone(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isNone_m95398ACC6A12FF22D9FDDD61C9409888ABE3E205 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isSeq(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isSeq_m835C259D7F241903854D84050D54E26F4EC18B03 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isMap(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isMap_m48BCEDC20E70D73DFD8B2BEE9584AF49962CC7E7 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isInt(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isInt_mA83D2246B3ED142CC86255DC4F064EF0D364CBBA (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isReal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isReal_m36024B38CCE2B06134947BC492952860D4A823B4 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isString(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isString_m496873DB899B061451B20D35D5DCA53623DE2D29 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isNamed(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isNamed_m885A8F062E0EB7152CBD24B95D1A1455C1AB9207 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_name(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_name_m5B42CFC1DC83224BB4B1859EB024EE31228A87E3 (intptr_t ___0_obj, StringBuilder_t* ___1_buf, int32_t ___2_bufLength, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_size(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_size_mC1DD883055B7547154EC8034FE55EF6B36B8A660 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Int64 System.IntPtr::ToInt64()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t IntPtr_ToInt64_m0F81FB6FB08014074D4F5B915EDAB06A08552032 (intptr_t* __this, const RuntimeMethod* method) ;
// System.Void System.IntPtr::.ctor(System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void IntPtr__ctor_m2C033540A2F274766CF5C2A120587DD997E3F6DC (intptr_t* __this, int64_t ___0_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_readRaw(System.IntPtr,System.String,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_readRaw_m3DE9075E94BB195477B31EFF3F24DF35A71FC0CE (intptr_t ___0_obj, String_t* ___1_fmt, intptr_t ___2_vec, intptr_t ___3_len, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_readObj(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_readObj_m087983A07A7647D9B910FB275EFB8D262159A1DD (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_int(System.IntPtr,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_int_m93698EDE17EA460CE8014A763B25638246F0DD50 (intptr_t ___0_node, int32_t* ___1_value, int32_t ___2_defaultValue, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_float(System.IntPtr,System.Single&,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_float_m61F29BF4D1BABCE41A2B0BC64C1D11B058FC9755 (intptr_t ___0_node, float* ___1_value, float ___2_defaultValue, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_double(System.IntPtr,System.Double&,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_double_m561AA80DAB6BCB2F644D0971405638B10E0B8191 (intptr_t ___0_node, double* ___1_value, double ___2_defaultValue, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_String(System.IntPtr,System.Text.StringBuilder,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_String_mBD1CF3DD183B182CBCB77570F4057967987A6C31 (intptr_t ___0_node, StringBuilder_t* ___1_value, int32_t ___2_valueCapacity, String_t* ___3_defaultValue, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.Cv2::ToPtr(OpenCvSharp.ICvPtrHolder)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t Cv2_ToPtr_mAAF00ECCEBEA32784F6F018CC026AF84840328C8 (RuntimeObject* ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_Mat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_Mat_m8B0613FAC84A12CDDE37843D2425033D0E8EF9BE (intptr_t ___0_node, intptr_t ___1_mat, intptr_t ___2_defaultMat, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.SparseMat::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SparseMat__ctor_mE0B2CE55945EAAA331304699907BF8C8DE732685 (SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_SparseMat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_SparseMat_mC8529D9C73B1E918A515C0C8A60D64C682D45C1F (intptr_t ___0_node, intptr_t ___1_mat, intptr_t ___2_defaultMat, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.VectorOfKeyPoint::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VectorOfKeyPoint__ctor_m8EE8A480691B930ABEBCBADE3E949C892F8AEAF0 (VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_vectorOfKeyPoint(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_vectorOfKeyPoint_m48BFF89CB67B778C3716E50B1DC7B324CB9DB1C9 (intptr_t ___0_node, intptr_t ___1_keypoints, const RuntimeMethod* method) ;
// OpenCvSharp.KeyPoint[] OpenCvSharp.VectorOfKeyPoint::ToArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* VectorOfKeyPoint_ToArray_mCBBFEAC0D509BAA38773F9882B54850F21605067 (VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.VectorOfDMatch::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VectorOfDMatch__ctor_m303E6FD12231A9E8A3F21B4DD6F8F199265EA5F1 (VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* __this, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_vectorOfDMatch(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_vectorOfDMatch_m2A0B5F2F20CA95BE0A887CC787CFAA4A1781CE68 (intptr_t ___0_node, intptr_t ___1_matches, const RuntimeMethod* method) ;
// OpenCvSharp.DMatch[] OpenCvSharp.VectorOfDMatch::ToArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* VectorOfDMatch_ToArray_mB05DEF2B0387832F3ECA3B3E2DB9B48681B78E28 (VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* __this, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_new1_m02DF158DFFC74524C893A32620DFA41EF1AB18CC (const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_new2(System.String,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_new2_mE3B4F9719EBDC26A5359F89C1B6843D885F1179A (String_t* ___0_source, int32_t ___1_flags, String_t* ___2_encoding, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_delete_m1749514F590372A620A34EC91DBDF362E61142A7 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_indexer(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_indexer_mF70ECBBB5961D07C37ED5B90730AF764C8663A0D (intptr_t ___0_obj, String_t* ___1_nodeName, const RuntimeMethod* method) ;
// System.SByte* OpenCvSharp.NativeMethods::core_FileStorage_elname(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int8_t* NativeMethods_core_FileStorage_elname_m521EB95E710D151F0F21CC3E8724A2B85B2A7F7F (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.String System.String::CreateString(System.SByte*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_CreateString_mD70DA9AC0480711E89DC28E753836A824814630C (String_t* __this, int8_t* ___0_value, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_structs(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_structs_m141D44066E49E8E4BC02B43D8FF03912B31A287F (intptr_t ___0_obj, intptr_t* ___1_resultLength, const RuntimeMethod* method) ;
// System.Int32 System.IntPtr::ToInt32()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t IntPtr_ToInt32_mD53B5D2C73C7E4BE5ADEBC5D187EACC83D5BB292 (intptr_t* __this, const RuntimeMethod* method) ;
// System.Void System.Runtime.InteropServices.Marshal::Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Marshal_Copy_mF7402FFDB520EA1B8D1C32B368DBEE4B13F1BE77 (intptr_t ___0_source, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___1_destination, int32_t ___2_startIndex, int32_t ___3_length, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileStorage_state(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileStorage_state_m3E394577CBF9AE0CAC6691F974E10B0E498CEF3F (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileStorage_open(System.IntPtr,System.String,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileStorage_open_m059EB3F28EFC6D83D579AECED2D37CBD73EC8FAA (intptr_t ___0_obj, String_t* ___1_filename, int32_t ___2_flags, String_t* ___3_encoding, const RuntimeMethod* method) ;
// System.Int32 OpenCvSharp.NativeMethods::core_FileStorage_isOpened(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileStorage_isOpened_m7DFD067F25B9B49516F7141999C0C8B32BD46CDD (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_releaseAndGetString(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_releaseAndGetString_m908BAFB26174F170E428D793EA7FA3876B31BA59 (intptr_t ___0_obj, StringBuilder_t* ___1_buf, int32_t ___2_bufLength, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_getFirstTopLevelNode(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_getFirstTopLevelNode_mECA7E58BAD1D3228F9101EE2BACFEDC99E171A64 (intptr_t ___0_obj, const RuntimeMethod* method) ;
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_root(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_root_m730F403F5E12E66DEB42EE9C452283806F2C2405 (intptr_t ___0_obj, int32_t ___1_streamIdx, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeObj(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeObj_mF3BC62295B82CB677578772B259334A009F5F291 (intptr_t ___0_obj, String_t* ___1_name, intptr_t ___2_value, const RuntimeMethod* method) ;
// System.Boolean System.IO.File::Exists(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool File_Exists_m95E329ABBE3EAD6750FE1989BBA6884457136D4A (String_t* ___0_path, const RuntimeMethod* method) ;
// System.Void System.IO.FileNotFoundException::.ctor(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileNotFoundException__ctor_mC4247CABF75A7B484A21790CD7F8EFA8AC101677 (FileNotFoundException_t17F1B49AD996E4A60C87C7ADC9D3A25EB5808A9A* __this, String_t* ___0_message, String_t* ___1_fileName, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_getDefaultObjectName(System.String,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_getDefaultObjectName_m87B45337F524D61F1507CD3BFEDBDD3EDCE4FDDF (String_t* ___0_filename, StringBuilder_t* ___1_buf, int32_t ___2_bufLength, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_int(System.IntPtr,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_int_m8CE5C43A4CBC549B128FBD1C95DB418BD24EA069 (intptr_t ___0_fs, String_t* ___1_name, int32_t ___2_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_float(System.IntPtr,System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_float_m31A5B4979970CF2C2D5CAC53ACD28150818A69C1 (intptr_t ___0_fs, String_t* ___1_name, float ___2_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_double(System.IntPtr,System.String,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_double_m7D32E50CE35D8AD64B1E78098465CC0C2713E94D (intptr_t ___0_fs, String_t* ___1_name, double ___2_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_String(System.IntPtr,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_String_m98FF62AFB96DFCE1711C1A9C07C046F6278A7F06 (intptr_t ___0_fs, String_t* ___1_name, String_t* ___2_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_Mat(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_Mat_mB3A57275E3FDB91925FAE232920566D91489BA2F (intptr_t ___0_fs, String_t* ___1_name, intptr_t ___2_value, const RuntimeMethod* method) ;
// System.Void System.GC::KeepAlive(System.Object)
IL2CPP_EXTERN_C IL2CPP_NO_INLINE IL2CPP_METHOD_ATTR void GC_KeepAlive_m53833ADCAF719294E5D1DA13B067E31472C762F9 (RuntimeObject* ___0_obj, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_SparseMat(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_SparseMat_mA56B88E1C0CCCF3201C3C13B64AFA10B2602BBB0 (intptr_t ___0_fs, String_t* ___1_name, intptr_t ___2_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.VectorOfKeyPoint::.ctor(System.Collections.Generic.IEnumerable`1<OpenCvSharp.KeyPoint>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VectorOfKeyPoint__ctor_m3CFD97CD91E425B95262AEF78FD65F7E4851D392 (VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* __this, RuntimeObject* ___0_data, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_vectorOfKeyPoint(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_vectorOfKeyPoint_mD9BA00E63634CF3485B1C520994718E24FBCE91B (intptr_t ___0_fs, String_t* ___1_name, intptr_t ___2_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.VectorOfDMatch::.ctor(System.Collections.Generic.IEnumerable`1<OpenCvSharp.DMatch>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void VectorOfDMatch__ctor_mAE8690E0D5E863E32FD6EE888BC654131964650F (VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* __this, RuntimeObject* ___0_data, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_vectorOfDMatch(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_vectorOfDMatch_m8987B8C0E138C2F7CD5A3175BACC8D4BDC946574 (intptr_t ___0_fs, String_t* ___1_name, intptr_t ___2_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_int(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_int_m9FFA7E6FFC41D5082A83456CCC2E4E4E38C5110C (intptr_t ___0_fs, int32_t ___1_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_float(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_float_m22DBA8827914E663283D1E32E83A9D9FF639024B (intptr_t ___0_fs, float ___1_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_double(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_double_mC3ADB21E292A92073BD327397EB43A37D73A9CDA (intptr_t ___0_fs, double ___1_value, const RuntimeMethod* method) ;
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_String(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_String_mFAC487563545263449C962881FD646B8D7763A71 (intptr_t ___0_fs, String_t* ___1_value, const RuntimeMethod* method) ;
// System.Void System.Array::Clear(System.Array,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Array_Clear_m50BAA3751899858B097D3FF2ED31F284703FE5CB (RuntimeArray* ___0_array, int32_t ___1_index, int32_t ___2_length, const RuntimeMethod* method) ;
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL dlib_shapePredictor_new();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL dlib_shapePredictor_loadData(intptr_t, uint8_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int8_t CDECL dlib_shapePredictor_detectLandmarks(intptr_t, intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL dlib_shapePredictor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_Rodrigues(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_Rodrigues_VecToMat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_Rodrigues_MatToVec(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_findHomography_InputArray(intptr_t, intptr_t, int32_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_findHomography_vector(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, int32_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_RQDecomp3x3_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_RQDecomp3x3_Mat(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_decomposeProjectionMatrix_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_decomposeProjectionMatrix_Mat(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_matMulDeriv(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_composeRT_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_composeRT_Mat(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_projectPoints_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_projectPoints_Mat(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_solvePnP_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_solvePnP_vector(Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, double*, int32_t, double*, double*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_solvePnPRansac_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t, float, double, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_solvePnPRansac_vector(Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, double*, int32_t, double*, double*, int32_t, int32_t, float, double, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_initCameraMatrix2D_Mat(intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_initCameraMatrix2D_array(intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_findChessboardCorners_InputArray(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_findChessboardCorners_vector(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_find4QuadCornerSubpix_InputArray(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_find4QuadCornerSubpix_vector(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_drawChessboardCorners_InputArray(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_drawChessboardCorners_array(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_findCirclesGrid_InputArray(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_findCirclesGrid_vector(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL calib3d_calibrateCamera_InputArray(intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL calib3d_calibrateCamera_vector(intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_calibrationMatrixValues_InputArray(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double*, double*, double*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_calibrationMatrixValues_array(DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double*, double*, double*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL calib3d_stereoCalibrate_InputArray(intptr_t*, int32_t, intptr_t*, int32_t, intptr_t*, int32_t, intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL calib3d_stereoCalibrate_array(intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_stereoRectify_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_stereoRectify_array(DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, int32_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_stereoRectifyUncalibrated_InputArray(intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_stereoRectifyUncalibrated_array(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL calib3d_rectify3Collinear_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_getOptimalNewCameraMatrix_InputArray(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_getOptimalNewCameraMatrix_array(DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, double*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsToHomogeneous_InputArray(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsToHomogeneous_array1(Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsToHomogeneous_array2(Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsFromHomogeneous_InputArray(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsFromHomogeneous_array1(Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsFromHomogeneous_array2(Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_convertPointsHomogeneous(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_findFundamentalMat_InputArray(intptr_t, intptr_t, int32_t, double, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_findFundamentalMat_array(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, int32_t, double, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_computeCorrespondEpilines_InputArray(intptr_t, int32_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_computeCorrespondEpilines_array2d(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_computeCorrespondEpilines_array3d(Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*, int32_t, int32_t, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_triangulatePoints_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_triangulatePoints_array(DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_correctMatches_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_correctMatches_array(DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_filterSpeckles(intptr_t, double, int32_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL calib3d_getValidDisparityROI(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_validateDisparity(intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_reprojectImageTo3D(intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_estimateAffine3D(intptr_t, intptr_t, intptr_t, intptr_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_compute(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getMinDisparity(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setMinDisparity(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getNumDisparities(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setNumDisparities(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getBlockSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setBlockSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getSpeckleWindowSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setSpeckleWindowSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getSpeckleRange(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setSpeckleRange(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoMatcher_getDisp12MaxDiff(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoMatcher_setDisp12MaxDiff(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_Ptr_StereoBM_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_StereoBM_create(int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getPreFilterType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setPreFilterType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getPreFilterSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setPreFilterSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getPreFilterCap(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setPreFilterCap(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getTextureThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setTextureThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getUniquenessRatio(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setUniquenessRatio(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoBM_getSmallerBlockSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setSmallerBlockSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL calib3d_StereoBM_getROI1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setROI1(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL calib3d_StereoBM_getROI2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoBM_setROI2(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_Ptr_StereoSGBM_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL calib3d_StereoSGBM_create(int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoSGBM_getPreFilterCap(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoSGBM_setPreFilterCap(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoSGBM_getUniquenessRatio(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoSGBM_setUniquenessRatio(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoSGBM_getP1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoSGBM_setP1(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoSGBM_getP2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoSGBM_setP2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL calib3d_StereoSGBM_getMode(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL calib3d_StereoSGBM_setMode(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_setNumThreads(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_getNumThreads();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_getThreadNum();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_getBuildInformation(char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_getBuildInformation_length();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int64_t CDECL core_getTickCount();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_getTickFrequency();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int64_t CDECL core_getCPUTickCount();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_checkHardwareSupport(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_getNumberOfCPUs();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_fastMalloc(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_fastFree(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_setUseOptimized(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_useOptimized();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL redirectError(Il2CppMethodPointer, intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_cvarrToMat(intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_extractImageCOI(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_insertImageCOI(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_add(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_subtract(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_multiply(intptr_t, intptr_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_divide1(double, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_divide2(intptr_t, intptr_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_scaleAdd(intptr_t, double, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_addWeighted(intptr_t, double, intptr_t, double, double, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_convertScaleAbs(intptr_t, intptr_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_LUT(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 CDECL core_sum(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_countNonZero(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_findNonZero(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 CDECL core_mean(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_meanStdDev_OutputArray(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_meanStdDev_Scalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_norm1(intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_norm2(intptr_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_batchDistance(intptr_t, intptr_t, intptr_t, int32_t, intptr_t, int32_t, int32_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_normalize(intptr_t, intptr_t, double, double, int32_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_minMaxLoc1(intptr_t, double*, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_minMaxLoc2(intptr_t, double*, double*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_minMaxIdx1(intptr_t, double*, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_minMaxIdx2(intptr_t, double*, double*, int32_t*, int32_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_reduce(intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_merge(intptr_t*, uint32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_split(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_mixChannels(intptr_t*, uint32_t, intptr_t*, uint32_t, int32_t*, uint32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_extractChannel(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_insertChannel(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_flip(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_rotate(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_repeat1(intptr_t, int32_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_repeat2(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_hconcat1(intptr_t*, uint32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_hconcat2(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_vconcat1(intptr_t*, uint32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_vconcat2(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_bitwise_and(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_bitwise_or(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_bitwise_xor(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_bitwise_not(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_absdiff(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_inRange_InputArray(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_inRange_Scalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_compare(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_min1(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_max1(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_min_MatMat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_min_MatDouble(intptr_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_max_MatMat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_max_MatDouble(intptr_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_sqrt(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_pow_Mat(intptr_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_exp_Mat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_log_Mat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL core_cubeRoot(float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL core_fastAtan2(float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_polarToCart(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_cartToPolar(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_phase(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_magnitude_Mat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_checkRange(intptr_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_patchNaNs(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_gemm(intptr_t, intptr_t, double, intptr_t, double, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_mulTransposed(intptr_t, intptr_t, int32_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_transpose(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_transform(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform_Mat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform_Point2f(intptr_t, int32_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform_Point2d(intptr_t, int32_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform_Point3f(intptr_t, int32_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_perspectiveTransform_Point3d(intptr_t, int32_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_completeSymm(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_setIdentity(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_determinant(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 CDECL core_trace(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_invert(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_solve(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_sort(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_sortIdx(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_solveCubic(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_solvePoly(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_eigen(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_calcCovarMatrix_Mat(intptr_t*, int32_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_calcCovarMatrix_InputArray(intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCACompute(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCAComputeVar(intptr_t, intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCAProject(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCABackProject(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVDecomp(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVBackSubst(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_Mahalanobis(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_dft(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_idft(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_dct(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_idct(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_mulSpectrums(intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_getOptimalDFTSize(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_kmeans(intptr_t, int32_t, intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_theRNG();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_randu_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_randu_Scalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_randn_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_randn_Scalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_randShuffle(intptr_t, double, uint64_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Algorithm_write(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Algorithm_read(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Algorithm_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Algorithm_save(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Algorithm_getDefaultName(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byMatExpr(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byScalar(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byDouble(double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byGpuMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_InputArray_new_byVectorOfMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_InputArray_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_OutputArray_new_byMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_OutputArray_new_byGpuMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_OutputArray_new_byScalar(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_OutputArray_new_byVectorOfMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_OutputArray_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_InputArray_kind(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_OutputArray_getMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 CDECL core_OutputArray_getScalar(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_OutputArray_getVectorOfMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_new2(char*, int32_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_newFromLegacy(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileStorage_open(intptr_t, char*, int32_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileStorage_isOpened(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_release(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_releaseAndGetString(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_getFirstTopLevelNode(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_root(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_indexer(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_toLegacy(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeRaw(intptr_t, char*, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeObj(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_getDefaultObjectName(char*, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int8_t* CDECL core_FileStorage_elname(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileStorage_structs(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileStorage_state(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_int(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_float(intptr_t, char*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_double(intptr_t, char*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_String(intptr_t, char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_Mat(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_SparseMat(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_vectorOfKeyPoint(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_write_vectorOfDMatch(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeScalar_int(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeScalar_float(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeScalar_double(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileStorage_writeScalar_String(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_new2(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_new3(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_operatorThis_byString(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_operatorThis_byInt(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_type(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isNone(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isSeq(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isMap(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isInt(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isReal(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isString(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_isNamed(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_name(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_size(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_FileNode_toInt(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL core_FileNode_toFloat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_FileNode_toDouble(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_toString(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_toMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_readRaw(intptr_t, char*, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_FileNode_readObj(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_int(intptr_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_float(intptr_t, float*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_double(intptr_t, double*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_String(intptr_t, char*, int32_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_Mat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_SparseMat(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_vectorOfKeyPoint(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_FileNode_read_vectorOfDMatch(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_new2(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_new3(intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCA_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCA_operatorThis(intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCA_computeVar(intptr_t, intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_project1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCA_project2(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_backProject1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_PCA_backProject2(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_eigenvectors(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_eigenvalues(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_PCA_mean(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_RNG_fill(uint64_t*, intptr_t, int32_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_RNG_gaussian(uint64_t*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SVD_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SVD_new2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_operatorThis(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_backSubst(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_static_compute1(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_static_compute2(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_static_backSubst(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SVD_static_solveZ(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SVD_u(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SVD_w(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SVD_vt(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_sizeof();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new2(int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new3(int32_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new4(intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09, Range_t981FA0C4141FE7585A1C292A250B431019099C09);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new5(intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new6(intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new7(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new8(int32_t, int32_t, int32_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new9(int32_t, int32_t*, int32_t, intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new10(int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new11(int32_t, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new_FromIplImage(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_new_FromCvMat(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_release(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_adjustROI(intptr_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_assignTo1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_assignTo2(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_channels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_checkVector1(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_checkVector2(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_checkVector3(intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_clone(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_col_toMat(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_col_toMatExpr(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_cols(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_colRange_toMat(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_colRange_toMatExpr(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_dims(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_convertTo(intptr_t, intptr_t, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_copyTo(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_create1(intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_create2(intptr_t, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_cross(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint8_t* CDECL core_Mat_data(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_datastart(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_dataend(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_datalimit(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_depth(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_diag1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_diag2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_Mat_dot(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_elemSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_elemSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_eye(int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_inv1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_inv2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_isContinuous(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_isSubmatrix(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_locateROI(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_mul1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_mul2(intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ones1(int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ones2(int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_reshape1(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_reshape2(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_reshape3(intptr_t, int32_t, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_rows(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_row_toMat(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_row_toMatExpr(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_rowRange_toMat(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_rowRange_toMatExpr(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_setTo_Scalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_setTo_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL core_Mat_size(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_sizeAt(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_step11(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_step12(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int64_t CDECL core_Mat_step(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_stepAt(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_subMat1(intptr_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_subMat2(intptr_t, int32_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_t(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_Mat_total(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_type(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_zeros1(int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_zeros2(int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int8_t* CDECL core_Mat_dump(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_dump_delete(int8_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ptr1d(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ptr2d(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ptr3d(intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_ptrnd(intptr_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_assignment_FromMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_assignment_FromMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_assignment_FromScalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_IplImage(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_IplImage_alignment(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_CvMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorUnaryMinus(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAdd_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAdd_MatScalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAdd_ScalarMat(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorMinus_Mat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorSubtract_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorSubtract_MatScalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorSubtract_ScalarMat(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorMultiply_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorMultiply_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorMultiply_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorDivide_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorDivide_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorDivide_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAnd_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAnd_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorAnd_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorOr_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorOr_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorOr_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorXor_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorXor_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorXor_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorNot(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLT_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLT_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLT_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLE_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLE_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorLE_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGT_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGT_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGT_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGE_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGE_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorGE_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorEQ_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorEQ_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorEQ_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorNE_MatMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorNE_DoubleMat(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_Mat_operatorNE_MatDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_abs_Mat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetB(intptr_t, int32_t, int32_t, uint8_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetS(intptr_t, int32_t, int32_t, int16_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetI(intptr_t, int32_t, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetF(intptr_t, int32_t, int32_t, float*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetD(intptr_t, int32_t, int32_t, double*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetVec3b(intptr_t, int32_t, int32_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetVec3d(intptr_t, int32_t, int32_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetVec4f(intptr_t, int32_t, int32_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetVec6f(intptr_t, int32_t, int32_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetVec4i(intptr_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint(intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint2f(intptr_t, int32_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint2d(intptr_t, int32_t, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint3i(intptr_t, int32_t, int32_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint3f(intptr_t, int32_t, int32_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetPoint3d(intptr_t, int32_t, int32_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nSetRect(intptr_t, int32_t, int32_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetB(intptr_t, int32_t, int32_t, uint8_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetS(intptr_t, int32_t, int32_t, int16_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetI(intptr_t, int32_t, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetF(intptr_t, int32_t, int32_t, float*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetD(intptr_t, int32_t, int32_t, double*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetVec3b(intptr_t, int32_t, int32_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetVec3d(intptr_t, int32_t, int32_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetVec4f(intptr_t, int32_t, int32_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetVec6f(intptr_t, int32_t, int32_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetVec4i(intptr_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint(intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint2f(intptr_t, int32_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint2d(intptr_t, int32_t, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint3i(intptr_t, int32_t, int32_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint3f(intptr_t, int32_t, int32_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetPoint3d(intptr_t, int32_t, int32_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_Mat_nGetRect(intptr_t, int32_t, int32_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Mat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_char(intptr_t, int8_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_uchar(intptr_t, uint8_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_short(intptr_t, int16_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_ushort(intptr_t, uint16_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_int(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_float(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_double(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2b(intptr_t, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3b(intptr_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec4b(intptr_t, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6b(intptr_t, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2s(intptr_t, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3s(intptr_t, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec4s(intptr_t, Vec4s_t36070B932676A14293929ED30FF39D45635126B5);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6s(intptr_t, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2w(intptr_t, Vec2w_tC86992B28B612E016C5DFE0C6AEFB352CA530B97);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3w(intptr_t, Vec3w_t639AB866E901F11C8B2102D9AABF3D326C187343);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec4w(intptr_t, Vec4w_tA5261E05040FD831243C9A62E36D8644449ECA63);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6w(intptr_t, Vec6w_tAB37C7CF73E1BD9071AF39DA9F4F30A4A0D667D9);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2i(intptr_t, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3i(intptr_t, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec4i(intptr_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6i(intptr_t, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2f(intptr_t, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3f(intptr_t, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec4f(intptr_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6f(intptr_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec2d(intptr_t, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec3d(intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Vec6d(intptr_t, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point2f(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point2d(intptr_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point3i(intptr_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point3f(intptr_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Point3d(intptr_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Size(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Size2f(intptr_t, Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_push_back_Rect(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_reserve(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_resize1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_resize2(intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_pop_back(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_uchar(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec2b(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec3b(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec4b(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec6b(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_short(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec2s(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec3s(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec4s(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec6s(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_int(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec2i(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec3i(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec4i(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec6i(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_float(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec2f(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec3f(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec4f(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec6f(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_double(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec2d(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec3d(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec4d(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_Mat_forEach_Vec6d(intptr_t, Il2CppMethodPointer);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_MatExpr_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_toMat(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorUnaryMinus_MatExpr(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorUnaryNot_MatExpr(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorAdd_MatExprMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorAdd_MatMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorAdd_MatExprScalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorAdd_ScalarMatExpr(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorAdd_MatExprMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorSubtract_MatExprMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorSubtract_MatMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorSubtract_MatExprScalar(intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorSubtract_ScalarMatExpr(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorSubtract_MatExprMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorMultiply_MatExprMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorMultiply_MatMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorMultiply_MatExprDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorMultiply_DoubleMatExpr(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorMultiply_MatExprMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorDivide_MatExprMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorDivide_MatMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorDivide_MatExprDouble(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorDivide_DoubleMatExpr(double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_operatorDivide_MatExprMatExpr(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_row(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_col(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_diag1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_diag2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_submat(intptr_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_cross(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL core_MatExpr_dot(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_t(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_inv1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_inv2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_mul_toMatExpr(intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_MatExpr_mul_toMat(intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL core_MatExpr_size(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_MatExpr_type(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_abs_MatExpr(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C uint64_t CDECL core_SparseMat_sizeof();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_new2(int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_new3(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_operatorAssign_SparseMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_operatorAssign_Mat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_clone(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_copyTo_SparseMat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_copyTo_Mat(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_convertTo_SparseMat(intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_convertTo_Mat(intptr_t, intptr_t, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_assignTo(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_create(intptr_t, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_clear(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_addref(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_SparseMat_release(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_elemSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_elemSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_type(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_depth(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_channels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_size1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_size2(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL core_SparseMat_dims(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_nzcount(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_hash_1d(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_hash_2d(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_hash_3d(intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_hash_nd(intptr_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_ptr_1d(intptr_t, int32_t, int32_t, uint64_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_ptr_2d(intptr_t, int32_t, int32_t, int32_t, uint64_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_ptr_3d(intptr_t, int32_t, int32_t, int32_t, int32_t, uint64_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL core_SparseMat_ptr_nd(intptr_t, int32_t*, int32_t, uint64_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL face_createEigenFaceRecognizer(int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL face_createFisherFaceRecognizer(int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL face_createLBPHFaceRecognizer(int32_t, int32_t, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_BasicFaceRecognizer_getNumComponents(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_setNumComponents(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL face_BasicFaceRecognizer_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_setThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_getProjections(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_getLabels(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_getEigenValues(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_getEigenVectors(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_BasicFaceRecognizer_getMean(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL face_Ptr_BasicFaceRecognizer_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_Ptr_BasicFaceRecognizer_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_train(intptr_t, intptr_t*, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_update(intptr_t, intptr_t*, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_FaceRecognizer_predict1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_predict2(intptr_t, intptr_t, int32_t*, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_save1(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_load1(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_save2(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_load2(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_setLabelInfo(intptr_t, int32_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_getLabelInfo(intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_getLabelsByString(intptr_t, char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL face_FaceRecognizer_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_FaceRecognizer_setThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_LBPHFaceRecognizer_getGridX(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_setGridX(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_LBPHFaceRecognizer_getGridY(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_setGridY(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_LBPHFaceRecognizer_getRadius(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_setRadius(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL face_LBPHFaceRecognizer_getNeighbors(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_setNeighbors(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL face_LBPHFaceRecognizer_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_setThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_getHistograms(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_LBPHFaceRecognizer_getLabels(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL face_Ptr_LBPHFaceRecognizer_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL face_Ptr_LBPHFaceRecognizer_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_drawKeypoints(intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_drawMatches1(intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*, int32_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, uint8_t*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_drawMatches2(intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t*, int32_t, int32_t*, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t*, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_evaluateFeatureDetector(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, float*, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_computeRecallPrecisionCurve(intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL features2d_getRecall(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_getNearestPoint(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AGAST(intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_AgastFeatureDetector_create(int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_AgastFeatureDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_AgastFeatureDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AgastFeatureDetector_setThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AgastFeatureDetector_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AgastFeatureDetector_setNonmaxSuppression(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AgastFeatureDetector_getNonmaxSuppression(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AgastFeatureDetector_setType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AgastFeatureDetector_getType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_AKAZE_create(int32_t, int32_t, int32_t, float, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_AKAZE_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_AKAZE_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setDescriptorType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getDescriptorType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setDescriptorSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getDescriptorSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setDescriptorChannels(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getDescriptorChannels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_AKAZE_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setNOctaves(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getNOctaves(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setNOctaveLayers(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getNOctaveLayers(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_AKAZE_setDiffusivity(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_AKAZE_getDiffusivity(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_BRISK_create1(int32_t, int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_BRISK_create2(float*, int32_t, int32_t*, int32_t, float, float, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_BRISK_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_BRISK_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_add(intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_getTrainDescriptors(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_clear(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_DescriptorMatcher_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_DescriptorMatcher_isMaskSupported(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_train(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_match1(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_knnMatch1(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_radiusMatch1(intptr_t, intptr_t, intptr_t, intptr_t, float, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_match2(intptr_t, intptr_t, intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_knnMatch2(intptr_t, intptr_t, intptr_t, int32_t, intptr_t*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_DescriptorMatcher_radiusMatch2(intptr_t, intptr_t, intptr_t, float, intptr_t*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_DescriptorMatcher_create(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_DescriptorMatcher_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_DescriptorMatcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_BFMatcher_new(int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_BFMatcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_BFMatcher_isMaskSupported(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_BFMatcher_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_BFMatcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_FlannBasedMatcher_new(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FlannBasedMatcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FlannBasedMatcher_add(intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FlannBasedMatcher_clear(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FlannBasedMatcher_train(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_FlannBasedMatcher_isMaskSupported(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_FlannBasedMatcher_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_FlannBasedMatcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FAST1(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FAST2(intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_FastFeatureDetector_create(int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_FastFeatureDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_FastFeatureDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FastFeatureDetector_setThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_FastFeatureDetector_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FastFeatureDetector_setNonmaxSuppression(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_FastFeatureDetector_getNonmaxSuppression(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_FastFeatureDetector_setType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_FastFeatureDetector_getType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_Feature2D_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_Feature2D_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_detect_Mat1(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_detect_Mat2(intptr_t, intptr_t*, int32_t, intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_detect_InputArray(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_compute1(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_compute2(intptr_t, intptr_t*, int32_t, intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Feature2D_detectAndCompute(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_Feature2D_descriptorSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_Feature2D_descriptorType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_Feature2D_defaultNorm(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_Feature2D_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_GFTTDetector_create(int32_t, double, double, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_GFTTDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_GFTTDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setMaxFeatures(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_GFTTDetector_getMaxFeatures(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setQualityLevel(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_GFTTDetector_getQualityLevel(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setMinDistance(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_GFTTDetector_getMinDistance(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setBlockSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_GFTTDetector_getBlockSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setHarrisDetector(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_GFTTDetector_getHarrisDetector(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_GFTTDetector_setK(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_GFTTDetector_getK(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_KAZE_create(int32_t, int32_t, float, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_KAZE_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_KAZE_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setDiffusivity(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_KAZE_getDiffusivity(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setExtended(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_KAZE_getExtended(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setNOctaveLayers(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_KAZE_getNOctaveLayers(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setNOctaves(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_KAZE_getNOctaves(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_KAZE_getThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KAZE_setUpright(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_KAZE_getUpright(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KeyPointsFilter_runByImageBorder(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KeyPointsFilter_runByKeypointSize(intptr_t, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KeyPointsFilter_runByPixelsMask(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KeyPointsFilter_removeDuplicated(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_KeyPointsFilter_retainBest(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_MSER_create(int32_t, int32_t, int32_t, double, double, int32_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_MSER_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_MSER_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_MSER_detectRegions(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_MSER_setDelta(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_MSER_getDelta(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_MSER_setMinArea(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_MSER_getMinArea(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_MSER_setMaxArea(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_MSER_getMaxArea(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_MSER_setPass2Only(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_MSER_getPass2Only(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_ORB_create(int32_t, float, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_ORB_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_ORB_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setMaxFeatures(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getMaxFeatures(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setScaleFactor(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL features2d_ORB_getScaleFactor(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setNLevels(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getNLevels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setEdgeThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getEdgeThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setFirstLevel(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getFirstLevel(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setWTA_K(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getWTA_K(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setScoreType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getScoreType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setPatchSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getPatchSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_ORB_setFastThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL features2d_ORB_getFastThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_SimpleBlobDetector_create(WParams_tF352D7BCB627DF6ABFC3538BAE8B601298495A54*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL features2d_Ptr_SimpleBlobDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL features2d_Ptr_SimpleBlobDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getGaussianKernel(int32_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_getDerivKernels(intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getGaborKernel(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getStructuringElement(int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_copyMakeBorder(intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_medianBlur(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GaussianBlur(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_bilateralFilter(intptr_t, intptr_t, int32_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_boxFilter(intptr_t, intptr_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_blur(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_filter2D(intptr_t, intptr_t, int32_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_sepFilter2D(intptr_t, intptr_t, int32_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Sobel(intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Scharr(intptr_t, intptr_t, int32_t, int32_t, int32_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Laplacian(intptr_t, intptr_t, int32_t, int32_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Canny(intptr_t, intptr_t, double, double, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_cornerEigenValsAndVecs(intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_preCornerDetect(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_cornerSubPix(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_goodFeaturesToTrack(intptr_t, intptr_t, int32_t, double, double, intptr_t, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_HoughLines(intptr_t, intptr_t, double, double, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_HoughLinesP(intptr_t, intptr_t, double, double, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_HoughCircles(intptr_t, intptr_t, int32_t, double, double, double, double, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_erode(intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_dilate(intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_morphologyEx(intptr_t, intptr_t, int32_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_resize(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_warpAffine(intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_warpPerspective_MisInputArray(intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_warpPerspective_MisArray(intptr_t, intptr_t, SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4*, int32_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_remap(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convertMaps(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getRotationMatrix2D(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_invertAffineTransform(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getPerspectiveTransform1(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getPerspectiveTransform2(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getAffineTransform1(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getAffineTransform2(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_getRectSubPix(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_logPolar(intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_linearPolar(intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_integral1(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_integral2(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_integral3(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_accumulate(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_accumulateSquare(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_accumulateProduct(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_accumulateWeighted(intptr_t, intptr_t, double, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_PSNR(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C CDECL imgproc_phaseCorrelate(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C CDECL imgproc_phaseCorrelateRes(intptr_t, intptr_t, intptr_t, double*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_createHanningWindow(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_threshold(intptr_t, intptr_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_adaptiveThreshold(intptr_t, intptr_t, double, int32_t, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_pyrDown(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_pyrUp(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_undistort(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_initUndistortRectifyMap(intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL imgproc_initWideAngleProjMap(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_getDefaultNewCameraMatrix(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_undistortPoints(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_calcHist1(intptr_t*, int32_t, int32_t*, intptr_t, intptr_t, int32_t, int32_t*, intptr_t*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_calcBackProject(intptr_t*, int32_t, int32_t*, intptr_t, intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_compareHist1(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_equalizeHist(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL imgproc_EMD(intptr_t, intptr_t, int32_t, intptr_t, float*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_watershed(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_pyrMeanShiftFiltering(intptr_t, intptr_t, double, double, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_grabCut(intptr_t, intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_distanceTransformWithLabels(intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_distanceTransform(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_floodFill1(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_floodFill2(intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_cvtColor(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 CDECL imgproc_moments(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_matchTemplate(intptr_t, intptr_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_connectedComponents(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_connectedComponentsWithStats(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_findContours1_vector(intptr_t, intptr_t*, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_findContours1_OutputArray(intptr_t, intptr_t*, intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_findContours2_vector(intptr_t, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_findContours2_OutputArray(intptr_t, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_drawContours_vector_fix(intptr_t, intptr_t*, int32_t, int32_t*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_drawContours_InputArray(intptr_t, intptr_t*, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, intptr_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_approxPolyDP_InputArray(intptr_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_approxPolyDP_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_approxPolyDP_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_arcLength_InputArray(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_arcLength_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_arcLength_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL imgproc_boundingRect_InputArray(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL imgproc_boundingRect_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A CDECL imgproc_boundingRect_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_contourArea_InputArray(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_contourArea_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_contourArea_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_minAreaRect_InputArray(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_minAreaRect_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_minAreaRect_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_minEnclosingCircle_InputArray(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_minEnclosingCircle_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_minEnclosingCircle_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_matchShapes_InputArray(intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_matchShapes_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexHull_InputArray(intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexHull_Point_ReturnsPoints(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexHull_Point2f_ReturnsPoints(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexHull_Point_ReturnsIndices(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexHull_Point2f_ReturnsIndices(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexityDefects_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexityDefects_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t*, int32_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_convexityDefects_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t*, int32_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_isContourConvex_InputArray(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_isContourConvex_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_isContourConvex_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL imgproc_intersectConvexConvex_InputArray(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL imgproc_intersectConvexConvex_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL imgproc_intersectConvexConvex_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_fitEllipse_InputArray(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_fitEllipse_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL imgproc_fitEllipse_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fitLine_InputArray(intptr_t, intptr_t, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fitLine_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, float*, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fitLine_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float*, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fitLine_Point3i(Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t, float*, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fitLine_Point3f(Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, float*, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_pointPolygonTest_InputArray(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_pointPolygonTest_Point(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_pointPolygonTest_Point2f(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_rotatedRectangleIntersection_OutputArray(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_rotatedRectangleIntersection_vector(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_applyColorMap(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_line(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_arrowedLine(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_rectangle_InputOutputArray(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_rectangle_Mat(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_circle(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_ellipse1(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_ellipse2(intptr_t, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fillConvexPoly_Mat(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fillConvexPoly_InputOutputArray(intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fillPoly_Mat(intptr_t, intptr_t*, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_fillPoly_InputOutputArray(intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_polylines_Mat(intptr_t, intptr_t*, int32_t*, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_polylines_InputOutputArray(intptr_t, intptr_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_clipLine1(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_clipLine2(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_ellipse2Poly(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL core_putText(intptr_t, char*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, double, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL core_getTextSize(char*, int32_t, double, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_createCLAHE(double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Ptr_CLAHE_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Ptr_CLAHE_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_CLAHE_apply(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_CLAHE_setClipLimit(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_CLAHE_getClipLimit(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_CLAHE_setTilesGridSize(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL imgproc_CLAHE_getTilesGridSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_CLAHE_collectGarbage(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setTemplate1(intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setTemplate2(intptr_t, intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_detect1(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_detect2(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setCannyLowThresh(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHough_getCannyLowThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setCannyHighThresh(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHough_getCannyHighThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setMinDist(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHough_getMinDist(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setDp(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHough_getDp(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHough_setMaxBufferSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHough_getMaxBufferSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_createGeneralizedHoughBallard();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Ptr_GeneralizedHoughBallard_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Ptr_GeneralizedHoughBallard_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughBallard_setLevels(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughBallard_getLevels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughBallard_setVotesThreshold(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughBallard_getVotesThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_createGeneralizedHoughGuil();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Ptr_GeneralizedHoughGuil_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Ptr_GeneralizedHoughGuil_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setXi(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getXi(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setLevels(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughGuil_getLevels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setAngleEpsilon(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getAngleEpsilon(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setMinAngle(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getMinAngle(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setMaxAngle(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getMaxAngle(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setAngleStep(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getAngleStep(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setAngleThresh(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughGuil_getAngleThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setMinScale(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getMinScale(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setMaxScale(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getMaxScale(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setScaleStep(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL imgproc_GeneralizedHoughGuil_getScaleStep(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setScaleThresh(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughGuil_getScaleThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_GeneralizedHoughGuil_setPosThresh(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_GeneralizedHoughGuil_getPosThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_LineIterator_new(intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_LineIterator_operatorEntity(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_operatorPP(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC CDECL imgproc_LineIterator_pos(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_LineIterator_ptr_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_ptr_set(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_LineIterator_ptr0_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_step_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_step_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_elemSize_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_elemSize_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_err_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_err_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_count_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_count_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_minusDelta_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_minusDelta_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_plusDelta_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_plusDelta_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_minusStep_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_minusStep_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineIterator_plusStep_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineIterator_plusStep_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineSegmentDetector_detect_OutputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineSegmentDetector_detect_vector(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_LineSegmentDetector_drawSegments(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_LineSegmentDetector_compareSegments(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_createLineSegmentDetector(int32_t, double, double, double, double, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Ptr_LineSegmentDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Ptr_LineSegmentDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Subdiv2D_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgproc_Subdiv2D_new2(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_initDelaunay(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_insert1(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_insert2(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_locate(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t*, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_findNearest(intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_getEdgeList(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_getTriangleList(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgproc_Subdiv2D_getVoronoiFacetList(intptr_t, int32_t*, int32_t, intptr_t*, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 CDECL imgproc_Subdiv2D_getVertex(intptr_t, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_getEdge(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_nextEdge(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_rotateEdge(intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_symEdge(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_edgeOrg(intptr_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgproc_Subdiv2D_edgeDst(intptr_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setTrainMethod(intptr_t, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_ANN_MLP_getTrainMethod(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setActivationFunction(intptr_t, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setLayerSizes(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_ANN_MLP_getLayerSizes(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 CDECL ml_ANN_MLP_getTermCriteria(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setTermCriteria(intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getBackpropWeightScale(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setBackpropWeightScale(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getBackpropMomentumScale(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setBackpropMomentumScale(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getRpropDW0(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setRpropDW0(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getRpropDWPlus(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setRpropDWPlus(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getRpropDWMinus(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setRpropDWMinus(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getRpropDWMin(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setRpropDWMin(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_ANN_MLP_getRpropDWMax(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_ANN_MLP_setRpropDWMax(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_ANN_MLP_getWeights(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_ANN_MLP_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_ANN_MLP_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_ANN_MLP_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_Boost_getBoostType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Boost_setBoostType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_Boost_getWeakCount(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Boost_setWeakCount(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_Boost_getWeightTrimRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Boost_setWeightTrimRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Boost_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_Boost_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_Boost_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_EM_getClustersNumber(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_EM_setClustersNumber(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_EM_getCovarianceMatrixType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_EM_setCovarianceMatrixType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 CDECL ml_EM_getTermCriteria(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_EM_setTermCriteria(intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_EM_getWeights(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_EM_getMeans(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_EM_getCovs(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 CDECL ml_EM_predict2(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_EM_trainEM(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_EM_trainE(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_EM_trainM(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_EM_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_EM_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_EM_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_KNearest_getDefaultK(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_KNearest_setDefaultK(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_KNearest_getIsClassifier(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_KNearest_setIsClassifier(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_KNearest_getEmax(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_KNearest_setEmax(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_KNearest_getAlgorithmType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_KNearest_setAlgorithmType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL ml_KNearest_findNearest(intptr_t, intptr_t, int32_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_KNearest_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_KNearest_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_KNearest_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_LogisticRegression_getLearningRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setLearningRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_LogisticRegression_getIterations(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setIterations(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_LogisticRegression_getRegularization(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setRegularization(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_LogisticRegression_getTrainMethod(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setTrainMethod(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_LogisticRegression_getMiniBatchSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setMiniBatchSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 CDECL ml_LogisticRegression_getTermCriteria(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_LogisticRegression_setTermCriteria(intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL ml_LogisticRegression_predict(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_LogisticRegression_get_learnt_thetas(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_LogisticRegression_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_LogisticRegression_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_LogisticRegression_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL ml_NormalBayesClassifier_predictProb(intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_NormalBayesClassifier_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_NormalBayesClassifier_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_NormalBayesClassifier_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_StatModel_clear(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_getVarCount(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_isTrained(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_isClassifier(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_train1(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_StatModel_train2(intptr_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL ml_StatModel_calcError(intptr_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL ml_StatModel_predict(intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_StatModel_save(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_SVM_getType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setType(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getGamma(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setGamma(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getCoef0(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setCoef0(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getDegree(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setDegree(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getC(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setC(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getP(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setP(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getNu(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setNu(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_SVM_getClassWeights(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setClassWeights(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 CDECL ml_SVM_getTermCriteria(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setTermCriteria(intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL ml_SVM_getKernelType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_SVM_setKernel(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_SVM_getSupportVectors(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL ml_SVM_getDecisionFunction(intptr_t, int32_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D CDECL ml_SVM_getDefaultGrid(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_SVM_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL ml_Ptr_SVM_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL ml_Ptr_SVM_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL aruco_getPredefinedDictionary(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_detectMarkers(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_drawDetectedMarkers(intptr_t, intptr_t*, int32_t, int32_t*, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_drawMarker(intptr_t, int32_t, int32_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_drawAxis(intptr_t, intptr_t, double*, int32_t, double*, double*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL aruco_DetectorParameters_create();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_Ptr_DetectorParameters_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL aruco_Ptr_DetectorParameters_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setDoCornerRefinement(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setAdaptiveThreshConstant(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setCornerRefinementMinAccuracy(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setErrorCorrectionRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMaxErroneousBitsInBorderRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMaxMarkerPerimeterRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMinCornerDistanceRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMinMarkerDistanceRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMinMarkerPerimeterRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMinOtsuStdDev(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setPerspectiveRemoveIgnoredMarginPerCell(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setPolygonalApproxAccuracyRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setAdaptiveThreshWinSizeMax(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setAdaptiveThreshWinSizeMin(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setAdaptiveThreshWinSizeStep(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setCornerRefinementMaxIterations(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setCornerRefinementWinSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMarkerBorderBits(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setMinDistanceToBorder(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_DetectorParameters_setPerspectiveRemovePixelPerCell(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getDoCornerRefinement(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getAdaptiveThreshConstant(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getCornerRefinementMinAccuracy(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getErrorCorrectionRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMaxErroneousBitsInBorderRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMaxMarkerPerimeterRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMinCornerDistanceRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMinMarkerDistanceRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMinMarkerPerimeterRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getMinOtsuStdDev(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getPerspectiveRemoveIgnoredMarginPerCell(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL aruco_DetectorParameters_getPolygonalApproxAccuracyRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getAdaptiveThreshWinSizeMax(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getAdaptiveThreshWinSizeMin(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getAdaptiveThreshWinSizeStep(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getCornerRefinementMaxIterations(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getCornerRefinementWinSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getMarkerBorderBits(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getMinDistanceToBorder(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_DetectorParameters_getPerspectiveRemovePixelPerCell(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_Ptr_Dictionary_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL aruco_Ptr_Dictionary_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_Dictionary_setMarkerSize(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL aruco_Dictionary_setMaxCorrectionBits(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL aruco_Dictionary_getBytesList(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_Dictionary_getMarkerSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL aruco_Dictionary_getMaxCorrectionBits(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL bgsegm_createBackgroundSubtractorMOG(int32_t, int32_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_Ptr_BackgroundSubtractorMOG_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL bgsegm_Ptr_BackgroundSubtractorMOG_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorMOG_getHistory(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorMOG_setHistory(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorMOG_getNMixtures(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorMOG_setNMixtures(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorMOG_getBackgroundRatio(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorMOG_setBackgroundRatio(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorMOG_getNoiseSigma(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorMOG_setNoiseSigma(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL bgsegm_createBackgroundSubtractorGMG(int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_Ptr_BackgroundSubtractorGMG_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL bgsegm_Ptr_BackgroundSubtractorGMG_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorGMG_getMaxFeatures(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setMaxFeatures(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorGMG_getNumFrames(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setNumFrames(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorGMG_getQuantizationLevels(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setQuantizationLevels(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorGMG_getBackgroundPrior(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setBackgroundPrior(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorGMG_getSmoothingRadius(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setSmoothingRadius(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorGMG_getDecisionThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setDecisionThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorGMG_getMinVal(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setMinVal(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL bgsegm_BackgroundSubtractorGMG_getMaxVal(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL bgsegm_BackgroundSubtractorGMG_setMaxVal(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_Index_new(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_knnSearch1(intptr_t, float*, int32_t, int32_t*, float*, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_knnSearch2(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_knnSearch3(intptr_t, intptr_t, int32_t*, float*, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_radiusSearch1(intptr_t, float*, int32_t, int32_t*, int32_t, float*, int32_t, float, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_radiusSearch2(intptr_t, intptr_t, intptr_t, intptr_t, float, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_radiusSearch3(intptr_t, intptr_t, int32_t*, int32_t, float*, int32_t, float, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_Index_save(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_IndexParams_new();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_getString(intptr_t, char*, char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL flann_IndexParams_getInt(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL flann_IndexParams_getDouble(intptr_t, char*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setString(intptr_t, char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setInt(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setDouble(intptr_t, char*, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setFloat(intptr_t, char*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setBool(intptr_t, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_IndexParams_setAlgorithm(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_LinearIndexParams_new();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_LinearIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_KDTreeIndexParams_new(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_KDTreeIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_KMeansIndexParams_new(int32_t, int32_t, int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_KMeansIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_CompositeIndexParams_new(int32_t, int32_t, int32_t, int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_CompositeIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_AutotunedIndexParams_new(float, float, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_AutotunedIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_SavedIndexParams_new(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_SavedIndexParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL flann_SearchParams_new(int32_t, float, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL flann_SearchParams_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_namedWindow(char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_destroyWindow(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_destroyAllWindows();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_imshow(char*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL highgui_startWindowThread();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL highgui_waitKey(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_resizeWindow(char*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_moveWindow(char*, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_setWindowProperty(char*, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_setWindowTitle(char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL highgui_getWindowProperty(char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_setMouseCallback(char*, Il2CppMethodPointer, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL highgui_createTrackbar(char*, char*, int32_t*, int32_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL highgui_getTrackbarPos(char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL highgui_setTrackbarPos(char*, char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL highgui_createButton(char*, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgcodecs_imread(char*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgcodecs_imreadmulti(char*, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgcodecs_imwrite(char*, intptr_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgcodecs_imdecode_Mat(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgcodecs_imdecode_vector(uint8_t*, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL imgcodecs_imdecode_InputArray(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgcodecs_imencode_vector(char*, intptr_t, intptr_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgcodecs_cvConvertImage_CvArr(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL imgcodecs_cvConvertImage_Mat(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgcodecs_cvHaveImageReader(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL imgcodecs_cvHaveImageWriter(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_CascadeClassifier_new();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_CascadeClassifier_newFromFile(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_CascadeClassifier_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_CascadeClassifier_empty(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_CascadeClassifier_load(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_CascadeClassifier_read(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_CascadeClassifier_detectMultiScale1(intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_CascadeClassifier_detectMultiScale2(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_CascadeClassifier_isOldFormatCascade(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL objdetect_CascadeClassifier_getOriginalWindowSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_CascadeClassifier_getFeatureType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_sizeof();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_HOGDescriptor_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_HOGDescriptor_new2(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, double, int32_t, double, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_HOGDescriptor_new3(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL objdetect_HOGDescriptor_getDescriptorSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_checkDetectorSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL objdetect_HOGDescriptor_getWinSigma(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_setSVMDetector(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_load(intptr_t, char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_save(intptr_t, char*, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_compute(intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detect1(intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detect2(intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detectMultiScale1(intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detectMultiScale2(intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_computeGradient(intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detectROI(intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_detectMultiScaleROI(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_readALTModel(intptr_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_groupRectangles(intptr_t, intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL objdetect_HOGDescriptor_winSize_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL objdetect_HOGDescriptor_blockSize_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL objdetect_HOGDescriptor_blockStride_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 CDECL objdetect_HOGDescriptor_cellSize_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_nbins_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_derivAperture_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL objdetect_HOGDescriptor_winSigma_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_histogramNormType_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL objdetect_HOGDescriptor_L2HysThreshold_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_gammaCorrection_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL objdetect_HOGDescriptor_nlevels_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_winSize_set(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_blockSize_set(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_blockStride_set(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_cellSize_set(intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_nbins_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_derivAperture_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_winSigma_set(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_histogramNormType_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_L2HysThreshold_set(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_gammaCorrection_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_HOGDescriptor_nlevels_set(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_groupRectangles1(intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_groupRectangles2(intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_groupRectangles3(intptr_t, int32_t, double, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_groupRectangles4(intptr_t, intptr_t, intptr_t, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL objdetect_groupRectangles_meanshift(intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL optflow_motempl_updateMotionHistory(intptr_t, intptr_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL optflow_motempl_calcMotionGradient(intptr_t, intptr_t, intptr_t, double, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL optflow_motempl_calcGlobalOrientation(intptr_t, intptr_t, intptr_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL optflow_motempl_segmentMotion(intptr_t, intptr_t, intptr_t, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL optflow_calcOpticalFlowSF1(intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL optflow_calcOpticalFlowSF2(intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t, double, double, int32_t, double, double, double, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_uchar_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_uchar_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_uchar_new3(uint8_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_uchar_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_uchar_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_uchar_copy(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_uchar_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_int32_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_int32_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_int32_new3(int32_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_int32_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_int32_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_int32_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_float_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_float_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_float_new3(float*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_float_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_float_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_float_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_double_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_double_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_double_new3(double*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_double_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_double_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_double_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec2f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec2f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec2f_new3(Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec2f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec2f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec2f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec3f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec3f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec3f_new3(Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec3f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec3f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec3f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4f_new3(Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec4f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4i_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4i_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4i_new3(Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4i_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec4i_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec4i_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6f_new3(Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec6f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6d_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6d_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6d_new3(Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6d_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Vec6d_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Vec6d_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2i_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2i_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2i_new3(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2i_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2i_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Point2i_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2f_new3(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point2f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Point2f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point3f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point3f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point3f_new3(Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point3f_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Point3f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Point3f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Rect_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Rect_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Rect_new3(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Rect_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Rect_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Rect_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_ERStat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_ERStat_new2(intptr_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_ERStat_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_ERStat_getElement(intptr_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_ERStat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_KeyPoint_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_KeyPoint_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_KeyPoint_new3(KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_KeyPoint_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_KeyPoint_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_KeyPoint_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_DMatch_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_DMatch_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_DMatch_new3(DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_DMatch_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_DMatch_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_DMatch_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_int_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_int_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_int_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_int_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_int_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_int_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_int_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_float_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_float_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_float_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_float_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_float_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_float_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_float_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_double_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_double_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_double_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_double_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_double_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_double_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_double_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_KeyPoint_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_KeyPoint_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_KeyPoint_new3(intptr_t*, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_KeyPoint_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_KeyPoint_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_KeyPoint_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_KeyPoint_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_KeyPoint_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_DMatch_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_DMatch_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_DMatch_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_DMatch_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_DMatch_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_DMatch_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_DMatch_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point_new3(intptr_t, intptr_t*, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Vec2i_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Vec2i_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Vec2i_new3(intptr_t, intptr_t*, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Vec2i_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Vec2i_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Vec2i_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Vec2i_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Vec2i_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point2f_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point2f_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point2f_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point2f_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_Point2f_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point2f_copy(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_Point2f_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_string_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_string_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_string_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_string_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int8_t* CDECL vector_string_elemAt(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_string_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_string_setAt(intptr_t, int32_t, char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_ERStat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_ERStat_new2(intptr_t, intptr_t*, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_vector_ERStat_getSize1(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_ERStat_getSize2(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_ERStat_getElement(intptr_t, int32_t, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_vector_ERStat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Mat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Mat_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Mat_new3(intptr_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Mat_getSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL vector_Mat_getPointer(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Mat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Mat_assignToArray(intptr_t, intptr_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL vector_Mat_addref(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL stitching_createStitcher(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Ptr_Stitcher_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL stitching_Ptr_Stitcher_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL stitching_Stitcher_registrationResol(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setRegistrationResol(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL stitching_Stitcher_seamEstimationResol(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setSeamEstimationResol(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL stitching_Stitcher_compositingResol(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setCompositingResol(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL stitching_Stitcher_panoConfidenceThresh(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setPanoConfidenceThresh(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_waveCorrection(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setWaveCorrection(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_waveCorrectKind(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_setWaveCorrectKind(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_estimateTransform_InputArray1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_estimateTransform_InputArray2(intptr_t, intptr_t, intptr_t*, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_estimateTransform_MatArray1(intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_estimateTransform_MatArray2(intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_composePanorama1(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_composePanorama2_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_composePanorama2_MatArray(intptr_t, intptr_t*, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_stitch1_InputArray(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_stitch1_MatArray(intptr_t, intptr_t*, int32_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_stitch2_InputArray(intptr_t, intptr_t, intptr_t*, int32_t, int32_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL stitching_Stitcher_stitch2_MatArray(intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, int32_t*, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL stitching_Stitcher_component(intptr_t, intptr_t*, int32_t*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL stitching_Stitcher_workScale(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_FrameSource_nextFrame(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_FrameSource_reset(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createFrameSource_Empty();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createFrameSource_Video(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createFrameSource_Video_CUDA(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createFrameSource_Camera(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_Ptr_FrameSource_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_Ptr_FrameSource_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_SuperResolution_setInput(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_SuperResolution_nextFrame(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_SuperResolution_reset(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_SuperResolution_collectGarbage(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createSuperResolution_BTVL1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createSuperResolution_BTVL1_CUDA();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_Ptr_SuperResolution_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_Ptr_SuperResolution_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_DenseOpticalFlowExt_calc(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_DenseOpticalFlowExt_collectGarbage(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_Ptr_DenseOpticalFlowExt_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL superres_Ptr_DenseOpticalFlowExt_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_Farneback();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_Farneback_CUDA();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_DualTVL1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_DualTVL1_CUDA();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_Brox_CUDA();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL superres_createOptFlow_PyrLK_CUDA();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_computeNMChannels(intptr_t, intptr_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_MSERsToERStats(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_createOCRHMMTransitionsTable(char*, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_detectRegions(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_erGrouping1(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, char*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_erGrouping2(intptr_t, intptr_t, intptr_t, intptr_t, int32_t, char*, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_ERStat_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_ERStat_new2(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERStat_getRect(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL text_ERStat_getProbability(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERStat_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_loadOCRHMMClassifierCNN(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_loadOCRHMMClassifierNM(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRHMMDecoder_ClassifierCallback_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRHMMDecoder_ClassifierCallback_eval(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_OCRHMMDecoder_create(intptr_t, char*, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRHMMDecoder_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRHMMDecoder_run(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_loadOCRBeamSearchClassifierCNN(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRBeamSearchDecoder_ClassifierCallback_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRBeamSearchDecoder_ClassifierCallback_eval(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_OCRBeamSearchDecoder_create(intptr_t, char*, intptr_t, intptr_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRBeamSearchDecoder_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRBeamSearchDecoder_run(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_OCRBeamSearchDecoder_run2(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL text_ERFilter_Callback_eval(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_Callback_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_loadClassifierNM1(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_loadClassifierNM2(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_createERFilterNM1(intptr_t, int32_t, float, float, float, uint8_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL text_createERFilterNM2(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_run(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setCallback(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setThresholdDelta(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setMinArea(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setMaxArea(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setMinProbability(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setMinProbabilityDiff(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL text_ERFilter_setNonMaxSuppression(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL text_ERFilter_getNumRejected(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL tracking_Tracker_create(char*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL tracking_Tracker_init(intptr_t, intptr_t, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL tracking_Tracker_update(intptr_t, intptr_t, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL tracking_Ptr_Tracker_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL tracking_Ptr_Tracker_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_BriefDescriptorExtractor_create(int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_Ptr_BriefDescriptorExtractor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_BriefDescriptorExtractor_read(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_BriefDescriptorExtractor_write(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_BriefDescriptorExtractor_descriptorSize(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_BriefDescriptorExtractor_descriptorType(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_Ptr_BriefDescriptorExtractor_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_FREAK_create(int32_t, int32_t, float, int32_t, int32_t*, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_Ptr_FREAK_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_Ptr_FREAK_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_StarDetector_create(int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_Ptr_StarDetector_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_Ptr_StarDetector_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_SURF_create(double, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_Ptr_SURF_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_Ptr_SURF_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL xfeatures2d_SURF_getHessianThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_SURF_getNOctaves(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_SURF_getNOctaveLayers(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_SURF_getExtended(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL xfeatures2d_SURF_getUpright(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_SURF_setHessianThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_SURF_setNOctaves(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_SURF_setNOctaveLayers(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_SURF_setExtended(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_SURF_setUpright(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_SIFT_create(int32_t, int32_t, double, double, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xfeatures2d_Ptr_SIFT_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL xfeatures2d_Ptr_SIFT_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL xphoto_balanceWhite(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_inpaint(intptr_t, intptr_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_fastNlMeansDenoising(intptr_t, intptr_t, float, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_fastNlMeansDenoisingColored(intptr_t, intptr_t, float, float, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_fastNlMeansDenoisingMulti(intptr_t*, int32_t, intptr_t, int32_t, int32_t, float, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_fastNlMeansDenoisingColoredMulti(intptr_t*, int32_t, intptr_t, int32_t, int32_t, float, float, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_denoise_TVL1(intptr_t*, int32_t, intptr_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_decolor(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_seamlessClone(intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_colorChange(intptr_t, intptr_t, intptr_t, float, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_illuminationChange(intptr_t, intptr_t, intptr_t, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_textureFlattening(intptr_t, intptr_t, intptr_t, float, float, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_edgePreservingFilter(intptr_t, intptr_t, int32_t, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_detailEnhance(intptr_t, intptr_t, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_pencilSketch(intptr_t, intptr_t, intptr_t, float, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_stylization(intptr_t, intptr_t, float, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL photo_createCalibrateDebevec(int32_t, float, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL photo_createCalibrateRobertson(int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_Ptr_CalibrateDebevec_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_Ptr_CalibrateRobertson_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL photo_Ptr_CalibrateDebevec_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL photo_Ptr_CalibrateRobertson_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL photo_CalibrateCRF_process(intptr_t, intptr_t*, int32_t, intptr_t, float*);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeDistanceExtractor_computeDistance(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_Ptr_ShapeContextDistanceExtractor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL shape_Ptr_ShapeContextDistanceExtractor_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setAngularBins(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL shape_ShapeContextDistanceExtractor_getAngularBins(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setRadialBins(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL shape_ShapeContextDistanceExtractor_getRadialBins(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setInnerRadius(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getInnerRadius(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setOuterRadius(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getOuterRadius(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setRotationInvariant(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL shape_ShapeContextDistanceExtractor_getRotationInvariant(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setShapeContextWeight(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getShapeContextWeight(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setImageAppearanceWeight(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getImageAppearanceWeight(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setBendingEnergyWeight(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getBendingEnergyWeight(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setImages(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_getImages(intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setIterations(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL shape_ShapeContextDistanceExtractor_getIterations(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_ShapeContextDistanceExtractor_setStdDev(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_ShapeContextDistanceExtractor_getStdDev(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL shape_createShapeContextDistanceExtractor(int32_t, int32_t, float, float, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_Ptr_HausdorffDistanceExtractor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL shape_Ptr_HausdorffDistanceExtractor_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_HausdorffDistanceExtractor_setDistanceFlag(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL shape_HausdorffDistanceExtractor_getDistanceFlag(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL shape_HausdorffDistanceExtractor_setRankProportion(intptr_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C float CDECL shape_HausdorffDistanceExtractor_getRankProportion(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL shape_createHausdorffDistanceExtractor(int32_t, float);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 CDECL video_CamShift(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_meanShift(intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_new1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_new2(int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_KalmanFilter_init(intptr_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_KalmanFilter_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_predict(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_correct(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_statePre(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_statePost(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_transitionMatrix(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_controlMatrix(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_measurementMatrix(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_processNoiseCov(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_measurementNoiseCov(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_errorCovPre(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_gain(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_KalmanFilter_errorCovPost(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_buildOpticalFlowPyramid1(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_buildOpticalFlowPyramid2(intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_calcOpticalFlowPyrLK_InputArray(intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_calcOpticalFlowPyrLK_vector(intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_calcOpticalFlowFarneback(intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, int32_t, int32_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_estimateRigidTransform(intptr_t, intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_DenseOpticalFlow_calc(intptr_t, intptr_t, intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_DenseOpticalFlow_collectGarbage(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_createOptFlow_DualTVL1();
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_Ptr_DenseOpticalFlow_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_Ptr_DenseOpticalFlow_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractor_getBackgroundImage(intptr_t, intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractor_apply(intptr_t, intptr_t, intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_Ptr_BackgroundSubtractor_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_Ptr_BackgroundSubtractor_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_createBackgroundSubtractorMOG2(int32_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_Ptr_BackgroundSubtractorMOG2_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_Ptr_BackgroundSubtractorMOG2_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorMOG2_getHistory(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setHistory(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorMOG2_getNMixtures(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setNMixtures(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getBackgroundRatio(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setBackgroundRatio(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getVarThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setVarThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getVarThresholdGen(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setVarThresholdGen(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getVarInit(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setVarInit(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getVarMin(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setVarMin(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getVarMax(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setVarMax(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getComplexityReductionThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setComplexityReductionThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorMOG2_getDetectShadows(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setDetectShadows(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorMOG2_getShadowValue(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setShadowValue(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorMOG2_getShadowThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorMOG2_setShadowThreshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_createBackgroundSubtractorKNN(int32_t, double, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_Ptr_BackgroundSubtractorKNN_delete(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C intptr_t CDECL video_Ptr_BackgroundSubtractorKNN_get(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getHistory(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setHistory(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getNSamples(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setNSamples(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getDist2Threshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setDist2Threshold(intptr_t, double);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getkNNSamples(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setkNNSamples(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getDetectShadows(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setDetectShadows(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C int32_t CDECL video_BackgroundSubtractorKNN_getShadowValue(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setShadowValue(intptr_t, int32_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C double CDECL video_BackgroundSubtractorKNN_getShadowThreshold(intptr_t);
#endif
#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
IL2CPP_EXTERN_C void CDECL video_BackgroundSubtractorKNN_setShadowThreshold(intptr_t, double);
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// UnityEngine.GameObject AnchorCreator::get_AnchorPrefab()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* AnchorCreator_get_AnchorPrefab_mBBAF7805E9D9F8D79408EE642D153BC76306B25A (AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED* __this, const RuntimeMethod* method) 
{
	{
		// get => m_AnchorPrefab;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_0 = __this->___m_AnchorPrefab_4;
		return L_0;
	}
}
// System.Void AnchorCreator::set_AnchorPrefab(UnityEngine.GameObject)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnchorCreator_set_AnchorPrefab_m53CC9CC3022C713826B44536B48B462C8A1FACFF (AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED* __this, GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* ___0_value, const RuntimeMethod* method) 
{
	{
		// set => m_AnchorPrefab = value;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_0 = ___0_value;
		__this->___m_AnchorPrefab_4 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_AnchorPrefab_4), (void*)L_0);
		return;
	}
}
// System.Void AnchorCreator::RemoveAllAnchors()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnchorCreator_RemoveAllAnchors_m6BA302DD9EECA47969FD3F6E5397441DCB09ED21 (AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Enumerator_Dispose_m8A7D84A46E830A9A7C690AFD40780E721E0212D3_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Enumerator_MoveNext_mE9F6469E9C52AF5A301EC8FEF983A3C5BFBF2C4F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Enumerator_get_Current_m765B5B047B9C59BB1A6DF6B8B884A1714DF83060_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Clear_m5FC367B31C239426FA8CCE3EEB6D76AA2684BCAC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_GetEnumerator_mEE1B2EFD76218372C2F754E07BFDE6CA16244502_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// foreach (var anchor in m_AnchorPoints)
		List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53* L_0 = __this->___m_AnchorPoints_6;
		NullCheck(L_0);
		Enumerator_t931CB0AD3EC6D604C0583DE600B7B530E43D9054 L_1;
		L_1 = List_1_GetEnumerator_mEE1B2EFD76218372C2F754E07BFDE6CA16244502(L_0, List_1_GetEnumerator_mEE1B2EFD76218372C2F754E07BFDE6CA16244502_RuntimeMethod_var);
		V_0 = L_1;
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0025:
			{// begin finally (depth: 1)
				Enumerator_Dispose_m8A7D84A46E830A9A7C690AFD40780E721E0212D3((&V_0), Enumerator_Dispose_m8A7D84A46E830A9A7C690AFD40780E721E0212D3_RuntimeMethod_var);
				return;
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			{
				goto IL_001a_1;
			}

IL_000e_1:
			{
				// foreach (var anchor in m_AnchorPoints)
				ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* L_2;
				L_2 = Enumerator_get_Current_m765B5B047B9C59BB1A6DF6B8B884A1714DF83060_inline((&V_0), Enumerator_get_Current_m765B5B047B9C59BB1A6DF6B8B884A1714DF83060_RuntimeMethod_var);
				// Destroy(anchor);
				il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
				Object_Destroy_mE97D0A766419A81296E8D4E5C23D01D3FE91ACBB(L_2, NULL);
			}

IL_001a_1:
			{
				// foreach (var anchor in m_AnchorPoints)
				bool L_3;
				L_3 = Enumerator_MoveNext_mE9F6469E9C52AF5A301EC8FEF983A3C5BFBF2C4F((&V_0), Enumerator_MoveNext_mE9F6469E9C52AF5A301EC8FEF983A3C5BFBF2C4F_RuntimeMethod_var);
				if (L_3)
				{
					goto IL_000e_1;
				}
			}
			{
				goto IL_0033;
			}
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0033:
	{
		// m_AnchorPoints.Clear();
		List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53* L_4 = __this->___m_AnchorPoints_6;
		NullCheck(L_4);
		List_1_Clear_m5FC367B31C239426FA8CCE3EEB6D76AA2684BCAC_inline(L_4, List_1_Clear_m5FC367B31C239426FA8CCE3EEB6D76AA2684BCAC_RuntimeMethod_var);
		// }
		return;
	}
}
// System.Void AnchorCreator::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnchorCreator_Awake_m8820A3F157354D7EDED7B2D7CE2BFA42844F1F8E (AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E_mABCA912A8D3AFCEEA2F2FE0EF30C541DA7DD7907_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928_m668A6CC15F573ABC389E612A2423599B5ADDC2EF_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44_m255D1364D056A608CF5BB4AAB1BA1AD4CB78DE83_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_m97CA83C0EF5D88B61FDF3CE17A6A4A8677697DD4_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_RaycastManager = GetComponent<ARRaycastManager>();
		ARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44* L_0;
		L_0 = Component_GetComponent_TisARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44_m255D1364D056A608CF5BB4AAB1BA1AD4CB78DE83(__this, Component_GetComponent_TisARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44_m255D1364D056A608CF5BB4AAB1BA1AD4CB78DE83_RuntimeMethod_var);
		__this->___m_RaycastManager_7 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_RaycastManager_7), (void*)L_0);
		// m_AnchorManager = GetComponent<ARAnchorManager>();
		ARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E* L_1;
		L_1 = Component_GetComponent_TisARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E_mABCA912A8D3AFCEEA2F2FE0EF30C541DA7DD7907(__this, Component_GetComponent_TisARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E_mABCA912A8D3AFCEEA2F2FE0EF30C541DA7DD7907_RuntimeMethod_var);
		__this->___m_AnchorManager_8 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_AnchorManager_8), (void*)L_1);
		// m_PlaneManager = GetComponent<ARPlaneManager>();
		ARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928* L_2;
		L_2 = Component_GetComponent_TisARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928_m668A6CC15F573ABC389E612A2423599B5ADDC2EF(__this, Component_GetComponent_TisARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928_m668A6CC15F573ABC389E612A2423599B5ADDC2EF_RuntimeMethod_var);
		__this->___m_PlaneManager_9 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_PlaneManager_9), (void*)L_2);
		// m_AnchorPoints = new List<ARAnchor>();
		List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53* L_3 = (List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53*)il2cpp_codegen_object_new(List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		List_1__ctor_m97CA83C0EF5D88B61FDF3CE17A6A4A8677697DD4(L_3, List_1__ctor_m97CA83C0EF5D88B61FDF3CE17A6A4A8677697DD4_RuntimeMethod_var);
		__this->___m_AnchorPoints_6 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_AnchorPoints_6), (void*)L_3);
		// }
		return;
	}
}
// System.Void AnchorCreator::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnchorCreator_Update_mA0A8BCCBAB0AE50DB087524E6273D11F1D6456D0 (AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_m9DD96A685E24BAB041179C80B0CF8875AE04426A_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m443F0D48247776D4257E06597AF794BCF6D8020F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_Instantiate_TisGameObject_t76FEDD663AB33C991A9C9A23129337651094216F_m58C654F1134533E29502629CA67645682B404811_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral849043193B4849A97BE2F08CFC3CAC883A0F096C);
		s_Il2CppMethodInitialized = true;
	}
	Touch_t03E51455ED508492B3F278903A0114FA0E87B417 V_0;
	memset((&V_0), 0, sizeof(V_0));
	Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971 V_1;
	memset((&V_1), 0, sizeof(V_1));
	TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 V_2;
	memset((&V_2), 0, sizeof(V_2));
	ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* V_3 = NULL;
	ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* V_4 = NULL;
	ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70 V_5;
	memset((&V_5), 0, sizeof(V_5));
	{
		// if (Input.touchCount == 0)
		int32_t L_0;
		L_0 = Input_get_touchCount_m057388BFC67A0F4CA53764B1022867ED81D01E39(NULL);
		if (L_0)
		{
			goto IL_0008;
		}
	}
	{
		// return;
		return;
	}

IL_0008:
	{
		// var touch = Input.GetTouch(0);
		Touch_t03E51455ED508492B3F278903A0114FA0E87B417 L_1;
		L_1 = Input_GetTouch_m75D99FE801A94279874FA8DC6B6ADAD35F5123B1(0, NULL);
		V_0 = L_1;
		// if (touch.phase != TouchPhase.Began)
		int32_t L_2;
		L_2 = Touch_get_phase_mB82409FB2BE1C32ABDBA6A72E52A099D28AB70B0((&V_0), NULL);
		if (!L_2)
		{
			goto IL_0019;
		}
	}
	{
		// return;
		return;
	}

IL_0019:
	{
		// if (m_RaycastManager.Raycast(touch.position, s_Hits, TrackableType.PlaneWithinPolygon))
		ARRaycastManager_tD9459374F0F5BD9E2E4A8A1C665E7F33F9C2EE44* L_3 = __this->___m_RaycastManager_7;
		Vector2_t1FD6F485C871E832B347AB2DC8CBA08B739D8DF7 L_4;
		L_4 = Touch_get_position_m41B9EB0F3F3E1BE98CEB388253A9E31979CB964A((&V_0), NULL);
		il2cpp_codegen_runtime_class_init_inline(AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_il2cpp_TypeInfo_var);
		List_1_t0754071572EFE7A5C92A59495D2524FC935364E3* L_5 = ((AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_StaticFields*)il2cpp_codegen_static_fields_for(AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_il2cpp_TypeInfo_var))->___s_Hits_5;
		NullCheck(L_3);
		bool L_6;
		L_6 = ARRaycastManager_Raycast_mF56A1E2D7CBB61131E4D844ADA9D0CC1F6B53EAC(L_3, L_4, L_5, 1, NULL);
		if (!L_6)
		{
			goto IL_00ae;
		}
	}
	{
		// var hitPose = s_Hits[0].pose;
		il2cpp_codegen_runtime_class_init_inline(AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_il2cpp_TypeInfo_var);
		List_1_t0754071572EFE7A5C92A59495D2524FC935364E3* L_7 = ((AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_StaticFields*)il2cpp_codegen_static_fields_for(AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_il2cpp_TypeInfo_var))->___s_Hits_5;
		NullCheck(L_7);
		ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70 L_8;
		L_8 = List_1_get_Item_m443F0D48247776D4257E06597AF794BCF6D8020F(L_7, 0, List_1_get_Item_m443F0D48247776D4257E06597AF794BCF6D8020F_RuntimeMethod_var);
		V_5 = L_8;
		Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971 L_9;
		L_9 = ARRaycastHit_get_pose_m84C13E71E21FE12CBA9AAD98DC28B1E414C9EFFD((&V_5), NULL);
		V_1 = L_9;
		// var hitTrackableId = s_Hits[0].trackableId;
		List_1_t0754071572EFE7A5C92A59495D2524FC935364E3* L_10 = ((AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_StaticFields*)il2cpp_codegen_static_fields_for(AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_il2cpp_TypeInfo_var))->___s_Hits_5;
		NullCheck(L_10);
		ARRaycastHit_tB32B5606815B8A7DF479C00187A852F8D20E3B70 L_11;
		L_11 = List_1_get_Item_m443F0D48247776D4257E06597AF794BCF6D8020F(L_10, 0, List_1_get_Item_m443F0D48247776D4257E06597AF794BCF6D8020F_RuntimeMethod_var);
		V_5 = L_11;
		TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 L_12;
		L_12 = ARRaycastHit_get_trackableId_m4E510F2C326AFF23086203E4241C8F9B293616C3((&V_5), NULL);
		V_2 = L_12;
		// var hitPlane = m_PlaneManager.GetPlane(hitTrackableId);
		ARPlaneManager_t9DA6C512BDCFFBEE8B3DAA7170EB3BFFDE26A928* L_13 = __this->___m_PlaneManager_9;
		TrackableId_t49EAE8AA4B9584E314518723DC22B66496D47AD7 L_14 = V_2;
		NullCheck(L_13);
		ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* L_15;
		L_15 = ARPlaneManager_GetPlane_m49FC33F6BC0DCFE67C4FC5F5CEE99CC8A7036FAE(L_13, L_14, NULL);
		V_3 = L_15;
		// var anchor = m_AnchorManager.AttachAnchor(hitPlane, hitPose);
		ARAnchorManager_tF68C46300BD6F2E83E3360BF9297C3C50F5D6B3E* L_16 = __this->___m_AnchorManager_8;
		ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* L_17 = V_3;
		Pose_t06BA69EAA6E9FAF60056D519A87D25F54AFE7971 L_18 = V_1;
		NullCheck(L_16);
		ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* L_19;
		L_19 = ARAnchorManager_AttachAnchor_m8FA6B772401F90B38A06F43B8EA1B02EA82FFA75(L_16, L_17, L_18, NULL);
		V_4 = L_19;
		// Instantiate(m_AnchorPrefab, anchor.transform);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_20 = __this->___m_AnchorPrefab_4;
		ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* L_21 = V_4;
		NullCheck(L_21);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_22;
		L_22 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_21, NULL);
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_23;
		L_23 = Object_Instantiate_TisGameObject_t76FEDD663AB33C991A9C9A23129337651094216F_m58C654F1134533E29502629CA67645682B404811(L_20, L_22, Object_Instantiate_TisGameObject_t76FEDD663AB33C991A9C9A23129337651094216F_m58C654F1134533E29502629CA67645682B404811_RuntimeMethod_var);
		// if (anchor == null)
		ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* L_24 = V_4;
		bool L_25;
		L_25 = Object_op_Equality_mB6120F782D83091EF56A198FCEBCF066DB4A9605(L_24, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		if (!L_25)
		{
			goto IL_00a1;
		}
	}
	{
		// Debug.Log("Error creating anchor.");
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(_stringLiteral849043193B4849A97BE2F08CFC3CAC883A0F096C, NULL);
		return;
	}

IL_00a1:
	{
		// m_AnchorPoints.Add(anchor);
		List_1_t5C2EBF017989E44F3D1D11AF502E10F6F8D9AB53* L_26 = __this->___m_AnchorPoints_6;
		ARAnchor_t832D3D366D3F1D43F995A298974D4EDABACC0E06* L_27 = V_4;
		NullCheck(L_26);
		List_1_Add_m9DD96A685E24BAB041179C80B0CF8875AE04426A_inline(L_26, L_27, List_1_Add_m9DD96A685E24BAB041179C80B0CF8875AE04426A_RuntimeMethod_var);
	}

IL_00ae:
	{
		// }
		return;
	}
}
// System.Void AnchorCreator::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnchorCreator__ctor_m702B01425680D7FD1C9272A423AAF8A913E5476E (AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED* __this, const RuntimeMethod* method) 
{
	{
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
// System.Void AnchorCreator::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AnchorCreator__cctor_mDE519BED5D639DA8CD4FA7E389C3D97DF4BA54C4 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_m6B5722DD0A8C0D3D4A1656C5A5E8D0A784DC85B9_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_t0754071572EFE7A5C92A59495D2524FC935364E3_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// static List<ARRaycastHit> s_Hits = new List<ARRaycastHit>();
		List_1_t0754071572EFE7A5C92A59495D2524FC935364E3* L_0 = (List_1_t0754071572EFE7A5C92A59495D2524FC935364E3*)il2cpp_codegen_object_new(List_1_t0754071572EFE7A5C92A59495D2524FC935364E3_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		List_1__ctor_m6B5722DD0A8C0D3D4A1656C5A5E8D0A784DC85B9(L_0, List_1__ctor_m6B5722DD0A8C0D3D4A1656C5A5E8D0A784DC85B9_RuntimeMethod_var);
		((AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_StaticFields*)il2cpp_codegen_static_fields_for(AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_il2cpp_TypeInfo_var))->___s_Hits_5 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_StaticFields*)il2cpp_codegen_static_fields_for(AnchorCreator_tBBEE94135B5183E0A8EE52FB00513F69C7C980ED_il2cpp_TypeInfo_var))->___s_Hits_5), (void*)L_0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Single ARFeatheredPlaneMeshVisualizer::get_featheringWidth()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float ARFeatheredPlaneMeshVisualizer_get_featheringWidth_m14D3A8BE3E9A745E6FD525B19ADDC892B8399B4D (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, const RuntimeMethod* method) 
{
	{
		// get { return m_FeatheringWidth; }
		float L_0 = __this->___m_FeatheringWidth_4;
		return L_0;
	}
}
// System.Void ARFeatheredPlaneMeshVisualizer::set_featheringWidth(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARFeatheredPlaneMeshVisualizer_set_featheringWidth_mD616A09A3B426EA5DE1FA37334DD194E43EEC110 (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, float ___0_value, const RuntimeMethod* method) 
{
	{
		// set { m_FeatheringWidth = value; }
		float L_0 = ___0_value;
		__this->___m_FeatheringWidth_4 = L_0;
		// set { m_FeatheringWidth = value; }
		return;
	}
}
// System.Void ARFeatheredPlaneMeshVisualizer::Awake()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARFeatheredPlaneMeshVisualizer_Awake_mC5DB0414A2514BF4851266C25141C903F0AC57BA (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F_m41229EDC62D1149A73F81E7B0BE27B4C1C293A01_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0_m8005DAC7F65600404981B996A714B5C7D29A359F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisMeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE_m0EDA0079FA3617687C4A28623B79A37D618D9CFB_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_PlaneMeshVisualizer = GetComponent<ARPlaneMeshVisualizer>();
		ARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F* L_0;
		L_0 = Component_GetComponent_TisARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F_m41229EDC62D1149A73F81E7B0BE27B4C1C293A01(__this, Component_GetComponent_TisARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F_m41229EDC62D1149A73F81E7B0BE27B4C1C293A01_RuntimeMethod_var);
		__this->___m_PlaneMeshVisualizer_7 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_PlaneMeshVisualizer_7), (void*)L_0);
		// m_FeatheredPlaneMaterial = GetComponent<MeshRenderer>().material;
		MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* L_1;
		L_1 = Component_GetComponent_TisMeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE_m0EDA0079FA3617687C4A28623B79A37D618D9CFB(__this, Component_GetComponent_TisMeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE_m0EDA0079FA3617687C4A28623B79A37D618D9CFB_RuntimeMethod_var);
		NullCheck(L_1);
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_2;
		L_2 = Renderer_get_material_m5BA2A00816C4CC66580D4B2E409CF10718C15656(L_1, NULL);
		__this->___m_FeatheredPlaneMaterial_9 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_FeatheredPlaneMaterial_9), (void*)L_2);
		// m_Plane = GetComponent<ARPlane>();
		ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* L_3;
		L_3 = Component_GetComponent_TisARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0_m8005DAC7F65600404981B996A714B5C7D29A359F(__this, Component_GetComponent_TisARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0_m8005DAC7F65600404981B996A714B5C7D29A359F_RuntimeMethod_var);
		__this->___m_Plane_8 = L_3;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___m_Plane_8), (void*)L_3);
		// }
		return;
	}
}
// System.Void ARFeatheredPlaneMeshVisualizer::OnEnable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARFeatheredPlaneMeshVisualizer_OnEnable_m8781C85CFED871C8A81A5B88DB1031856E0FC9F0 (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ARFeatheredPlaneMeshVisualizer_ARPlane_boundaryUpdated_mB3D9BBD14EA1FE3ECDBACC2DB89C1B110B8B6B5F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_Plane.boundaryChanged += ARPlane_boundaryUpdated;
		ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* L_0 = __this->___m_Plane_8;
		Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074* L_1 = (Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074*)il2cpp_codegen_object_new(Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m83B9B49A5CEF71BC8798C9C8B7989333626CF3E1(L_1, __this, (intptr_t)((void*)ARFeatheredPlaneMeshVisualizer_ARPlane_boundaryUpdated_mB3D9BBD14EA1FE3ECDBACC2DB89C1B110B8B6B5F_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		ARPlane_add_boundaryChanged_m6A9CA2ADF4742C004EF7BCFD48A7C820320616AA(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Void ARFeatheredPlaneMeshVisualizer::OnDisable()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARFeatheredPlaneMeshVisualizer_OnDisable_m2343B05B1A8F14BAD4DD516C584281B66FE6A4E8 (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ARFeatheredPlaneMeshVisualizer_ARPlane_boundaryUpdated_mB3D9BBD14EA1FE3ECDBACC2DB89C1B110B8B6B5F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// m_Plane.boundaryChanged -= ARPlane_boundaryUpdated;
		ARPlane_tB2F02248AD4019D141553B25C1B9005913E98EF0* L_0 = __this->___m_Plane_8;
		Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074* L_1 = (Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074*)il2cpp_codegen_object_new(Action_1_t762BEDF03B3FAD9E52246AF6B4291030B8085074_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Action_1__ctor_m83B9B49A5CEF71BC8798C9C8B7989333626CF3E1(L_1, __this, (intptr_t)((void*)ARFeatheredPlaneMeshVisualizer_ARPlane_boundaryUpdated_mB3D9BBD14EA1FE3ECDBACC2DB89C1B110B8B6B5F_RuntimeMethod_var), NULL);
		NullCheck(L_0);
		ARPlane_remove_boundaryChanged_m6F71EEF2CD3C71AF069C5FE6CD993906BD8A9A10(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Void ARFeatheredPlaneMeshVisualizer::ARPlane_boundaryUpdated(UnityEngine.XR.ARFoundation.ARPlaneBoundaryChangedEventArgs)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARFeatheredPlaneMeshVisualizer_ARPlane_boundaryUpdated_mB3D9BBD14EA1FE3ECDBACC2DB89C1B110B8B6B5F (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, ARPlaneBoundaryChangedEventArgs_tE59EDE94575C8947AD3F1F8DA1370D0A426A5FFC ___0_eventArgs, const RuntimeMethod* method) 
{
	{
		// GenerateBoundaryUVs(m_PlaneMeshVisualizer.mesh);
		ARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F* L_0 = __this->___m_PlaneMeshVisualizer_7;
		NullCheck(L_0);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_1;
		L_1 = ARPlaneMeshVisualizer_get_mesh_m6C1A730CECE8AE0A0549ED615AB3B3D66E4A0FD8_inline(L_0, NULL);
		ARFeatheredPlaneMeshVisualizer_GenerateBoundaryUVs_mF756D3C1F7925A69CD8C7C8CCE56209AB321FEF5(__this, L_1, NULL);
		// }
		return;
	}
}
// System.Void ARFeatheredPlaneMeshVisualizer::GenerateBoundaryUVs(UnityEngine.Mesh)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARFeatheredPlaneMeshVisualizer_GenerateBoundaryUVs_mF756D3C1F7925A69CD8C7C8CCE56209AB321FEF5 (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ___0_mesh, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_m79E50C4F592B1703F4B76A8BE7B4855515460CA1_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Clear_m455780C5A45049F9BDC25EAD3BA10A681D16385D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Capacity_m1810FC505867C713DCDDD7468F8BA2BF1DF0D3B6_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Count_m46EEFFA770BE665EA0CB3A5332E941DA4B3C1D37_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_get_Item_m8F2E15FC96DA75186C51228128A0660709E4E810_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_set_Capacity_mF3F5104AB534524CF6D04659241FBD48C9080FFE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral131018280018B48DB9FF86A96C7535E6FA339C24);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_1;
	memset((&V_1), 0, sizeof(V_1));
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_2;
	memset((&V_2), 0, sizeof(V_2));
	float V_3 = 0.0f;
	int32_t V_4 = 0;
	float V_5 = 0.0f;
	{
		// int vertexCount = mesh.vertexCount;
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_0 = ___0_mesh;
		NullCheck(L_0);
		int32_t L_1;
		L_1 = Mesh_get_vertexCount_mB7BE0340AAF272933068D830C8E711FC8978E12C(L_0, NULL);
		V_0 = L_1;
		// s_FeatheringUVs.Clear();
		il2cpp_codegen_runtime_class_init_inline(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var);
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_2 = ((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_FeatheringUVs_5;
		NullCheck(L_2);
		List_1_Clear_m455780C5A45049F9BDC25EAD3BA10A681D16385D_inline(L_2, List_1_Clear_m455780C5A45049F9BDC25EAD3BA10A681D16385D_RuntimeMethod_var);
		// if (s_FeatheringUVs.Capacity < vertexCount) { s_FeatheringUVs.Capacity = vertexCount; }
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_3 = ((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_FeatheringUVs_5;
		NullCheck(L_3);
		int32_t L_4;
		L_4 = List_1_get_Capacity_m1810FC505867C713DCDDD7468F8BA2BF1DF0D3B6(L_3, List_1_get_Capacity_m1810FC505867C713DCDDD7468F8BA2BF1DF0D3B6_RuntimeMethod_var);
		int32_t L_5 = V_0;
		if ((((int32_t)L_4) >= ((int32_t)L_5)))
		{
			goto IL_0029;
		}
	}
	{
		// if (s_FeatheringUVs.Capacity < vertexCount) { s_FeatheringUVs.Capacity = vertexCount; }
		il2cpp_codegen_runtime_class_init_inline(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var);
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_6 = ((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_FeatheringUVs_5;
		int32_t L_7 = V_0;
		NullCheck(L_6);
		List_1_set_Capacity_mF3F5104AB534524CF6D04659241FBD48C9080FFE(L_6, L_7, List_1_set_Capacity_mF3F5104AB534524CF6D04659241FBD48C9080FFE_RuntimeMethod_var);
	}

IL_0029:
	{
		// mesh.GetVertices(s_Vertices);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_8 = ___0_mesh;
		il2cpp_codegen_runtime_class_init_inline(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var);
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_9 = ((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_Vertices_6;
		NullCheck(L_8);
		Mesh_GetVertices_m5BF8777074E383AD8C4B9974D27E4AB52963D92E(L_8, L_9, NULL);
		// Vector3 centerInPlaneSpace = s_Vertices[s_Vertices.Count - 1];
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_10 = ((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_Vertices_6;
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_11 = ((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_Vertices_6;
		NullCheck(L_11);
		int32_t L_12;
		L_12 = List_1_get_Count_m46EEFFA770BE665EA0CB3A5332E941DA4B3C1D37_inline(L_11, List_1_get_Count_m46EEFFA770BE665EA0CB3A5332E941DA4B3C1D37_RuntimeMethod_var);
		NullCheck(L_10);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_13;
		L_13 = List_1_get_Item_m8F2E15FC96DA75186C51228128A0660709E4E810(L_10, ((int32_t)il2cpp_codegen_subtract(L_12, 1)), List_1_get_Item_m8F2E15FC96DA75186C51228128A0660709E4E810_RuntimeMethod_var);
		V_1 = L_13;
		// Vector3 uv = new Vector3(0, 0, 0);
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&V_2), (0.0f), (0.0f), (0.0f), NULL);
		// float shortestUVMapping = float.MaxValue;
		V_3 = ((std::numeric_limits<float>::max)());
		// for (int i = 0; i < vertexCount - 1; i++)
		V_4 = 0;
		goto IL_00b5;
	}

IL_006c:
	{
		// float vertexDist = Vector3.Distance(s_Vertices[i], centerInPlaneSpace);
		il2cpp_codegen_runtime_class_init_inline(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var);
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_14 = ((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_Vertices_6;
		int32_t L_15 = V_4;
		NullCheck(L_14);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_16;
		L_16 = List_1_get_Item_m8F2E15FC96DA75186C51228128A0660709E4E810(L_14, L_15, List_1_get_Item_m8F2E15FC96DA75186C51228128A0660709E4E810_RuntimeMethod_var);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_17 = V_1;
		float L_18;
		L_18 = Vector3_Distance_m2314DB9B8BD01157E013DF87BEA557375C7F9FF9_inline(L_16, L_17, NULL);
		// float uvMapping = vertexDist / Mathf.Max(vertexDist - featheringWidth, 0.001f);
		float L_19 = L_18;
		float L_20;
		L_20 = ARFeatheredPlaneMeshVisualizer_get_featheringWidth_m14D3A8BE3E9A745E6FD525B19ADDC892B8399B4D_inline(__this, NULL);
		float L_21;
		L_21 = Mathf_Max_mF5379E63D2BBAC76D090748695D833934F8AD051_inline(((float)il2cpp_codegen_subtract(L_19, L_20)), (0.00100000005f), NULL);
		V_5 = ((float)(L_19/L_21));
		// uv.x = uvMapping;
		float L_22 = V_5;
		(&V_2)->___x_2 = L_22;
		// if (shortestUVMapping > uvMapping) { shortestUVMapping = uvMapping; }
		float L_23 = V_3;
		float L_24 = V_5;
		if ((!(((float)L_23) > ((float)L_24))))
		{
			goto IL_00a4;
		}
	}
	{
		// if (shortestUVMapping > uvMapping) { shortestUVMapping = uvMapping; }
		float L_25 = V_5;
		V_3 = L_25;
	}

IL_00a4:
	{
		// s_FeatheringUVs.Add(uv);
		il2cpp_codegen_runtime_class_init_inline(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var);
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_26 = ((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_FeatheringUVs_5;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_27 = V_2;
		NullCheck(L_26);
		List_1_Add_m79E50C4F592B1703F4B76A8BE7B4855515460CA1_inline(L_26, L_27, List_1_Add_m79E50C4F592B1703F4B76A8BE7B4855515460CA1_RuntimeMethod_var);
		// for (int i = 0; i < vertexCount - 1; i++)
		int32_t L_28 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add(L_28, 1));
	}

IL_00b5:
	{
		// for (int i = 0; i < vertexCount - 1; i++)
		int32_t L_29 = V_4;
		int32_t L_30 = V_0;
		if ((((int32_t)L_29) < ((int32_t)((int32_t)il2cpp_codegen_subtract(L_30, 1)))))
		{
			goto IL_006c;
		}
	}
	{
		// m_FeatheredPlaneMaterial.SetFloat("_ShortestUVMapping", shortestUVMapping);
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_31 = __this->___m_FeatheredPlaneMaterial_9;
		float L_32 = V_3;
		NullCheck(L_31);
		Material_SetFloat_m879CF81D740BAE6F23C9822400679F4D16365836(L_31, _stringLiteral131018280018B48DB9FF86A96C7535E6FA339C24, L_32, NULL);
		// uv.Set(0, 0, 0);
		Vector3_Set_m1C7E543216734FB513F9CEBA44C50E6FC2AFD49D_inline((&V_2), (0.0f), (0.0f), (0.0f), NULL);
		// s_FeatheringUVs.Add(uv);
		il2cpp_codegen_runtime_class_init_inline(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var);
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_33 = ((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_FeatheringUVs_5;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_34 = V_2;
		NullCheck(L_33);
		List_1_Add_m79E50C4F592B1703F4B76A8BE7B4855515460CA1_inline(L_33, L_34, List_1_Add_m79E50C4F592B1703F4B76A8BE7B4855515460CA1_RuntimeMethod_var);
		// mesh.SetUVs(1, s_FeatheringUVs);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_35 = ___0_mesh;
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_36 = ((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_FeatheringUVs_5;
		NullCheck(L_35);
		Mesh_SetUVs_mFEE20B5977AA358DAFA31CF621BBC4B0247789B2(L_35, 1, L_36, NULL);
		// mesh.UploadMeshData(false);
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_37 = ___0_mesh;
		NullCheck(L_37);
		Mesh_UploadMeshData_mE4C94F263DAA8CAC1641FE137E1CE7D3F09396EB(L_37, (bool)0, NULL);
		// }
		return;
	}
}
// System.Void ARFeatheredPlaneMeshVisualizer::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARFeatheredPlaneMeshVisualizer__ctor_m9A77651BCAE58AA0B994FFF6C6B63B1CFF2729F6 (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, const RuntimeMethod* method) 
{
	{
		// float m_FeatheringWidth = 0.2f;
		__this->___m_FeatheringWidth_4 = (0.200000003f);
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
// System.Void ARFeatheredPlaneMeshVisualizer::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ARFeatheredPlaneMeshVisualizer__cctor_m56285A000EE27A1631BE9C5BCDA5C376E5D133C3 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_mC54E2BCBE43279A96FC082F5CDE2D76388BD8F9C_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// static List<Vector3> s_FeatheringUVs = new List<Vector3>();
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_0 = (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B*)il2cpp_codegen_object_new(List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		List_1__ctor_mC54E2BCBE43279A96FC082F5CDE2D76388BD8F9C(L_0, List_1__ctor_mC54E2BCBE43279A96FC082F5CDE2D76388BD8F9C_RuntimeMethod_var);
		((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_FeatheringUVs_5 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_FeatheringUVs_5), (void*)L_0);
		// static List<Vector3> s_Vertices = new List<Vector3>();
		List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* L_1 = (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B*)il2cpp_codegen_object_new(List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		List_1__ctor_mC54E2BCBE43279A96FC082F5CDE2D76388BD8F9C(L_1, List_1__ctor_mC54E2BCBE43279A96FC082F5CDE2D76388BD8F9C_RuntimeMethod_var);
		((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_Vertices_6 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&((ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_StaticFields*)il2cpp_codegen_static_fields_for(ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955_il2cpp_TypeInfo_var))->___s_Vertices_6), (void*)L_1);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void LobbyScript::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_Start_m69DD1B58F63C67935622063641F60E1718C77C04 (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	{
		// }
		return;
	}
}
// System.Void LobbyScript::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_Update_mB54E26F0966628098A75E836A3C0B0369837F044 (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	{
		// }
		return;
	}
}
// System.Void LobbyScript::OnFaceDetectorButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_OnFaceDetectorButton_m29B55E794C2CCD1469C97B89D23A23830229E314 (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralE0FBA51FC52C69B2ABD9870ACEB5E8E904FE5E69);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NavigateTo("FaceDetectorScene");
		LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC(__this, _stringLiteralE0FBA51FC52C69B2ABD9870ACEB5E8E904FE5E69, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::OnFaceRecognizerButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_OnFaceRecognizerButton_m8E980DE96C4549C347FFC93FB31ECD4EEEB5579D (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral1CE6EBB1B7F62CB9F0B2AA7EC1E63359E4543634);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NavigateTo("FaceRecognizer");
		LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC(__this, _stringLiteral1CE6EBB1B7F62CB9F0B2AA7EC1E63359E4543634, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::OnGrayscaleButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_OnGrayscaleButton_mF191950EB83A45E7354F5F9C59F056B51F4E44B1 (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral75C2BFAB5A72471574AED87ED97BFE36AD3C2A89);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NavigateTo("GrayscaleScene");
		LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC(__this, _stringLiteral75C2BFAB5A72471574AED87ED97BFE36AD3C2A89, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::OnContoursByShapeScenerButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_OnContoursByShapeScenerButton_m46469177152F02555DDF9855C47DAF18F7932465 (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralC0A1E5BF9A329D566F9251BA953A656E4F950794);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NavigateTo("ContoursByShapeScene");
		LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC(__this, _stringLiteralC0A1E5BF9A329D566F9251BA953A656E4F950794, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::OnLiveSketchButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_OnLiveSketchButton_m7BAC54F9307C65E0C801E39DDE5274C89852547A (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral8BC1BE912C60049D1A5807B0E0C2428B7BC863F5);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NavigateTo("LiveSketchScene");
		LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC(__this, _stringLiteral8BC1BE912C60049D1A5807B0E0C2428B7BC863F5, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::OnMarkerDetectorButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_OnMarkerDetectorButton_m5E4DEE9456E601D08A8C3AAAF97B037EE97AC3F7 (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralB1399DA80A9082F14CB8BD1C9C162707A5229DA9);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NavigateTo("MarkerDetectorScene");
		LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC(__this, _stringLiteralB1399DA80A9082F14CB8BD1C9C162707A5229DA9, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::OnDocumenScannerButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_OnDocumenScannerButton_m79700B28BD88D05A48B8AD395F77736277BBE049 (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralD0B4DC3CEEB2A8F14F1AAB21CDC7388AF9D9AE02);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NavigateTo("DocumentScannerLobby");
		LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC(__this, _stringLiteralD0B4DC3CEEB2A8F14F1AAB21CDC7388AF9D9AE02, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::OnAlphabetOCRButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_OnAlphabetOCRButton_mC906DADDAD43338171F066B0B7FBD6A6B13DAD12 (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral5E53EDC430BADDAA3A01D2F8074B9DC71802F871);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NavigateTo("AlphabetOCR");
		LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC(__this, _stringLiteral5E53EDC430BADDAA3A01D2F8074B9DC71802F871, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::OnTrackingButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_OnTrackingButton_m26C83A0608BD60D65A084646E477812F6E40F079 (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA1A7D50681230E7E150C94A27558DFAEC996E473);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NavigateTo("TrackingScene");
		LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC(__this, _stringLiteralA1A7D50681230E7E150C94A27558DFAEC996E473, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::OnBackButton()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_OnBackButton_m77B43222BAB7D7B7DD9EA47043D82BBE8C7F6B0C (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	{
		// UnloadScene ();
		LobbyScript_UnloadScene_mAEE2CAEE5A3063F23887D6DA9DA57C7E10A37C3B(__this, NULL);
		// mainMenu.SetActive (true);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_0 = __this->___mainMenu_5;
		NullCheck(L_0);
		GameObject_SetActive_m638E92E1E75E519E5B24CF150B08CA8E0CDFAB92(L_0, (bool)1, NULL);
		// backMenu.SetActive (false);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_1 = __this->___backMenu_6;
		NullCheck(L_1);
		GameObject_SetActive_m638E92E1E75E519E5B24CF150B08CA8E0CDFAB92(L_1, (bool)0, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::UnloadScene()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_UnloadScene_mAEE2CAEE5A3063F23887D6DA9DA57C7E10A37C3B (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SceneManager_tA0EF56A88ACA4A15731AF7FDC10A869FA4C698FA_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (currentScene != null) {
		String_t* L_0 = __this->___currentScene_4;
		if (!L_0)
		{
			goto IL_001b;
		}
	}
	{
		// SceneManager.UnloadScene (currentScene);
		String_t* L_1 = __this->___currentScene_4;
		il2cpp_codegen_runtime_class_init_inline(SceneManager_tA0EF56A88ACA4A15731AF7FDC10A869FA4C698FA_il2cpp_TypeInfo_var);
		bool L_2;
		L_2 = SceneManager_UnloadScene_m741C54265CC598E066D4F9E6B78AD59AC5F1B66E(L_1, NULL);
		// currentScene = null;
		__this->___currentScene_4 = (String_t*)NULL;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___currentScene_4), (void*)(String_t*)NULL);
	}

IL_001b:
	{
		// }
		return;
	}
}
// System.Void LobbyScript::NavigateTo(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript_NavigateTo_m1033A4ED8346F44424068E17A7AC4E4C747BB5BC (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, String_t* ___0_sceneName, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SceneManager_tA0EF56A88ACA4A15731AF7FDC10A869FA4C698FA_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// UnloadScene ();
		LobbyScript_UnloadScene_mAEE2CAEE5A3063F23887D6DA9DA57C7E10A37C3B(__this, NULL);
		// currentScene = sceneName;
		String_t* L_0 = ___0_sceneName;
		__this->___currentScene_4 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___currentScene_4), (void*)L_0);
		// mainMenu.SetActive (false);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_1 = __this->___mainMenu_5;
		NullCheck(L_1);
		GameObject_SetActive_m638E92E1E75E519E5B24CF150B08CA8E0CDFAB92(L_1, (bool)0, NULL);
		// backMenu.SetActive (true);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_2 = __this->___backMenu_6;
		NullCheck(L_2);
		GameObject_SetActive_m638E92E1E75E519E5B24CF150B08CA8E0CDFAB92(L_2, (bool)1, NULL);
		// SceneManager.LoadScene(sceneName, LoadSceneMode.Additive);
		String_t* L_3 = ___0_sceneName;
		il2cpp_codegen_runtime_class_init_inline(SceneManager_tA0EF56A88ACA4A15731AF7FDC10A869FA4C698FA_il2cpp_TypeInfo_var);
		SceneManager_LoadScene_m2841705C02C450E42A44B5EEE2A6A2C4261FA3AF(L_3, 1, NULL);
		// }
		return;
	}
}
// System.Void LobbyScript::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void LobbyScript__ctor_mC82FE1D13AF73A42E5C455EE71E51E974F4799C8 (LobbyScript_tBE0F8CEB15C844CA9F91EEA08EBE6F0EF038EF31* __this, const RuntimeMethod* method) 
{
	{
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void ChessBoard::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChessBoard_Start_m1317590109C33988E8F61386F0693548E25AE15F (ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	{
		// boardRepresentation = new GameObject[8,8];
		il2cpp_array_size_t L_1[] = { (il2cpp_array_size_t)8, (il2cpp_array_size_t)8 };
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_0 = (GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E*)GenArrayNew(GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E_il2cpp_TypeInfo_var, L_1);
		__this->___boardRepresentation_40 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___boardRepresentation_40), (void*)L_0);
		// for (int file = 0; file < 8; file++)
		V_0 = 0;
		goto IL_002f;
	}

IL_0011:
	{
		// for (int rank = 0; rank < 8; rank++)
		V_1 = 0;
		goto IL_0027;
	}

IL_0015:
	{
		// boardRepresentation[file, rank] = null;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_2 = __this->___boardRepresentation_40;
		int32_t L_3 = V_0;
		int32_t L_4 = V_1;
		NullCheck(L_2);
		(L_2)->SetAt(L_3, L_4, (GameObject_t76FEDD663AB33C991A9C9A23129337651094216F*)NULL);
		// for (int rank = 0; rank < 8; rank++)
		int32_t L_5 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_5, 1));
	}

IL_0027:
	{
		// for (int rank = 0; rank < 8; rank++)
		int32_t L_6 = V_1;
		if ((((int32_t)L_6) < ((int32_t)8)))
		{
			goto IL_0015;
		}
	}
	{
		// for (int file = 0; file < 8; file++)
		int32_t L_7 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add(L_7, 1));
	}

IL_002f:
	{
		// for (int file = 0; file < 8; file++)
		int32_t L_8 = V_0;
		if ((((int32_t)L_8) < ((int32_t)8)))
		{
			goto IL_0011;
		}
	}
	{
		// CreateBoard();
		ChessBoard_CreateBoard_m1DB2242535EB6DB34AA8F4072836E983273ABA97(__this, NULL);
		// Debug.Log(GetAllPiecePositions());
		String_t* L_9;
		L_9 = ChessBoard_GetAllPiecePositions_m23FC2A99F20F5301594AB0AE1AAA62E138A4E981(__this, NULL);
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(L_9, NULL);
		// }
		return;
	}
}
// System.Void ChessBoard::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChessBoard_Update_m8876B380AFC59EDBD33C6BC4319B77E9675C98FB (ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191* __this, const RuntimeMethod* method) 
{
	{
		// }
		return;
	}
}
// System.Void ChessBoard::CreateBoard()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChessBoard_CreateBoard_m1DB2242535EB6DB34AA8F4072836E983273ABA97 (ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_GetComponent_TisMeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE_m7FF948365C38BC39333D82B235A7C4EAD219960D_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* V_3 = NULL;
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_4;
	memset((&V_4), 0, sizeof(V_4));
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_5 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_6 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_7 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_8 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_9 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_10 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_11 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_12 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_13 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_14 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_15 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_16 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_17 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_18 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_19 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_20 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_21 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_22 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_23 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_24 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_25 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_26 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_27 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_28 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_29 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_30 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_31 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_32 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_33 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_34 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_35 = NULL;
	Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* V_36 = NULL;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* G_B4_0 = NULL;
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* G_B3_0 = NULL;
	Color_tD001788D726C3A7F1379BEED0260B9591F440C1F G_B5_0;
	memset((&G_B5_0), 0, sizeof(G_B5_0));
	Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* G_B5_1 = NULL;
	{
		// squareRenderers = new MeshRenderer[8, 8];
		il2cpp_array_size_t L_1[] = { (il2cpp_array_size_t)8, (il2cpp_array_size_t)8 };
		MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7* L_0 = (MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7*)GenArrayNew(MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7_il2cpp_TypeInfo_var, L_1);
		__this->___squareRenderers_6 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___squareRenderers_6), (void*)L_0);
		// for (int file = 0; file < 8; file++)
		V_0 = 0;
		goto IL_13d4;
	}

IL_0014:
	{
		// for (int rank = 0; rank < 8; rank++)
		V_1 = 0;
		goto IL_13c9;
	}

IL_001b:
	{
		// bool isLightSquare = (file + rank) % 2 != 0;
		int32_t L_2 = V_0;
		int32_t L_3 = V_1;
		V_2 = (bool)((!(((uint32_t)((int32_t)(((int32_t)il2cpp_codegen_add(L_2, L_3))%2))) <= ((uint32_t)0)))? 1 : 0);
		// Transform square = GameObject.CreatePrimitive(PrimitiveType.Quad).transform;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_4;
		L_4 = GameObject_CreatePrimitive_m13C0A691E679A83DD595913200A1DD9A906EB47B(5, NULL);
		NullCheck(L_4);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_5;
		L_5 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_4, NULL);
		V_3 = L_5;
		// square.parent = transform;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_6 = V_3;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_7;
		L_7 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(__this, NULL);
		NullCheck(L_6);
		Transform_set_parent_m9BD5E563B539DD5BEC342736B03F97B38A243234(L_6, L_7, NULL);
		// square.position = PositionFromCoord(file, rank, 0);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_8 = V_3;
		int32_t L_9 = V_0;
		int32_t L_10 = V_1;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_11;
		L_11 = ChessBoard_PositionFromCoord_m83D0AF6AAEACC0BA9826317D93DCDE324D0B63B1(__this, L_9, L_10, (0.0f), NULL);
		NullCheck(L_8);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_8, L_11, NULL);
		// squareRenderers[file, rank] = square.gameObject.GetComponent<MeshRenderer>();
		MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7* L_12 = __this->___squareRenderers_6;
		int32_t L_13 = V_0;
		int32_t L_14 = V_1;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_15 = V_3;
		NullCheck(L_15);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_16;
		L_16 = Component_get_gameObject_m57AEFBB14DB39EC476F740BA000E170355DE691B(L_15, NULL);
		NullCheck(L_16);
		MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* L_17;
		L_17 = GameObject_GetComponent_TisMeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE_m7FF948365C38BC39333D82B235A7C4EAD219960D(L_16, GameObject_GetComponent_TisMeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE_m7FF948365C38BC39333D82B235A7C4EAD219960D_RuntimeMethod_var);
		NullCheck(L_12);
		(L_12)->SetAt(L_13, L_14, L_17);
		// squareRenderers[file, rank].material = squareMaterial;
		MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7* L_18 = __this->___squareRenderers_6;
		int32_t L_19 = V_0;
		int32_t L_20 = V_1;
		NullCheck(L_18);
		MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* L_21;
		L_21 = (L_18)->GetAt(L_19, L_20);
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_22 = __this->___squareMaterial_7;
		NullCheck(L_21);
		Renderer_set_material_m21E88977071E0A914D62F3D9CFF0193B3117C45A(L_21, L_22, NULL);
		// squareRenderers[file, rank].material.color = (isLightSquare) ? lightColor : darkColor;
		MeshRendererU5BU2CU5D_tBA631E7604F4228D9F980DA33BF0223D143648C7* L_23 = __this->___squareRenderers_6;
		int32_t L_24 = V_0;
		int32_t L_25 = V_1;
		NullCheck(L_23);
		MeshRenderer_t4B7747212F0B88244BB7790C61AE124BFC15BAAE* L_26;
		L_26 = (L_23)->GetAt(L_24, L_25);
		NullCheck(L_26);
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_27;
		L_27 = Renderer_get_material_m5BA2A00816C4CC66580D4B2E409CF10718C15656(L_26, NULL);
		bool L_28 = V_2;
		G_B3_0 = L_27;
		if (L_28)
		{
			G_B4_0 = L_27;
			goto IL_009c;
		}
	}
	{
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_29 = __this->___darkColor_5;
		G_B5_0 = L_29;
		G_B5_1 = G_B3_0;
		goto IL_00a2;
	}

IL_009c:
	{
		Color_tD001788D726C3A7F1379BEED0260B9591F440C1F L_30 = __this->___lightColor_4;
		G_B5_0 = L_30;
		G_B5_1 = G_B4_0;
	}

IL_00a2:
	{
		NullCheck(G_B5_1);
		Material_set_color_m5C32DEBB215FF9EE35E7B575297D8C2F29CC2A2D(G_B5_1, G_B5_0, NULL);
		int32_t L_31 = V_0;
		switch (L_31)
		{
			case 0:
			{
				goto IL_00d2;
			}
			case 1:
			{
				goto IL_032d;
			}
			case 2:
			{
				goto IL_0588;
			}
			case 3:
			{
				goto IL_07e3;
			}
			case 4:
			{
				goto IL_0a3e;
			}
			case 5:
			{
				goto IL_0c99;
			}
			case 6:
			{
				goto IL_0ef4;
			}
			case 7:
			{
				goto IL_114f;
			}
		}
	}
	{
		goto IL_13a5;
	}

IL_00d2:
	{
		// if (rank == 0)
		int32_t L_32 = V_1;
		if (L_32)
		{
			goto IL_0168;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_34[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_33 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_34);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_35 = L_33;
		int32_t L_36 = V_0;
		NullCheck(L_35);
		(L_35)->SetAt(0, 0, L_36);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_37 = L_35;
		int32_t L_38 = V_1;
		NullCheck(L_37);
		(L_37)->SetAt(1, 0, L_38);
		V_5 = L_37;
		// WhiteRookQ.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_39 = __this->___WhiteRookQ_12;
		NullCheck(L_39);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_40;
		L_40 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_39, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_41 = V_3;
		NullCheck(L_41);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_42;
		L_42 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_41, NULL);
		NullCheck(L_42);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_43;
		L_43 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_42, NULL);
		NullCheck(L_40);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_40, L_43, NULL);
		// WhiteRookQ.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_44 = __this->___WhiteRookQ_12;
		NullCheck(L_44);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_45;
		L_45 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_44, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_46;
		L_46 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_47;
		L_47 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_46, (1.5f), NULL);
		NullCheck(L_45);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_45, L_47, NULL);
		// WhiteRookQ.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_48 = __this->___WhiteRookQ_12;
		NullCheck(L_48);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_49;
		L_49 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_48, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_50 = V_5;
		NullCheck(L_49);
		L_49->___position_7 = L_50;
		Il2CppCodeGenWriteBarrier((void**)(&L_49->___position_7), (void*)L_50);
		// WhiteRookQ.GetComponent<Piece>().pieceType = PieceTypes.Rook;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_51 = __this->___WhiteRookQ_12;
		NullCheck(L_51);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_52;
		L_52 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_51, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_52);
		L_52->___pieceType_8 = 3;
		// boardRepresentation[file, rank] = WhiteRookQ;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_53 = __this->___boardRepresentation_40;
		int32_t L_54 = V_0;
		int32_t L_55 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_56 = __this->___WhiteRookQ_12;
		NullCheck(L_53);
		(L_53)->SetAt(L_54, L_55, L_56);
		goto IL_13a5;
	}

IL_0168:
	{
		// else if (rank == 1)
		int32_t L_57 = V_1;
		if ((!(((uint32_t)L_57) == ((uint32_t)1))))
		{
			goto IL_01ff;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_59[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_58 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_59);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_60 = L_58;
		int32_t L_61 = V_0;
		NullCheck(L_60);
		(L_60)->SetAt(0, 0, L_61);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_62 = L_60;
		int32_t L_63 = V_1;
		NullCheck(L_62);
		(L_62)->SetAt(1, 0, L_63);
		V_6 = L_62;
		// WhiteAPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_64 = __this->___WhiteAPawn_16;
		NullCheck(L_64);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_65;
		L_65 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_64, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_66 = V_3;
		NullCheck(L_66);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_67;
		L_67 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_66, NULL);
		NullCheck(L_67);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_68;
		L_68 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_67, NULL);
		NullCheck(L_65);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_65, L_68, NULL);
		// WhiteAPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_69 = __this->___WhiteAPawn_16;
		NullCheck(L_69);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_70;
		L_70 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_69, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_71;
		L_71 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_72;
		L_72 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_71, (1.5f), NULL);
		NullCheck(L_70);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_70, L_72, NULL);
		// WhiteAPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_73 = __this->___WhiteAPawn_16;
		NullCheck(L_73);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_74;
		L_74 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_73, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_75 = V_6;
		NullCheck(L_74);
		L_74->___position_7 = L_75;
		Il2CppCodeGenWriteBarrier((void**)(&L_74->___position_7), (void*)L_75);
		// WhiteAPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_76 = __this->___WhiteAPawn_16;
		NullCheck(L_76);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_77;
		L_77 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_76, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_77);
		L_77->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = WhiteAPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_78 = __this->___boardRepresentation_40;
		int32_t L_79 = V_0;
		int32_t L_80 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_81 = __this->___WhiteAPawn_16;
		NullCheck(L_78);
		(L_78)->SetAt(L_79, L_80, L_81);
		goto IL_13a5;
	}

IL_01ff:
	{
		// else if (rank == 6)
		int32_t L_82 = V_1;
		if ((!(((uint32_t)L_82) == ((uint32_t)6))))
		{
			goto IL_0296;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_84[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_83 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_84);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_85 = L_83;
		int32_t L_86 = V_0;
		NullCheck(L_85);
		(L_85)->SetAt(0, 0, L_86);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_87 = L_85;
		int32_t L_88 = V_1;
		NullCheck(L_87);
		(L_87)->SetAt(1, 0, L_88);
		V_7 = L_87;
		// BlackAPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_89 = __this->___BlackAPawn_32;
		NullCheck(L_89);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_90;
		L_90 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_89, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_91 = V_3;
		NullCheck(L_91);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_92;
		L_92 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_91, NULL);
		NullCheck(L_92);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_93;
		L_93 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_92, NULL);
		NullCheck(L_90);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_90, L_93, NULL);
		// BlackAPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_94 = __this->___BlackAPawn_32;
		NullCheck(L_94);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_95;
		L_95 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_94, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_96;
		L_96 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_97;
		L_97 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_96, (1.5f), NULL);
		NullCheck(L_95);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_95, L_97, NULL);
		// BlackAPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_98 = __this->___BlackAPawn_32;
		NullCheck(L_98);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_99;
		L_99 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_98, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_100 = V_7;
		NullCheck(L_99);
		L_99->___position_7 = L_100;
		Il2CppCodeGenWriteBarrier((void**)(&L_99->___position_7), (void*)L_100);
		// BlackAPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_101 = __this->___BlackAPawn_32;
		NullCheck(L_101);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_102;
		L_102 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_101, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_102);
		L_102->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = BlackAPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_103 = __this->___boardRepresentation_40;
		int32_t L_104 = V_0;
		int32_t L_105 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_106 = __this->___BlackAPawn_32;
		NullCheck(L_103);
		(L_103)->SetAt(L_104, L_105, L_106);
		goto IL_13a5;
	}

IL_0296:
	{
		// else if (rank == 7)
		int32_t L_107 = V_1;
		if ((!(((uint32_t)L_107) == ((uint32_t)7))))
		{
			goto IL_13a5;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_109[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_108 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_109);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_110 = L_108;
		int32_t L_111 = V_0;
		NullCheck(L_110);
		(L_110)->SetAt(0, 0, L_111);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_112 = L_110;
		int32_t L_113 = V_1;
		NullCheck(L_112);
		(L_112)->SetAt(1, 0, L_113);
		V_8 = L_112;
		// BlackRookQ.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_114 = __this->___BlackRookQ_28;
		NullCheck(L_114);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_115;
		L_115 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_114, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_116 = V_3;
		NullCheck(L_116);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_117;
		L_117 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_116, NULL);
		NullCheck(L_117);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_118;
		L_118 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_117, NULL);
		NullCheck(L_115);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_115, L_118, NULL);
		// BlackRookQ.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_119 = __this->___BlackRookQ_28;
		NullCheck(L_119);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_120;
		L_120 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_119, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_121;
		L_121 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_122;
		L_122 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_121, (1.5f), NULL);
		NullCheck(L_120);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_120, L_122, NULL);
		// BlackRookQ.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_123 = __this->___BlackRookQ_28;
		NullCheck(L_123);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_124;
		L_124 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_123, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_125 = V_8;
		NullCheck(L_124);
		L_124->___position_7 = L_125;
		Il2CppCodeGenWriteBarrier((void**)(&L_124->___position_7), (void*)L_125);
		// BlackRookQ.GetComponent<Piece>().pieceType = PieceTypes.Rook;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_126 = __this->___BlackRookQ_28;
		NullCheck(L_126);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_127;
		L_127 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_126, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_127);
		L_127->___pieceType_8 = 3;
		// boardRepresentation[file, rank] = BlackRookQ;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_128 = __this->___boardRepresentation_40;
		int32_t L_129 = V_0;
		int32_t L_130 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_131 = __this->___BlackRookQ_28;
		NullCheck(L_128);
		(L_128)->SetAt(L_129, L_130, L_131);
		// break;
		goto IL_13a5;
	}

IL_032d:
	{
		// if (rank == 0)
		int32_t L_132 = V_1;
		if (L_132)
		{
			goto IL_03c3;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_134[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_133 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_134);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_135 = L_133;
		int32_t L_136 = V_0;
		NullCheck(L_135);
		(L_135)->SetAt(0, 0, L_136);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_137 = L_135;
		int32_t L_138 = V_1;
		NullCheck(L_137);
		(L_137)->SetAt(1, 0, L_138);
		V_9 = L_137;
		// WhiteKnightQ.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_139 = __this->___WhiteKnightQ_11;
		NullCheck(L_139);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_140;
		L_140 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_139, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_141 = V_3;
		NullCheck(L_141);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_142;
		L_142 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_141, NULL);
		NullCheck(L_142);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_143;
		L_143 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_142, NULL);
		NullCheck(L_140);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_140, L_143, NULL);
		// WhiteKnightQ.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_144 = __this->___WhiteKnightQ_11;
		NullCheck(L_144);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_145;
		L_145 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_144, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_146;
		L_146 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_147;
		L_147 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_146, (1.5f), NULL);
		NullCheck(L_145);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_145, L_147, NULL);
		// WhiteKnightQ.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_148 = __this->___WhiteKnightQ_11;
		NullCheck(L_148);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_149;
		L_149 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_148, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_150 = V_9;
		NullCheck(L_149);
		L_149->___position_7 = L_150;
		Il2CppCodeGenWriteBarrier((void**)(&L_149->___position_7), (void*)L_150);
		// WhiteKnightQ.GetComponent<Piece>().pieceType = PieceTypes.Knight;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_151 = __this->___WhiteKnightQ_11;
		NullCheck(L_151);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_152;
		L_152 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_151, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_152);
		L_152->___pieceType_8 = 1;
		// boardRepresentation[file, rank] = WhiteKnightQ;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_153 = __this->___boardRepresentation_40;
		int32_t L_154 = V_0;
		int32_t L_155 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_156 = __this->___WhiteKnightQ_11;
		NullCheck(L_153);
		(L_153)->SetAt(L_154, L_155, L_156);
		goto IL_13a5;
	}

IL_03c3:
	{
		// else if (rank == 1)
		int32_t L_157 = V_1;
		if ((!(((uint32_t)L_157) == ((uint32_t)1))))
		{
			goto IL_045a;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_159[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_158 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_159);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_160 = L_158;
		int32_t L_161 = V_0;
		NullCheck(L_160);
		(L_160)->SetAt(0, 0, L_161);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_162 = L_160;
		int32_t L_163 = V_1;
		NullCheck(L_162);
		(L_162)->SetAt(1, 0, L_163);
		V_10 = L_162;
		// WhiteBPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_164 = __this->___WhiteBPawn_17;
		NullCheck(L_164);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_165;
		L_165 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_164, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_166 = V_3;
		NullCheck(L_166);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_167;
		L_167 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_166, NULL);
		NullCheck(L_167);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_168;
		L_168 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_167, NULL);
		NullCheck(L_165);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_165, L_168, NULL);
		// WhiteBPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_169 = __this->___WhiteBPawn_17;
		NullCheck(L_169);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_170;
		L_170 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_169, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_171;
		L_171 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_172;
		L_172 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_171, (1.5f), NULL);
		NullCheck(L_170);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_170, L_172, NULL);
		// WhiteBPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_173 = __this->___WhiteBPawn_17;
		NullCheck(L_173);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_174;
		L_174 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_173, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_175 = V_10;
		NullCheck(L_174);
		L_174->___position_7 = L_175;
		Il2CppCodeGenWriteBarrier((void**)(&L_174->___position_7), (void*)L_175);
		// WhiteBPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_176 = __this->___WhiteBPawn_17;
		NullCheck(L_176);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_177;
		L_177 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_176, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_177);
		L_177->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = WhiteBPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_178 = __this->___boardRepresentation_40;
		int32_t L_179 = V_0;
		int32_t L_180 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_181 = __this->___WhiteBPawn_17;
		NullCheck(L_178);
		(L_178)->SetAt(L_179, L_180, L_181);
		goto IL_13a5;
	}

IL_045a:
	{
		// else if (rank == 6)
		int32_t L_182 = V_1;
		if ((!(((uint32_t)L_182) == ((uint32_t)6))))
		{
			goto IL_04f1;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_184[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_183 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_184);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_185 = L_183;
		int32_t L_186 = V_0;
		NullCheck(L_185);
		(L_185)->SetAt(0, 0, L_186);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_187 = L_185;
		int32_t L_188 = V_1;
		NullCheck(L_187);
		(L_187)->SetAt(1, 0, L_188);
		V_11 = L_187;
		// BlackBPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_189 = __this->___BlackBPawn_33;
		NullCheck(L_189);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_190;
		L_190 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_189, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_191 = V_3;
		NullCheck(L_191);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_192;
		L_192 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_191, NULL);
		NullCheck(L_192);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_193;
		L_193 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_192, NULL);
		NullCheck(L_190);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_190, L_193, NULL);
		// BlackBPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_194 = __this->___BlackBPawn_33;
		NullCheck(L_194);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_195;
		L_195 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_194, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_196;
		L_196 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_197;
		L_197 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_196, (1.5f), NULL);
		NullCheck(L_195);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_195, L_197, NULL);
		// BlackBPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_198 = __this->___BlackBPawn_33;
		NullCheck(L_198);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_199;
		L_199 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_198, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_200 = V_11;
		NullCheck(L_199);
		L_199->___position_7 = L_200;
		Il2CppCodeGenWriteBarrier((void**)(&L_199->___position_7), (void*)L_200);
		// BlackBPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_201 = __this->___BlackBPawn_33;
		NullCheck(L_201);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_202;
		L_202 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_201, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_202);
		L_202->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = BlackBPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_203 = __this->___boardRepresentation_40;
		int32_t L_204 = V_0;
		int32_t L_205 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_206 = __this->___BlackBPawn_33;
		NullCheck(L_203);
		(L_203)->SetAt(L_204, L_205, L_206);
		goto IL_13a5;
	}

IL_04f1:
	{
		// else if (rank == 7)
		int32_t L_207 = V_1;
		if ((!(((uint32_t)L_207) == ((uint32_t)7))))
		{
			goto IL_13a5;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_209[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_208 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_209);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_210 = L_208;
		int32_t L_211 = V_0;
		NullCheck(L_210);
		(L_210)->SetAt(0, 0, L_211);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_212 = L_210;
		int32_t L_213 = V_1;
		NullCheck(L_212);
		(L_212)->SetAt(1, 0, L_213);
		V_12 = L_212;
		// BlackKnightQ.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_214 = __this->___BlackKnightQ_27;
		NullCheck(L_214);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_215;
		L_215 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_214, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_216 = V_3;
		NullCheck(L_216);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_217;
		L_217 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_216, NULL);
		NullCheck(L_217);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_218;
		L_218 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_217, NULL);
		NullCheck(L_215);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_215, L_218, NULL);
		// BlackKnightQ.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_219 = __this->___BlackKnightQ_27;
		NullCheck(L_219);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_220;
		L_220 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_219, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_221;
		L_221 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_222;
		L_222 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_221, (1.5f), NULL);
		NullCheck(L_220);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_220, L_222, NULL);
		// BlackKnightQ.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_223 = __this->___BlackKnightQ_27;
		NullCheck(L_223);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_224;
		L_224 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_223, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_225 = V_12;
		NullCheck(L_224);
		L_224->___position_7 = L_225;
		Il2CppCodeGenWriteBarrier((void**)(&L_224->___position_7), (void*)L_225);
		// BlackKnightQ.GetComponent<Piece>().pieceType = PieceTypes.Knight;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_226 = __this->___BlackKnightQ_27;
		NullCheck(L_226);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_227;
		L_227 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_226, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_227);
		L_227->___pieceType_8 = 1;
		// boardRepresentation[file, rank] = BlackKnightQ;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_228 = __this->___boardRepresentation_40;
		int32_t L_229 = V_0;
		int32_t L_230 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_231 = __this->___BlackKnightQ_27;
		NullCheck(L_228);
		(L_228)->SetAt(L_229, L_230, L_231);
		// break;
		goto IL_13a5;
	}

IL_0588:
	{
		// if (rank == 0)
		int32_t L_232 = V_1;
		if (L_232)
		{
			goto IL_061e;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_234[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_233 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_234);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_235 = L_233;
		int32_t L_236 = V_0;
		NullCheck(L_235);
		(L_235)->SetAt(0, 0, L_236);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_237 = L_235;
		int32_t L_238 = V_1;
		NullCheck(L_237);
		(L_237)->SetAt(1, 0, L_238);
		V_13 = L_237;
		// WhiteBishopQ.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_239 = __this->___WhiteBishopQ_10;
		NullCheck(L_239);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_240;
		L_240 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_239, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_241 = V_3;
		NullCheck(L_241);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_242;
		L_242 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_241, NULL);
		NullCheck(L_242);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_243;
		L_243 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_242, NULL);
		NullCheck(L_240);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_240, L_243, NULL);
		// WhiteBishopQ.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_244 = __this->___WhiteBishopQ_10;
		NullCheck(L_244);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_245;
		L_245 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_244, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_246;
		L_246 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_247;
		L_247 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_246, (1.5f), NULL);
		NullCheck(L_245);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_245, L_247, NULL);
		// WhiteBishopQ.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_248 = __this->___WhiteBishopQ_10;
		NullCheck(L_248);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_249;
		L_249 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_248, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_250 = V_13;
		NullCheck(L_249);
		L_249->___position_7 = L_250;
		Il2CppCodeGenWriteBarrier((void**)(&L_249->___position_7), (void*)L_250);
		// WhiteBishopQ.GetComponent<Piece>().pieceType = PieceTypes.Bishop;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_251 = __this->___WhiteBishopQ_10;
		NullCheck(L_251);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_252;
		L_252 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_251, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_252);
		L_252->___pieceType_8 = 2;
		// boardRepresentation[file, rank] = WhiteBishopQ;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_253 = __this->___boardRepresentation_40;
		int32_t L_254 = V_0;
		int32_t L_255 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_256 = __this->___WhiteBishopQ_10;
		NullCheck(L_253);
		(L_253)->SetAt(L_254, L_255, L_256);
		goto IL_13a5;
	}

IL_061e:
	{
		// else if (rank == 1)
		int32_t L_257 = V_1;
		if ((!(((uint32_t)L_257) == ((uint32_t)1))))
		{
			goto IL_06b5;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_259[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_258 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_259);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_260 = L_258;
		int32_t L_261 = V_0;
		NullCheck(L_260);
		(L_260)->SetAt(0, 0, L_261);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_262 = L_260;
		int32_t L_263 = V_1;
		NullCheck(L_262);
		(L_262)->SetAt(1, 0, L_263);
		V_14 = L_262;
		// WhiteCPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_264 = __this->___WhiteCPawn_18;
		NullCheck(L_264);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_265;
		L_265 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_264, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_266 = V_3;
		NullCheck(L_266);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_267;
		L_267 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_266, NULL);
		NullCheck(L_267);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_268;
		L_268 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_267, NULL);
		NullCheck(L_265);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_265, L_268, NULL);
		// WhiteCPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_269 = __this->___WhiteCPawn_18;
		NullCheck(L_269);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_270;
		L_270 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_269, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_271;
		L_271 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_272;
		L_272 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_271, (1.5f), NULL);
		NullCheck(L_270);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_270, L_272, NULL);
		// WhiteCPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_273 = __this->___WhiteCPawn_18;
		NullCheck(L_273);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_274;
		L_274 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_273, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_275 = V_14;
		NullCheck(L_274);
		L_274->___position_7 = L_275;
		Il2CppCodeGenWriteBarrier((void**)(&L_274->___position_7), (void*)L_275);
		// WhiteCPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_276 = __this->___WhiteCPawn_18;
		NullCheck(L_276);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_277;
		L_277 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_276, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_277);
		L_277->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = WhiteCPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_278 = __this->___boardRepresentation_40;
		int32_t L_279 = V_0;
		int32_t L_280 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_281 = __this->___WhiteCPawn_18;
		NullCheck(L_278);
		(L_278)->SetAt(L_279, L_280, L_281);
		goto IL_13a5;
	}

IL_06b5:
	{
		// else if (rank == 6)
		int32_t L_282 = V_1;
		if ((!(((uint32_t)L_282) == ((uint32_t)6))))
		{
			goto IL_074c;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_284[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_283 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_284);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_285 = L_283;
		int32_t L_286 = V_0;
		NullCheck(L_285);
		(L_285)->SetAt(0, 0, L_286);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_287 = L_285;
		int32_t L_288 = V_1;
		NullCheck(L_287);
		(L_287)->SetAt(1, 0, L_288);
		V_15 = L_287;
		// BlackCPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_289 = __this->___BlackCPawn_34;
		NullCheck(L_289);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_290;
		L_290 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_289, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_291 = V_3;
		NullCheck(L_291);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_292;
		L_292 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_291, NULL);
		NullCheck(L_292);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_293;
		L_293 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_292, NULL);
		NullCheck(L_290);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_290, L_293, NULL);
		// BlackCPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_294 = __this->___BlackCPawn_34;
		NullCheck(L_294);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_295;
		L_295 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_294, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_296;
		L_296 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_297;
		L_297 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_296, (1.5f), NULL);
		NullCheck(L_295);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_295, L_297, NULL);
		// BlackCPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_298 = __this->___BlackCPawn_34;
		NullCheck(L_298);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_299;
		L_299 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_298, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_300 = V_15;
		NullCheck(L_299);
		L_299->___position_7 = L_300;
		Il2CppCodeGenWriteBarrier((void**)(&L_299->___position_7), (void*)L_300);
		// BlackCPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_301 = __this->___BlackCPawn_34;
		NullCheck(L_301);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_302;
		L_302 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_301, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_302);
		L_302->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = BlackCPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_303 = __this->___boardRepresentation_40;
		int32_t L_304 = V_0;
		int32_t L_305 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_306 = __this->___BlackCPawn_34;
		NullCheck(L_303);
		(L_303)->SetAt(L_304, L_305, L_306);
		goto IL_13a5;
	}

IL_074c:
	{
		// else if (rank == 7)
		int32_t L_307 = V_1;
		if ((!(((uint32_t)L_307) == ((uint32_t)7))))
		{
			goto IL_13a5;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_309[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_308 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_309);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_310 = L_308;
		int32_t L_311 = V_0;
		NullCheck(L_310);
		(L_310)->SetAt(0, 0, L_311);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_312 = L_310;
		int32_t L_313 = V_1;
		NullCheck(L_312);
		(L_312)->SetAt(1, 0, L_313);
		V_16 = L_312;
		// BlackBishopQ.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_314 = __this->___BlackBishopQ_26;
		NullCheck(L_314);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_315;
		L_315 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_314, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_316 = V_3;
		NullCheck(L_316);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_317;
		L_317 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_316, NULL);
		NullCheck(L_317);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_318;
		L_318 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_317, NULL);
		NullCheck(L_315);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_315, L_318, NULL);
		// BlackBishopQ.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_319 = __this->___BlackBishopQ_26;
		NullCheck(L_319);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_320;
		L_320 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_319, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_321;
		L_321 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_322;
		L_322 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_321, (1.5f), NULL);
		NullCheck(L_320);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_320, L_322, NULL);
		// BlackBishopQ.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_323 = __this->___BlackBishopQ_26;
		NullCheck(L_323);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_324;
		L_324 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_323, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_325 = V_16;
		NullCheck(L_324);
		L_324->___position_7 = L_325;
		Il2CppCodeGenWriteBarrier((void**)(&L_324->___position_7), (void*)L_325);
		// BlackBishopQ.GetComponent<Piece>().pieceType = PieceTypes.Bishop;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_326 = __this->___BlackBishopQ_26;
		NullCheck(L_326);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_327;
		L_327 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_326, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_327);
		L_327->___pieceType_8 = 2;
		// boardRepresentation[file, rank] = BlackBishopQ;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_328 = __this->___boardRepresentation_40;
		int32_t L_329 = V_0;
		int32_t L_330 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_331 = __this->___BlackBishopQ_26;
		NullCheck(L_328);
		(L_328)->SetAt(L_329, L_330, L_331);
		// break;
		goto IL_13a5;
	}

IL_07e3:
	{
		// if (rank == 0)
		int32_t L_332 = V_1;
		if (L_332)
		{
			goto IL_0879;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_334[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_333 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_334);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_335 = L_333;
		int32_t L_336 = V_0;
		NullCheck(L_335);
		(L_335)->SetAt(0, 0, L_336);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_337 = L_335;
		int32_t L_338 = V_1;
		NullCheck(L_337);
		(L_337)->SetAt(1, 0, L_338);
		V_17 = L_337;
		// WhiteQueen.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_339 = __this->___WhiteQueen_9;
		NullCheck(L_339);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_340;
		L_340 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_339, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_341 = V_3;
		NullCheck(L_341);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_342;
		L_342 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_341, NULL);
		NullCheck(L_342);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_343;
		L_343 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_342, NULL);
		NullCheck(L_340);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_340, L_343, NULL);
		// WhiteQueen.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_344 = __this->___WhiteQueen_9;
		NullCheck(L_344);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_345;
		L_345 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_344, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_346;
		L_346 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_347;
		L_347 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_346, (1.5f), NULL);
		NullCheck(L_345);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_345, L_347, NULL);
		// WhiteQueen.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_348 = __this->___WhiteQueen_9;
		NullCheck(L_348);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_349;
		L_349 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_348, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_350 = V_17;
		NullCheck(L_349);
		L_349->___position_7 = L_350;
		Il2CppCodeGenWriteBarrier((void**)(&L_349->___position_7), (void*)L_350);
		// WhiteQueen.GetComponent<Piece>().pieceType = PieceTypes.Queen;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_351 = __this->___WhiteQueen_9;
		NullCheck(L_351);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_352;
		L_352 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_351, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_352);
		L_352->___pieceType_8 = 4;
		// boardRepresentation[file, rank] = WhiteQueen;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_353 = __this->___boardRepresentation_40;
		int32_t L_354 = V_0;
		int32_t L_355 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_356 = __this->___WhiteQueen_9;
		NullCheck(L_353);
		(L_353)->SetAt(L_354, L_355, L_356);
		goto IL_13a5;
	}

IL_0879:
	{
		// else if (rank == 1)
		int32_t L_357 = V_1;
		if ((!(((uint32_t)L_357) == ((uint32_t)1))))
		{
			goto IL_0910;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_359[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_358 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_359);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_360 = L_358;
		int32_t L_361 = V_0;
		NullCheck(L_360);
		(L_360)->SetAt(0, 0, L_361);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_362 = L_360;
		int32_t L_363 = V_1;
		NullCheck(L_362);
		(L_362)->SetAt(1, 0, L_363);
		V_18 = L_362;
		// WhiteDPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_364 = __this->___WhiteDPawn_19;
		NullCheck(L_364);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_365;
		L_365 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_364, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_366 = V_3;
		NullCheck(L_366);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_367;
		L_367 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_366, NULL);
		NullCheck(L_367);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_368;
		L_368 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_367, NULL);
		NullCheck(L_365);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_365, L_368, NULL);
		// WhiteDPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_369 = __this->___WhiteDPawn_19;
		NullCheck(L_369);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_370;
		L_370 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_369, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_371;
		L_371 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_372;
		L_372 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_371, (1.5f), NULL);
		NullCheck(L_370);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_370, L_372, NULL);
		// WhiteDPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_373 = __this->___WhiteDPawn_19;
		NullCheck(L_373);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_374;
		L_374 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_373, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_375 = V_18;
		NullCheck(L_374);
		L_374->___position_7 = L_375;
		Il2CppCodeGenWriteBarrier((void**)(&L_374->___position_7), (void*)L_375);
		// WhiteDPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_376 = __this->___WhiteDPawn_19;
		NullCheck(L_376);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_377;
		L_377 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_376, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_377);
		L_377->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = WhiteDPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_378 = __this->___boardRepresentation_40;
		int32_t L_379 = V_0;
		int32_t L_380 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_381 = __this->___WhiteDPawn_19;
		NullCheck(L_378);
		(L_378)->SetAt(L_379, L_380, L_381);
		goto IL_13a5;
	}

IL_0910:
	{
		// else if (rank == 6)
		int32_t L_382 = V_1;
		if ((!(((uint32_t)L_382) == ((uint32_t)6))))
		{
			goto IL_09a7;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_384[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_383 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_384);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_385 = L_383;
		int32_t L_386 = V_0;
		NullCheck(L_385);
		(L_385)->SetAt(0, 0, L_386);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_387 = L_385;
		int32_t L_388 = V_1;
		NullCheck(L_387);
		(L_387)->SetAt(1, 0, L_388);
		V_19 = L_387;
		// BlackDPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_389 = __this->___BlackDPawn_35;
		NullCheck(L_389);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_390;
		L_390 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_389, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_391 = V_3;
		NullCheck(L_391);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_392;
		L_392 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_391, NULL);
		NullCheck(L_392);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_393;
		L_393 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_392, NULL);
		NullCheck(L_390);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_390, L_393, NULL);
		// BlackDPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_394 = __this->___BlackDPawn_35;
		NullCheck(L_394);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_395;
		L_395 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_394, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_396;
		L_396 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_397;
		L_397 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_396, (1.5f), NULL);
		NullCheck(L_395);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_395, L_397, NULL);
		// BlackDPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_398 = __this->___BlackDPawn_35;
		NullCheck(L_398);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_399;
		L_399 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_398, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_400 = V_19;
		NullCheck(L_399);
		L_399->___position_7 = L_400;
		Il2CppCodeGenWriteBarrier((void**)(&L_399->___position_7), (void*)L_400);
		// BlackDPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_401 = __this->___BlackDPawn_35;
		NullCheck(L_401);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_402;
		L_402 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_401, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_402);
		L_402->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = BlackDPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_403 = __this->___boardRepresentation_40;
		int32_t L_404 = V_0;
		int32_t L_405 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_406 = __this->___BlackDPawn_35;
		NullCheck(L_403);
		(L_403)->SetAt(L_404, L_405, L_406);
		goto IL_13a5;
	}

IL_09a7:
	{
		// else if (rank == 7)
		int32_t L_407 = V_1;
		if ((!(((uint32_t)L_407) == ((uint32_t)7))))
		{
			goto IL_13a5;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_409[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_408 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_409);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_410 = L_408;
		int32_t L_411 = V_0;
		NullCheck(L_410);
		(L_410)->SetAt(0, 0, L_411);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_412 = L_410;
		int32_t L_413 = V_1;
		NullCheck(L_412);
		(L_412)->SetAt(1, 0, L_413);
		V_20 = L_412;
		// BlackQueen.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_414 = __this->___BlackQueen_25;
		NullCheck(L_414);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_415;
		L_415 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_414, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_416 = V_3;
		NullCheck(L_416);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_417;
		L_417 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_416, NULL);
		NullCheck(L_417);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_418;
		L_418 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_417, NULL);
		NullCheck(L_415);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_415, L_418, NULL);
		// BlackQueen.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_419 = __this->___BlackQueen_25;
		NullCheck(L_419);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_420;
		L_420 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_419, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_421;
		L_421 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_422;
		L_422 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_421, (1.5f), NULL);
		NullCheck(L_420);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_420, L_422, NULL);
		// BlackQueen.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_423 = __this->___BlackQueen_25;
		NullCheck(L_423);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_424;
		L_424 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_423, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_425 = V_20;
		NullCheck(L_424);
		L_424->___position_7 = L_425;
		Il2CppCodeGenWriteBarrier((void**)(&L_424->___position_7), (void*)L_425);
		// BlackQueen.GetComponent<Piece>().pieceType = PieceTypes.Queen;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_426 = __this->___BlackQueen_25;
		NullCheck(L_426);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_427;
		L_427 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_426, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_427);
		L_427->___pieceType_8 = 4;
		// boardRepresentation[file, rank] = BlackQueen;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_428 = __this->___boardRepresentation_40;
		int32_t L_429 = V_0;
		int32_t L_430 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_431 = __this->___BlackQueen_25;
		NullCheck(L_428);
		(L_428)->SetAt(L_429, L_430, L_431);
		// break;
		goto IL_13a5;
	}

IL_0a3e:
	{
		// if (rank == 0)
		int32_t L_432 = V_1;
		if (L_432)
		{
			goto IL_0ad4;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_434[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_433 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_434);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_435 = L_433;
		int32_t L_436 = V_0;
		NullCheck(L_435);
		(L_435)->SetAt(0, 0, L_436);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_437 = L_435;
		int32_t L_438 = V_1;
		NullCheck(L_437);
		(L_437)->SetAt(1, 0, L_438);
		V_21 = L_437;
		// WhiteKing.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_439 = __this->___WhiteKing_8;
		NullCheck(L_439);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_440;
		L_440 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_439, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_441 = V_3;
		NullCheck(L_441);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_442;
		L_442 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_441, NULL);
		NullCheck(L_442);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_443;
		L_443 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_442, NULL);
		NullCheck(L_440);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_440, L_443, NULL);
		// WhiteKing.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_444 = __this->___WhiteKing_8;
		NullCheck(L_444);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_445;
		L_445 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_444, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_446;
		L_446 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_447;
		L_447 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_446, (1.5f), NULL);
		NullCheck(L_445);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_445, L_447, NULL);
		// WhiteKing.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_448 = __this->___WhiteKing_8;
		NullCheck(L_448);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_449;
		L_449 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_448, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_450 = V_21;
		NullCheck(L_449);
		L_449->___position_7 = L_450;
		Il2CppCodeGenWriteBarrier((void**)(&L_449->___position_7), (void*)L_450);
		// WhiteKing.GetComponent<Piece>().pieceType = PieceTypes.King;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_451 = __this->___WhiteKing_8;
		NullCheck(L_451);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_452;
		L_452 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_451, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_452);
		L_452->___pieceType_8 = 5;
		// boardRepresentation[file, rank] = WhiteKing;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_453 = __this->___boardRepresentation_40;
		int32_t L_454 = V_0;
		int32_t L_455 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_456 = __this->___WhiteKing_8;
		NullCheck(L_453);
		(L_453)->SetAt(L_454, L_455, L_456);
		goto IL_13a5;
	}

IL_0ad4:
	{
		// else if (rank == 1)
		int32_t L_457 = V_1;
		if ((!(((uint32_t)L_457) == ((uint32_t)1))))
		{
			goto IL_0b6b;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_459[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_458 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_459);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_460 = L_458;
		int32_t L_461 = V_0;
		NullCheck(L_460);
		(L_460)->SetAt(0, 0, L_461);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_462 = L_460;
		int32_t L_463 = V_1;
		NullCheck(L_462);
		(L_462)->SetAt(1, 0, L_463);
		V_22 = L_462;
		// WhiteEPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_464 = __this->___WhiteEPawn_20;
		NullCheck(L_464);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_465;
		L_465 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_464, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_466 = V_3;
		NullCheck(L_466);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_467;
		L_467 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_466, NULL);
		NullCheck(L_467);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_468;
		L_468 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_467, NULL);
		NullCheck(L_465);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_465, L_468, NULL);
		// WhiteEPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_469 = __this->___WhiteEPawn_20;
		NullCheck(L_469);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_470;
		L_470 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_469, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_471;
		L_471 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_472;
		L_472 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_471, (1.5f), NULL);
		NullCheck(L_470);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_470, L_472, NULL);
		// WhiteEPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_473 = __this->___WhiteEPawn_20;
		NullCheck(L_473);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_474;
		L_474 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_473, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_475 = V_22;
		NullCheck(L_474);
		L_474->___position_7 = L_475;
		Il2CppCodeGenWriteBarrier((void**)(&L_474->___position_7), (void*)L_475);
		// WhiteEPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_476 = __this->___WhiteEPawn_20;
		NullCheck(L_476);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_477;
		L_477 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_476, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_477);
		L_477->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = WhiteEPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_478 = __this->___boardRepresentation_40;
		int32_t L_479 = V_0;
		int32_t L_480 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_481 = __this->___WhiteEPawn_20;
		NullCheck(L_478);
		(L_478)->SetAt(L_479, L_480, L_481);
		goto IL_13a5;
	}

IL_0b6b:
	{
		// else if (rank == 6)
		int32_t L_482 = V_1;
		if ((!(((uint32_t)L_482) == ((uint32_t)6))))
		{
			goto IL_0c02;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_484[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_483 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_484);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_485 = L_483;
		int32_t L_486 = V_0;
		NullCheck(L_485);
		(L_485)->SetAt(0, 0, L_486);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_487 = L_485;
		int32_t L_488 = V_1;
		NullCheck(L_487);
		(L_487)->SetAt(1, 0, L_488);
		V_23 = L_487;
		// BlackEPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_489 = __this->___BlackEPawn_36;
		NullCheck(L_489);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_490;
		L_490 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_489, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_491 = V_3;
		NullCheck(L_491);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_492;
		L_492 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_491, NULL);
		NullCheck(L_492);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_493;
		L_493 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_492, NULL);
		NullCheck(L_490);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_490, L_493, NULL);
		// BlackEPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_494 = __this->___BlackEPawn_36;
		NullCheck(L_494);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_495;
		L_495 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_494, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_496;
		L_496 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_497;
		L_497 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_496, (1.5f), NULL);
		NullCheck(L_495);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_495, L_497, NULL);
		// BlackEPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_498 = __this->___BlackEPawn_36;
		NullCheck(L_498);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_499;
		L_499 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_498, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_500 = V_23;
		NullCheck(L_499);
		L_499->___position_7 = L_500;
		Il2CppCodeGenWriteBarrier((void**)(&L_499->___position_7), (void*)L_500);
		// BlackEPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_501 = __this->___BlackEPawn_36;
		NullCheck(L_501);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_502;
		L_502 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_501, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_502);
		L_502->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = BlackEPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_503 = __this->___boardRepresentation_40;
		int32_t L_504 = V_0;
		int32_t L_505 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_506 = __this->___BlackEPawn_36;
		NullCheck(L_503);
		(L_503)->SetAt(L_504, L_505, L_506);
		goto IL_13a5;
	}

IL_0c02:
	{
		// else if (rank == 7)
		int32_t L_507 = V_1;
		if ((!(((uint32_t)L_507) == ((uint32_t)7))))
		{
			goto IL_13a5;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_509[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_508 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_509);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_510 = L_508;
		int32_t L_511 = V_0;
		NullCheck(L_510);
		(L_510)->SetAt(0, 0, L_511);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_512 = L_510;
		int32_t L_513 = V_1;
		NullCheck(L_512);
		(L_512)->SetAt(1, 0, L_513);
		V_24 = L_512;
		// BlackKing.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_514 = __this->___BlackKing_24;
		NullCheck(L_514);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_515;
		L_515 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_514, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_516 = V_3;
		NullCheck(L_516);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_517;
		L_517 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_516, NULL);
		NullCheck(L_517);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_518;
		L_518 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_517, NULL);
		NullCheck(L_515);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_515, L_518, NULL);
		// BlackKing.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_519 = __this->___BlackKing_24;
		NullCheck(L_519);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_520;
		L_520 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_519, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_521;
		L_521 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_522;
		L_522 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_521, (1.5f), NULL);
		NullCheck(L_520);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_520, L_522, NULL);
		// BlackKing.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_523 = __this->___BlackKing_24;
		NullCheck(L_523);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_524;
		L_524 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_523, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_525 = V_24;
		NullCheck(L_524);
		L_524->___position_7 = L_525;
		Il2CppCodeGenWriteBarrier((void**)(&L_524->___position_7), (void*)L_525);
		// BlackKing.GetComponent<Piece>().pieceType = PieceTypes.King;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_526 = __this->___BlackKing_24;
		NullCheck(L_526);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_527;
		L_527 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_526, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_527);
		L_527->___pieceType_8 = 5;
		// boardRepresentation[file, rank] = BlackKing;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_528 = __this->___boardRepresentation_40;
		int32_t L_529 = V_0;
		int32_t L_530 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_531 = __this->___BlackKing_24;
		NullCheck(L_528);
		(L_528)->SetAt(L_529, L_530, L_531);
		// break;
		goto IL_13a5;
	}

IL_0c99:
	{
		// if (rank == 0)
		int32_t L_532 = V_1;
		if (L_532)
		{
			goto IL_0d2f;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_534[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_533 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_534);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_535 = L_533;
		int32_t L_536 = V_0;
		NullCheck(L_535);
		(L_535)->SetAt(0, 0, L_536);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_537 = L_535;
		int32_t L_538 = V_1;
		NullCheck(L_537);
		(L_537)->SetAt(1, 0, L_538);
		V_25 = L_537;
		// WhiteBishopK.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_539 = __this->___WhiteBishopK_13;
		NullCheck(L_539);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_540;
		L_540 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_539, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_541 = V_3;
		NullCheck(L_541);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_542;
		L_542 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_541, NULL);
		NullCheck(L_542);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_543;
		L_543 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_542, NULL);
		NullCheck(L_540);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_540, L_543, NULL);
		// WhiteBishopK.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_544 = __this->___WhiteBishopK_13;
		NullCheck(L_544);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_545;
		L_545 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_544, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_546;
		L_546 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_547;
		L_547 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_546, (1.5f), NULL);
		NullCheck(L_545);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_545, L_547, NULL);
		// WhiteBishopK.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_548 = __this->___WhiteBishopK_13;
		NullCheck(L_548);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_549;
		L_549 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_548, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_550 = V_25;
		NullCheck(L_549);
		L_549->___position_7 = L_550;
		Il2CppCodeGenWriteBarrier((void**)(&L_549->___position_7), (void*)L_550);
		// WhiteBishopK.GetComponent<Piece>().pieceType = PieceTypes.Bishop;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_551 = __this->___WhiteBishopK_13;
		NullCheck(L_551);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_552;
		L_552 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_551, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_552);
		L_552->___pieceType_8 = 2;
		// boardRepresentation[file, rank] = WhiteBishopK;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_553 = __this->___boardRepresentation_40;
		int32_t L_554 = V_0;
		int32_t L_555 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_556 = __this->___WhiteBishopK_13;
		NullCheck(L_553);
		(L_553)->SetAt(L_554, L_555, L_556);
		goto IL_13a5;
	}

IL_0d2f:
	{
		// else if (rank == 1)
		int32_t L_557 = V_1;
		if ((!(((uint32_t)L_557) == ((uint32_t)1))))
		{
			goto IL_0dc6;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_559[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_558 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_559);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_560 = L_558;
		int32_t L_561 = V_0;
		NullCheck(L_560);
		(L_560)->SetAt(0, 0, L_561);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_562 = L_560;
		int32_t L_563 = V_1;
		NullCheck(L_562);
		(L_562)->SetAt(1, 0, L_563);
		V_26 = L_562;
		// WhiteFPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_564 = __this->___WhiteFPawn_21;
		NullCheck(L_564);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_565;
		L_565 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_564, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_566 = V_3;
		NullCheck(L_566);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_567;
		L_567 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_566, NULL);
		NullCheck(L_567);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_568;
		L_568 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_567, NULL);
		NullCheck(L_565);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_565, L_568, NULL);
		// WhiteFPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_569 = __this->___WhiteFPawn_21;
		NullCheck(L_569);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_570;
		L_570 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_569, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_571;
		L_571 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_572;
		L_572 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_571, (1.5f), NULL);
		NullCheck(L_570);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_570, L_572, NULL);
		// WhiteFPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_573 = __this->___WhiteFPawn_21;
		NullCheck(L_573);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_574;
		L_574 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_573, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_575 = V_26;
		NullCheck(L_574);
		L_574->___position_7 = L_575;
		Il2CppCodeGenWriteBarrier((void**)(&L_574->___position_7), (void*)L_575);
		// WhiteFPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_576 = __this->___WhiteFPawn_21;
		NullCheck(L_576);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_577;
		L_577 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_576, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_577);
		L_577->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = WhiteFPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_578 = __this->___boardRepresentation_40;
		int32_t L_579 = V_0;
		int32_t L_580 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_581 = __this->___WhiteFPawn_21;
		NullCheck(L_578);
		(L_578)->SetAt(L_579, L_580, L_581);
		goto IL_13a5;
	}

IL_0dc6:
	{
		// else if (rank == 6)
		int32_t L_582 = V_1;
		if ((!(((uint32_t)L_582) == ((uint32_t)6))))
		{
			goto IL_0e5d;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_584[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_583 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_584);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_585 = L_583;
		int32_t L_586 = V_0;
		NullCheck(L_585);
		(L_585)->SetAt(0, 0, L_586);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_587 = L_585;
		int32_t L_588 = V_1;
		NullCheck(L_587);
		(L_587)->SetAt(1, 0, L_588);
		V_27 = L_587;
		// BlackFPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_589 = __this->___BlackFPawn_37;
		NullCheck(L_589);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_590;
		L_590 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_589, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_591 = V_3;
		NullCheck(L_591);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_592;
		L_592 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_591, NULL);
		NullCheck(L_592);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_593;
		L_593 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_592, NULL);
		NullCheck(L_590);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_590, L_593, NULL);
		// BlackFPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_594 = __this->___BlackFPawn_37;
		NullCheck(L_594);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_595;
		L_595 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_594, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_596;
		L_596 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_597;
		L_597 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_596, (1.5f), NULL);
		NullCheck(L_595);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_595, L_597, NULL);
		// BlackFPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_598 = __this->___BlackFPawn_37;
		NullCheck(L_598);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_599;
		L_599 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_598, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_600 = V_27;
		NullCheck(L_599);
		L_599->___position_7 = L_600;
		Il2CppCodeGenWriteBarrier((void**)(&L_599->___position_7), (void*)L_600);
		// BlackFPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_601 = __this->___BlackFPawn_37;
		NullCheck(L_601);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_602;
		L_602 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_601, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_602);
		L_602->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = BlackFPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_603 = __this->___boardRepresentation_40;
		int32_t L_604 = V_0;
		int32_t L_605 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_606 = __this->___BlackFPawn_37;
		NullCheck(L_603);
		(L_603)->SetAt(L_604, L_605, L_606);
		goto IL_13a5;
	}

IL_0e5d:
	{
		// else if (rank == 7)
		int32_t L_607 = V_1;
		if ((!(((uint32_t)L_607) == ((uint32_t)7))))
		{
			goto IL_13a5;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_609[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_608 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_609);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_610 = L_608;
		int32_t L_611 = V_0;
		NullCheck(L_610);
		(L_610)->SetAt(0, 0, L_611);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_612 = L_610;
		int32_t L_613 = V_1;
		NullCheck(L_612);
		(L_612)->SetAt(1, 0, L_613);
		V_28 = L_612;
		// BlackBishopK.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_614 = __this->___BlackBishopK_29;
		NullCheck(L_614);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_615;
		L_615 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_614, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_616 = V_3;
		NullCheck(L_616);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_617;
		L_617 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_616, NULL);
		NullCheck(L_617);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_618;
		L_618 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_617, NULL);
		NullCheck(L_615);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_615, L_618, NULL);
		// BlackBishopK.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_619 = __this->___BlackBishopK_29;
		NullCheck(L_619);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_620;
		L_620 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_619, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_621;
		L_621 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_622;
		L_622 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_621, (1.5f), NULL);
		NullCheck(L_620);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_620, L_622, NULL);
		// BlackBishopK.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_623 = __this->___BlackBishopK_29;
		NullCheck(L_623);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_624;
		L_624 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_623, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_625 = V_28;
		NullCheck(L_624);
		L_624->___position_7 = L_625;
		Il2CppCodeGenWriteBarrier((void**)(&L_624->___position_7), (void*)L_625);
		// BlackBishopK.GetComponent<Piece>().pieceType = PieceTypes.Bishop;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_626 = __this->___BlackBishopK_29;
		NullCheck(L_626);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_627;
		L_627 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_626, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_627);
		L_627->___pieceType_8 = 2;
		// boardRepresentation[file, rank] = BlackBishopK;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_628 = __this->___boardRepresentation_40;
		int32_t L_629 = V_0;
		int32_t L_630 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_631 = __this->___BlackBishopK_29;
		NullCheck(L_628);
		(L_628)->SetAt(L_629, L_630, L_631);
		// break;
		goto IL_13a5;
	}

IL_0ef4:
	{
		// if (rank == 0)
		int32_t L_632 = V_1;
		if (L_632)
		{
			goto IL_0f8a;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_634[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_633 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_634);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_635 = L_633;
		int32_t L_636 = V_0;
		NullCheck(L_635);
		(L_635)->SetAt(0, 0, L_636);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_637 = L_635;
		int32_t L_638 = V_1;
		NullCheck(L_637);
		(L_637)->SetAt(1, 0, L_638);
		V_29 = L_637;
		// WhiteKnightK.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_639 = __this->___WhiteKnightK_14;
		NullCheck(L_639);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_640;
		L_640 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_639, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_641 = V_3;
		NullCheck(L_641);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_642;
		L_642 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_641, NULL);
		NullCheck(L_642);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_643;
		L_643 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_642, NULL);
		NullCheck(L_640);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_640, L_643, NULL);
		// WhiteKnightK.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_644 = __this->___WhiteKnightK_14;
		NullCheck(L_644);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_645;
		L_645 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_644, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_646;
		L_646 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_647;
		L_647 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_646, (1.5f), NULL);
		NullCheck(L_645);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_645, L_647, NULL);
		// WhiteKnightK.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_648 = __this->___WhiteKnightK_14;
		NullCheck(L_648);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_649;
		L_649 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_648, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_650 = V_29;
		NullCheck(L_649);
		L_649->___position_7 = L_650;
		Il2CppCodeGenWriteBarrier((void**)(&L_649->___position_7), (void*)L_650);
		// WhiteKnightK.GetComponent<Piece>().pieceType = PieceTypes.Knight;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_651 = __this->___WhiteKnightK_14;
		NullCheck(L_651);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_652;
		L_652 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_651, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_652);
		L_652->___pieceType_8 = 1;
		// boardRepresentation[file, rank] = WhiteKnightK;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_653 = __this->___boardRepresentation_40;
		int32_t L_654 = V_0;
		int32_t L_655 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_656 = __this->___WhiteKnightK_14;
		NullCheck(L_653);
		(L_653)->SetAt(L_654, L_655, L_656);
		goto IL_13a5;
	}

IL_0f8a:
	{
		// else if (rank == 1)
		int32_t L_657 = V_1;
		if ((!(((uint32_t)L_657) == ((uint32_t)1))))
		{
			goto IL_1021;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_659[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_658 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_659);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_660 = L_658;
		int32_t L_661 = V_0;
		NullCheck(L_660);
		(L_660)->SetAt(0, 0, L_661);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_662 = L_660;
		int32_t L_663 = V_1;
		NullCheck(L_662);
		(L_662)->SetAt(1, 0, L_663);
		V_30 = L_662;
		// WhiteGPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_664 = __this->___WhiteGPawn_22;
		NullCheck(L_664);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_665;
		L_665 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_664, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_666 = V_3;
		NullCheck(L_666);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_667;
		L_667 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_666, NULL);
		NullCheck(L_667);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_668;
		L_668 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_667, NULL);
		NullCheck(L_665);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_665, L_668, NULL);
		// WhiteGPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_669 = __this->___WhiteGPawn_22;
		NullCheck(L_669);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_670;
		L_670 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_669, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_671;
		L_671 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_672;
		L_672 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_671, (1.5f), NULL);
		NullCheck(L_670);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_670, L_672, NULL);
		// WhiteGPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_673 = __this->___WhiteGPawn_22;
		NullCheck(L_673);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_674;
		L_674 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_673, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_675 = V_30;
		NullCheck(L_674);
		L_674->___position_7 = L_675;
		Il2CppCodeGenWriteBarrier((void**)(&L_674->___position_7), (void*)L_675);
		// WhiteGPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_676 = __this->___WhiteGPawn_22;
		NullCheck(L_676);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_677;
		L_677 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_676, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_677);
		L_677->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = WhiteGPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_678 = __this->___boardRepresentation_40;
		int32_t L_679 = V_0;
		int32_t L_680 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_681 = __this->___WhiteGPawn_22;
		NullCheck(L_678);
		(L_678)->SetAt(L_679, L_680, L_681);
		goto IL_13a5;
	}

IL_1021:
	{
		// else if (rank == 6)
		int32_t L_682 = V_1;
		if ((!(((uint32_t)L_682) == ((uint32_t)6))))
		{
			goto IL_10b8;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_684[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_683 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_684);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_685 = L_683;
		int32_t L_686 = V_0;
		NullCheck(L_685);
		(L_685)->SetAt(0, 0, L_686);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_687 = L_685;
		int32_t L_688 = V_1;
		NullCheck(L_687);
		(L_687)->SetAt(1, 0, L_688);
		V_31 = L_687;
		// BlackGPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_689 = __this->___BlackGPawn_38;
		NullCheck(L_689);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_690;
		L_690 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_689, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_691 = V_3;
		NullCheck(L_691);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_692;
		L_692 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_691, NULL);
		NullCheck(L_692);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_693;
		L_693 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_692, NULL);
		NullCheck(L_690);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_690, L_693, NULL);
		// BlackGPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_694 = __this->___BlackGPawn_38;
		NullCheck(L_694);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_695;
		L_695 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_694, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_696;
		L_696 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_697;
		L_697 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_696, (1.5f), NULL);
		NullCheck(L_695);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_695, L_697, NULL);
		// BlackGPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_698 = __this->___BlackGPawn_38;
		NullCheck(L_698);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_699;
		L_699 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_698, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_700 = V_31;
		NullCheck(L_699);
		L_699->___position_7 = L_700;
		Il2CppCodeGenWriteBarrier((void**)(&L_699->___position_7), (void*)L_700);
		// BlackGPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_701 = __this->___BlackGPawn_38;
		NullCheck(L_701);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_702;
		L_702 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_701, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_702);
		L_702->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = BlackGPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_703 = __this->___boardRepresentation_40;
		int32_t L_704 = V_0;
		int32_t L_705 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_706 = __this->___BlackGPawn_38;
		NullCheck(L_703);
		(L_703)->SetAt(L_704, L_705, L_706);
		goto IL_13a5;
	}

IL_10b8:
	{
		// else if (rank == 7)
		int32_t L_707 = V_1;
		if ((!(((uint32_t)L_707) == ((uint32_t)7))))
		{
			goto IL_13a5;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_709[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_708 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_709);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_710 = L_708;
		int32_t L_711 = V_0;
		NullCheck(L_710);
		(L_710)->SetAt(0, 0, L_711);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_712 = L_710;
		int32_t L_713 = V_1;
		NullCheck(L_712);
		(L_712)->SetAt(1, 0, L_713);
		V_32 = L_712;
		// BlackKnightK.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_714 = __this->___BlackKnightK_30;
		NullCheck(L_714);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_715;
		L_715 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_714, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_716 = V_3;
		NullCheck(L_716);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_717;
		L_717 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_716, NULL);
		NullCheck(L_717);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_718;
		L_718 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_717, NULL);
		NullCheck(L_715);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_715, L_718, NULL);
		// BlackKnightK.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_719 = __this->___BlackKnightK_30;
		NullCheck(L_719);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_720;
		L_720 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_719, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_721;
		L_721 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_722;
		L_722 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_721, (1.5f), NULL);
		NullCheck(L_720);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_720, L_722, NULL);
		// BlackKnightK.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_723 = __this->___BlackKnightK_30;
		NullCheck(L_723);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_724;
		L_724 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_723, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_725 = V_32;
		NullCheck(L_724);
		L_724->___position_7 = L_725;
		Il2CppCodeGenWriteBarrier((void**)(&L_724->___position_7), (void*)L_725);
		// BlackKnightK.GetComponent<Piece>().pieceType = PieceTypes.Knight;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_726 = __this->___BlackKnightK_30;
		NullCheck(L_726);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_727;
		L_727 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_726, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_727);
		L_727->___pieceType_8 = 1;
		// boardRepresentation[file, rank] = BlackKnightK;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_728 = __this->___boardRepresentation_40;
		int32_t L_729 = V_0;
		int32_t L_730 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_731 = __this->___BlackKnightK_30;
		NullCheck(L_728);
		(L_728)->SetAt(L_729, L_730, L_731);
		// break;
		goto IL_13a5;
	}

IL_114f:
	{
		// if (rank == 0)
		int32_t L_732 = V_1;
		if (L_732)
		{
			goto IL_11e5;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_734[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_733 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_734);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_735 = L_733;
		int32_t L_736 = V_0;
		NullCheck(L_735);
		(L_735)->SetAt(0, 0, L_736);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_737 = L_735;
		int32_t L_738 = V_1;
		NullCheck(L_737);
		(L_737)->SetAt(1, 0, L_738);
		V_33 = L_737;
		// WhiteRookK.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_739 = __this->___WhiteRookK_15;
		NullCheck(L_739);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_740;
		L_740 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_739, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_741 = V_3;
		NullCheck(L_741);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_742;
		L_742 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_741, NULL);
		NullCheck(L_742);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_743;
		L_743 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_742, NULL);
		NullCheck(L_740);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_740, L_743, NULL);
		// WhiteRookK.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_744 = __this->___WhiteRookK_15;
		NullCheck(L_744);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_745;
		L_745 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_744, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_746;
		L_746 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_747;
		L_747 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_746, (1.5f), NULL);
		NullCheck(L_745);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_745, L_747, NULL);
		// WhiteRookK.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_748 = __this->___WhiteRookK_15;
		NullCheck(L_748);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_749;
		L_749 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_748, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_750 = V_33;
		NullCheck(L_749);
		L_749->___position_7 = L_750;
		Il2CppCodeGenWriteBarrier((void**)(&L_749->___position_7), (void*)L_750);
		// WhiteRookK.GetComponent<Piece>().pieceType = PieceTypes.Rook;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_751 = __this->___WhiteRookK_15;
		NullCheck(L_751);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_752;
		L_752 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_751, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_752);
		L_752->___pieceType_8 = 3;
		// boardRepresentation[file, rank] = WhiteRookK;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_753 = __this->___boardRepresentation_40;
		int32_t L_754 = V_0;
		int32_t L_755 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_756 = __this->___WhiteRookK_15;
		NullCheck(L_753);
		(L_753)->SetAt(L_754, L_755, L_756);
		goto IL_13a5;
	}

IL_11e5:
	{
		// else if (rank == 1)
		int32_t L_757 = V_1;
		if ((!(((uint32_t)L_757) == ((uint32_t)1))))
		{
			goto IL_127c;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_759[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_758 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_759);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_760 = L_758;
		int32_t L_761 = V_0;
		NullCheck(L_760);
		(L_760)->SetAt(0, 0, L_761);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_762 = L_760;
		int32_t L_763 = V_1;
		NullCheck(L_762);
		(L_762)->SetAt(1, 0, L_763);
		V_34 = L_762;
		// WhiteHPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_764 = __this->___WhiteHPawn_23;
		NullCheck(L_764);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_765;
		L_765 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_764, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_766 = V_3;
		NullCheck(L_766);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_767;
		L_767 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_766, NULL);
		NullCheck(L_767);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_768;
		L_768 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_767, NULL);
		NullCheck(L_765);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_765, L_768, NULL);
		// WhiteHPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_769 = __this->___WhiteHPawn_23;
		NullCheck(L_769);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_770;
		L_770 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_769, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_771;
		L_771 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_772;
		L_772 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_771, (1.5f), NULL);
		NullCheck(L_770);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_770, L_772, NULL);
		// WhiteHPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_773 = __this->___WhiteHPawn_23;
		NullCheck(L_773);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_774;
		L_774 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_773, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_775 = V_34;
		NullCheck(L_774);
		L_774->___position_7 = L_775;
		Il2CppCodeGenWriteBarrier((void**)(&L_774->___position_7), (void*)L_775);
		// WhiteHPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_776 = __this->___WhiteHPawn_23;
		NullCheck(L_776);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_777;
		L_777 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_776, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_777);
		L_777->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = WhiteHPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_778 = __this->___boardRepresentation_40;
		int32_t L_779 = V_0;
		int32_t L_780 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_781 = __this->___WhiteHPawn_23;
		NullCheck(L_778);
		(L_778)->SetAt(L_779, L_780, L_781);
		goto IL_13a5;
	}

IL_127c:
	{
		// else if (rank == 6)
		int32_t L_782 = V_1;
		if ((!(((uint32_t)L_782) == ((uint32_t)6))))
		{
			goto IL_1313;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_784[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_783 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_784);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_785 = L_783;
		int32_t L_786 = V_0;
		NullCheck(L_785);
		(L_785)->SetAt(0, 0, L_786);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_787 = L_785;
		int32_t L_788 = V_1;
		NullCheck(L_787);
		(L_787)->SetAt(1, 0, L_788);
		V_35 = L_787;
		// BlackHPawn.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_789 = __this->___BlackHPawn_39;
		NullCheck(L_789);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_790;
		L_790 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_789, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_791 = V_3;
		NullCheck(L_791);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_792;
		L_792 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_791, NULL);
		NullCheck(L_792);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_793;
		L_793 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_792, NULL);
		NullCheck(L_790);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_790, L_793, NULL);
		// BlackHPawn.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_794 = __this->___BlackHPawn_39;
		NullCheck(L_794);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_795;
		L_795 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_794, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_796;
		L_796 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_797;
		L_797 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_796, (1.5f), NULL);
		NullCheck(L_795);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_795, L_797, NULL);
		// BlackHPawn.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_798 = __this->___BlackHPawn_39;
		NullCheck(L_798);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_799;
		L_799 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_798, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_800 = V_35;
		NullCheck(L_799);
		L_799->___position_7 = L_800;
		Il2CppCodeGenWriteBarrier((void**)(&L_799->___position_7), (void*)L_800);
		// BlackHPawn.GetComponent<Piece>().pieceType = PieceTypes.Pawn;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_801 = __this->___BlackHPawn_39;
		NullCheck(L_801);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_802;
		L_802 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_801, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_802);
		L_802->___pieceType_8 = 0;
		// boardRepresentation[file, rank] = BlackHPawn;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_803 = __this->___boardRepresentation_40;
		int32_t L_804 = V_0;
		int32_t L_805 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_806 = __this->___BlackHPawn_39;
		NullCheck(L_803);
		(L_803)->SetAt(L_804, L_805, L_806);
		goto IL_13a5;
	}

IL_1313:
	{
		// else if (rank == 7)
		int32_t L_807 = V_1;
		if ((!(((uint32_t)L_807) == ((uint32_t)7))))
		{
			goto IL_13a5;
		}
	}
	{
		// int[,] pos = { { file }, { rank } };
		il2cpp_array_size_t L_809[] = { (il2cpp_array_size_t)2, (il2cpp_array_size_t)1 };
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_808 = (Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F*)GenArrayNew(Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F_il2cpp_TypeInfo_var, L_809);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_810 = L_808;
		int32_t L_811 = V_0;
		NullCheck(L_810);
		(L_810)->SetAt(0, 0, L_811);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_812 = L_810;
		int32_t L_813 = V_1;
		NullCheck(L_812);
		(L_812)->SetAt(1, 0, L_813);
		V_36 = L_812;
		// BlackRookK.transform.position = square.transform.position;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_814 = __this->___BlackRookK_31;
		NullCheck(L_814);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_815;
		L_815 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_814, NULL);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_816 = V_3;
		NullCheck(L_816);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_817;
		L_817 = Component_get_transform_m2919A1D81931E6932C7F06D4C2F0AB8DDA9A5371(L_816, NULL);
		NullCheck(L_817);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_818;
		L_818 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_817, NULL);
		NullCheck(L_815);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_815, L_818, NULL);
		// BlackRookK.transform.localScale = Vector3.one * 1.5f;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_819 = __this->___BlackRookK_31;
		NullCheck(L_819);
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_820;
		L_820 = GameObject_get_transform_m0BC10ADFA1632166AE5544BDF9038A2650C2AE56(L_819, NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_821;
		L_821 = Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline(NULL);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_822;
		L_822 = Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline(L_821, (1.5f), NULL);
		NullCheck(L_820);
		Transform_set_localScale_mBA79E811BAF6C47B80FF76414C12B47B3CD03633(L_820, L_822, NULL);
		// BlackRookK.GetComponent<Piece>().position = pos;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_823 = __this->___BlackRookK_31;
		NullCheck(L_823);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_824;
		L_824 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_823, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* L_825 = V_36;
		NullCheck(L_824);
		L_824->___position_7 = L_825;
		Il2CppCodeGenWriteBarrier((void**)(&L_824->___position_7), (void*)L_825);
		// BlackRookK.GetComponent<Piece>().pieceType = PieceTypes.Rook;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_826 = __this->___BlackRookK_31;
		NullCheck(L_826);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_827;
		L_827 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_826, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		NullCheck(L_827);
		L_827->___pieceType_8 = 3;
		// boardRepresentation[file, rank] = BlackRookK;
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_828 = __this->___boardRepresentation_40;
		int32_t L_829 = V_0;
		int32_t L_830 = V_1;
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_831 = __this->___BlackRookK_31;
		NullCheck(L_828);
		(L_828)->SetAt(L_829, L_830, L_831);
	}

IL_13a5:
	{
		// Vector3 newPos = square.position;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_832 = V_3;
		NullCheck(L_832);
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_833;
		L_833 = Transform_get_position_m69CD5FA214FDAE7BB701552943674846C220FDE1(L_832, NULL);
		V_4 = L_833;
		// newPos.z += 0.1f;
		float* L_834 = (&(&V_4)->___z_4);
		float* L_835 = L_834;
		float L_836 = *((float*)L_835);
		*((float*)L_835) = (float)((float)il2cpp_codegen_add(L_836, (0.100000001f)));
		// square.position = newPos;
		Transform_tB27202C6F4E36D225EE28A13E4D662BF99785DB1* L_837 = V_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_838 = V_4;
		NullCheck(L_837);
		Transform_set_position_mA1A817124BB41B685043DED2A9BA48CDF37C4156(L_837, L_838, NULL);
		// for (int rank = 0; rank < 8; rank++)
		int32_t L_839 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add(L_839, 1));
	}

IL_13c9:
	{
		// for (int rank = 0; rank < 8; rank++)
		int32_t L_840 = V_1;
		if ((((int32_t)L_840) < ((int32_t)8)))
		{
			goto IL_001b;
		}
	}
	{
		// for (int file = 0; file < 8; file++)
		int32_t L_841 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add(L_841, 1));
	}

IL_13d4:
	{
		// for (int file = 0; file < 8; file++)
		int32_t L_842 = V_0;
		if ((((int32_t)L_842) < ((int32_t)8)))
		{
			goto IL_0014;
		}
	}
	{
		// }
		return;
	}
}
// System.String ChessBoard::GetAllPiecePositions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* ChessBoard_GetAllPiecePositions_m23FC2A99F20F5301594AB0AE1AAA62E138A4E981 (ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral198AA065BF0F912BD6F5F93869BD5C361671F98B);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral1EA15EE8A42A561588097A07567DD53324EF7A07);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral2386E77CF610F786B06A91AF2C1B3FD2282D2745);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral2C3D4826D5236B3C9A914C5CE2E3D8CEA48AC7CE);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral37A50091974FE11FAC57C870272F76245820AA18);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral3B2C1C62D4D1C2A0C8A9AC42DB00D33C654F9AD0);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral3D714DD3E8E77A697EF557E85ED2B014A96328C5);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral430E518F836082E0683698AB9E3F79D39C7F5140);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral4609D79FE2FAD95C38B6DA64FC671E8594984D4C);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral49A7EA21ECB328D154FA2262BB41626D795F4D90);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral4C9ECEDF5B1FB9420A92A5B02A141FADFDF52ED6);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral86BBAACC00198DBB3046818AD3FC2AA10AE48DE1);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA33A5CAE02B786C2060461DF8C6764B4C05E9423);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA9FEAF5F50923952C1AC3A473DE3C7E17D23B907);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralAB69FA1AB6BB831506EFCAD83900FEE751E85F6F);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralE42E8BB820D4F7550A0F04619F4E15FDC56943B9);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralF944DCD635F9801F7AC90A407FBC479964DEC024);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralFCA440D9A4F7E2D10772A726D6FB427BAE128D34);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	String_t* V_1 = NULL;
	Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* V_2 = NULL;
	String_t* V_3 = NULL;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	{
		// int freeCellCount = 0;
		V_0 = 0;
		// string fen = "";
		V_1 = _stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709;
		// for (int y = 7; y > -1; y--)
		V_4 = 7;
		goto IL_01e6;
	}

IL_0010:
	{
		// for (int x = 0; x < 8; x++)
		V_5 = 0;
		goto IL_01b5;
	}

IL_0018:
	{
		// if (boardRepresentation[x,y] == null)
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_0 = __this->___boardRepresentation_40;
		int32_t L_1 = V_5;
		int32_t L_2 = V_4;
		NullCheck(L_0);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_3;
		L_3 = (L_0)->GetAt(L_1, L_2);
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_4;
		L_4 = Object_op_Equality_mB6120F782D83091EF56A198FCEBCF066DB4A9605(L_3, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		if (!L_4)
		{
			goto IL_0050;
		}
	}
	{
		// freeCellCount += 1; //piece is empty
		int32_t L_5 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add(L_5, 1));
		// Debug.Log(x.ToString() + y.ToString());
		String_t* L_6;
		L_6 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&V_5), NULL);
		String_t* L_7;
		L_7 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&V_4), NULL);
		String_t* L_8;
		L_8 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_6, L_7, NULL);
		il2cpp_codegen_runtime_class_init_inline(Debug_t8394C7EEAECA3689C2C9B9DE9C7166D73596276F_il2cpp_TypeInfo_var);
		Debug_Log_m87A9A3C761FF5C43ED8A53B16190A53D08F818BB(L_8, NULL);
		goto IL_01af;
	}

IL_0050:
	{
		// else if (boardRepresentation[x,y] != null)
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_9 = __this->___boardRepresentation_40;
		int32_t L_10 = V_5;
		int32_t L_11 = V_4;
		NullCheck(L_9);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_12;
		L_12 = (L_9)->GetAt(L_10, L_11);
		il2cpp_codegen_runtime_class_init_inline(Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C_il2cpp_TypeInfo_var);
		bool L_13;
		L_13 = Object_op_Inequality_mD0BE578448EAA61948F25C32F8DD55AB1F778602(L_12, (Object_tC12DECB6760A7F2CBF65D9DCF18D044C2D97152C*)NULL, NULL);
		if (!L_13)
		{
			goto IL_01af;
		}
	}
	{
		// piece = boardRepresentation[x,y].GetComponent<Piece>();
		GameObjectU5BU2CU5D_t6EEFFC1B5ACC6E21D9743DEBC8F57BF8A4ACA11E* L_14 = __this->___boardRepresentation_40;
		int32_t L_15 = V_5;
		int32_t L_16 = V_4;
		NullCheck(L_14);
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_17;
		L_17 = (L_14)->GetAt(L_15, L_16);
		NullCheck(L_17);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_18;
		L_18 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_17, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		V_2 = L_18;
		// if (freeCellCount != 0)
		int32_t L_19 = V_0;
		if (!L_19)
		{
			goto IL_0092;
		}
	}
	{
		// fen += freeCellCount.ToString();
		String_t* L_20 = V_1;
		String_t* L_21;
		L_21 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&V_0), NULL);
		String_t* L_22;
		L_22 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_20, L_21, NULL);
		V_1 = L_22;
		// freeCellCount = 0;
		V_0 = 0;
	}

IL_0092:
	{
		// if (piece.pieceType == PieceTypes.King)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_23 = V_2;
		NullCheck(L_23);
		int32_t L_24 = L_23->___pieceType_8;
		if ((!(((uint32_t)L_24) == ((uint32_t)5))))
		{
			goto IL_00c5;
		}
	}
	{
		// if (piece.color == false)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_25 = V_2;
		NullCheck(L_25);
		bool L_26 = L_25->___color_5;
		if (L_26)
		{
			goto IL_00b4;
		}
	}
	{
		// fen += "K";
		String_t* L_27 = V_1;
		String_t* L_28;
		L_28 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_27, _stringLiteral3D714DD3E8E77A697EF557E85ED2B014A96328C5, NULL);
		V_1 = L_28;
		goto IL_01af;
	}

IL_00b4:
	{
		// fen += "k";
		String_t* L_29 = V_1;
		String_t* L_30;
		L_30 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_29, _stringLiteral37A50091974FE11FAC57C870272F76245820AA18, NULL);
		V_1 = L_30;
		goto IL_01af;
	}

IL_00c5:
	{
		// else if (piece.pieceType == PieceTypes.Queen)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_31 = V_2;
		NullCheck(L_31);
		int32_t L_32 = L_31->___pieceType_8;
		if ((!(((uint32_t)L_32) == ((uint32_t)4))))
		{
			goto IL_00f8;
		}
	}
	{
		// if (piece.color == false)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_33 = V_2;
		NullCheck(L_33);
		bool L_34 = L_33->___color_5;
		if (L_34)
		{
			goto IL_00e7;
		}
	}
	{
		// fen += "Q";
		String_t* L_35 = V_1;
		String_t* L_36;
		L_36 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_35, _stringLiteral49A7EA21ECB328D154FA2262BB41626D795F4D90, NULL);
		V_1 = L_36;
		goto IL_01af;
	}

IL_00e7:
	{
		// fen += "q";
		String_t* L_37 = V_1;
		String_t* L_38;
		L_38 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_37, _stringLiteral430E518F836082E0683698AB9E3F79D39C7F5140, NULL);
		V_1 = L_38;
		goto IL_01af;
	}

IL_00f8:
	{
		// else if (piece.pieceType == PieceTypes.Rook)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_39 = V_2;
		NullCheck(L_39);
		int32_t L_40 = L_39->___pieceType_8;
		if ((!(((uint32_t)L_40) == ((uint32_t)3))))
		{
			goto IL_012b;
		}
	}
	{
		// if (piece.color == false)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_41 = V_2;
		NullCheck(L_41);
		bool L_42 = L_41->___color_5;
		if (L_42)
		{
			goto IL_011a;
		}
	}
	{
		// fen += "R";
		String_t* L_43 = V_1;
		String_t* L_44;
		L_44 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_43, _stringLiteral2C3D4826D5236B3C9A914C5CE2E3D8CEA48AC7CE, NULL);
		V_1 = L_44;
		goto IL_01af;
	}

IL_011a:
	{
		// fen += "r";
		String_t* L_45 = V_1;
		String_t* L_46;
		L_46 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_45, _stringLiteralA33A5CAE02B786C2060461DF8C6764B4C05E9423, NULL);
		V_1 = L_46;
		goto IL_01af;
	}

IL_012b:
	{
		// else if (piece.pieceType == PieceTypes.Bishop)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_47 = V_2;
		NullCheck(L_47);
		int32_t L_48 = L_47->___pieceType_8;
		if ((!(((uint32_t)L_48) == ((uint32_t)2))))
		{
			goto IL_0158;
		}
	}
	{
		// if (piece.color == false)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_49 = V_2;
		NullCheck(L_49);
		bool L_50 = L_49->___color_5;
		if (L_50)
		{
			goto IL_014a;
		}
	}
	{
		// fen += "B";
		String_t* L_51 = V_1;
		String_t* L_52;
		L_52 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_51, _stringLiteralAB69FA1AB6BB831506EFCAD83900FEE751E85F6F, NULL);
		V_1 = L_52;
		goto IL_01af;
	}

IL_014a:
	{
		// fen += "b";
		String_t* L_53 = V_1;
		String_t* L_54;
		L_54 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_53, _stringLiteral4609D79FE2FAD95C38B6DA64FC671E8594984D4C, NULL);
		V_1 = L_54;
		goto IL_01af;
	}

IL_0158:
	{
		// else if (piece.pieceType == PieceTypes.Knight)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_55 = V_2;
		NullCheck(L_55);
		int32_t L_56 = L_55->___pieceType_8;
		if ((!(((uint32_t)L_56) == ((uint32_t)1))))
		{
			goto IL_0185;
		}
	}
	{
		// if (piece.color == false)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_57 = V_2;
		NullCheck(L_57);
		bool L_58 = L_57->___color_5;
		if (L_58)
		{
			goto IL_0177;
		}
	}
	{
		// fen += "N";
		String_t* L_59 = V_1;
		String_t* L_60;
		L_60 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_59, _stringLiteralE42E8BB820D4F7550A0F04619F4E15FDC56943B9, NULL);
		V_1 = L_60;
		goto IL_01af;
	}

IL_0177:
	{
		// fen += "n";
		String_t* L_61 = V_1;
		String_t* L_62;
		L_62 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_61, _stringLiteral4C9ECEDF5B1FB9420A92A5B02A141FADFDF52ED6, NULL);
		V_1 = L_62;
		goto IL_01af;
	}

IL_0185:
	{
		// else if (piece.pieceType == PieceTypes.Pawn)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_63 = V_2;
		NullCheck(L_63);
		int32_t L_64 = L_63->___pieceType_8;
		if (L_64)
		{
			goto IL_01af;
		}
	}
	{
		// if (piece.color == false)
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_65 = V_2;
		NullCheck(L_65);
		bool L_66 = L_65->___color_5;
		if (L_66)
		{
			goto IL_01a3;
		}
	}
	{
		// fen += "P";
		String_t* L_67 = V_1;
		String_t* L_68;
		L_68 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_67, _stringLiteralFCA440D9A4F7E2D10772A726D6FB427BAE128D34, NULL);
		V_1 = L_68;
		goto IL_01af;
	}

IL_01a3:
	{
		// fen += "p";
		String_t* L_69 = V_1;
		String_t* L_70;
		L_70 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_69, _stringLiteral198AA065BF0F912BD6F5F93869BD5C361671F98B, NULL);
		V_1 = L_70;
	}

IL_01af:
	{
		// for (int x = 0; x < 8; x++)
		int32_t L_71 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add(L_71, 1));
	}

IL_01b5:
	{
		// for (int x = 0; x < 8; x++)
		int32_t L_72 = V_5;
		if ((((int32_t)L_72) < ((int32_t)8)))
		{
			goto IL_0018;
		}
	}
	{
		// if (freeCellCount != 0)
		int32_t L_73 = V_0;
		if (!L_73)
		{
			goto IL_01ce;
		}
	}
	{
		// fen += freeCellCount.ToString();
		String_t* L_74 = V_1;
		String_t* L_75;
		L_75 = Int32_ToString_m030E01C24E294D6762FB0B6F37CB541581F55CA5((&V_0), NULL);
		String_t* L_76;
		L_76 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_74, L_75, NULL);
		V_1 = L_76;
	}

IL_01ce:
	{
		// freeCellCount = 0;
		V_0 = 0;
		// if (y != 0)
		int32_t L_77 = V_4;
		if (!L_77)
		{
			goto IL_01e0;
		}
	}
	{
		// fen += '/';
		String_t* L_78 = V_1;
		String_t* L_79;
		L_79 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_78, _stringLiteral86BBAACC00198DBB3046818AD3FC2AA10AE48DE1, NULL);
		V_1 = L_79;
	}

IL_01e0:
	{
		// for (int y = 7; y > -1; y--)
		int32_t L_80 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_subtract(L_80, 1));
	}

IL_01e6:
	{
		// for (int y = 7; y > -1; y--)
		int32_t L_81 = V_4;
		if ((((int32_t)L_81) > ((int32_t)(-1))))
		{
			goto IL_0010;
		}
	}
	{
		// fen += " ";
		String_t* L_82 = V_1;
		String_t* L_83;
		L_83 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_82, _stringLiteral2386E77CF610F786B06A91AF2C1B3FD2282D2745, NULL);
		V_1 = L_83;
		// string turnChar = "w";
		V_3 = _stringLiteralA9FEAF5F50923952C1AC3A473DE3C7E17D23B907;
		// fen += turnChar + " ";
		String_t* L_84 = V_1;
		String_t* L_85 = V_3;
		String_t* L_86;
		L_86 = String_Concat_m8855A6DE10F84DA7F4EC113CADDB59873A25573B(L_84, L_85, _stringLiteral2386E77CF610F786B06A91AF2C1B3FD2282D2745, NULL);
		V_1 = L_86;
		// Piece kingWhite = WhiteKing.GetComponent<Piece>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_87 = __this->___WhiteKing_8;
		NullCheck(L_87);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_88;
		L_88 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_87, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		// Piece kingBlack = BlackKing.GetComponent<Piece>();
		GameObject_t76FEDD663AB33C991A9C9A23129337651094216F* L_89 = __this->___BlackKing_24;
		NullCheck(L_89);
		Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* L_90;
		L_90 = GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772(L_89, GameObject_GetComponent_TisPiece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D_mB14B4C048761A123DF14D9544B1C89E1D202D772_RuntimeMethod_var);
		// fen += "K";
		String_t* L_91 = V_1;
		String_t* L_92;
		L_92 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_91, _stringLiteral3D714DD3E8E77A697EF557E85ED2B014A96328C5, NULL);
		V_1 = L_92;
		// fen += "Q";
		String_t* L_93 = V_1;
		String_t* L_94;
		L_94 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_93, _stringLiteral49A7EA21ECB328D154FA2262BB41626D795F4D90, NULL);
		V_1 = L_94;
		// fen += "k";
		String_t* L_95 = V_1;
		String_t* L_96;
		L_96 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_95, _stringLiteral37A50091974FE11FAC57C870272F76245820AA18, NULL);
		V_1 = L_96;
		// fen += "q";
		String_t* L_97 = V_1;
		String_t* L_98;
		L_98 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_97, _stringLiteral430E518F836082E0683698AB9E3F79D39C7F5140, NULL);
		V_1 = L_98;
		// fen += " ";
		String_t* L_99 = V_1;
		String_t* L_100;
		L_100 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_99, _stringLiteral2386E77CF610F786B06A91AF2C1B3FD2282D2745, NULL);
		V_1 = L_100;
		// fen += "-";
		String_t* L_101 = V_1;
		String_t* L_102;
		L_102 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_101, _stringLiteral3B2C1C62D4D1C2A0C8A9AC42DB00D33C654F9AD0, NULL);
		V_1 = L_102;
		// fen += " ";
		String_t* L_103 = V_1;
		String_t* L_104;
		L_104 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_103, _stringLiteral2386E77CF610F786B06A91AF2C1B3FD2282D2745, NULL);
		V_1 = L_104;
		// fen += "0";
		String_t* L_105 = V_1;
		String_t* L_106;
		L_106 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_105, _stringLiteralF944DCD635F9801F7AC90A407FBC479964DEC024, NULL);
		V_1 = L_106;
		// fen += " 1";
		String_t* L_107 = V_1;
		String_t* L_108;
		L_108 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_107, _stringLiteral1EA15EE8A42A561588097A07567DD53324EF7A07, NULL);
		V_1 = L_108;
		// return fen;
		String_t* L_109 = V_1;
		return L_109;
	}
}
// UnityEngine.Vector3 ChessBoard::PositionFromCoord(System.Int32,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ChessBoard_PositionFromCoord_m83D0AF6AAEACC0BA9826317D93DCDE324D0B63B1 (ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191* __this, int32_t ___0_file, int32_t ___1_rank, float ___2_depth, const RuntimeMethod* method) 
{
	{
		// return new Vector3(-3.5f + file, -3.5f + rank, depth);
		int32_t L_0 = ___0_file;
		int32_t L_1 = ___1_rank;
		float L_2 = ___2_depth;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_3;
		memset((&L_3), 0, sizeof(L_3));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_3), ((float)il2cpp_codegen_add((-3.5f), ((float)L_0))), ((float)il2cpp_codegen_add((-3.5f), ((float)L_1))), L_2, /*hidden argument*/NULL);
		return L_3;
	}
}
// System.Void ChessBoard::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChessBoard__ctor_mAA1A1CE3215B145A38A160AE3AC54C03008546AE (ChessBoard_tD9A056B6EEFCBDF23624211CD89BBDC70FF51191* __this, const RuntimeMethod* method) 
{
	{
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void ImageToBackground::Update()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ImageToBackground_Update_mF2DEE26DBFD04992EFF21169F821161A94BA38D7 (ImageToBackground_t38A93F35104A62583BA7C07FEA7FF61D24D9DEB9* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralB6C90BBDA8CAB763DF7E75324B19AA1C99993487);
		s_Il2CppMethodInitialized = true;
	}
	{
		// debug.texture = passthrough.camOutput;
		RawImage_tFF12F7DB574FBDC1863CF607C7A12A5D9F8D6179* L_0 = __this->___debug_6;
		CameraScenePassthrough_t4775120A040BD72E8844090020568DAA649D6770* L_1 = __this->___passthrough_4;
		NullCheck(L_1);
		Texture2D_tE6505BC111DD8A424A9DBE8E05D7D09E11FFFCF4* L_2 = L_1->___camOutput_4;
		NullCheck(L_0);
		RawImage_set_texture_mC016318C95CC17A826D57DD219DBCB6DFD295C02(L_0, L_2, NULL);
		// cameraBackground.material.SetTexture("CameraOutput", passthrough.camOutput);
		ARCameraBackground_t5E400069BEB27E2F5ECE553C3C23475FC80A1703* L_3 = __this->___cameraBackground_5;
		NullCheck(L_3);
		Material_t18053F08F347D0DCA5E1140EC7EC4533DD8A14E3* L_4;
		L_4 = ARCameraBackground_get_material_mD444C30747216E7E7B5FF0F714EE0DF57CC93EC8(L_3, NULL);
		CameraScenePassthrough_t4775120A040BD72E8844090020568DAA649D6770* L_5 = __this->___passthrough_4;
		NullCheck(L_5);
		Texture2D_tE6505BC111DD8A424A9DBE8E05D7D09E11FFFCF4* L_6 = L_5->___camOutput_4;
		NullCheck(L_4);
		Material_SetTexture_m06083C3F52EF02FFB1177901D9907314F280F9A5(L_4, _stringLiteralB6C90BBDA8CAB763DF7E75324B19AA1C99993487, L_6, NULL);
		// }
		return;
	}
}
// System.Void ImageToBackground::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ImageToBackground__ctor_m694E98747F40FF4E0464830E0FD83EAF99156862 (ImageToBackground_t38A93F35104A62583BA7C07FEA7FF61D24D9DEB9* __this, const RuntimeMethod* method) 
{
	{
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Piece::Start()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Piece_Start_mC807332AF2713B732E9F24943FDAF4003BE78BCD (Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Component_GetComponent_TisSpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B_m6181F10C09FC1650DAE0EF2308D344A2F170AA45_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// GetComponent<SpriteRenderer>().sprite = pieceSprite;
		SpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B* L_0;
		L_0 = Component_GetComponent_TisSpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B_m6181F10C09FC1650DAE0EF2308D344A2F170AA45(__this, Component_GetComponent_TisSpriteRenderer_t1DD7FE258F072E1FA87D6577BA27225892B8047B_m6181F10C09FC1650DAE0EF2308D344A2F170AA45_RuntimeMethod_var);
		Sprite_tAFF74BC83CD68037494CB0B4F28CBDF8971CAB99* L_1 = __this->___pieceSprite_4;
		NullCheck(L_0);
		SpriteRenderer_set_sprite_m7B176E33955108C60CAE21DFC153A0FAC674CB53(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Void Piece::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Piece__ctor_m83E0C5E4C1E88F8CF54CB835295A176B85D88A43 (Piece_t90EC9E697A7DC982765575D76BC34BD61B5DCA0D* __this, const RuntimeMethod* method) 
{
	{
		MonoBehaviour__ctor_m592DB0105CA0BC97AA1C5F4AD27B12D68A3B7C1E(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.IntPtr OpenCvSharp.NativeMethods::dlib_shapePredictor_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_dlib_shapePredictor_new_mC96102500A262780D91C905CEB389E60CDABE102 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "dlib_shapePredictor_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(dlib_shapePredictor_new)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::dlib_shapePredictor_loadData(System.IntPtr,System.Byte[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_dlib_shapePredictor_loadData_m77AD192A1F5680E519ED565788EFB3D4A10E9370 (intptr_t ___0_predictor, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___1_data, int32_t ___2_dataSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, uint8_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "dlib_shapePredictor_loadData", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_data' to native representation
	uint8_t* ____1_data_marshaled = NULL;
	if (___1_data != NULL)
	{
		____1_data_marshaled = reinterpret_cast<uint8_t*>((___1_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(dlib_shapePredictor_loadData)(___0_predictor, ____1_data_marshaled, ___2_dataSize);
	#else
	il2cppPInvokeFunc(___0_predictor, ____1_data_marshaled, ___2_dataSize);
	#endif

}
// System.Boolean OpenCvSharp.NativeMethods::dlib_shapePredictor_detectLandmarks(System.IntPtr,System.IntPtr,OpenCvSharp.Rect,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_dlib_shapePredictor_detectLandmarks_mC09E86EADDEDC8D5450A93B6A3842E842E281463 (intptr_t ___0_predictor, intptr_t ___1_image, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___2_roi, intptr_t* ___3_landmarks, const RuntimeMethod* method) 
{
	typedef int8_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "dlib_shapePredictor_detectLandmarks", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int8_t returnValue = reinterpret_cast<PInvokeFunc>(dlib_shapePredictor_detectLandmarks)(___0_predictor, ___1_image, ___2_roi, ___3_landmarks);
	#else
	int8_t returnValue = il2cppPInvokeFunc(___0_predictor, ___1_image, ___2_roi, ___3_landmarks);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Void OpenCvSharp.NativeMethods::dlib_shapePredictor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_dlib_shapePredictor_delete_m656579F232C5FB0BFD6E1DD670A1E9908DFD23DC (intptr_t ___0_instance, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "dlib_shapePredictor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(dlib_shapePredictor_delete)(___0_instance);
	#else
	il2cppPInvokeFunc(___0_instance);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_Rodrigues(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_Rodrigues_mFE13B87536DD83B151907C07413FEDB04D2464CB (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_jacobian, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_Rodrigues", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_Rodrigues)(___0_src, ___1_dst, ___2_jacobian);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_jacobian);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_Rodrigues_VecToMat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_Rodrigues_VecToMat_mB1CE6EABD3C799A624F355530CC248E04F7F5643 (intptr_t ___0_vector, intptr_t ___1_matrix, intptr_t ___2_jacobian, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_Rodrigues_VecToMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_Rodrigues_VecToMat)(___0_vector, ___1_matrix, ___2_jacobian);
	#else
	il2cppPInvokeFunc(___0_vector, ___1_matrix, ___2_jacobian);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_Rodrigues_MatToVec(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_Rodrigues_MatToVec_mCD28B192BFE15B072BEEA3269C5AABE99DF3F854 (intptr_t ___0_vector, intptr_t ___1_matrix, intptr_t ___2_jacobian, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_Rodrigues_MatToVec", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_Rodrigues_MatToVec)(___0_vector, ___1_matrix, ___2_jacobian);
	#else
	il2cppPInvokeFunc(___0_vector, ___1_matrix, ___2_jacobian);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_findHomography_InputArray(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_findHomography_InputArray_mDA778EF5F64F3D525B6C63D9FE16A5A1ABBEA347 (intptr_t ___0_srcPoints, intptr_t ___1_dstPoints, int32_t ___2_method, double ___3_ransacReprojThreshold, intptr_t ___4_mask, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findHomography_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findHomography_InputArray)(___0_srcPoints, ___1_dstPoints, ___2_method, ___3_ransacReprojThreshold, ___4_mask);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_srcPoints, ___1_dstPoints, ___2_method, ___3_ransacReprojThreshold, ___4_mask);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_findHomography_vector(OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],System.Int32,System.Int32,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_findHomography_vector_m3FFCD3300F780CB24CC291B7F08647FEBDEB7395 (Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___0_srcPoints, int32_t ___1_srcPointsLength, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___2_dstPoints, int32_t ___3_dstPointsLength, int32_t ___4_method, double ___5_ransacReprojThreshold, intptr_t ___6_mask, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, int32_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findHomography_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_srcPoints' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____0_srcPoints_marshaled = NULL;
	if (___0_srcPoints != NULL)
	{
		____0_srcPoints_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___0_srcPoints)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_dstPoints' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____2_dstPoints_marshaled = NULL;
	if (___2_dstPoints != NULL)
	{
		____2_dstPoints_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___2_dstPoints)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findHomography_vector)(____0_srcPoints_marshaled, ___1_srcPointsLength, ____2_dstPoints_marshaled, ___3_dstPointsLength, ___4_method, ___5_ransacReprojThreshold, ___6_mask);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_srcPoints_marshaled, ___1_srcPointsLength, ____2_dstPoints_marshaled, ___3_dstPointsLength, ___4_method, ___5_ransacReprojThreshold, ___6_mask);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_RQDecomp3x3_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Vec3d&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_RQDecomp3x3_InputArray_mFD5F173864CBD68B46852649761D583CA1C7D778 (intptr_t ___0_src, intptr_t ___1_mtxR, intptr_t ___2_mtxQ, intptr_t ___3_qx, intptr_t ___4_qy, intptr_t ___5_qz, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___6_outVal, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_RQDecomp3x3_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_RQDecomp3x3_InputArray)(___0_src, ___1_mtxR, ___2_mtxQ, ___3_qx, ___4_qy, ___5_qz, ___6_outVal);
	#else
	il2cppPInvokeFunc(___0_src, ___1_mtxR, ___2_mtxQ, ___3_qx, ___4_qy, ___5_qz, ___6_outVal);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_RQDecomp3x3_Mat(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Vec3d&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_RQDecomp3x3_Mat_mC1452CEEA972351B7DC53BA39A8D35DD57D0CFEE (intptr_t ___0_src, intptr_t ___1_mtxR, intptr_t ___2_mtxQ, intptr_t ___3_qx, intptr_t ___4_qy, intptr_t ___5_qz, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___6_outVal, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_RQDecomp3x3_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_RQDecomp3x3_Mat)(___0_src, ___1_mtxR, ___2_mtxQ, ___3_qx, ___4_qy, ___5_qz, ___6_outVal);
	#else
	il2cppPInvokeFunc(___0_src, ___1_mtxR, ___2_mtxQ, ___3_qx, ___4_qy, ___5_qz, ___6_outVal);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_decomposeProjectionMatrix_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_decomposeProjectionMatrix_InputArray_m25A976DB9CD54F24254449E4A5D9AD7CADDD745B (intptr_t ___0_projMatrix, intptr_t ___1_cameraMatrix, intptr_t ___2_rotMatrix, intptr_t ___3_transVect, intptr_t ___4_rotMatrixX, intptr_t ___5_rotMatrixY, intptr_t ___6_rotMatrixZ, intptr_t ___7_eulerAngles, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_decomposeProjectionMatrix_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_decomposeProjectionMatrix_InputArray)(___0_projMatrix, ___1_cameraMatrix, ___2_rotMatrix, ___3_transVect, ___4_rotMatrixX, ___5_rotMatrixY, ___6_rotMatrixZ, ___7_eulerAngles);
	#else
	il2cppPInvokeFunc(___0_projMatrix, ___1_cameraMatrix, ___2_rotMatrix, ___3_transVect, ___4_rotMatrixX, ___5_rotMatrixY, ___6_rotMatrixZ, ___7_eulerAngles);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_decomposeProjectionMatrix_Mat(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_decomposeProjectionMatrix_Mat_mE5FFA9EFA0E3FE61A0994F27212AB0061B749F76 (intptr_t ___0_projMatrix, intptr_t ___1_cameraMatrix, intptr_t ___2_rotMatrix, intptr_t ___3_transVect, intptr_t ___4_rotMatrixX, intptr_t ___5_rotMatrixY, intptr_t ___6_rotMatrixZ, intptr_t ___7_eulerAngles, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_decomposeProjectionMatrix_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_decomposeProjectionMatrix_Mat)(___0_projMatrix, ___1_cameraMatrix, ___2_rotMatrix, ___3_transVect, ___4_rotMatrixX, ___5_rotMatrixY, ___6_rotMatrixZ, ___7_eulerAngles);
	#else
	il2cppPInvokeFunc(___0_projMatrix, ___1_cameraMatrix, ___2_rotMatrix, ___3_transVect, ___4_rotMatrixX, ___5_rotMatrixY, ___6_rotMatrixZ, ___7_eulerAngles);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_matMulDeriv(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_matMulDeriv_m822556E2459CD1A6763720459313EC0CFA87E851 (intptr_t ___0_a, intptr_t ___1_b, intptr_t ___2_dABdA, intptr_t ___3_dABdB, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_matMulDeriv", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_matMulDeriv)(___0_a, ___1_b, ___2_dABdA, ___3_dABdB);
	#else
	il2cppPInvokeFunc(___0_a, ___1_b, ___2_dABdA, ___3_dABdB);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_composeRT_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_composeRT_InputArray_m68F8208322111A50A7EDC5577B0B1F520DCC42E2 (intptr_t ___0_rvec1, intptr_t ___1_tvec1, intptr_t ___2_rvec2, intptr_t ___3_tvec2, intptr_t ___4_rvec3, intptr_t ___5_tvec3, intptr_t ___6_dr3dr1, intptr_t ___7_dr3dt1, intptr_t ___8_dr3dr2, intptr_t ___9_dr3dt2, intptr_t ___10_dt3dr1, intptr_t ___11_dt3dt1, intptr_t ___12_dt3dr2, intptr_t ___13_dt3dt2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_composeRT_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_composeRT_InputArray)(___0_rvec1, ___1_tvec1, ___2_rvec2, ___3_tvec2, ___4_rvec3, ___5_tvec3, ___6_dr3dr1, ___7_dr3dt1, ___8_dr3dr2, ___9_dr3dt2, ___10_dt3dr1, ___11_dt3dt1, ___12_dt3dr2, ___13_dt3dt2);
	#else
	il2cppPInvokeFunc(___0_rvec1, ___1_tvec1, ___2_rvec2, ___3_tvec2, ___4_rvec3, ___5_tvec3, ___6_dr3dr1, ___7_dr3dt1, ___8_dr3dr2, ___9_dr3dt2, ___10_dt3dr1, ___11_dt3dt1, ___12_dt3dr2, ___13_dt3dt2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_composeRT_Mat(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_composeRT_Mat_m0DEA6C7F6688BFB41043D7CF6E6007DF830F5D6D (intptr_t ___0_rvec1, intptr_t ___1_tvec1, intptr_t ___2_rvec2, intptr_t ___3_tvec2, intptr_t ___4_rvec3, intptr_t ___5_tvec3, intptr_t ___6_dr3dr1, intptr_t ___7_dr3dt1, intptr_t ___8_dr3dr2, intptr_t ___9_dr3dt2, intptr_t ___10_dt3dr1, intptr_t ___11_dt3dt1, intptr_t ___12_dt3dr2, intptr_t ___13_dt3dt2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_composeRT_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_composeRT_Mat)(___0_rvec1, ___1_tvec1, ___2_rvec2, ___3_tvec2, ___4_rvec3, ___5_tvec3, ___6_dr3dr1, ___7_dr3dt1, ___8_dr3dr2, ___9_dr3dt2, ___10_dt3dr1, ___11_dt3dt1, ___12_dt3dr2, ___13_dt3dt2);
	#else
	il2cppPInvokeFunc(___0_rvec1, ___1_tvec1, ___2_rvec2, ___3_tvec2, ___4_rvec3, ___5_tvec3, ___6_dr3dr1, ___7_dr3dt1, ___8_dr3dr2, ___9_dr3dt2, ___10_dt3dr1, ___11_dt3dt1, ___12_dt3dr2, ___13_dt3dt2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_projectPoints_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_projectPoints_InputArray_m1E212862C55A24E249F448D8118B71C19D8ED426 (intptr_t ___0_objectPoints, intptr_t ___1_rvec, intptr_t ___2_tvec, intptr_t ___3_cameraMatrix, intptr_t ___4_distCoeffs, intptr_t ___5_imagePoints, intptr_t ___6_jacobian, double ___7_aspectRatio, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_projectPoints_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_projectPoints_InputArray)(___0_objectPoints, ___1_rvec, ___2_tvec, ___3_cameraMatrix, ___4_distCoeffs, ___5_imagePoints, ___6_jacobian, ___7_aspectRatio);
	#else
	il2cppPInvokeFunc(___0_objectPoints, ___1_rvec, ___2_tvec, ___3_cameraMatrix, ___4_distCoeffs, ___5_imagePoints, ___6_jacobian, ___7_aspectRatio);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_projectPoints_Mat(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_projectPoints_Mat_mD9B5FAA79F0F4AC3A214C7B4C70E36A344D3F11A (intptr_t ___0_objectPoints, intptr_t ___1_rvec, intptr_t ___2_tvec, intptr_t ___3_cameraMatrix, intptr_t ___4_distCoeffs, intptr_t ___5_imagePoints, intptr_t ___6_jacobian, double ___7_aspectRatio, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_projectPoints_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_projectPoints_Mat)(___0_objectPoints, ___1_rvec, ___2_tvec, ___3_cameraMatrix, ___4_distCoeffs, ___5_imagePoints, ___6_jacobian, ___7_aspectRatio);
	#else
	il2cppPInvokeFunc(___0_objectPoints, ___1_rvec, ___2_tvec, ___3_cameraMatrix, ___4_distCoeffs, ___5_imagePoints, ___6_jacobian, ___7_aspectRatio);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_solvePnP_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_solvePnP_InputArray_m9267ECD8199A3542803B489637F9FFF9999C65D9 (intptr_t ___0_selfectPoints, intptr_t ___1_imagePoints, intptr_t ___2_cameraMatrix, intptr_t ___3_distCoeffs, intptr_t ___4_rvec, intptr_t ___5_tvec, int32_t ___6_useExtrinsicGuess, int32_t ___7_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_solvePnP_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_solvePnP_InputArray)(___0_selfectPoints, ___1_imagePoints, ___2_cameraMatrix, ___3_distCoeffs, ___4_rvec, ___5_tvec, ___6_useExtrinsicGuess, ___7_flags);
	#else
	il2cppPInvokeFunc(___0_selfectPoints, ___1_imagePoints, ___2_cameraMatrix, ___3_distCoeffs, ___4_rvec, ___5_tvec, ___6_useExtrinsicGuess, ___7_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_solvePnP_vector(OpenCvSharp.Point3f[],System.Int32,OpenCvSharp.Point2f[],System.Int32,System.IntPtr,System.Double[],System.Int32,System.Double[],System.Double[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_solvePnP_vector_mE4F9C5AAC1EA780E648B2D2EF1FA2AC768FC4DD7 (Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___0_objectPoints, int32_t ___1_objectPointsLength, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___2_imagePoints, int32_t ___3_imagePointsLength, intptr_t ___4_cameraMatrix, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___5_distCoeffs, int32_t ___6_distCoeffsLength, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___7_rvec, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___8_tvec, int32_t ___9_useExtrinsicGuess, int32_t ___10_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, double*, int32_t, double*, double*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_solvePnP_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_objectPoints' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____0_objectPoints_marshaled = NULL;
	if (___0_objectPoints != NULL)
	{
		____0_objectPoints_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___0_objectPoints)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_imagePoints' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____2_imagePoints_marshaled = NULL;
	if (___2_imagePoints != NULL)
	{
		____2_imagePoints_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___2_imagePoints)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___5_distCoeffs' to native representation
	double* ____5_distCoeffs_marshaled = NULL;
	if (___5_distCoeffs != NULL)
	{
		____5_distCoeffs_marshaled = reinterpret_cast<double*>((___5_distCoeffs)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___7_rvec' to native representation
	double* ____7_rvec_marshaled = NULL;
	if (___7_rvec != NULL)
	{
		il2cpp_array_size_t ____7_rvec_Length = (___7_rvec)->max_length;
		____7_rvec_marshaled = il2cpp_codegen_marshal_allocate_array<double>(____7_rvec_Length);
		memset(____7_rvec_marshaled, 0, ____7_rvec_Length * sizeof(double));
	}

	// Marshaling of parameter '___8_tvec' to native representation
	double* ____8_tvec_marshaled = NULL;
	if (___8_tvec != NULL)
	{
		il2cpp_array_size_t ____8_tvec_Length = (___8_tvec)->max_length;
		____8_tvec_marshaled = il2cpp_codegen_marshal_allocate_array<double>(____8_tvec_Length);
		memset(____8_tvec_marshaled, 0, ____8_tvec_Length * sizeof(double));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_solvePnP_vector)(____0_objectPoints_marshaled, ___1_objectPointsLength, ____2_imagePoints_marshaled, ___3_imagePointsLength, ___4_cameraMatrix, ____5_distCoeffs_marshaled, ___6_distCoeffsLength, ____7_rvec_marshaled, ____8_tvec_marshaled, ___9_useExtrinsicGuess, ___10_flags);
	#else
	il2cppPInvokeFunc(____0_objectPoints_marshaled, ___1_objectPointsLength, ____2_imagePoints_marshaled, ___3_imagePointsLength, ___4_cameraMatrix, ____5_distCoeffs_marshaled, ___6_distCoeffsLength, ____7_rvec_marshaled, ____8_tvec_marshaled, ___9_useExtrinsicGuess, ___10_flags);
	#endif

	// Marshaling of parameter '___7_rvec' back from native representation
	if (____7_rvec_marshaled != NULL)
	{
		il2cpp_array_size_t ____7_rvec_Length = (___7_rvec)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____7_rvec_Length); i++)
		{
			(___7_rvec)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____7_rvec_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___7_rvec' native representation
	il2cpp_codegen_marshal_free(____7_rvec_marshaled);
	____7_rvec_marshaled = NULL;

	// Marshaling of parameter '___8_tvec' back from native representation
	if (____8_tvec_marshaled != NULL)
	{
		il2cpp_array_size_t ____8_tvec_Length = (___8_tvec)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____8_tvec_Length); i++)
		{
			(___8_tvec)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____8_tvec_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___8_tvec' native representation
	il2cpp_codegen_marshal_free(____8_tvec_marshaled);
	____8_tvec_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::calib3d_solvePnPRansac_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Single,System.Double,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_solvePnPRansac_InputArray_mB1E2BE0596E80B3D2EA99C7D3E1D55D62458B471 (intptr_t ___0_objectPoints, intptr_t ___1_imagePoints, intptr_t ___2_cameraMatrix, intptr_t ___3_distCoeffs, intptr_t ___4_rvec, intptr_t ___5_tvec, int32_t ___6_useExtrinsicGuess, int32_t ___7_iterationsCount, float ___8_reprojectionError, double ___9_confidence, intptr_t ___10_inliers, int32_t ___11_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t, float, double, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(double) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_solvePnPRansac_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_solvePnPRansac_InputArray)(___0_objectPoints, ___1_imagePoints, ___2_cameraMatrix, ___3_distCoeffs, ___4_rvec, ___5_tvec, ___6_useExtrinsicGuess, ___7_iterationsCount, ___8_reprojectionError, ___9_confidence, ___10_inliers, ___11_flags);
	#else
	il2cppPInvokeFunc(___0_objectPoints, ___1_imagePoints, ___2_cameraMatrix, ___3_distCoeffs, ___4_rvec, ___5_tvec, ___6_useExtrinsicGuess, ___7_iterationsCount, ___8_reprojectionError, ___9_confidence, ___10_inliers, ___11_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_solvePnPRansac_vector(OpenCvSharp.Point3f[],System.Int32,OpenCvSharp.Point2f[],System.Int32,System.IntPtr,System.Double[],System.Int32,System.Double[],System.Double[],System.Int32,System.Int32,System.Single,System.Double,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_solvePnPRansac_vector_m29F7A79B0A2EB27340D556512D459D176D0BE9A7 (Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___0_objectPoints, int32_t ___1_objectPointsLength, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___2_imagePoints, int32_t ___3_imagePointsLength, intptr_t ___4_cameraMatrix, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___5_distCoeffs, int32_t ___6_distCoeffsLength, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___7_rvec, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___8_tvec, int32_t ___9_useExtrinsicGuess, int32_t ___10_iterationsCount, float ___11_reprojectionError, double ___12_confidence, intptr_t ___13_inliers, int32_t ___14_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, double*, int32_t, double*, double*, int32_t, int32_t, float, double, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(double) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_solvePnPRansac_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_objectPoints' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____0_objectPoints_marshaled = NULL;
	if (___0_objectPoints != NULL)
	{
		____0_objectPoints_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___0_objectPoints)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_imagePoints' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____2_imagePoints_marshaled = NULL;
	if (___2_imagePoints != NULL)
	{
		____2_imagePoints_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___2_imagePoints)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___5_distCoeffs' to native representation
	double* ____5_distCoeffs_marshaled = NULL;
	if (___5_distCoeffs != NULL)
	{
		____5_distCoeffs_marshaled = reinterpret_cast<double*>((___5_distCoeffs)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___7_rvec' to native representation
	double* ____7_rvec_marshaled = NULL;
	if (___7_rvec != NULL)
	{
		il2cpp_array_size_t ____7_rvec_Length = (___7_rvec)->max_length;
		____7_rvec_marshaled = il2cpp_codegen_marshal_allocate_array<double>(____7_rvec_Length);
		memset(____7_rvec_marshaled, 0, ____7_rvec_Length * sizeof(double));
	}

	// Marshaling of parameter '___8_tvec' to native representation
	double* ____8_tvec_marshaled = NULL;
	if (___8_tvec != NULL)
	{
		il2cpp_array_size_t ____8_tvec_Length = (___8_tvec)->max_length;
		____8_tvec_marshaled = il2cpp_codegen_marshal_allocate_array<double>(____8_tvec_Length);
		memset(____8_tvec_marshaled, 0, ____8_tvec_Length * sizeof(double));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_solvePnPRansac_vector)(____0_objectPoints_marshaled, ___1_objectPointsLength, ____2_imagePoints_marshaled, ___3_imagePointsLength, ___4_cameraMatrix, ____5_distCoeffs_marshaled, ___6_distCoeffsLength, ____7_rvec_marshaled, ____8_tvec_marshaled, ___9_useExtrinsicGuess, ___10_iterationsCount, ___11_reprojectionError, ___12_confidence, ___13_inliers, ___14_flags);
	#else
	il2cppPInvokeFunc(____0_objectPoints_marshaled, ___1_objectPointsLength, ____2_imagePoints_marshaled, ___3_imagePointsLength, ___4_cameraMatrix, ____5_distCoeffs_marshaled, ___6_distCoeffsLength, ____7_rvec_marshaled, ____8_tvec_marshaled, ___9_useExtrinsicGuess, ___10_iterationsCount, ___11_reprojectionError, ___12_confidence, ___13_inliers, ___14_flags);
	#endif

	// Marshaling of parameter '___7_rvec' back from native representation
	if (____7_rvec_marshaled != NULL)
	{
		il2cpp_array_size_t ____7_rvec_Length = (___7_rvec)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____7_rvec_Length); i++)
		{
			(___7_rvec)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____7_rvec_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___7_rvec' native representation
	il2cpp_codegen_marshal_free(____7_rvec_marshaled);
	____7_rvec_marshaled = NULL;

	// Marshaling of parameter '___8_tvec' back from native representation
	if (____8_tvec_marshaled != NULL)
	{
		il2cpp_array_size_t ____8_tvec_Length = (___8_tvec)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____8_tvec_Length); i++)
		{
			(___8_tvec)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____8_tvec_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___8_tvec' native representation
	il2cpp_codegen_marshal_free(____8_tvec_marshaled);
	____8_tvec_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_initCameraMatrix2D_Mat(System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,OpenCvSharp.Size,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_initCameraMatrix2D_Mat_mC8992B9E3F38F93D81EAF580DE2D269948A1F577 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_objectPoints, int32_t ___1_objectPointsLength, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___2_imagePoints, int32_t ___3_imagePointsLength, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___4_imageSize, double ___5_aspectRatio, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_initCameraMatrix2D_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_objectPoints' to native representation
	intptr_t* ____0_objectPoints_marshaled = NULL;
	if (___0_objectPoints != NULL)
	{
		____0_objectPoints_marshaled = reinterpret_cast<intptr_t*>((___0_objectPoints)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_imagePoints' to native representation
	intptr_t* ____2_imagePoints_marshaled = NULL;
	if (___2_imagePoints != NULL)
	{
		____2_imagePoints_marshaled = reinterpret_cast<intptr_t*>((___2_imagePoints)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_initCameraMatrix2D_Mat)(____0_objectPoints_marshaled, ___1_objectPointsLength, ____2_imagePoints_marshaled, ___3_imagePointsLength, ___4_imageSize, ___5_aspectRatio);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_objectPoints_marshaled, ___1_objectPointsLength, ____2_imagePoints_marshaled, ___3_imagePointsLength, ___4_imageSize, ___5_aspectRatio);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_initCameraMatrix2D_array(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32[],OpenCvSharp.Size,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_initCameraMatrix2D_array_m85DE70D27CF5CBFED60EF50F9D9778B0D668779E (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_objectPoints, int32_t ___1_opSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_opSize2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___3_imagePoints, int32_t ___4_ipSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___5_ipSize2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___6_imageSize, double ___7_aspectRatio, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_initCameraMatrix2D_array", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_objectPoints' to native representation
	intptr_t* ____0_objectPoints_marshaled = NULL;
	if (___0_objectPoints != NULL)
	{
		____0_objectPoints_marshaled = reinterpret_cast<intptr_t*>((___0_objectPoints)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_opSize2' to native representation
	int32_t* ____2_opSize2_marshaled = NULL;
	if (___2_opSize2 != NULL)
	{
		____2_opSize2_marshaled = reinterpret_cast<int32_t*>((___2_opSize2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_imagePoints' to native representation
	intptr_t* ____3_imagePoints_marshaled = NULL;
	if (___3_imagePoints != NULL)
	{
		____3_imagePoints_marshaled = reinterpret_cast<intptr_t*>((___3_imagePoints)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___5_ipSize2' to native representation
	int32_t* ____5_ipSize2_marshaled = NULL;
	if (___5_ipSize2 != NULL)
	{
		____5_ipSize2_marshaled = reinterpret_cast<int32_t*>((___5_ipSize2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_initCameraMatrix2D_array)(____0_objectPoints_marshaled, ___1_opSize1, ____2_opSize2_marshaled, ____3_imagePoints_marshaled, ___4_ipSize1, ____5_ipSize2_marshaled, ___6_imageSize, ___7_aspectRatio);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_objectPoints_marshaled, ___1_opSize1, ____2_opSize2_marshaled, ____3_imagePoints_marshaled, ___4_ipSize1, ____5_ipSize2_marshaled, ___6_imageSize, ___7_aspectRatio);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_findChessboardCorners_InputArray(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_findChessboardCorners_InputArray_m2B32B7763A4CCA72B562102712B5C6EE7B843D2F (intptr_t ___0_image, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_patternSize, intptr_t ___2_corners, int32_t ___3_flags, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findChessboardCorners_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findChessboardCorners_InputArray)(___0_image, ___1_patternSize, ___2_corners, ___3_flags);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_image, ___1_patternSize, ___2_corners, ___3_flags);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_findChessboardCorners_vector(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_findChessboardCorners_vector_mA33897ED72D56023BCF788C650F2D68E4C45A4FC (intptr_t ___0_image, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_patternSize, intptr_t ___2_corners, int32_t ___3_flags, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findChessboardCorners_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findChessboardCorners_vector)(___0_image, ___1_patternSize, ___2_corners, ___3_flags);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_image, ___1_patternSize, ___2_corners, ___3_flags);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_find4QuadCornerSubpix_InputArray(System.IntPtr,System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_find4QuadCornerSubpix_InputArray_mA834DA60B690B65940D8F484EE5C76ABA6488C03 (intptr_t ___0_img, intptr_t ___1_corners, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_regionSize, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_find4QuadCornerSubpix_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_find4QuadCornerSubpix_InputArray)(___0_img, ___1_corners, ___2_regionSize);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_img, ___1_corners, ___2_regionSize);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_find4QuadCornerSubpix_vector(System.IntPtr,System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_find4QuadCornerSubpix_vector_m0DA093010864BCEF97F5480B9A52B9F64A687E9A (intptr_t ___0_img, intptr_t ___1_corners, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_regionSize, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_find4QuadCornerSubpix_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_find4QuadCornerSubpix_vector)(___0_img, ___1_corners, ___2_regionSize);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_img, ___1_corners, ___2_regionSize);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_drawChessboardCorners_InputArray(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_drawChessboardCorners_InputArray_m7C11BC212D2D70A2FC46F2E21ED981D7C1EB4C8D (intptr_t ___0_image, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_patternSize, intptr_t ___2_corners, int32_t ___3_patternWasFound, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_drawChessboardCorners_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_drawChessboardCorners_InputArray)(___0_image, ___1_patternSize, ___2_corners, ___3_patternWasFound);
	#else
	il2cppPInvokeFunc(___0_image, ___1_patternSize, ___2_corners, ___3_patternWasFound);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_drawChessboardCorners_array(System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Point2f[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_drawChessboardCorners_array_m229FA60A0277BC04D2729A0B7B733E3EF625B4F9 (intptr_t ___0_image, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_patternSize, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___2_corners, int32_t ___3_cornersLength, int32_t ___4_patternWasFound, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_drawChessboardCorners_array", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_corners' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____2_corners_marshaled = NULL;
	if (___2_corners != NULL)
	{
		____2_corners_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___2_corners)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_drawChessboardCorners_array)(___0_image, ___1_patternSize, ____2_corners_marshaled, ___3_cornersLength, ___4_patternWasFound);
	#else
	il2cppPInvokeFunc(___0_image, ___1_patternSize, ____2_corners_marshaled, ___3_cornersLength, ___4_patternWasFound);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_findCirclesGrid_InputArray(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_findCirclesGrid_InputArray_mCB3364987EFB28755388396666461F8383F1CB53 (intptr_t ___0_image, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_patternSize, intptr_t ___2_centers, int32_t ___3_flags, intptr_t ___4_blobDetector, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findCirclesGrid_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findCirclesGrid_InputArray)(___0_image, ___1_patternSize, ___2_centers, ___3_flags, ___4_blobDetector);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_image, ___1_patternSize, ___2_centers, ___3_flags, ___4_blobDetector);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_findCirclesGrid_vector(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_findCirclesGrid_vector_m01311CE580D255BBF3AE523A13AD7A9018304685 (intptr_t ___0_image, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_patternSize, intptr_t ___2_centers, int32_t ___3_flags, intptr_t ___4_blobDetector, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findCirclesGrid_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findCirclesGrid_vector)(___0_image, ___1_patternSize, ___2_centers, ___3_flags, ___4_blobDetector);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_image, ___1_patternSize, ___2_centers, ___3_flags, ___4_blobDetector);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::calib3d_calibrateCamera_InputArray(System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_calib3d_calibrateCamera_InputArray_m0DCC33B02AD5E98B7CFC152942EC348327BDA44F (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_objectPoints, int32_t ___1_objectPointsSize, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___2_imagePoints, int32_t ___3_imagePointsSize, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___4_imageSize, intptr_t ___5_cameraMatrix, intptr_t ___6_distCoeffs, intptr_t ___7_rvecs, intptr_t ___8_tvecs, int32_t ___9_flags, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___10_criteria, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_calibrateCamera_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_objectPoints' to native representation
	intptr_t* ____0_objectPoints_marshaled = NULL;
	if (___0_objectPoints != NULL)
	{
		____0_objectPoints_marshaled = reinterpret_cast<intptr_t*>((___0_objectPoints)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_imagePoints' to native representation
	intptr_t* ____2_imagePoints_marshaled = NULL;
	if (___2_imagePoints != NULL)
	{
		____2_imagePoints_marshaled = reinterpret_cast<intptr_t*>((___2_imagePoints)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(calib3d_calibrateCamera_InputArray)(____0_objectPoints_marshaled, ___1_objectPointsSize, ____2_imagePoints_marshaled, ___3_imagePointsSize, ___4_imageSize, ___5_cameraMatrix, ___6_distCoeffs, ___7_rvecs, ___8_tvecs, ___9_flags, ___10_criteria);
	#else
	double returnValue = il2cppPInvokeFunc(____0_objectPoints_marshaled, ___1_objectPointsSize, ____2_imagePoints_marshaled, ___3_imagePointsSize, ___4_imageSize, ___5_cameraMatrix, ___6_distCoeffs, ___7_rvecs, ___8_tvecs, ___9_flags, ___10_criteria);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::calib3d_calibrateCamera_vector(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32[],OpenCvSharp.Size,System.Double[,],System.Double[],System.Int32,System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_calib3d_calibrateCamera_vector_m607CFA5AFE005BBEFE979BF9FB29C1A8CCC9226C (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_objectPoints, int32_t ___1_opSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_opSize2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___3_imagePoints, int32_t ___4_ipSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___5_ipSize2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___6_imageSize, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___7_cameraMatrix, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___8_distCoeffs, int32_t ___9_distCoeffsSize, intptr_t ___10_rvecs, intptr_t ___11_tvecs, int32_t ___12_flags, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___13_criteria, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_calibrationMatrixValues_InputArray(System.IntPtr,OpenCvSharp.Size,System.Double,System.Double,System.Double&,System.Double&,System.Double&,OpenCvSharp.Point2d&,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_calibrationMatrixValues_InputArray_m37EC947412ED8A77CE2E7D27D10D9916E38CA7FE (intptr_t ___0_cameraMatrix, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_imageSize, double ___2_apertureWidth, double ___3_apertureHeight, double* ___4_fovx, double* ___5_fovy, double* ___6_focalLength, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ___7_principalPoint, double* ___8_aspectRatio, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double*, double*, double*, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, double*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(double) + sizeof(double*) + sizeof(double*) + sizeof(double*) + sizeof(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*) + sizeof(double*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_calibrationMatrixValues_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_calibrationMatrixValues_InputArray)(___0_cameraMatrix, ___1_imageSize, ___2_apertureWidth, ___3_apertureHeight, ___4_fovx, ___5_fovy, ___6_focalLength, ___7_principalPoint, ___8_aspectRatio);
	#else
	il2cppPInvokeFunc(___0_cameraMatrix, ___1_imageSize, ___2_apertureWidth, ___3_apertureHeight, ___4_fovx, ___5_fovy, ___6_focalLength, ___7_principalPoint, ___8_aspectRatio);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_calibrationMatrixValues_array(System.Double[,],OpenCvSharp.Size,System.Double,System.Double,System.Double&,System.Double&,System.Double&,OpenCvSharp.Point2d&,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_calibrationMatrixValues_array_mA3EC03A9C84B58005121DF8FBB0AB6D51B06F37F (DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___0_cameraMatrix, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_imageSize, double ___2_apertureWidth, double ___3_apertureHeight, double* ___4_fovx, double* ___5_fovy, double* ___6_focalLength, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ___7_principalPoint, double* ___8_aspectRatio, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Double OpenCvSharp.NativeMethods::calib3d_stereoCalibrate_InputArray(System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_calib3d_stereoCalibrate_InputArray_mF55D56EE3BC20063BAFED3FE0F8E18B429664C2A (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_objectPoints, int32_t ___1_opSize, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___2_imagePoints1, int32_t ___3_ip1Size, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___4_imagePoints2, int32_t ___5_ip2Size, intptr_t ___6_cameraMatrix1, intptr_t ___7_distCoeffs1, intptr_t ___8_cameraMatrix2, intptr_t ___9_distCoeffs2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___10_imageSize, intptr_t ___11_R, intptr_t ___12_T, intptr_t ___13_E, intptr_t ___14_F, int32_t ___15_flags, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___16_criteria, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t*, int32_t, intptr_t*, int32_t, intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_stereoCalibrate_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_objectPoints' to native representation
	intptr_t* ____0_objectPoints_marshaled = NULL;
	if (___0_objectPoints != NULL)
	{
		____0_objectPoints_marshaled = reinterpret_cast<intptr_t*>((___0_objectPoints)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_imagePoints1' to native representation
	intptr_t* ____2_imagePoints1_marshaled = NULL;
	if (___2_imagePoints1 != NULL)
	{
		____2_imagePoints1_marshaled = reinterpret_cast<intptr_t*>((___2_imagePoints1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_imagePoints2' to native representation
	intptr_t* ____4_imagePoints2_marshaled = NULL;
	if (___4_imagePoints2 != NULL)
	{
		____4_imagePoints2_marshaled = reinterpret_cast<intptr_t*>((___4_imagePoints2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(calib3d_stereoCalibrate_InputArray)(____0_objectPoints_marshaled, ___1_opSize, ____2_imagePoints1_marshaled, ___3_ip1Size, ____4_imagePoints2_marshaled, ___5_ip2Size, ___6_cameraMatrix1, ___7_distCoeffs1, ___8_cameraMatrix2, ___9_distCoeffs2, ___10_imageSize, ___11_R, ___12_T, ___13_E, ___14_F, ___15_flags, ___16_criteria);
	#else
	double returnValue = il2cppPInvokeFunc(____0_objectPoints_marshaled, ___1_opSize, ____2_imagePoints1_marshaled, ___3_ip1Size, ____4_imagePoints2_marshaled, ___5_ip2Size, ___6_cameraMatrix1, ___7_distCoeffs1, ___8_cameraMatrix2, ___9_distCoeffs2, ___10_imageSize, ___11_R, ___12_T, ___13_E, ___14_F, ___15_flags, ___16_criteria);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::calib3d_stereoCalibrate_array(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32[],System.Double[,],System.Double[],System.Int32,System.Double[,],System.Double[],System.Int32,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_calib3d_stereoCalibrate_array_mCF4A642257D79B9B7466B2B7BC4D6778EEE72B47 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_objectPoints, int32_t ___1_opSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_opSizes2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___3_imagePoints1, int32_t ___4_ip1Size1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___5_ip1Sizes2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___6_imagePoints2, int32_t ___7_ip2Size1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___8_ip2Sizes2, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___9_cameraMatrix1, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___10_distCoeffs1, int32_t ___11_dc1Size, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___12_cameraMatrix2, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___13_distCoeffs2, int32_t ___14_dc2Size, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___15_imageSize, intptr_t ___16_R, intptr_t ___17_T, intptr_t ___18_E, intptr_t ___19_F, int32_t ___20_flags, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___21_criteria, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_stereoRectify_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Double,OpenCvSharp.Size,OpenCvSharp.Rect&,OpenCvSharp.Rect&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_stereoRectify_InputArray_m08BC2876F53A9E250AA80E5CA90364D5554AB229 (intptr_t ___0_cameraMatrix1, intptr_t ___1_distCoeffs1, intptr_t ___2_cameraMatrix2, intptr_t ___3_distCoeffs2, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___4_imageSize, intptr_t ___5_R, intptr_t ___6_T, intptr_t ___7_R1, intptr_t ___8_R2, intptr_t ___9_P1, intptr_t ___10_P2, intptr_t ___11_Q, int32_t ___12_flags, double ___13_alpha, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___14_newImageSize, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___15_validPixROI1, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___16_validPixROI2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_stereoRectify_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_stereoRectify_InputArray)(___0_cameraMatrix1, ___1_distCoeffs1, ___2_cameraMatrix2, ___3_distCoeffs2, ___4_imageSize, ___5_R, ___6_T, ___7_R1, ___8_R2, ___9_P1, ___10_P2, ___11_Q, ___12_flags, ___13_alpha, ___14_newImageSize, ___15_validPixROI1, ___16_validPixROI2);
	#else
	il2cppPInvokeFunc(___0_cameraMatrix1, ___1_distCoeffs1, ___2_cameraMatrix2, ___3_distCoeffs2, ___4_imageSize, ___5_R, ___6_T, ___7_R1, ___8_R2, ___9_P1, ___10_P2, ___11_Q, ___12_flags, ___13_alpha, ___14_newImageSize, ___15_validPixROI1, ___16_validPixROI2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_stereoRectify_array(System.Double[,],System.Double[],System.Int32,System.Double[,],System.Double[],System.Int32,OpenCvSharp.Size,System.Double[,],System.Double[],System.Double[,],System.Double[,],System.Double[,],System.Double[,],System.Double[,],System.Int32,System.Double,OpenCvSharp.Size,OpenCvSharp.Rect&,OpenCvSharp.Rect&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_stereoRectify_array_mEB7381E0CB9886D41BB0F32A114C9F81024C3E8B (DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___0_cameraMatrix1, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___1_distCoeffs1, int32_t ___2_dc1Size, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___3_cameraMatrix2, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___4_distCoeffs2, int32_t ___5_dc2Size, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___6_imageSize, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___7_R, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___8_T, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___9_R1, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___10_R2, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___11_P1, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___12_P2, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___13_Q, int32_t ___14_flags, double ___15_alpha, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___16_newImageSize, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___17_validPixROI1, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___18_validPixROI2, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_stereoRectifyUncalibrated_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_stereoRectifyUncalibrated_InputArray_m824CB01C8C319275B92416B690D18A516C8EEA5D (intptr_t ___0_points1, intptr_t ___1_points2, intptr_t ___2_F, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___3_imgSize, intptr_t ___4_H1, intptr_t ___5_H2, double ___6_threshold, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_stereoRectifyUncalibrated_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_stereoRectifyUncalibrated_InputArray)(___0_points1, ___1_points2, ___2_F, ___3_imgSize, ___4_H1, ___5_H2, ___6_threshold);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_points1, ___1_points2, ___2_F, ___3_imgSize, ___4_H1, ___5_H2, ___6_threshold);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_stereoRectifyUncalibrated_array(OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],System.Int32,System.Double[,],OpenCvSharp.Size,System.Double[,],System.Double[,],System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_stereoRectifyUncalibrated_array_m40285AAFB7CFF3781FCDB04C36F67B15401F3326 (Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___0_points1, int32_t ___1_points1Size, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___2_points2, int32_t ___3_points2Size, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___4_F, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___5_imgSize, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___6_H1, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___7_H2, double ___8_threshold, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Single OpenCvSharp.NativeMethods::calib3d_rectify3Collinear_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Rect&,OpenCvSharp.Rect&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_calib3d_rectify3Collinear_InputArray_m727958B9C40C0C58BA2D9402D7F2902AC65DECBA (intptr_t ___0_cameraMatrix1, intptr_t ___1_distCoeffs1, intptr_t ___2_cameraMatrix2, intptr_t ___3_distCoeffs2, intptr_t ___4_cameraMatrix3, intptr_t ___5_distCoeffs3, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___6_imgpt1, int32_t ___7_imgpt1Size, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___8_imgpt3, int32_t ___9_imgpt3Size, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___10_imageSize, intptr_t ___11_R12, intptr_t ___12_T12, intptr_t ___13_R13, intptr_t ___14_T13, intptr_t ___15_R1, intptr_t ___16_R2, intptr_t ___17_R3, intptr_t ___18_P1, intptr_t ___19_P2, intptr_t ___20_P3, intptr_t ___21_Q, double ___22_alpha, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___23_newImgSize, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___24_roi1, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___25_roi2, int32_t ___26_flags, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_rectify3Collinear_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___6_imgpt1' to native representation
	intptr_t* ____6_imgpt1_marshaled = NULL;
	if (___6_imgpt1 != NULL)
	{
		____6_imgpt1_marshaled = reinterpret_cast<intptr_t*>((___6_imgpt1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___8_imgpt3' to native representation
	intptr_t* ____8_imgpt3_marshaled = NULL;
	if (___8_imgpt3 != NULL)
	{
		____8_imgpt3_marshaled = reinterpret_cast<intptr_t*>((___8_imgpt3)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(calib3d_rectify3Collinear_InputArray)(___0_cameraMatrix1, ___1_distCoeffs1, ___2_cameraMatrix2, ___3_distCoeffs2, ___4_cameraMatrix3, ___5_distCoeffs3, ____6_imgpt1_marshaled, ___7_imgpt1Size, ____8_imgpt3_marshaled, ___9_imgpt3Size, ___10_imageSize, ___11_R12, ___12_T12, ___13_R13, ___14_T13, ___15_R1, ___16_R2, ___17_R3, ___18_P1, ___19_P2, ___20_P3, ___21_Q, ___22_alpha, ___23_newImgSize, ___24_roi1, ___25_roi2, ___26_flags);
	#else
	float returnValue = il2cppPInvokeFunc(___0_cameraMatrix1, ___1_distCoeffs1, ___2_cameraMatrix2, ___3_distCoeffs2, ___4_cameraMatrix3, ___5_distCoeffs3, ____6_imgpt1_marshaled, ___7_imgpt1Size, ____8_imgpt3_marshaled, ___9_imgpt3Size, ___10_imageSize, ___11_R12, ___12_T12, ___13_R13, ___14_T13, ___15_R1, ___16_R2, ___17_R3, ___18_P1, ___19_P2, ___20_P3, ___21_Q, ___22_alpha, ___23_newImgSize, ___24_roi1, ___25_roi2, ___26_flags);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_getOptimalNewCameraMatrix_InputArray(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Double,OpenCvSharp.Size,OpenCvSharp.Rect&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_getOptimalNewCameraMatrix_InputArray_m66A853C188DC826C8DFFEE897368189078C294C5 (intptr_t ___0_cameraMatrix, intptr_t ___1_distCoeffs, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_imageSize, double ___3_alpha, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___4_newImgSize, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___5_validPixROI, int32_t ___6_centerPrincipalPoint, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_getOptimalNewCameraMatrix_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_getOptimalNewCameraMatrix_InputArray)(___0_cameraMatrix, ___1_distCoeffs, ___2_imageSize, ___3_alpha, ___4_newImgSize, ___5_validPixROI, ___6_centerPrincipalPoint);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_cameraMatrix, ___1_distCoeffs, ___2_imageSize, ___3_alpha, ___4_newImgSize, ___5_validPixROI, ___6_centerPrincipalPoint);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_getOptimalNewCameraMatrix_array(System.Double[,],System.Double[],System.Int32,OpenCvSharp.Size,System.Double,OpenCvSharp.Size,OpenCvSharp.Rect&,System.Int32,System.Double[,])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_getOptimalNewCameraMatrix_array_mA97EAEAB8DFB5C95DC90A6CC2942E32A23F85293 (DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___0_cameraMatrix, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___1_distCoeffs, int32_t ___2_distCoeffsSize, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___3_imageSize, double ___4_alpha, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___5_newImgSize, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___6_validPixROI, int32_t ___7_centerPrincipalPoint, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___8_outValues, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsToHomogeneous_InputArray(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsToHomogeneous_InputArray_mD163E2D33C7518204D3B9CCFDEDCA22F6ACD7467 (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsToHomogeneous_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsToHomogeneous_InputArray)(___0_src, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsToHomogeneous_array1(OpenCvSharp.Vec2f[],OpenCvSharp.Vec3f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsToHomogeneous_array1_m466F0BE450F4F1D8FB3CB9B37F69FE78125E1FC4 (Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF* ___0_src, Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D* ___1_dst, int32_t ___2_length, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsToHomogeneous_array1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_src' to native representation
	Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ____0_src_marshaled = NULL;
	if (___0_src != NULL)
	{
		____0_src_marshaled = reinterpret_cast<Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*>((___0_src)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___1_dst' to native representation
	Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsToHomogeneous_array1)(____0_src_marshaled, ____1_dst_marshaled, ___2_length);
	#else
	il2cppPInvokeFunc(____0_src_marshaled, ____1_dst_marshaled, ___2_length);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsToHomogeneous_array2(OpenCvSharp.Vec3f[],OpenCvSharp.Vec4f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsToHomogeneous_array2_m2CA9E7EC3C12CB53F0088807C2D7BAA49FA78AD7 (Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D* ___0_src, Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64* ___1_dst, int32_t ___2_length, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsToHomogeneous_array2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_src' to native representation
	Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ____0_src_marshaled = NULL;
	if (___0_src != NULL)
	{
		____0_src_marshaled = reinterpret_cast<Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*>((___0_src)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___1_dst' to native representation
	Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsToHomogeneous_array2)(____0_src_marshaled, ____1_dst_marshaled, ___2_length);
	#else
	il2cppPInvokeFunc(____0_src_marshaled, ____1_dst_marshaled, ___2_length);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsFromHomogeneous_InputArray(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsFromHomogeneous_InputArray_mE7B5E3D06C0F94538FD3249E26C93A1915471BA0 (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsFromHomogeneous_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsFromHomogeneous_InputArray)(___0_src, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsFromHomogeneous_array1(OpenCvSharp.Vec3f[],OpenCvSharp.Vec2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsFromHomogeneous_array1_mD7CE0AFE2F46A84105A6579CB00210907F29FCBE (Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D* ___0_src, Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF* ___1_dst, int32_t ___2_length, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsFromHomogeneous_array1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_src' to native representation
	Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ____0_src_marshaled = NULL;
	if (___0_src != NULL)
	{
		____0_src_marshaled = reinterpret_cast<Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*>((___0_src)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___1_dst' to native representation
	Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsFromHomogeneous_array1)(____0_src_marshaled, ____1_dst_marshaled, ___2_length);
	#else
	il2cppPInvokeFunc(____0_src_marshaled, ____1_dst_marshaled, ___2_length);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsFromHomogeneous_array2(OpenCvSharp.Vec4f[],OpenCvSharp.Vec3f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsFromHomogeneous_array2_mF0B033C38A5C18CC93EE94FA7FDBADDC18C58B29 (Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64* ___0_src, Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D* ___1_dst, int32_t ___2_length, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsFromHomogeneous_array2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_src' to native representation
	Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ____0_src_marshaled = NULL;
	if (___0_src != NULL)
	{
		____0_src_marshaled = reinterpret_cast<Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*>((___0_src)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___1_dst' to native representation
	Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsFromHomogeneous_array2)(____0_src_marshaled, ____1_dst_marshaled, ___2_length);
	#else
	il2cppPInvokeFunc(____0_src_marshaled, ____1_dst_marshaled, ___2_length);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_convertPointsHomogeneous(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_convertPointsHomogeneous_mE827453598D389148F42626E43D254F0EA32E53A (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_convertPointsHomogeneous", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_convertPointsHomogeneous)(___0_src, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_findFundamentalMat_InputArray(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_findFundamentalMat_InputArray_mE2FB4B7E6D191D27B82E65D40E6A9FA2AC1326D7 (intptr_t ___0_points1, intptr_t ___1_points2, int32_t ___2_method, double ___3_param1, double ___4_param2, intptr_t ___5_mask, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findFundamentalMat_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findFundamentalMat_InputArray)(___0_points1, ___1_points2, ___2_method, ___3_param1, ___4_param2, ___5_mask);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_points1, ___1_points2, ___2_method, ___3_param1, ___4_param2, ___5_mask);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_findFundamentalMat_array(OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],System.Int32,System.Int32,System.Double,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_findFundamentalMat_array_mC0BED95B70415C3764D4C87D04D6D8FA030985B4 (Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___0_points1, int32_t ___1_points1Size, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___2_points2, int32_t ___3_points2Size, int32_t ___4_method, double ___5_param1, double ___6_param2, intptr_t ___7_mask, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t, int32_t, double, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_findFundamentalMat_array", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points1' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____0_points1_marshaled = NULL;
	if (___0_points1 != NULL)
	{
		____0_points1_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___0_points1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_points2' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____2_points2_marshaled = NULL;
	if (___2_points2 != NULL)
	{
		____2_points2_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___2_points2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_findFundamentalMat_array)(____0_points1_marshaled, ___1_points1Size, ____2_points2_marshaled, ___3_points2Size, ___4_method, ___5_param1, ___6_param2, ___7_mask);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_points1_marshaled, ___1_points1Size, ____2_points2_marshaled, ___3_points2Size, ___4_method, ___5_param1, ___6_param2, ___7_mask);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_computeCorrespondEpilines_InputArray(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_computeCorrespondEpilines_InputArray_mDB80A919EB19890F740FB06771FE8FD749CACD67 (intptr_t ___0_points, int32_t ___1_whichImage, intptr_t ___2_F, intptr_t ___3_lines, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_computeCorrespondEpilines_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_computeCorrespondEpilines_InputArray)(___0_points, ___1_whichImage, ___2_F, ___3_lines);
	#else
	il2cppPInvokeFunc(___0_points, ___1_whichImage, ___2_F, ___3_lines);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_computeCorrespondEpilines_array2d(OpenCvSharp.Point2d[],System.Int32,System.Int32,System.Double[,],OpenCvSharp.Point3f[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_computeCorrespondEpilines_array2d_m88B5156840B1498AEEA66DAD9FE02AD1628B29E3 (Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___0_points, int32_t ___1_pointsSize, int32_t ___2_whichImage, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___3_F, Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___4_lines, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_computeCorrespondEpilines_array3d(OpenCvSharp.Point3d[],System.Int32,System.Int32,System.Double[,],OpenCvSharp.Point3f[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_computeCorrespondEpilines_array3d_m3F5AA18695F25EABA6415093C53D9AC1DE94286E (Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D* ___0_points, int32_t ___1_pointsSize, int32_t ___2_whichImage, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___3_F, Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___4_lines, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_triangulatePoints_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_triangulatePoints_InputArray_mCBEB045AAB40F773F6D99C768D746993FA157D62 (intptr_t ___0_projMatr1, intptr_t ___1_projMatr2, intptr_t ___2_projPoints1, intptr_t ___3_projPoints2, intptr_t ___4_points4D, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_triangulatePoints_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_triangulatePoints_InputArray)(___0_projMatr1, ___1_projMatr2, ___2_projPoints1, ___3_projPoints2, ___4_points4D);
	#else
	il2cppPInvokeFunc(___0_projMatr1, ___1_projMatr2, ___2_projPoints1, ___3_projPoints2, ___4_points4D);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_triangulatePoints_array(System.Double[,],System.Double[,],OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Vec4d[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_triangulatePoints_array_mD75305BF2440309E473B492F1C1648510156DAAF (DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___0_projMatr1, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___1_projMatr2, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___2_projPoints1, int32_t ___3_projPoints1Size, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___4_projPoints2, int32_t ___5_projPoints2Size, Vec4dU5BU5D_t4CD1D642D7FE8D7D780F5089E9047773F65F29E7* ___6_points4D, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_correctMatches_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_correctMatches_InputArray_m7CA66DF5EBEBA0984DBC170026E1407A564594D0 (intptr_t ___0_F, intptr_t ___1_points1, intptr_t ___2_points2, intptr_t ___3_newPoints1, intptr_t ___4_newPoints2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_correctMatches_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_correctMatches_InputArray)(___0_F, ___1_points1, ___2_points2, ___3_newPoints1, ___4_newPoints2);
	#else
	il2cppPInvokeFunc(___0_F, ___1_points1, ___2_points2, ___3_newPoints1, ___4_newPoints2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_correctMatches_array(System.Double[,],OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],System.Int32,OpenCvSharp.Point2d[],OpenCvSharp.Point2d[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_correctMatches_array_m661D736ACB7884F3A94D29AF491B889659A3D82D (DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___0_F, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___1_points1, int32_t ___2_points1Size, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___3_points2, int32_t ___4_points2Size, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___5_newPoints1, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___6_newPoints2, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::calib3d_filterSpeckles(System.IntPtr,System.Double,System.Int32,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_filterSpeckles_m129987C6391C55D323298B5F6E6EF252AB652168 (intptr_t ___0_img, double ___1_newVal, int32_t ___2_maxSpeckleSize, double ___3_maxDiff, intptr_t ___4_buf, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, int32_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_filterSpeckles", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_filterSpeckles)(___0_img, ___1_newVal, ___2_maxSpeckleSize, ___3_maxDiff, ___4_buf);
	#else
	il2cppPInvokeFunc(___0_img, ___1_newVal, ___2_maxSpeckleSize, ___3_maxDiff, ___4_buf);
	#endif

}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::calib3d_getValidDisparityROI(OpenCvSharp.Rect,OpenCvSharp.Rect,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_calib3d_getValidDisparityROI_mA19E8EF3A4077EE16CE693B7038E419DA30A757A (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___0_roi1, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___1_roi2, int32_t ___2_minDisparity, int32_t ___3_numberOfDisparities, int32_t ___4_SADWindowSize, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_getValidDisparityROI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(calib3d_getValidDisparityROI)(___0_roi1, ___1_roi2, ___2_minDisparity, ___3_numberOfDisparities, ___4_SADWindowSize);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(___0_roi1, ___1_roi2, ___2_minDisparity, ___3_numberOfDisparities, ___4_SADWindowSize);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_validateDisparity(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_validateDisparity_m08E6D3BFA12CB69EA1B92AB023117835063183C4 (intptr_t ___0_disparity, intptr_t ___1_cost, int32_t ___2_minDisparity, int32_t ___3_numberOfDisparities, int32_t ___4_disp12MaxDisp, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_validateDisparity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_validateDisparity)(___0_disparity, ___1_cost, ___2_minDisparity, ___3_numberOfDisparities, ___4_disp12MaxDisp);
	#else
	il2cppPInvokeFunc(___0_disparity, ___1_cost, ___2_minDisparity, ___3_numberOfDisparities, ___4_disp12MaxDisp);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_reprojectImageTo3D(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_reprojectImageTo3D_m9A8EAAD137ED388FDB99C93C8A900F4BD5CCDC51 (intptr_t ___0_disparity, intptr_t ___1__3dImage, intptr_t ___2_Q, int32_t ___3_handleMissingValues, int32_t ___4_ddepth, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_reprojectImageTo3D", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_reprojectImageTo3D)(___0_disparity, ___1__3dImage, ___2_Q, ___3_handleMissingValues, ___4_ddepth);
	#else
	il2cppPInvokeFunc(___0_disparity, ___1__3dImage, ___2_Q, ___3_handleMissingValues, ___4_ddepth);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_estimateAffine3D(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_estimateAffine3D_mCFA56178F586D9444147F9536FD9E8DFCE594CC2 (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_outVal, intptr_t ___3_inliers, double ___4_ransacThreshold, double ___5_confidence, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_estimateAffine3D", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_estimateAffine3D)(___0_src, ___1_dst, ___2_outVal, ___3_inliers, ___4_ransacThreshold, ___5_confidence);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_src, ___1_dst, ___2_outVal, ___3_inliers, ___4_ransacThreshold, ___5_confidence);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_compute(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_compute_m390F9BD316AE87F9BE52B42A3A8FA31F336733AE (intptr_t ___0_obj, intptr_t ___1_left, intptr_t ___2_right, intptr_t ___3_disparity, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_compute", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_compute)(___0_obj, ___1_left, ___2_right, ___3_disparity);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_left, ___2_right, ___3_disparity);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getMinDisparity(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getMinDisparity_m3D9B3A29943D2DD16C1176AE244E470419D58B83 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getMinDisparity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getMinDisparity)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setMinDisparity(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setMinDisparity_m1B270733DA7A52E21C570AE694D9D66A5E38DA04 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setMinDisparity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setMinDisparity)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getNumDisparities(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getNumDisparities_m7A278A66F020A03F119790C95BF4325BDCEE78A2 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getNumDisparities", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getNumDisparities)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setNumDisparities(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setNumDisparities_mD83D4873B556100A863AFE4494D556B854F5DB46 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setNumDisparities", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setNumDisparities)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getBlockSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getBlockSize_m6379D63988E808F7B980A54A9B2D72AD5DD70118 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getBlockSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setBlockSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setBlockSize_mCAD371CCC475A20DE032D4EE22700B8BDEC55BE4 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setBlockSize)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getSpeckleWindowSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getSpeckleWindowSize_m72F99D295DD0558EE35DF55FA55A26385E4FC6E1 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getSpeckleWindowSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getSpeckleWindowSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setSpeckleWindowSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setSpeckleWindowSize_m18DBE09DF90C33237CE3B3AFF54ED1C70CEB636B (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setSpeckleWindowSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setSpeckleWindowSize)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getSpeckleRange(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getSpeckleRange_mAFE0C4E2814C0DE15A41D02DD6A164B2258879A4 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getSpeckleRange", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getSpeckleRange)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setSpeckleRange(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setSpeckleRange_m9B4181A532630CE1BA9AF9E2C9668A923CECB4F4 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setSpeckleRange", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setSpeckleRange)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoMatcher_getDisp12MaxDiff(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoMatcher_getDisp12MaxDiff_m82817AAF436480F7F296265B17E2F3F4310AE26B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_getDisp12MaxDiff", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_getDisp12MaxDiff)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoMatcher_setDisp12MaxDiff(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoMatcher_setDisp12MaxDiff_m5A2EBD6559E91E8FCC96C6E200A642BF68CF580D (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoMatcher_setDisp12MaxDiff", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoMatcher_setDisp12MaxDiff)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_Ptr_StereoBM_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_Ptr_StereoBM_delete_m42DEA9DAAC5C48CE3BE1CF20BCE3BA42BEFA71CF (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_Ptr_StereoBM_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_Ptr_StereoBM_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_StereoBM_create(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_StereoBM_create_mA21FC1C0E3B079E2310BC6D37F4A194886F38974 (int32_t ___0_numDisparities, int32_t ___1_blockSize, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_create)(___0_numDisparities, ___1_blockSize);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_numDisparities, ___1_blockSize);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getPreFilterType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getPreFilterType_m6F035D48C954AD518DD8403B0E0EF7330B44328A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getPreFilterType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getPreFilterType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setPreFilterType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setPreFilterType_m39BCF206E6341C9E88850769708E0F9E9DE10D3D (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setPreFilterType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setPreFilterType)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getPreFilterSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getPreFilterSize_m3FFAB7F108CA61F880D16ECBEAC54CE1A7A1CBF8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getPreFilterSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getPreFilterSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setPreFilterSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setPreFilterSize_m9064C14B27570A256B2E5F631327738BA6BFC123 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setPreFilterSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setPreFilterSize)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getPreFilterCap(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getPreFilterCap_m3CCFFAE1E1A0C94399F779D087002583BD953059 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getPreFilterCap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getPreFilterCap)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setPreFilterCap(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setPreFilterCap_m5C7A907AB6CC04822F70A118E3D80EB862A97E53 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setPreFilterCap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setPreFilterCap)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getTextureThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getTextureThreshold_mDA3A702F92AC7CCC280C583D19546F1350E20317 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getTextureThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getTextureThreshold)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setTextureThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setTextureThreshold_m4DBD53EBCB25E98ED7F60B369C376EF863699B5A (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setTextureThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setTextureThreshold)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getUniquenessRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getUniquenessRatio_mF9933E060A8B4C4D4E8580064A85BD2DFF5C94A4 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getUniquenessRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getUniquenessRatio)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setUniquenessRatio(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setUniquenessRatio_mD65502F6E23D4301A117CF947A5EE87B1CEB4512 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setUniquenessRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setUniquenessRatio)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoBM_getSmallerBlockSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoBM_getSmallerBlockSize_m2147578C934ECBBB1C7D796D4BF48BFE9E695630 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getSmallerBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getSmallerBlockSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setSmallerBlockSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setSmallerBlockSize_m578635AE869082E20443688FC7033001B6924EE3 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setSmallerBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setSmallerBlockSize)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::calib3d_StereoBM_getROI1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_calib3d_StereoBM_getROI1_m593F606BDBBA5D2880D6E1C6A8564AEE45D29A55 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getROI1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getROI1)(___0_obj);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setROI1(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setROI1_m187F90BDC8720F47B7B71A596DC6E2565A19BD89 (intptr_t ___0_obj, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setROI1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setROI1)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::calib3d_StereoBM_getROI2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_calib3d_StereoBM_getROI2_mA61E7D619B705ECC28A148392623CBB37073D006 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_getROI2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_getROI2)(___0_obj);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoBM_setROI2(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoBM_setROI2_mDD2695090CD4C68F915EC701842745F76B62D5DF (intptr_t ___0_obj, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoBM_setROI2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoBM_setROI2)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::calib3d_Ptr_StereoSGBM_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_Ptr_StereoSGBM_delete_m21DEC8C22F05DE90F3CBF101AAC3ED25F4AB3B72 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_Ptr_StereoSGBM_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_Ptr_StereoSGBM_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::calib3d_StereoSGBM_create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_calib3d_StereoSGBM_create_m1157846505CD16FC8AA3A6C7A4F64C616DB2BE8F (int32_t ___0_minDisparity, int32_t ___1_numDisparities, int32_t ___2_blockSize, int32_t ___3_P1, int32_t ___4_P2, int32_t ___5_disp12MaxDiff, int32_t ___6_preFilterCap, int32_t ___7_uniquenessRatio, int32_t ___8_speckleWindowSize, int32_t ___9_speckleRange, int32_t ___10_mode, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_create)(___0_minDisparity, ___1_numDisparities, ___2_blockSize, ___3_P1, ___4_P2, ___5_disp12MaxDiff, ___6_preFilterCap, ___7_uniquenessRatio, ___8_speckleWindowSize, ___9_speckleRange, ___10_mode);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_minDisparity, ___1_numDisparities, ___2_blockSize, ___3_P1, ___4_P2, ___5_disp12MaxDiff, ___6_preFilterCap, ___7_uniquenessRatio, ___8_speckleWindowSize, ___9_speckleRange, ___10_mode);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getPreFilterCap(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getPreFilterCap_m3B882C835F241D497A601A531FC2762DCB93D914 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_getPreFilterCap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_getPreFilterCap)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setPreFilterCap(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setPreFilterCap_mB326B744EDD486C80F63186A2D30D6462896A0D1 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_setPreFilterCap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_setPreFilterCap)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getUniquenessRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getUniquenessRatio_m682AC11EC723D6A211B7448C6285B8B17C99AC3D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_getUniquenessRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_getUniquenessRatio)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setUniquenessRatio(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setUniquenessRatio_m9A5A04C68C08BE5212EC02E8C640E65E2809C336 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_setUniquenessRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_setUniquenessRatio)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getP1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getP1_m0BB6A9DA144DC658331FBDF9FC6B29D28B08ADA5 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_getP1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_getP1)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setP1(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setP1_mEF643EC6CD98E1FFB562959DE44E5A38AC8CDE18 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_setP1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_setP1)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getP2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getP2_mC9C10788E166D436A962328C1629B91F36AB082A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_getP2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_getP2)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setP2(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setP2_m26253FF348CF1080B991DF25A4EE7930F611C842 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_setP2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_setP2)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::calib3d_StereoSGBM_getMode(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_calib3d_StereoSGBM_getMode_m2CE34A9955EF80546D45D76E6557C7CDE8C3039B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_getMode", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_getMode)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::calib3d_StereoSGBM_setMode(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_calib3d_StereoSGBM_setMode_m9B42B6EB7BA376EDCC287B7957A1117D52140164 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "calib3d_StereoSGBM_setMode", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(calib3d_StereoSGBM_setMode)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_setNumThreads(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_setNumThreads_mACF930AB705887214A4A2A80A5AD0DCF2F0500A6 (int32_t ___0_nthreads, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_setNumThreads", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_setNumThreads)(___0_nthreads);
	#else
	il2cppPInvokeFunc(___0_nthreads);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_getNumThreads()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_getNumThreads_m5BE7184B57E44F850E4CA81095F09DDC9934E4F0 (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getNumThreads", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_getNumThreads)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_getThreadNum()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_getThreadNum_mEF0AF4D15BBD95BBA1B4112E7559630CCAD150D4 (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getThreadNum", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_getThreadNum)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_getBuildInformation(System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_getBuildInformation_mAE8EC00988FEA9E892971505F285545692635529 (StringBuilder_t* ___0_buf, int32_t ___1_maxLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getBuildInformation", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_buf' to native representation
	char* ____0_buf_marshaled = NULL;
	____0_buf_marshaled = il2cpp_codegen_marshal_string_builder(___0_buf);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_getBuildInformation)(____0_buf_marshaled, ___1_maxLength);
	#else
	il2cppPInvokeFunc(____0_buf_marshaled, ___1_maxLength);
	#endif

	// Marshaling of parameter '___0_buf' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___0_buf, ____0_buf_marshaled);

	// Marshaling cleanup of parameter '___0_buf' native representation
	il2cpp_codegen_marshal_free(____0_buf_marshaled);
	____0_buf_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::core_getBuildInformation_length()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_getBuildInformation_length_mFF56AC5330096686A45FFA37887CA069CE0C9652 (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getBuildInformation_length", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_getBuildInformation_length)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Int64 OpenCvSharp.NativeMethods::core_getTickCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t NativeMethods_core_getTickCount_m46774662CF7B85D8EA281C7531D7B19BC2061BDC (const RuntimeMethod* method) 
{
	typedef int64_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getTickCount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int64_t returnValue = reinterpret_cast<PInvokeFunc>(core_getTickCount)();
	#else
	int64_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_getTickFrequency()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_getTickFrequency_m884F933D003EC49F8699609ED3FCAA58060AA0AD (const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getTickFrequency", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_getTickFrequency)();
	#else
	double returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Int64 OpenCvSharp.NativeMethods::core_getCPUTickCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t NativeMethods_core_getCPUTickCount_m7E05AEE74BFF956F86BDC8F39EE00E481465D17F (const RuntimeMethod* method) 
{
	typedef int64_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getCPUTickCount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int64_t returnValue = reinterpret_cast<PInvokeFunc>(core_getCPUTickCount)();
	#else
	int64_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_checkHardwareSupport(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_checkHardwareSupport_m464EB1B0F6017E2EB92183AA8E12A593CFC16EB9 (int32_t ___0_feature, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_checkHardwareSupport", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_checkHardwareSupport)(___0_feature);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_feature);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_getNumberOfCPUs()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_getNumberOfCPUs_m0242F5DB183A889592DE231ECC20189F219B4BB1 (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getNumberOfCPUs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_getNumberOfCPUs)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_fastMalloc(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_fastMalloc_m837FB91EEA4DDD5948F87016B9680AC6A8AA00F6 (intptr_t ___0_bufSize, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_fastMalloc", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_fastMalloc)(___0_bufSize);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_bufSize);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_fastFree(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_fastFree_m6015957BC8E654E327E27E736752388548E4FB25 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_fastFree", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_fastFree)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_setUseOptimized(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_setUseOptimized_mFA8EEA45CB6BD7A2FEE02EA8AF74D2E80700627E (int32_t ___0_onoff, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_setUseOptimized", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_setUseOptimized)(___0_onoff);
	#else
	il2cppPInvokeFunc(___0_onoff);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_useOptimized()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_useOptimized_m992DA59AD827DF2970EFBB57AEE5BAFB2D662ADA (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_useOptimized", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_useOptimized)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::redirectError(OpenCvSharp.CvErrorCallback,System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_redirectError_mB9D0FD5DE6877218A0C72F29D9184A3C331E8412 (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* ___0_errCallback, intptr_t ___1_userdata, intptr_t* ___2_prevUserdata, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Il2CppMethodPointer, intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "redirectError", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_errCallback' to native representation
	Il2CppMethodPointer ____0_errCallback_marshaled = NULL;
	____0_errCallback_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___0_errCallback));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(redirectError)(____0_errCallback_marshaled, ___1_userdata, ___2_prevUserdata);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_errCallback_marshaled, ___1_userdata, ___2_prevUserdata);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_cvarrToMat(System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_cvarrToMat_m464FFB9FE33C5B4D4DC3566179E34402CF9D5FB5 (intptr_t ___0_arr, int32_t ___1_copyData, int32_t ___2_allowND, int32_t ___3_coiMode, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_cvarrToMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_cvarrToMat)(___0_arr, ___1_copyData, ___2_allowND, ___3_coiMode);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_arr, ___1_copyData, ___2_allowND, ___3_coiMode);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_extractImageCOI(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_extractImageCOI_m8A25BB4A9A077CA230122D987BE5298EC28B70D7 (intptr_t ___0_arr, intptr_t ___1_coiimg, int32_t ___2_coi, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_extractImageCOI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_extractImageCOI)(___0_arr, ___1_coiimg, ___2_coi);
	#else
	il2cppPInvokeFunc(___0_arr, ___1_coiimg, ___2_coi);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_insertImageCOI(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_insertImageCOI_m16EA2658E9E69FF8C1E3A5723C87B5BA6F7B2FCB (intptr_t ___0_coiimg, intptr_t ___1_arr, int32_t ___2_coi, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_insertImageCOI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_insertImageCOI)(___0_coiimg, ___1_arr, ___2_coi);
	#else
	il2cppPInvokeFunc(___0_coiimg, ___1_arr, ___2_coi);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_add(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_add_m021A829FEA3AE980D61941AAACD9ABD6DD9105E1 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, intptr_t ___3_mask, int32_t ___4_dtype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_add", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_add)(___0_src1, ___1_src2, ___2_dst, ___3_mask, ___4_dtype);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst, ___3_mask, ___4_dtype);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_subtract(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_subtract_mC06F918CE8F14A0622FA227FDEF57C73AE511A82 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, intptr_t ___3_mask, int32_t ___4_dtype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_subtract", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_subtract)(___0_src1, ___1_src2, ___2_dst, ___3_mask, ___4_dtype);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst, ___3_mask, ___4_dtype);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_multiply(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_multiply_mBCCAE79C1A81D5EE8DE6EBB8D4A481777505925A (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, double ___3_scale, int32_t ___4_dtype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_multiply", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_multiply)(___0_src1, ___1_src2, ___2_dst, ___3_scale, ___4_dtype);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst, ___3_scale, ___4_dtype);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_divide(System.Double,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_divide_m16A5E9147BCE5F74458C482455198569A6950307 (double ___0_scale, intptr_t ___1_src2, intptr_t ___2_dst, int32_t ___3_dtype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (double, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_divide1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_divide1)(___0_scale, ___1_src2, ___2_dst, ___3_dtype);
	#else
	il2cppPInvokeFunc(___0_scale, ___1_src2, ___2_dst, ___3_dtype);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_divide(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_divide_m97FB87385142145E270EF19B8A5168E91EC16675 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, double ___3_scale, int32_t ___4_dtype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_divide2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_divide2)(___0_src1, ___1_src2, ___2_dst, ___3_scale, ___4_dtype);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst, ___3_scale, ___4_dtype);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_scaleAdd(System.IntPtr,System.Double,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_scaleAdd_m2AEA3C674FB931D674375D34D732D3E5DB96980C (intptr_t ___0_src1, double ___1_alpha, intptr_t ___2_src2, intptr_t ___3_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_scaleAdd", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_scaleAdd)(___0_src1, ___1_alpha, ___2_src2, ___3_dst);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_alpha, ___2_src2, ___3_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_addWeighted(System.IntPtr,System.Double,System.IntPtr,System.Double,System.Double,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_addWeighted_mE787FCE093614F72DF9F229AEF058990D1AAF906 (intptr_t ___0_src1, double ___1_alpha, intptr_t ___2_src2, double ___3_beta, double ___4_gamma, intptr_t ___5_dst, int32_t ___6_dtype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t, double, double, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_addWeighted", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_addWeighted)(___0_src1, ___1_alpha, ___2_src2, ___3_beta, ___4_gamma, ___5_dst, ___6_dtype);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_alpha, ___2_src2, ___3_beta, ___4_gamma, ___5_dst, ___6_dtype);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_convertScaleAbs(System.IntPtr,System.IntPtr,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_convertScaleAbs_m6192BB9D9E0F81738B873696AC75DEAED145A2C0 (intptr_t ___0_src, intptr_t ___1_dst, double ___2_alpha, double ___3_beta, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_convertScaleAbs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_convertScaleAbs)(___0_src, ___1_dst, ___2_alpha, ___3_beta);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_alpha, ___3_beta);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_LUT(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_LUT_m42CFBD8B2A464B9C62A3FF7D9A1BCE9E710BA80C (intptr_t ___0_src, intptr_t ___1_lut, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_LUT", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_LUT)(___0_src, ___1_lut, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_lut, ___2_dst);
	#endif

}
// OpenCvSharp.Scalar OpenCvSharp.NativeMethods::core_sum(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 NativeMethods_core_sum_mF7D0D673E2729D2970713A87BA06B05B654AAF8F (intptr_t ___0_src, const RuntimeMethod* method) 
{
	typedef Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_sum", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = reinterpret_cast<PInvokeFunc>(core_sum)(___0_src);
	#else
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = il2cppPInvokeFunc(___0_src);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_countNonZero(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_countNonZero_m9BE1BFF7ADD61150FA70B67F6D40C58166337018 (intptr_t ___0_src, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_countNonZero", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_countNonZero)(___0_src);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_src);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_findNonZero(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_findNonZero_mC191EDD3D819A2EF36F8029D030CFB67D9062776 (intptr_t ___0_src, intptr_t ___1_idx, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_findNonZero", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_findNonZero)(___0_src, ___1_idx);
	#else
	il2cppPInvokeFunc(___0_src, ___1_idx);
	#endif

}
// OpenCvSharp.Scalar OpenCvSharp.NativeMethods::core_mean(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 NativeMethods_core_mean_m1465601B34B0CD6A9A332D752E43A27B5AB0096E (intptr_t ___0_src, intptr_t ___1_mask, const RuntimeMethod* method) 
{
	typedef Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_mean", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = reinterpret_cast<PInvokeFunc>(core_mean)(___0_src, ___1_mask);
	#else
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = il2cppPInvokeFunc(___0_src, ___1_mask);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_meanStdDev_OutputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_meanStdDev_OutputArray_m6CAE63733F7F27E05FA1A0F10D006283AA153829 (intptr_t ___0_src, intptr_t ___1_mean, intptr_t ___2_stddev, intptr_t ___3_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_meanStdDev_OutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_meanStdDev_OutputArray)(___0_src, ___1_mean, ___2_stddev, ___3_mask);
	#else
	il2cppPInvokeFunc(___0_src, ___1_mean, ___2_stddev, ___3_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_meanStdDev_Scalar(System.IntPtr,OpenCvSharp.Scalar&,OpenCvSharp.Scalar&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_meanStdDev_Scalar_m9FA57DE96CBD1EF1353DA05AA3FD02D52E275027 (intptr_t ___0_src, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3* ___1_mean, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3* ___2_stddev, intptr_t ___3_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_meanStdDev_Scalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_meanStdDev_Scalar)(___0_src, ___1_mean, ___2_stddev, ___3_mask);
	#else
	il2cppPInvokeFunc(___0_src, ___1_mean, ___2_stddev, ___3_mask);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::core_norm(System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_norm_mB60840819B4EE8928C0C6ADA8EB0E85D98FE5514 (intptr_t ___0_src1, int32_t ___1_normType, intptr_t ___2_mask, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_norm1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_norm1)(___0_src1, ___1_normType, ___2_mask);
	#else
	double returnValue = il2cppPInvokeFunc(___0_src1, ___1_normType, ___2_mask);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_norm(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_norm_mCF557ED38E334BC6D6C7FD5D97737F14C203DC96 (intptr_t ___0_src1, intptr_t ___1_src2, int32_t ___2_normType, intptr_t ___3_mask, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_norm2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_norm2)(___0_src1, ___1_src2, ___2_normType, ___3_mask);
	#else
	double returnValue = il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_normType, ___3_mask);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_batchDistance(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_batchDistance_mEE8B5A1BD35D787041C36D65838B68BA9B1F0EF1 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dist, int32_t ___3_dtype, intptr_t ___4_nidx, int32_t ___5_normType, int32_t ___6_k, intptr_t ___7_mask, int32_t ___8_update, int32_t ___9_crosscheck, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, intptr_t, int32_t, int32_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_batchDistance", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_batchDistance)(___0_src1, ___1_src2, ___2_dist, ___3_dtype, ___4_nidx, ___5_normType, ___6_k, ___7_mask, ___8_update, ___9_crosscheck);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dist, ___3_dtype, ___4_nidx, ___5_normType, ___6_k, ___7_mask, ___8_update, ___9_crosscheck);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_normalize(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_normalize_m80043D83E29D66136E44FA8F26B0B527E45357C6 (intptr_t ___0_src, intptr_t ___1_dst, double ___2_alpha, double ___3_beta, int32_t ___4_normType, int32_t ___5_dtype, intptr_t ___6_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_normalize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_normalize)(___0_src, ___1_dst, ___2_alpha, ___3_beta, ___4_normType, ___5_dtype, ___6_mask);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_alpha, ___3_beta, ___4_normType, ___5_dtype, ___6_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_minMaxLoc(System.IntPtr,System.Double&,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_minMaxLoc_m3CD55F35B8F20F27A43EB4F1A1C7DF973F41043D (intptr_t ___0_src, double* ___1_minVal, double* ___2_maxVal, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double*, double*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double*) + sizeof(double*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_minMaxLoc1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_minMaxLoc1)(___0_src, ___1_minVal, ___2_maxVal);
	#else
	il2cppPInvokeFunc(___0_src, ___1_minVal, ___2_maxVal);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_minMaxLoc(System.IntPtr,System.Double&,System.Double&,OpenCvSharp.Point&,OpenCvSharp.Point&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_minMaxLoc_mD5AD71A273C80658A6E84EF31D224D34C659C35E (intptr_t ___0_src, double* ___1_minVal, double* ___2_maxVal, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___3_minLoc, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___4_maxLoc, intptr_t ___5_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double*, double*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double*) + sizeof(double*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_minMaxLoc2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_minMaxLoc2)(___0_src, ___1_minVal, ___2_maxVal, ___3_minLoc, ___4_maxLoc, ___5_mask);
	#else
	il2cppPInvokeFunc(___0_src, ___1_minVal, ___2_maxVal, ___3_minLoc, ___4_maxLoc, ___5_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_minMaxIdx(System.IntPtr,System.Double&,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_minMaxIdx_mF84DB07EF8170ABE7DEC540C055A05C31A6202E5 (intptr_t ___0_src, double* ___1_minVal, double* ___2_maxVal, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double*, double*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double*) + sizeof(double*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_minMaxIdx1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_minMaxIdx1)(___0_src, ___1_minVal, ___2_maxVal);
	#else
	il2cppPInvokeFunc(___0_src, ___1_minVal, ___2_maxVal);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_minMaxIdx(System.IntPtr,System.Double&,System.Double&,System.Int32&,System.Int32&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_minMaxIdx_m1AB1D1FE3C568F86E0B4EEA1E6C3D09D35069932 (intptr_t ___0_src, double* ___1_minVal, double* ___2_maxVal, int32_t* ___3_minIdx, int32_t* ___4_maxIdx, intptr_t ___5_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double*, double*, int32_t*, int32_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double*) + sizeof(double*) + sizeof(int32_t*) + sizeof(int32_t*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_minMaxIdx2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_minMaxIdx2)(___0_src, ___1_minVal, ___2_maxVal, ___3_minIdx, ___4_maxIdx, ___5_mask);
	#else
	il2cppPInvokeFunc(___0_src, ___1_minVal, ___2_maxVal, ___3_minIdx, ___4_maxIdx, ___5_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_reduce(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_reduce_m8C0D971460EDAE04B3C333D3D851AE1314492594 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_dim, int32_t ___3_rtype, int32_t ___4_dtype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_reduce", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_reduce)(___0_src, ___1_dst, ___2_dim, ___3_rtype, ___4_dtype);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_dim, ___3_rtype, ___4_dtype);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_merge(System.IntPtr[],System.UInt32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_merge_m614F5CB66FD6D105E63B6A09B1D72B96FFF57F04 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_mv, uint32_t ___1_count, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, uint32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(uint32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_merge", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_mv' to native representation
	intptr_t* ____0_mv_marshaled = NULL;
	if (___0_mv != NULL)
	{
		____0_mv_marshaled = reinterpret_cast<intptr_t*>((___0_mv)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_merge)(____0_mv_marshaled, ___1_count, ___2_dst);
	#else
	il2cppPInvokeFunc(____0_mv_marshaled, ___1_count, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_split(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_split_mDB81B22147DA58688E07B8521C3EB8293E0DF493 (intptr_t ___0_src, intptr_t* ___1_mv, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_split", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_split)(___0_src, ___1_mv);
	#else
	il2cppPInvokeFunc(___0_src, ___1_mv);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_mixChannels(System.IntPtr[],System.UInt32,System.IntPtr[],System.UInt32,System.Int32[],System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_mixChannels_mDEA6B52CCCCD64509E7C490990ADA79C859BB513 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_src, uint32_t ___1_nsrcs, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___2_dst, uint32_t ___3_ndsts, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___4_fromTo, uint32_t ___5_npairs, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, uint32_t, intptr_t*, uint32_t, int32_t*, uint32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(uint32_t) + sizeof(void*) + sizeof(uint32_t) + sizeof(void*) + sizeof(uint32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_mixChannels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_src' to native representation
	intptr_t* ____0_src_marshaled = NULL;
	if (___0_src != NULL)
	{
		____0_src_marshaled = reinterpret_cast<intptr_t*>((___0_src)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_dst' to native representation
	intptr_t* ____2_dst_marshaled = NULL;
	if (___2_dst != NULL)
	{
		____2_dst_marshaled = reinterpret_cast<intptr_t*>((___2_dst)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_fromTo' to native representation
	int32_t* ____4_fromTo_marshaled = NULL;
	if (___4_fromTo != NULL)
	{
		____4_fromTo_marshaled = reinterpret_cast<int32_t*>((___4_fromTo)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_mixChannels)(____0_src_marshaled, ___1_nsrcs, ____2_dst_marshaled, ___3_ndsts, ____4_fromTo_marshaled, ___5_npairs);
	#else
	il2cppPInvokeFunc(____0_src_marshaled, ___1_nsrcs, ____2_dst_marshaled, ___3_ndsts, ____4_fromTo_marshaled, ___5_npairs);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_extractChannel(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_extractChannel_m92D3AFDDA550690B729B32E20BED7D5CA4DE93E9 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_coi, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_extractChannel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_extractChannel)(___0_src, ___1_dst, ___2_coi);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_coi);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_insertChannel(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_insertChannel_m22ABB53038217028DFC4CFE1FDCDCC3EC4C173EF (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_coi, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_insertChannel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_insertChannel)(___0_src, ___1_dst, ___2_coi);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_coi);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_flip(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_flip_m93A0F40414B12806C8DAAA20DAE7AD50D435C805 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flipCode, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_flip", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_flip)(___0_src, ___1_dst, ___2_flipCode);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flipCode);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_rotate(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_rotate_mB6B020F0D5032EE805EFD41763B5F507EB53556E (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_code, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_rotate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_rotate)(___0_src, ___1_dst, ___2_code);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_code);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_repeat(System.IntPtr,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_repeat_m9EAE56496FBC959F9835D8597DFF3A5562FAD702 (intptr_t ___0_src, int32_t ___1_ny, int32_t ___2_nx, intptr_t ___3_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_repeat1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_repeat1)(___0_src, ___1_ny, ___2_nx, ___3_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_ny, ___2_nx, ___3_dst);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_repeat(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_repeat_mE2210DC1406803CC3BC3A4596BF198C89A5E6563 (intptr_t ___0_src, int32_t ___1_ny, int32_t ___2_nx, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_repeat2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_repeat2)(___0_src, ___1_ny, ___2_nx);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_src, ___1_ny, ___2_nx);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_hconcat(System.IntPtr[],System.UInt32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_hconcat_mE56352ABCC2500ABB734538A4C77963A5A5D6C44 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_src, uint32_t ___1_nsrc, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, uint32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(uint32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_hconcat1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_src' to native representation
	intptr_t* ____0_src_marshaled = NULL;
	if (___0_src != NULL)
	{
		____0_src_marshaled = reinterpret_cast<intptr_t*>((___0_src)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_hconcat1)(____0_src_marshaled, ___1_nsrc, ___2_dst);
	#else
	il2cppPInvokeFunc(____0_src_marshaled, ___1_nsrc, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_hconcat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_hconcat_m4EC6782F6EBD7C241C3E9411EF3686A144C1A676 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_hconcat2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_hconcat2)(___0_src1, ___1_src2, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_vconcat(System.IntPtr[],System.UInt32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_vconcat_m3D63216BF382146178BBED1204B7E87C8DE7A7E0 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_src, uint32_t ___1_nsrc, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, uint32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(uint32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_vconcat1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_src' to native representation
	intptr_t* ____0_src_marshaled = NULL;
	if (___0_src != NULL)
	{
		____0_src_marshaled = reinterpret_cast<intptr_t*>((___0_src)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_vconcat1)(____0_src_marshaled, ___1_nsrc, ___2_dst);
	#else
	il2cppPInvokeFunc(____0_src_marshaled, ___1_nsrc, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_vconcat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_vconcat_mCB96609522DF45B40E831475BE11CFF121D5039F (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_vconcat2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_vconcat2)(___0_src1, ___1_src2, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_bitwise_and(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_bitwise_and_mC7B900A97372AE532022A41DF104436538DCC8AE (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, intptr_t ___3_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_bitwise_and", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_bitwise_and)(___0_src1, ___1_src2, ___2_dst, ___3_mask);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst, ___3_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_bitwise_or(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_bitwise_or_m853AD355CE69872845AE85D6DAE6878B9C8ED162 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, intptr_t ___3_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_bitwise_or", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_bitwise_or)(___0_src1, ___1_src2, ___2_dst, ___3_mask);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst, ___3_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_bitwise_xor(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_bitwise_xor_m984574212D027647DF6561AC90D1433B9B4F5CF7 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, intptr_t ___3_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_bitwise_xor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_bitwise_xor)(___0_src1, ___1_src2, ___2_dst, ___3_mask);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst, ___3_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_bitwise_not(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_bitwise_not_mBAFB5D2FF52CFF89625957A140A527A72DBF8FCF (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_bitwise_not", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_bitwise_not)(___0_src, ___1_dst, ___2_mask);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_absdiff(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_absdiff_m1445AAFC38171C94D380D8691A81D10D0E24F2EB (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_absdiff", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_absdiff)(___0_src1, ___1_src2, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_inRange(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_inRange_mBB61B844CC0B847D676E2FAAD539DCB0418402E7 (intptr_t ___0_src, intptr_t ___1_lowerb, intptr_t ___2_upperb, intptr_t ___3_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_inRange_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_inRange_InputArray)(___0_src, ___1_lowerb, ___2_upperb, ___3_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_lowerb, ___2_upperb, ___3_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_inRange(System.IntPtr,OpenCvSharp.Scalar,OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_inRange_m2C21F69E669608754E605C36F7893E3E77EC1A41 (intptr_t ___0_src, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___1_lowerb, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___2_upperb, intptr_t ___3_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_inRange_Scalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_inRange_Scalar)(___0_src, ___1_lowerb, ___2_upperb, ___3_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_lowerb, ___2_upperb, ___3_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_compare(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_compare_m4B9FF4904D38927A27D196953E3B94D01E91F49B (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, int32_t ___3_cmpop, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_compare", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_compare)(___0_src1, ___1_src2, ___2_dst, ___3_cmpop);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst, ___3_cmpop);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_min1(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_min1_mC62FED9865391CA515981558ACDD1E93964F155D (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_min1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_min1)(___0_src1, ___1_src2, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_max1(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_max1_m4C92D6B3F6E62CDC8CBD65FA1773F9BA4D42E4D4 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_max1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_max1)(___0_src1, ___1_src2, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_min_MatMat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_min_MatMat_mFBF9E1E2CCFDA41020194F799E9996DF8204FB1A (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_min_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_min_MatMat)(___0_src1, ___1_src2, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_min_MatDouble(System.IntPtr,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_min_MatDouble_m09C5645FEE3BC5E2E7E06D1BFC25DB0F9B5A3BF0 (intptr_t ___0_src1, double ___1_src2, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_min_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_min_MatDouble)(___0_src1, ___1_src2, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_max_MatMat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_max_MatMat_m3AAA73293B7E78A6312382C3E1C9D63E45E99083 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_max_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_max_MatMat)(___0_src1, ___1_src2, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_max_MatDouble(System.IntPtr,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_max_MatDouble_m9727B1834C95A9799AB48A264F8078FE5B62B242 (intptr_t ___0_src1, double ___1_src2, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_max_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_max_MatDouble)(___0_src1, ___1_src2, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_sqrt(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_sqrt_m736345D44C5F93F8CAA2DFBA7C1297A2DC4C3EBD (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_sqrt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_sqrt)(___0_src, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_pow_Mat(System.IntPtr,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_pow_Mat_m52C6E145310BAD9C53BEBB1352DD7C9BD0246628 (intptr_t ___0_src, double ___1_power, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_pow_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_pow_Mat)(___0_src, ___1_power, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_power, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_exp_Mat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_exp_Mat_m56D7ABCBDC61479034E6BB64E04B8BE32A4112A7 (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_exp_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_exp_Mat)(___0_src, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_log_Mat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_log_Mat_mB0E1DB6BE34650F00E66BEFD5D14C6FDEEDCB34A (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_log_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_log_Mat)(___0_src, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::core_cubeRoot(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_core_cubeRoot_mE16CECB957E16A0007BA7598A3E9A5787873D973 (float ___0_val, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_cubeRoot", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(core_cubeRoot)(___0_val);
	#else
	float returnValue = il2cppPInvokeFunc(___0_val);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::core_fastAtan2(System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_core_fastAtan2_m169E7C78FBF01396772E7A12F18ADF57509776DE (float ___0_y, float ___1_x, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_fastAtan2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(core_fastAtan2)(___0_y, ___1_x);
	#else
	float returnValue = il2cppPInvokeFunc(___0_y, ___1_x);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_polarToCart(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_polarToCart_m846A6DBB2FF186AEF77A23B68130E963B30F31D1 (intptr_t ___0_magnitude, intptr_t ___1_angle, intptr_t ___2_x, intptr_t ___3_y, int32_t ___4_angleInDegrees, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_polarToCart", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_polarToCart)(___0_magnitude, ___1_angle, ___2_x, ___3_y, ___4_angleInDegrees);
	#else
	il2cppPInvokeFunc(___0_magnitude, ___1_angle, ___2_x, ___3_y, ___4_angleInDegrees);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_cartToPolar(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_cartToPolar_mFC63B14C6568B66D124192A3EBBFC89D0E656B7E (intptr_t ___0_x, intptr_t ___1_y, intptr_t ___2_magnitude, intptr_t ___3_angle, int32_t ___4_angleInDegrees, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_cartToPolar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_cartToPolar)(___0_x, ___1_y, ___2_magnitude, ___3_angle, ___4_angleInDegrees);
	#else
	il2cppPInvokeFunc(___0_x, ___1_y, ___2_magnitude, ___3_angle, ___4_angleInDegrees);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_phase(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_phase_mCCD5BAE2257E111374BB457EE6D96243875F8F74 (intptr_t ___0_x, intptr_t ___1_y, intptr_t ___2_angle, int32_t ___3_angleInDegrees, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_phase", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_phase)(___0_x, ___1_y, ___2_angle, ___3_angleInDegrees);
	#else
	il2cppPInvokeFunc(___0_x, ___1_y, ___2_angle, ___3_angleInDegrees);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_magnitude_Mat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_magnitude_Mat_mED66A04F8EBE06FCC13189D1F484A3CC6AE26F22 (intptr_t ___0_x, intptr_t ___1_y, intptr_t ___2_magnitude, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_magnitude_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_magnitude_Mat)(___0_x, ___1_y, ___2_magnitude);
	#else
	il2cppPInvokeFunc(___0_x, ___1_y, ___2_magnitude);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_checkRange(System.IntPtr,System.Int32,OpenCvSharp.Point&,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_checkRange_m69729D2981DBCE79940267377B42713E8139930C (intptr_t ___0_a, int32_t ___1_quiet, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___2_pos, double ___3_minVal, double ___4_maxVal, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_checkRange", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_checkRange)(___0_a, ___1_quiet, ___2_pos, ___3_minVal, ___4_maxVal);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_a, ___1_quiet, ___2_pos, ___3_minVal, ___4_maxVal);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_patchNaNs(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_patchNaNs_m19F16FA6E6607D8CAE3FF26CAB4A1AD06F5653F7 (intptr_t ___0_a, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_patchNaNs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_patchNaNs)(___0_a, ___1_val);
	#else
	il2cppPInvokeFunc(___0_a, ___1_val);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_gemm(System.IntPtr,System.IntPtr,System.Double,System.IntPtr,System.Double,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_gemm_mF2CEC704AC787E2DEC9F6C58B227DBC27DCF8657 (intptr_t ___0_src1, intptr_t ___1_src2, double ___2_alpha, intptr_t ___3_src3, double ___4_gamma, intptr_t ___5_dst, int32_t ___6_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, intptr_t, double, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_gemm", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_gemm)(___0_src1, ___1_src2, ___2_alpha, ___3_src3, ___4_gamma, ___5_dst, ___6_flags);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_alpha, ___3_src3, ___4_gamma, ___5_dst, ___6_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_mulTransposed(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_mulTransposed_mC5C45D3DFFF166EC22F1B49E9DBECE59CBB37639 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_aTa, intptr_t ___3_delta, double ___4_scale, int32_t ___5_dtype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_mulTransposed", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_mulTransposed)(___0_src, ___1_dst, ___2_aTa, ___3_delta, ___4_scale, ___5_dtype);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_aTa, ___3_delta, ___4_scale, ___5_dtype);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_transpose(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_transpose_m6A5D076BAE38E51A2E4D8EF6B0C37F9B26994CF4 (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_transpose", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_transpose)(___0_src, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_transform(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_transform_m48DB6396A062366CA137FFF33635B057A71C0EB1 (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_transform", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_transform)(___0_src, ___1_dst, ___2_m);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_m46F6A383D949E1551A7DBA77F3506C4AF8F3F5C2 (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform)(___0_src, ___1_dst, ___2_m);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform_Mat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_Mat_mA417FB2D3FF6DE37FFEDA83F2D89C32B32D7E57D (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform_Mat)(___0_src, ___1_dst, ___2_m);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform_Point2f(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_Point2f_m0DA64ED3567D2CD9D17745B46A0640522DFA90E1 (intptr_t ___0_src, int32_t ___1_srcLength, intptr_t ___2_dst, int32_t ___3_dstLength, intptr_t ___4_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform_Point2f)(___0_src, ___1_srcLength, ___2_dst, ___3_dstLength, ___4_m);
	#else
	il2cppPInvokeFunc(___0_src, ___1_srcLength, ___2_dst, ___3_dstLength, ___4_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform_Point2d(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_Point2d_m828C44F04CD2BE16DE056E6A5B77062413737A7E (intptr_t ___0_src, int32_t ___1_srcLength, intptr_t ___2_dst, int32_t ___3_dstLength, intptr_t ___4_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform_Point2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform_Point2d)(___0_src, ___1_srcLength, ___2_dst, ___3_dstLength, ___4_m);
	#else
	il2cppPInvokeFunc(___0_src, ___1_srcLength, ___2_dst, ___3_dstLength, ___4_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform_Point3f(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_Point3f_mDED1FC785F090FF7051782E88DD4F644AA010F7B (intptr_t ___0_src, int32_t ___1_srcLength, intptr_t ___2_dst, int32_t ___3_dstLength, intptr_t ___4_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform_Point3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform_Point3f)(___0_src, ___1_srcLength, ___2_dst, ___3_dstLength, ___4_m);
	#else
	il2cppPInvokeFunc(___0_src, ___1_srcLength, ___2_dst, ___3_dstLength, ___4_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_perspectiveTransform_Point3d(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_perspectiveTransform_Point3d_m5CE82FA042B0436B01E71BFF4FDE24D38850BB06 (intptr_t ___0_src, int32_t ___1_srcLength, intptr_t ___2_dst, int32_t ___3_dstLength, intptr_t ___4_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_perspectiveTransform_Point3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_perspectiveTransform_Point3d)(___0_src, ___1_srcLength, ___2_dst, ___3_dstLength, ___4_m);
	#else
	il2cppPInvokeFunc(___0_src, ___1_srcLength, ___2_dst, ___3_dstLength, ___4_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_completeSymm(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_completeSymm_m5DAB95E5CE179C0EA4BA4353903462044E26948B (intptr_t ___0_mtx, int32_t ___1_lowerToUpper, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_completeSymm", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_completeSymm)(___0_mtx, ___1_lowerToUpper);
	#else
	il2cppPInvokeFunc(___0_mtx, ___1_lowerToUpper);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_setIdentity(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_setIdentity_mB52CBF76ABC4DF4882766E0271EC0E3093E160E2 (intptr_t ___0_mtx, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___1_s, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_setIdentity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_setIdentity)(___0_mtx, ___1_s);
	#else
	il2cppPInvokeFunc(___0_mtx, ___1_s);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::core_determinant(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_determinant_mC4EAFBEA624FFA4F09FBA34D21A30A5357576DEA (intptr_t ___0_mtx, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_determinant", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_determinant)(___0_mtx);
	#else
	double returnValue = il2cppPInvokeFunc(___0_mtx);
	#endif

	return returnValue;
}
// OpenCvSharp.Scalar OpenCvSharp.NativeMethods::core_trace(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 NativeMethods_core_trace_mBAF75B9AC7C7A1790D4669BFB9543339623DAB04 (intptr_t ___0_mtx, const RuntimeMethod* method) 
{
	typedef Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_trace", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = reinterpret_cast<PInvokeFunc>(core_trace)(___0_mtx);
	#else
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = il2cppPInvokeFunc(___0_mtx);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_invert(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_invert_m1217F92680570555D2B86EB76ACC3673659B9A97 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_invert", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_invert)(___0_src, ___1_dst, ___2_flags);
	#else
	double returnValue = il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flags);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_solve(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_solve_mA6B1533FE6C0B7745842C3CBFA1BA008EFC42F82 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, int32_t ___3_flags, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_solve", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_solve)(___0_src1, ___1_src2, ___2_dst, ___3_flags);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst, ___3_flags);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_sort(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_sort_mE1301AE284ABE5B7B68DD89C012E8F2C2DCE47B6 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_sort", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_sort)(___0_src, ___1_dst, ___2_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_sortIdx(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_sortIdx_m88A8B8DD66C8E4B76D4D13472A7B3BCA5E1AFCCA (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_sortIdx", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_sortIdx)(___0_src, ___1_dst, ___2_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flags);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_solveCubic(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_solveCubic_m8152EF7C57AA8958255090100A9E6976DC916C24 (intptr_t ___0_coeffs, intptr_t ___1_roots, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_solveCubic", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_solveCubic)(___0_coeffs, ___1_roots);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_coeffs, ___1_roots);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_solvePoly(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_solvePoly_mACAF42BEBBBA072221D7915A3E5E000E94A370AA (intptr_t ___0_coeffs, intptr_t ___1_roots, int32_t ___2_maxIters, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_solvePoly", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_solvePoly)(___0_coeffs, ___1_roots, ___2_maxIters);
	#else
	double returnValue = il2cppPInvokeFunc(___0_coeffs, ___1_roots, ___2_maxIters);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_eigen(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_eigen_mA9C83E08A84B94D8C6E7E70B915F1DB3B6160750 (intptr_t ___0_src, intptr_t ___1_eigenvalues, intptr_t ___2_eigenvectors, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_eigen", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_eigen)(___0_src, ___1_eigenvalues, ___2_eigenvectors);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_src, ___1_eigenvalues, ___2_eigenvectors);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_calcCovarMatrix_Mat(System.IntPtr[],System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_calcCovarMatrix_Mat_m67192F19709A732BA04889A04065E8FBC86C51A5 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_samples, int32_t ___1_nsamples, intptr_t ___2_covar, intptr_t ___3_mean, int32_t ___4_flags, int32_t ___5_ctype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_calcCovarMatrix_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_samples' to native representation
	intptr_t* ____0_samples_marshaled = NULL;
	if (___0_samples != NULL)
	{
		____0_samples_marshaled = reinterpret_cast<intptr_t*>((___0_samples)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_calcCovarMatrix_Mat)(____0_samples_marshaled, ___1_nsamples, ___2_covar, ___3_mean, ___4_flags, ___5_ctype);
	#else
	il2cppPInvokeFunc(____0_samples_marshaled, ___1_nsamples, ___2_covar, ___3_mean, ___4_flags, ___5_ctype);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_calcCovarMatrix_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_calcCovarMatrix_InputArray_m3E8637DB3634C3C1D4948C8BF3AB2329F984E895 (intptr_t ___0_samples, intptr_t ___1_covar, intptr_t ___2_mean, int32_t ___3_flags, int32_t ___4_ctype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_calcCovarMatrix_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_calcCovarMatrix_InputArray)(___0_samples, ___1_covar, ___2_mean, ___3_flags, ___4_ctype);
	#else
	il2cppPInvokeFunc(___0_samples, ___1_covar, ___2_mean, ___3_flags, ___4_ctype);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCACompute(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCACompute_mD2CF03A6F77D73C95196B4D7EEEEE606BDE8354F (intptr_t ___0_data, intptr_t ___1_mean, intptr_t ___2_eigenvectors, int32_t ___3_maxComponents, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCACompute", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCACompute)(___0_data, ___1_mean, ___2_eigenvectors, ___3_maxComponents);
	#else
	il2cppPInvokeFunc(___0_data, ___1_mean, ___2_eigenvectors, ___3_maxComponents);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCAComputeVar(System.IntPtr,System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCAComputeVar_m7259E5CD446C27D0482A0A26D562C65837D07F93 (intptr_t ___0_data, intptr_t ___1_mean, intptr_t ___2_eigenvectors, double ___3_retainedVariance, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCAComputeVar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCAComputeVar)(___0_data, ___1_mean, ___2_eigenvectors, ___3_retainedVariance);
	#else
	il2cppPInvokeFunc(___0_data, ___1_mean, ___2_eigenvectors, ___3_retainedVariance);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCAProject(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCAProject_m8001934602A9F3A643B9BDB7587019050B3FD1CA (intptr_t ___0_data, intptr_t ___1_mean, intptr_t ___2_eigenvectors, intptr_t ___3_result, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCAProject", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCAProject)(___0_data, ___1_mean, ___2_eigenvectors, ___3_result);
	#else
	il2cppPInvokeFunc(___0_data, ___1_mean, ___2_eigenvectors, ___3_result);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCABackProject(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCABackProject_m39F1AA3F5EACC8BFAAA9208E3F242D6E71EE507B (intptr_t ___0_data, intptr_t ___1_mean, intptr_t ___2_eigenvectors, intptr_t ___3_result, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCABackProject", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCABackProject)(___0_data, ___1_mean, ___2_eigenvectors, ___3_result);
	#else
	il2cppPInvokeFunc(___0_data, ___1_mean, ___2_eigenvectors, ___3_result);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVDecomp(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVDecomp_m51703459882090D545B6EFF2F3A5B7EFC0A9E54D (intptr_t ___0_src, intptr_t ___1_w, intptr_t ___2_u, intptr_t ___3_vt, int32_t ___4_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVDecomp", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVDecomp)(___0_src, ___1_w, ___2_u, ___3_vt, ___4_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_w, ___2_u, ___3_vt, ___4_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVBackSubst(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVBackSubst_m6D24BB8C5C2DD2BCD1603709B0CF53455650BEF1 (intptr_t ___0_w, intptr_t ___1_u, intptr_t ___2_vt, intptr_t ___3_rhs, intptr_t ___4_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVBackSubst", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVBackSubst)(___0_w, ___1_u, ___2_vt, ___3_rhs, ___4_dst);
	#else
	il2cppPInvokeFunc(___0_w, ___1_u, ___2_vt, ___3_rhs, ___4_dst);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::core_Mahalanobis(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_Mahalanobis_mE7735CF420BC8B6DA9EEDF6FDFF1B61AE4CB4BA2 (intptr_t ___0_v1, intptr_t ___1_v2, intptr_t ___2_icovar, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mahalanobis", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_Mahalanobis)(___0_v1, ___1_v2, ___2_icovar);
	#else
	double returnValue = il2cppPInvokeFunc(___0_v1, ___1_v2, ___2_icovar);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_dft(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_dft_m75EFCBAFEF68C9E859C6DF1BE665D8B7478EB77B (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flags, int32_t ___3_nonzeroRows, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_dft", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_dft)(___0_src, ___1_dst, ___2_flags, ___3_nonzeroRows);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flags, ___3_nonzeroRows);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_idft(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_idft_m12D59693FCAAB6C1E2A120F31C5A1F9E9BA1B742 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flags, int32_t ___3_nonzeroRows, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_idft", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_idft)(___0_src, ___1_dst, ___2_flags, ___3_nonzeroRows);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flags, ___3_nonzeroRows);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_dct(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_dct_mEAEB4B03ACDC468E7178F7BFA48265DBD3E09491 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_dct", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_dct)(___0_src, ___1_dst, ___2_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_idct(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_idct_m06CDA5868BF731BDD22EB73F4829E44D1337E953 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_idct", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_idct)(___0_src, ___1_dst, ___2_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_mulSpectrums(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_mulSpectrums_m749B7040F33415EDEBF22E7D49105E50BCEBB7D5 (intptr_t ___0_a, intptr_t ___1_b, intptr_t ___2_c, int32_t ___3_flags, int32_t ___4_conjB, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_mulSpectrums", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_mulSpectrums)(___0_a, ___1_b, ___2_c, ___3_flags, ___4_conjB);
	#else
	il2cppPInvokeFunc(___0_a, ___1_b, ___2_c, ___3_flags, ___4_conjB);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_getOptimalDFTSize(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_getOptimalDFTSize_m10416F70EF51464779263B274611ED0CFE7C338B (int32_t ___0_vecsize, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getOptimalDFTSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_getOptimalDFTSize)(___0_vecsize);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_vecsize);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_kmeans(System.IntPtr,System.Int32,System.IntPtr,OpenCvSharp.TermCriteria,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_kmeans_m2FE8DD04FEA2A2BF135DF8044BC8C43A7B3C618E (intptr_t ___0_data, int32_t ___1_k, intptr_t ___2_bestLabels, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___3_criteria, int32_t ___4_attempts, int32_t ___5_flags, intptr_t ___6_centers, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_kmeans", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_kmeans)(___0_data, ___1_k, ___2_bestLabels, ___3_criteria, ___4_attempts, ___5_flags, ___6_centers);
	#else
	double returnValue = il2cppPInvokeFunc(___0_data, ___1_k, ___2_bestLabels, ___3_criteria, ___4_attempts, ___5_flags, ___6_centers);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_theRNG()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_theRNG_m7059233F397CF5F6423499F2023AE32B489F5C55 (const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_theRNG", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_theRNG)();
	#else
	uint64_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_randu_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randu_InputArray_mE8135F890E94D826036D92751E9DD2CB9A5A964A (intptr_t ___0_dst, intptr_t ___1_low, intptr_t ___2_high, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randu_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randu_InputArray)(___0_dst, ___1_low, ___2_high);
	#else
	il2cppPInvokeFunc(___0_dst, ___1_low, ___2_high);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_randu_Scalar(System.IntPtr,OpenCvSharp.Scalar,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randu_Scalar_m219B0EF0BD5FCE11719AB7FF7A5E5D7DC4D2D0E2 (intptr_t ___0_dst, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___1_low, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___2_high, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randu_Scalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randu_Scalar)(___0_dst, ___1_low, ___2_high);
	#else
	il2cppPInvokeFunc(___0_dst, ___1_low, ___2_high);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_randn_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randn_InputArray_m8E5449DF101087D6A091B684FAC1E37E5B0B11ED (intptr_t ___0_dst, intptr_t ___1_mean, intptr_t ___2_stddev, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randn_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randn_InputArray)(___0_dst, ___1_mean, ___2_stddev);
	#else
	il2cppPInvokeFunc(___0_dst, ___1_mean, ___2_stddev);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_randn_Scalar(System.IntPtr,OpenCvSharp.Scalar,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randn_Scalar_m569EE5535D1368401F07C64512B2A383256ECB9F (intptr_t ___0_dst, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___1_mean, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___2_stddev, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randn_Scalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randn_Scalar)(___0_dst, ___1_mean, ___2_stddev);
	#else
	il2cppPInvokeFunc(___0_dst, ___1_mean, ___2_stddev);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_randShuffle(System.IntPtr,System.Double,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randShuffle_m388A49AE0BBE903634DB98E96543702A7D3EAFD1 (intptr_t ___0_dst, double ___1_iterFactor, uint64_t* ___2_rng, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randShuffle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randShuffle)(___0_dst, ___1_iterFactor, ___2_rng);
	#else
	il2cppPInvokeFunc(___0_dst, ___1_iterFactor, ___2_rng);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_randShuffle(System.IntPtr,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_randShuffle_m931994B4DEF6313CBA0F814267347FBF5647A913 (intptr_t ___0_dst, double ___1_iterFactor, intptr_t ___2_rng, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_randShuffle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_randShuffle)(___0_dst, ___1_iterFactor, ___2_rng);
	#else
	il2cppPInvokeFunc(___0_dst, ___1_iterFactor, ___2_rng);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_write(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_write_mB3E3A03BDC8FD67E2DDF8D78ABAB6253B58E5396 (intptr_t ___0_obj, intptr_t ___1_fs, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Algorithm_write", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Algorithm_write)(___0_obj, ___1_fs);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_fs);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_read(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_read_mEA85981C881E2078406E9BD37D62F424E68F5C8C (intptr_t ___0_obj, intptr_t ___1_fn, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Algorithm_read", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Algorithm_read)(___0_obj, ___1_fn);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_fn);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_Algorithm_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Algorithm_empty_m357935738FF86629CA0DD036989E323999B365C8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Algorithm_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Algorithm_empty)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_save(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_save_m13B65EFADF4BCB791DB1FBE6012CF2A85223C73B (intptr_t ___0_obj, String_t* ___1_filename, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Algorithm_save", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_filename' to native representation
	char* ____1_filename_marshaled = NULL;
	____1_filename_marshaled = il2cpp_codegen_marshal_string(___1_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Algorithm_save)(___0_obj, ____1_filename_marshaled);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_filename_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_filename' native representation
	il2cpp_codegen_marshal_free(____1_filename_marshaled);
	____1_filename_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_Algorithm_getDefaultName(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Algorithm_getDefaultName_mCA4435D968157F330A8BA06BEF7304470C339631 (intptr_t ___0_obj, StringBuilder_t* ___1_buf, int32_t ___2_bufLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Algorithm_getDefaultName", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_buf' to native representation
	char* ____1_buf_marshaled = NULL;
	____1_buf_marshaled = il2cpp_codegen_marshal_string_builder(___1_buf);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Algorithm_getDefaultName)(___0_obj, ____1_buf_marshaled, ___2_bufLength);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_buf_marshaled, ___2_bufLength);
	#endif

	// Marshaling of parameter '___1_buf' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___1_buf, ____1_buf_marshaled);

	// Marshaling cleanup of parameter '___1_buf' native representation
	il2cpp_codegen_marshal_free(____1_buf_marshaled);
	____1_buf_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byMat_m8626BA87B32863CAAF667AF5138A6519425240DD (intptr_t ___0_mat, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byMat)(___0_mat);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byMatExpr(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byMatExpr_mBE6BEFBE8474BE7913CEBE41F1F7FF995298F3E7 (intptr_t ___0_mat, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byMatExpr)(___0_mat);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byScalar(OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byScalar_mA035230A1F1BB6657AC406C4640F985C50F13949 (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___0_val, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byScalar)(___0_val);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_val);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byDouble(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byDouble_m7FBB33A3F6BD0CE91EB9D89BB6A93446DD9CCE1C (double ___0_val, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byDouble)(___0_val);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_val);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byGpuMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byGpuMat_mB550643AEFFD6A6DE473924A3E34793705BDC7BF (intptr_t ___0_mat, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byGpuMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byGpuMat)(___0_mat);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_InputArray_new_byVectorOfMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_InputArray_new_byVectorOfMat_m2961088566378A69E1413CCC95CB0198481DC030 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_new_byVectorOfMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_new_byVectorOfMat)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_InputArray_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_InputArray_delete_m17F0605019568E1C7EA0E98B165C33C380084E1E (intptr_t ___0_ia, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_InputArray_delete)(___0_ia);
	#else
	il2cppPInvokeFunc(___0_ia);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_OutputArray_new_byMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_OutputArray_new_byMat_m8EC96ECAA4615ED8CBD61D69D5DD4BDD27628D77 (intptr_t ___0_mat, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_new_byMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_new_byMat)(___0_mat);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_OutputArray_new_byGpuMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_OutputArray_new_byGpuMat_mF9A34C271EC4186D0FAA0DD6C39491C70D148481 (intptr_t ___0_mat, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_new_byGpuMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_new_byGpuMat)(___0_mat);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_OutputArray_new_byScalar(OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_OutputArray_new_byScalar_mBA85D6FDE2E6108E7D5A57F79776D7423D6C002E (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___0_val, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_new_byScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_new_byScalar)(___0_val);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_val);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_OutputArray_new_byVectorOfMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_OutputArray_new_byVectorOfMat_m767CE632033EB75696D0BBA96773C421A7D5F23A (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_new_byVectorOfMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_new_byVectorOfMat)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_OutputArray_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_OutputArray_delete_m1697A21CEAD4FA1B5C3E1046D04974C1D35F66C3 (intptr_t ___0_oa, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_OutputArray_delete)(___0_oa);
	#else
	il2cppPInvokeFunc(___0_oa);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_InputArray_kind(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_InputArray_kind_m603DA33A16317C944DDFA4D6B458BC2D7A35A210 (intptr_t ___0_ia, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_InputArray_kind", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_InputArray_kind)(___0_ia);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ia);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_OutputArray_getMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_OutputArray_getMat_mCD4679F7C1EF146759AA135BD95EE63884D6E3A4 (intptr_t ___0_oa, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_getMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_getMat)(___0_oa);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_oa);
	#endif

	return returnValue;
}
// OpenCvSharp.Scalar OpenCvSharp.NativeMethods::core_OutputArray_getScalar(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 NativeMethods_core_OutputArray_getScalar_mA33798040ACC391FD8AAAA338299555A34537A3F (intptr_t ___0_oa, const RuntimeMethod* method) 
{
	typedef Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_getScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = reinterpret_cast<PInvokeFunc>(core_OutputArray_getScalar)(___0_oa);
	#else
	Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 returnValue = il2cppPInvokeFunc(___0_oa);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_OutputArray_getVectorOfMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_OutputArray_getVectorOfMat_m302E97CAC7468360D1C45A757E51C047035E7F92 (intptr_t ___0_oa, intptr_t ___1_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_OutputArray_getVectorOfMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_OutputArray_getVectorOfMat)(___0_oa, ___1_vector);
	#else
	il2cppPInvokeFunc(___0_oa, ___1_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_new1_m02DF158DFFC74524C893A32620DFA41EF1AB18CC (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_new2(System.String,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_new2_mE3B4F9719EBDC26A5359F89C1B6843D885F1179A (String_t* ___0_source, int32_t ___1_flags, String_t* ___2_encoding, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*, int32_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_source' to native representation
	char* ____0_source_marshaled = NULL;
	____0_source_marshaled = il2cpp_codegen_marshal_string(___0_source);

	// Marshaling of parameter '___2_encoding' to native representation
	char* ____2_encoding_marshaled = NULL;
	____2_encoding_marshaled = il2cpp_codegen_marshal_string(___2_encoding);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_new2)(____0_source_marshaled, ___1_flags, ____2_encoding_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_source_marshaled, ___1_flags, ____2_encoding_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_source' native representation
	il2cpp_codegen_marshal_free(____0_source_marshaled);
	____0_source_marshaled = NULL;

	// Marshaling cleanup of parameter '___2_encoding' native representation
	il2cpp_codegen_marshal_free(____2_encoding_marshaled);
	____2_encoding_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_newFromLegacy(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_newFromLegacy_m5E19A776010A2506367E77F26037E30C43D29991 (intptr_t ___0_fs, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_newFromLegacy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_newFromLegacy)(___0_fs);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_fs);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_delete_m1749514F590372A620A34EC91DBDF362E61142A7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_FileStorage_open(System.IntPtr,System.String,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileStorage_open_m059EB3F28EFC6D83D579AECED2D37CBD73EC8FAA (intptr_t ___0_obj, String_t* ___1_filename, int32_t ___2_flags, String_t* ___3_encoding, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, char*, int32_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(int32_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_open", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_filename' to native representation
	char* ____1_filename_marshaled = NULL;
	____1_filename_marshaled = il2cpp_codegen_marshal_string(___1_filename);

	// Marshaling of parameter '___3_encoding' to native representation
	char* ____3_encoding_marshaled = NULL;
	____3_encoding_marshaled = il2cpp_codegen_marshal_string(___3_encoding);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_open)(___0_obj, ____1_filename_marshaled, ___2_flags, ____3_encoding_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_filename_marshaled, ___2_flags, ____3_encoding_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_filename' native representation
	il2cpp_codegen_marshal_free(____1_filename_marshaled);
	____1_filename_marshaled = NULL;

	// Marshaling cleanup of parameter '___3_encoding' native representation
	il2cpp_codegen_marshal_free(____3_encoding_marshaled);
	____3_encoding_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileStorage_isOpened(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileStorage_isOpened_m7DFD067F25B9B49516F7141999C0C8B32BD46CDD (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_isOpened", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_isOpened)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_release(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_release_mEC71E9971CADA166109E6C699368028172761DAF (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_release", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_release)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_releaseAndGetString(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_releaseAndGetString_m908BAFB26174F170E428D793EA7FA3876B31BA59 (intptr_t ___0_obj, StringBuilder_t* ___1_buf, int32_t ___2_bufLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_releaseAndGetString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_buf' to native representation
	char* ____1_buf_marshaled = NULL;
	____1_buf_marshaled = il2cpp_codegen_marshal_string_builder(___1_buf);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_releaseAndGetString)(___0_obj, ____1_buf_marshaled, ___2_bufLength);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_buf_marshaled, ___2_bufLength);
	#endif

	// Marshaling of parameter '___1_buf' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___1_buf, ____1_buf_marshaled);

	// Marshaling cleanup of parameter '___1_buf' native representation
	il2cpp_codegen_marshal_free(____1_buf_marshaled);
	____1_buf_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_getFirstTopLevelNode(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_getFirstTopLevelNode_mECA7E58BAD1D3228F9101EE2BACFEDC99E171A64 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_getFirstTopLevelNode", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_getFirstTopLevelNode)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_root(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_root_m730F403F5E12E66DEB42EE9C452283806F2C2405 (intptr_t ___0_obj, int32_t ___1_streamIdx, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_root", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_root)(___0_obj, ___1_streamIdx);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_streamIdx);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_indexer(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_indexer_mF70ECBBB5961D07C37ED5B90730AF764C8663A0D (intptr_t ___0_obj, String_t* ___1_nodeName, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_indexer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_nodeName' to native representation
	char* ____1_nodeName_marshaled = NULL;
	____1_nodeName_marshaled = il2cpp_codegen_marshal_string(___1_nodeName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_indexer)(___0_obj, ____1_nodeName_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_nodeName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_nodeName' native representation
	il2cpp_codegen_marshal_free(____1_nodeName_marshaled);
	____1_nodeName_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_toLegacy(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_toLegacy_mA57E92E02661F2020C191FABE0CF89F0F39D65DE (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_toLegacy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_toLegacy)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeRaw(System.IntPtr,System.String,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeRaw_m1E464CE6966C91F4779F14EDC300979981F1EB66 (intptr_t ___0_obj, String_t* ___1_fmt, intptr_t ___2_vec, intptr_t ___3_len, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeRaw", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_fmt' to native representation
	char* ____1_fmt_marshaled = NULL;
	____1_fmt_marshaled = il2cpp_codegen_marshal_string(___1_fmt);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeRaw)(___0_obj, ____1_fmt_marshaled, ___2_vec, ___3_len);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_fmt_marshaled, ___2_vec, ___3_len);
	#endif

	// Marshaling cleanup of parameter '___1_fmt' native representation
	il2cpp_codegen_marshal_free(____1_fmt_marshaled);
	____1_fmt_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeObj(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeObj_mF3BC62295B82CB677578772B259334A009F5F291 (intptr_t ___0_obj, String_t* ___1_name, intptr_t ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeObj", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_name' to native representation
	char* ____1_name_marshaled = NULL;
	____1_name_marshaled = il2cpp_codegen_marshal_string(___1_name);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeObj)(___0_obj, ____1_name_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_name_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_name' native representation
	il2cpp_codegen_marshal_free(____1_name_marshaled);
	____1_name_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_getDefaultObjectName(System.String,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_getDefaultObjectName_m87B45337F524D61F1507CD3BFEDBDD3EDCE4FDDF (String_t* ___0_filename, StringBuilder_t* ___1_buf, int32_t ___2_bufLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_getDefaultObjectName", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_filename' to native representation
	char* ____0_filename_marshaled = NULL;
	____0_filename_marshaled = il2cpp_codegen_marshal_string(___0_filename);

	// Marshaling of parameter '___1_buf' to native representation
	char* ____1_buf_marshaled = NULL;
	____1_buf_marshaled = il2cpp_codegen_marshal_string_builder(___1_buf);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_getDefaultObjectName)(____0_filename_marshaled, ____1_buf_marshaled, ___2_bufLength);
	#else
	il2cppPInvokeFunc(____0_filename_marshaled, ____1_buf_marshaled, ___2_bufLength);
	#endif

	// Marshaling cleanup of parameter '___0_filename' native representation
	il2cpp_codegen_marshal_free(____0_filename_marshaled);
	____0_filename_marshaled = NULL;

	// Marshaling of parameter '___1_buf' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___1_buf, ____1_buf_marshaled);

	// Marshaling cleanup of parameter '___1_buf' native representation
	il2cpp_codegen_marshal_free(____1_buf_marshaled);
	____1_buf_marshaled = NULL;

}
// System.SByte* OpenCvSharp.NativeMethods::core_FileStorage_elname(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int8_t* NativeMethods_core_FileStorage_elname_m521EB95E710D151F0F21CC3E8724A2B85B2A7F7F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int8_t* (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_elname", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int8_t* returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_elname)(___0_obj);
	#else
	int8_t* returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileStorage_structs(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileStorage_structs_m141D44066E49E8E4BC02B43D8FF03912B31A287F (intptr_t ___0_obj, intptr_t* ___1_resultLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_structs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_structs)(___0_obj, ___1_resultLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_resultLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileStorage_state(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileStorage_state_m3E394577CBF9AE0CAC6691F974E10B0E498CEF3F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_state", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileStorage_state)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_int(System.IntPtr,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_int_m8CE5C43A4CBC549B128FBD1C95DB418BD24EA069 (intptr_t ___0_fs, String_t* ___1_name, int32_t ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_int", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_name' to native representation
	char* ____1_name_marshaled = NULL;
	____1_name_marshaled = il2cpp_codegen_marshal_string(___1_name);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_int)(___0_fs, ____1_name_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_fs, ____1_name_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_name' native representation
	il2cpp_codegen_marshal_free(____1_name_marshaled);
	____1_name_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_float(System.IntPtr,System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_float_m31A5B4979970CF2C2D5CAC53ACD28150818A69C1 (intptr_t ___0_fs, String_t* ___1_name, float ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_float", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_name' to native representation
	char* ____1_name_marshaled = NULL;
	____1_name_marshaled = il2cpp_codegen_marshal_string(___1_name);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_float)(___0_fs, ____1_name_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_fs, ____1_name_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_name' native representation
	il2cpp_codegen_marshal_free(____1_name_marshaled);
	____1_name_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_double(System.IntPtr,System.String,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_double_m7D32E50CE35D8AD64B1E78098465CC0C2713E94D (intptr_t ___0_fs, String_t* ___1_name, double ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_double", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_name' to native representation
	char* ____1_name_marshaled = NULL;
	____1_name_marshaled = il2cpp_codegen_marshal_string(___1_name);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_double)(___0_fs, ____1_name_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_fs, ____1_name_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_name' native representation
	il2cpp_codegen_marshal_free(____1_name_marshaled);
	____1_name_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_String(System.IntPtr,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_String_m98FF62AFB96DFCE1711C1A9C07C046F6278A7F06 (intptr_t ___0_fs, String_t* ___1_name, String_t* ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_String", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_name' to native representation
	char* ____1_name_marshaled = NULL;
	____1_name_marshaled = il2cpp_codegen_marshal_string(___1_name);

	// Marshaling of parameter '___2_value' to native representation
	char* ____2_value_marshaled = NULL;
	____2_value_marshaled = il2cpp_codegen_marshal_string(___2_value);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_String)(___0_fs, ____1_name_marshaled, ____2_value_marshaled);
	#else
	il2cppPInvokeFunc(___0_fs, ____1_name_marshaled, ____2_value_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_name' native representation
	il2cpp_codegen_marshal_free(____1_name_marshaled);
	____1_name_marshaled = NULL;

	// Marshaling cleanup of parameter '___2_value' native representation
	il2cpp_codegen_marshal_free(____2_value_marshaled);
	____2_value_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_Mat(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_Mat_mB3A57275E3FDB91925FAE232920566D91489BA2F (intptr_t ___0_fs, String_t* ___1_name, intptr_t ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_name' to native representation
	char* ____1_name_marshaled = NULL;
	____1_name_marshaled = il2cpp_codegen_marshal_string(___1_name);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_Mat)(___0_fs, ____1_name_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_fs, ____1_name_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_name' native representation
	il2cpp_codegen_marshal_free(____1_name_marshaled);
	____1_name_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_SparseMat(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_SparseMat_mA56B88E1C0CCCF3201C3C13B64AFA10B2602BBB0 (intptr_t ___0_fs, String_t* ___1_name, intptr_t ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_SparseMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_name' to native representation
	char* ____1_name_marshaled = NULL;
	____1_name_marshaled = il2cpp_codegen_marshal_string(___1_name);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_SparseMat)(___0_fs, ____1_name_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_fs, ____1_name_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_name' native representation
	il2cpp_codegen_marshal_free(____1_name_marshaled);
	____1_name_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_vectorOfKeyPoint(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_vectorOfKeyPoint_mD9BA00E63634CF3485B1C520994718E24FBCE91B (intptr_t ___0_fs, String_t* ___1_name, intptr_t ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_vectorOfKeyPoint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_name' to native representation
	char* ____1_name_marshaled = NULL;
	____1_name_marshaled = il2cpp_codegen_marshal_string(___1_name);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_vectorOfKeyPoint)(___0_fs, ____1_name_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_fs, ____1_name_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_name' native representation
	il2cpp_codegen_marshal_free(____1_name_marshaled);
	____1_name_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_write_vectorOfDMatch(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_write_vectorOfDMatch_m8987B8C0E138C2F7CD5A3175BACC8D4BDC946574 (intptr_t ___0_fs, String_t* ___1_name, intptr_t ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_write_vectorOfDMatch", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_name' to native representation
	char* ____1_name_marshaled = NULL;
	____1_name_marshaled = il2cpp_codegen_marshal_string(___1_name);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_write_vectorOfDMatch)(___0_fs, ____1_name_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_fs, ____1_name_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_name' native representation
	il2cpp_codegen_marshal_free(____1_name_marshaled);
	____1_name_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_int(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_int_m9FFA7E6FFC41D5082A83456CCC2E4E4E38C5110C (intptr_t ___0_fs, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeScalar_int", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeScalar_int)(___0_fs, ___1_value);
	#else
	il2cppPInvokeFunc(___0_fs, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_float(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_float_m22DBA8827914E663283D1E32E83A9D9FF639024B (intptr_t ___0_fs, float ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeScalar_float", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeScalar_float)(___0_fs, ___1_value);
	#else
	il2cppPInvokeFunc(___0_fs, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_double(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_double_mC3ADB21E292A92073BD327397EB43A37D73A9CDA (intptr_t ___0_fs, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeScalar_double", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeScalar_double)(___0_fs, ___1_value);
	#else
	il2cppPInvokeFunc(___0_fs, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileStorage_writeScalar_String(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileStorage_writeScalar_String_mFAC487563545263449C962881FD646B8D7763A71 (intptr_t ___0_fs, String_t* ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileStorage_writeScalar_String", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_value' to native representation
	char* ____1_value_marshaled = NULL;
	____1_value_marshaled = il2cpp_codegen_marshal_string(___1_value);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileStorage_writeScalar_String)(___0_fs, ____1_value_marshaled);
	#else
	il2cppPInvokeFunc(___0_fs, ____1_value_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_value' native representation
	il2cpp_codegen_marshal_free(____1_value_marshaled);
	____1_value_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_new1_mDBFF2D31090D143C6B64C63DC623AD6FE2C67C1A (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_new2(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_new2_m329153626054FA2768956925E70CCC0B75EA1DBF (intptr_t ___0_fs, intptr_t ___1_node, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_new2)(___0_fs, ___1_node);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_fs, ___1_node);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_new3(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_new3_m7D4D10877C05A8CF284ACCFF254C2C1D361425B6 (intptr_t ___0_node, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_new3)(___0_node);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_node);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_delete_mC988648394EB2C9FD44C97B409763CEF5D7A32FD (intptr_t ___0_node, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_delete)(___0_node);
	#else
	il2cppPInvokeFunc(___0_node);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_operatorThis_byString(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_operatorThis_byString_m0EF8A4DC23855187C34C432044563BEB276690B3 (intptr_t ___0_obj, String_t* ___1_nodeName, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_operatorThis_byString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_nodeName' to native representation
	char* ____1_nodeName_marshaled = NULL;
	____1_nodeName_marshaled = il2cpp_codegen_marshal_string(___1_nodeName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_operatorThis_byString)(___0_obj, ____1_nodeName_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_nodeName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_nodeName' native representation
	il2cpp_codegen_marshal_free(____1_nodeName_marshaled);
	____1_nodeName_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_operatorThis_byInt(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_operatorThis_byInt_mF349B3B53F57E9A32645DB4501199B860CF73968 (intptr_t ___0_obj, int32_t ___1_i, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_operatorThis_byInt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_operatorThis_byInt)(___0_obj, ___1_i);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_type(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_type_m0B5C5CAEE7067256BA740DA046AA98FCE764047F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_type", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_type)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_empty_mA1439B9A19757C66630402C28208ACF2EE631252 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_empty)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isNone(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isNone_m95398ACC6A12FF22D9FDDD61C9409888ABE3E205 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isNone", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isNone)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isSeq(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isSeq_m835C259D7F241903854D84050D54E26F4EC18B03 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isSeq", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isSeq)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isMap(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isMap_m48BCEDC20E70D73DFD8B2BEE9584AF49962CC7E7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isMap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isMap)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isInt(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isInt_mA83D2246B3ED142CC86255DC4F064EF0D364CBBA (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isInt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isInt)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isReal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isReal_m36024B38CCE2B06134947BC492952860D4A823B4 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isReal", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isReal)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isString(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isString_m496873DB899B061451B20D35D5DCA53623DE2D29 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isString)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_isNamed(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_isNamed_m885A8F062E0EB7152CBD24B95D1A1455C1AB9207 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_isNamed", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_isNamed)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_name(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_name_m5B42CFC1DC83224BB4B1859EB024EE31228A87E3 (intptr_t ___0_obj, StringBuilder_t* ___1_buf, int32_t ___2_bufLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_name", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_buf' to native representation
	char* ____1_buf_marshaled = NULL;
	____1_buf_marshaled = il2cpp_codegen_marshal_string_builder(___1_buf);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_name)(___0_obj, ____1_buf_marshaled, ___2_bufLength);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_buf_marshaled, ___2_bufLength);
	#endif

	// Marshaling of parameter '___1_buf' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___1_buf, ____1_buf_marshaled);

	// Marshaling cleanup of parameter '___1_buf' native representation
	il2cpp_codegen_marshal_free(____1_buf_marshaled);
	____1_buf_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_size(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_size_mC1DD883055B7547154EC8034FE55EF6B36B8A660 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_size", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_size)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_FileNode_toInt(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_FileNode_toInt_m6ECB9A998E6E2FB47B1A13A4B8B436DB3E93A727 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_toInt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_toInt)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::core_FileNode_toFloat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_core_FileNode_toFloat_m9C5024776EE2E81703715B67C9E6B196C88ADBEB (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_toFloat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_toFloat)(___0_obj);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_FileNode_toDouble(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_FileNode_toDouble_mFC91CC20FCF22A6F4BF5445E7075316A82ABB897 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_toDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_toDouble)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_toString(System.IntPtr,System.Text.StringBuilder,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_toString_m3B60EDF78944CAB7043783805F982E37869C72F4 (intptr_t ___0_obj, StringBuilder_t* ___1_buf, int32_t ___2_bufLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_toString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_buf' to native representation
	char* ____1_buf_marshaled = NULL;
	____1_buf_marshaled = il2cpp_codegen_marshal_string_builder(___1_buf);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_toString)(___0_obj, ____1_buf_marshaled, ___2_bufLength);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_buf_marshaled, ___2_bufLength);
	#endif

	// Marshaling of parameter '___1_buf' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___1_buf, ____1_buf_marshaled);

	// Marshaling cleanup of parameter '___1_buf' native representation
	il2cpp_codegen_marshal_free(____1_buf_marshaled);
	____1_buf_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_toMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_toMat_m740A9EC0900B2C3C19DBFF7451084982180B721F (intptr_t ___0_obj, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_toMat)(___0_obj, ___1_m);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_readRaw(System.IntPtr,System.String,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_readRaw_m3DE9075E94BB195477B31EFF3F24DF35A71FC0CE (intptr_t ___0_obj, String_t* ___1_fmt, intptr_t ___2_vec, intptr_t ___3_len, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_readRaw", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_fmt' to native representation
	char* ____1_fmt_marshaled = NULL;
	____1_fmt_marshaled = il2cpp_codegen_marshal_string(___1_fmt);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_readRaw)(___0_obj, ____1_fmt_marshaled, ___2_vec, ___3_len);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_fmt_marshaled, ___2_vec, ___3_len);
	#endif

	// Marshaling cleanup of parameter '___1_fmt' native representation
	il2cpp_codegen_marshal_free(____1_fmt_marshaled);
	____1_fmt_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::core_FileNode_readObj(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_FileNode_readObj_m087983A07A7647D9B910FB275EFB8D262159A1DD (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_readObj", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_FileNode_readObj)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_int(System.IntPtr,System.Int32&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_int_m93698EDE17EA460CE8014A763B25638246F0DD50 (intptr_t ___0_node, int32_t* ___1_value, int32_t ___2_defaultValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_int", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_int)(___0_node, ___1_value, ___2_defaultValue);
	#else
	il2cppPInvokeFunc(___0_node, ___1_value, ___2_defaultValue);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_float(System.IntPtr,System.Single&,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_float_m61F29BF4D1BABCE41A2B0BC64C1D11B058FC9755 (intptr_t ___0_node, float* ___1_value, float ___2_defaultValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_float", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_float)(___0_node, ___1_value, ___2_defaultValue);
	#else
	il2cppPInvokeFunc(___0_node, ___1_value, ___2_defaultValue);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_double(System.IntPtr,System.Double&,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_double_m561AA80DAB6BCB2F644D0971405638B10E0B8191 (intptr_t ___0_node, double* ___1_value, double ___2_defaultValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double*, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double*) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_double", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_double)(___0_node, ___1_value, ___2_defaultValue);
	#else
	il2cppPInvokeFunc(___0_node, ___1_value, ___2_defaultValue);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_String(System.IntPtr,System.Text.StringBuilder,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_String_mBD1CF3DD183B182CBCB77570F4057967987A6C31 (intptr_t ___0_node, StringBuilder_t* ___1_value, int32_t ___2_valueCapacity, String_t* ___3_defaultValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_String", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_value' to native representation
	char* ____1_value_marshaled = NULL;
	____1_value_marshaled = il2cpp_codegen_marshal_string_builder(___1_value);

	// Marshaling of parameter '___3_defaultValue' to native representation
	char* ____3_defaultValue_marshaled = NULL;
	____3_defaultValue_marshaled = il2cpp_codegen_marshal_string(___3_defaultValue);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_String)(___0_node, ____1_value_marshaled, ___2_valueCapacity, ____3_defaultValue_marshaled);
	#else
	il2cppPInvokeFunc(___0_node, ____1_value_marshaled, ___2_valueCapacity, ____3_defaultValue_marshaled);
	#endif

	// Marshaling of parameter '___1_value' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___1_value, ____1_value_marshaled);

	// Marshaling cleanup of parameter '___1_value' native representation
	il2cpp_codegen_marshal_free(____1_value_marshaled);
	____1_value_marshaled = NULL;

	// Marshaling cleanup of parameter '___3_defaultValue' native representation
	il2cpp_codegen_marshal_free(____3_defaultValue_marshaled);
	____3_defaultValue_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_Mat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_Mat_m8B0613FAC84A12CDDE37843D2425033D0E8EF9BE (intptr_t ___0_node, intptr_t ___1_mat, intptr_t ___2_defaultMat, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_Mat)(___0_node, ___1_mat, ___2_defaultMat);
	#else
	il2cppPInvokeFunc(___0_node, ___1_mat, ___2_defaultMat);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_SparseMat(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_SparseMat_mC8529D9C73B1E918A515C0C8A60D64C682D45C1F (intptr_t ___0_node, intptr_t ___1_mat, intptr_t ___2_defaultMat, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_SparseMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_SparseMat)(___0_node, ___1_mat, ___2_defaultMat);
	#else
	il2cppPInvokeFunc(___0_node, ___1_mat, ___2_defaultMat);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_vectorOfKeyPoint(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_vectorOfKeyPoint_m48BFF89CB67B778C3716E50B1DC7B324CB9DB1C9 (intptr_t ___0_node, intptr_t ___1_keypoints, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_vectorOfKeyPoint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_vectorOfKeyPoint)(___0_node, ___1_keypoints);
	#else
	il2cppPInvokeFunc(___0_node, ___1_keypoints);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_FileNode_read_vectorOfDMatch(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_FileNode_read_vectorOfDMatch_m2A0B5F2F20CA95BE0A887CC787CFAA4A1781CE68 (intptr_t ___0_node, intptr_t ___1_matches, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_FileNode_read_vectorOfDMatch", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_FileNode_read_vectorOfDMatch)(___0_node, ___1_matches);
	#else
	il2cppPInvokeFunc(___0_node, ___1_matches);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_new1_mA7B0771513AEB82EC3A701C26B090560F4BFF39A (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_new2(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_new2_mE865D6319755B4025BE5D85801E6FC5CB6220B87 (intptr_t ___0_data, intptr_t ___1_mean, int32_t ___2_flags, int32_t ___3_maxComponents, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_new2)(___0_data, ___1_mean, ___2_flags, ___3_maxComponents);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_data, ___1_mean, ___2_flags, ___3_maxComponents);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_new3(System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_new3_mB4E2295C174502F6DA4B43318E4852D4D745BCF7 (intptr_t ___0_data, intptr_t ___1_mean, int32_t ___2_flags, double ___3_retainedVariance, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_new3)(___0_data, ___1_mean, ___2_flags, ___3_retainedVariance);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_data, ___1_mean, ___2_flags, ___3_retainedVariance);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_PCA_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCA_delete_mEE10D65331961B7D1A0D5994FE60630FC81BF916 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCA_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCA_operatorThis(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCA_operatorThis_mC5A7F314BF9C51EF2A357EE354520135707529BC (intptr_t ___0_obj, intptr_t ___1_data, intptr_t ___2_mean, int32_t ___3_flags, int32_t ___4_maxComponents, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_operatorThis", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCA_operatorThis)(___0_obj, ___1_data, ___2_mean, ___3_flags, ___4_maxComponents);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_data, ___2_mean, ___3_flags, ___4_maxComponents);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_PCA_computeVar(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCA_computeVar_mA40462473CFFEBEF4765CEE57E6C1D724F8189BF (intptr_t ___0_obj, intptr_t ___1_data, intptr_t ___2_mean, int32_t ___3_flags, double ___4_retainedVariance, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_computeVar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCA_computeVar)(___0_obj, ___1_data, ___2_mean, ___3_flags, ___4_retainedVariance);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_data, ___2_mean, ___3_flags, ___4_retainedVariance);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_project(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_project_m11F1034DDC3D2F8C882C39BC1AE24E6D5AA536E0 (intptr_t ___0_obj, intptr_t ___1_vec, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_project1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_project1)(___0_obj, ___1_vec);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_vec);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_PCA_project(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCA_project_mC0CABFAC42479B8A9EBE18915763873BE95DB78D (intptr_t ___0_obj, intptr_t ___1_vec, intptr_t ___2_result, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_project2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCA_project2)(___0_obj, ___1_vec, ___2_result);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_vec, ___2_result);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_backProject(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_backProject_m80642DC88EA8F53B886CC1AC9C06B0EA58EF5E0C (intptr_t ___0_obj, intptr_t ___1_vec, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_backProject1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_backProject1)(___0_obj, ___1_vec);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_vec);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_PCA_backProject(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_PCA_backProject_m3BCEDC2B0C4F1DE7D1A751D412903319AA557B9A (intptr_t ___0_obj, intptr_t ___1_vec, intptr_t ___2_result, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_backProject2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_PCA_backProject2)(___0_obj, ___1_vec, ___2_result);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_vec, ___2_result);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_eigenvectors(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_eigenvectors_m47C4656C7533C1B1ED7E0DCD0C2D7AE49B81D866 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_eigenvectors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_eigenvectors)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_eigenvalues(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_eigenvalues_mFB16CD453AA64E245EFD0A129364B60AED988126 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_eigenvalues", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_eigenvalues)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_PCA_mean(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_PCA_mean_m4B4DF6FC4C966313141B30A14C9474631FDBFFAB (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_PCA_mean", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_PCA_mean)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_RNG_fill(System.UInt64&,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_RNG_fill_m40FD3B8B6196ABF2E548C86B4A3E2A987EC3CEF7 (uint64_t* ___0_state, intptr_t ___1_mat, int32_t ___2_distType, intptr_t ___3_a, intptr_t ___4_b, int32_t ___5_saturateRange, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (uint64_t*, intptr_t, int32_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(uint64_t*) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_RNG_fill", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_RNG_fill)(___0_state, ___1_mat, ___2_distType, ___3_a, ___4_b, ___5_saturateRange);
	#else
	il2cppPInvokeFunc(___0_state, ___1_mat, ___2_distType, ___3_a, ___4_b, ___5_saturateRange);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::core_RNG_gaussian(System.UInt64&,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_RNG_gaussian_m62704F815DC90EE77FE349919DB71952458E32FD (uint64_t* ___0_state, double ___1_sigma, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (uint64_t*, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(uint64_t*) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_RNG_gaussian", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_RNG_gaussian)(___0_state, ___1_sigma);
	#else
	double returnValue = il2cppPInvokeFunc(___0_state, ___1_sigma);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SVD_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SVD_new_m2CC1873DF3061640EB81C371280F7B4C0A7771AC (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SVD_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SVD_new(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SVD_new_m7AC1AC8CDC8DC3D3769ADCCFAB4CB512FEE9525A (intptr_t ___0_src, int32_t ___1_flags, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SVD_new2)(___0_src, ___1_flags);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_src, ___1_flags);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_SVD_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_delete_m6DFE69F0EB6E78E57738EE01D12398CF62F5538C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_operatorThis(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_operatorThis_mACEC65883B3D02FDB4B0240E1E71174EA624B348 (intptr_t ___0_obj, intptr_t ___1_src, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_operatorThis", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_operatorThis)(___0_obj, ___1_src, ___2_flags);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_src, ___2_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_backSubst(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_backSubst_m2D5ED44BC68DB3A0C572D27A02481F1DF7E5C0DA (intptr_t ___0_obj, intptr_t ___1_rhs, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_backSubst", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_backSubst)(___0_obj, ___1_rhs, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_rhs, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_static_compute(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_static_compute_mFB164F82164D1D2E1DD4E34D8F645E5B69323A67 (intptr_t ___0_src, intptr_t ___1_w, intptr_t ___2_u, intptr_t ___3_vt, int32_t ___4_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_static_compute1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_static_compute1)(___0_src, ___1_w, ___2_u, ___3_vt, ___4_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_w, ___2_u, ___3_vt, ___4_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_static_compute(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_static_compute_m9660B9A0CA74FFB8D6AF0A421033C634D25D426C (intptr_t ___0_src, intptr_t ___1_w, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_static_compute2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_static_compute2)(___0_src, ___1_w, ___2_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_w, ___2_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_static_backSubst(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_static_backSubst_m431611FEF02BC46D2C37B228456E638244BA05D6 (intptr_t ___0_w, intptr_t ___1_u, intptr_t ___2_vt, intptr_t ___3_rhs, intptr_t ___4_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_static_backSubst", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_static_backSubst)(___0_w, ___1_u, ___2_vt, ___3_rhs, ___4_dst);
	#else
	il2cppPInvokeFunc(___0_w, ___1_u, ___2_vt, ___3_rhs, ___4_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SVD_static_solveZ(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SVD_static_solveZ_m41CC37249B7C966A2F4A914A10502720C3D3DE44 (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_static_solveZ", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SVD_static_solveZ)(___0_src, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_SVD_u(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SVD_u_mFBFEC835342F51C9683355BA5C74700B5A65CC3A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_u", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SVD_u)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SVD_w(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SVD_w_m45B7AF6944060A4D6589633460529BEC49F7E109 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_w", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SVD_w)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SVD_vt(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SVD_vt_m7331B0BA6E263F6F163113A15191E19D1D32C43D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SVD_vt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SVD_vt)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_sizeof()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_sizeof_m1D86AFD8D85DAA5EE37ED46C693855D0A7770997 (const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_sizeof", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_sizeof)();
	#else
	uint64_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new1_m3F9364A1A0F531A015DBDD4D0763462DA30AD237 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new2(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new2_mE053E925D13A47C1B7F2EA3BC5C9126B40A9A287 (int32_t ___0_rows, int32_t ___1_cols, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new2)(___0_rows, ___1_cols, ___2_type);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_rows, ___1_cols, ___2_type);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new3(System.Int32,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new3_m456B530589A103D9DE388803C8C7856BE03DB2B5 (int32_t ___0_rows, int32_t ___1_cols, int32_t ___2_type, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___3_scalar, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new3)(___0_rows, ___1_cols, ___2_type, ___3_scalar);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_rows, ___1_cols, ___2_type, ___3_scalar);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new4(System.IntPtr,OpenCvSharp.Range,OpenCvSharp.Range)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new4_mED07CFCB7BF5ADDFB302BC08621E5074250DF9B2 (intptr_t ___0_mat, Range_t981FA0C4141FE7585A1C292A250B431019099C09 ___1_rowRange, Range_t981FA0C4141FE7585A1C292A250B431019099C09 ___2_colRange, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09, Range_t981FA0C4141FE7585A1C292A250B431019099C09);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Range_t981FA0C4141FE7585A1C292A250B431019099C09) + sizeof(Range_t981FA0C4141FE7585A1C292A250B431019099C09);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new4", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new4)(___0_mat, ___1_rowRange, ___2_colRange);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat, ___1_rowRange, ___2_colRange);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new5(System.IntPtr,OpenCvSharp.Range)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new5_m6F8F5D745869839AAF2176082C0309F3E0276A52 (intptr_t ___0_mat, Range_t981FA0C4141FE7585A1C292A250B431019099C09 ___1_rowRange, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Range_t981FA0C4141FE7585A1C292A250B431019099C09);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new5", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new5)(___0_mat, ___1_rowRange);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat, ___1_rowRange);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new6(System.IntPtr,OpenCvSharp.Range[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new6_mCDB97DD24462195940D5129CB8FB7BC9EA1E94E8 (intptr_t ___0_mat, RangeU5BU5D_t7A815EED0DB267C51F9F6C0507B9579B68391756* ___1_rowRange, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new6", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_rowRange' to native representation
	Range_t981FA0C4141FE7585A1C292A250B431019099C09* ____1_rowRange_marshaled = NULL;
	if (___1_rowRange != NULL)
	{
		____1_rowRange_marshaled = reinterpret_cast<Range_t981FA0C4141FE7585A1C292A250B431019099C09*>((___1_rowRange)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new6)(___0_mat, ____1_rowRange_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat, ____1_rowRange_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new7(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new7_mBF4FD3047985E1188975054D8B89EED56DB4F0A6 (intptr_t ___0_mat, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___1_roi, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new7", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new7)(___0_mat, ___1_roi);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat, ___1_roi);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new8(System.Int32,System.Int32,System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new8_mD1DAA33DB662346C877F55341AEEEC57110938DA (int32_t ___0_rows, int32_t ___1_cols, int32_t ___2_type, intptr_t ___3_data, intptr_t ___4_step, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new8", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new8)(___0_rows, ___1_cols, ___2_type, ___3_data, ___4_step);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_rows, ___1_cols, ___2_type, ___3_data, ___4_step);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new9(System.Int32,System.Int32[],System.Int32,System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new9_mBD9B9BB1AC0461F5E0F173A13DDE6B80498D1E6C (int32_t ___0_ndims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_sizes, int32_t ___2_type, intptr_t ___3_data, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___4_steps, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t, intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new9", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_sizes' to native representation
	int32_t* ____1_sizes_marshaled = NULL;
	if (___1_sizes != NULL)
	{
		____1_sizes_marshaled = reinterpret_cast<int32_t*>((___1_sizes)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_steps' to native representation
	intptr_t* ____4_steps_marshaled = NULL;
	if (___4_steps != NULL)
	{
		____4_steps_marshaled = reinterpret_cast<intptr_t*>((___4_steps)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new9)(___0_ndims, ____1_sizes_marshaled, ___2_type, ___3_data, ____4_steps_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ndims, ____1_sizes_marshaled, ___2_type, ___3_data, ____4_steps_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new9(System.Int32,System.Int32[],System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new9_m990CBA8DCBB7FCECC8458CAAFD7601B7A80241E0 (int32_t ___0_ndims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_sizes, int32_t ___2_type, intptr_t ___3_data, intptr_t ___4_steps, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new9", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_sizes' to native representation
	int32_t* ____1_sizes_marshaled = NULL;
	if (___1_sizes != NULL)
	{
		____1_sizes_marshaled = reinterpret_cast<int32_t*>((___1_sizes)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new9)(___0_ndims, ____1_sizes_marshaled, ___2_type, ___3_data, ___4_steps);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ndims, ____1_sizes_marshaled, ___2_type, ___3_data, ___4_steps);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new10(System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new10_mEAA0EB940D7905DD54AA6A388E42C165BA56A527 (int32_t ___0_ndims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_sizes, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new10", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_sizes' to native representation
	int32_t* ____1_sizes_marshaled = NULL;
	if (___1_sizes != NULL)
	{
		____1_sizes_marshaled = reinterpret_cast<int32_t*>((___1_sizes)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new10)(___0_ndims, ____1_sizes_marshaled, ___2_type);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ndims, ____1_sizes_marshaled, ___2_type);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new11(System.Int32,System.Int32[],System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new11_m5F109CE08EE9BB4E2EF6C80828DFF9B09E30AFD9 (int32_t ___0_ndims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_sizes, int32_t ___2_type, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___3_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new11", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_sizes' to native representation
	int32_t* ____1_sizes_marshaled = NULL;
	if (___1_sizes != NULL)
	{
		____1_sizes_marshaled = reinterpret_cast<int32_t*>((___1_sizes)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new11)(___0_ndims, ____1_sizes_marshaled, ___2_type, ___3_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ndims, ____1_sizes_marshaled, ___2_type, ___3_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new_FromIplImage(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new_FromIplImage_m3E01A4776B92B52B3F3E74CC876B84D573A40DE4 (intptr_t ___0_img, int32_t ___1_copyData, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new_FromIplImage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new_FromIplImage)(___0_img, ___1_copyData);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_img, ___1_copyData);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_new_FromCvMat(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_new_FromCvMat_mA5756E8C9DDCB36D9FE43450221093AF9F4B0326 (intptr_t ___0_mat, int32_t ___1_copyData, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_new_FromCvMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_new_FromCvMat)(___0_mat, ___1_copyData);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat, ___1_copyData);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_release(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_release_m79D44ADB2B83C1817394AB7643B562D282B47450 (intptr_t ___0_mat, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_release", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_release)(___0_mat);
	#else
	il2cppPInvokeFunc(___0_mat);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_delete_m0BD62DC60952FDD47360CD058B64BAA7BE532509 (intptr_t ___0_mat, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_delete)(___0_mat);
	#else
	il2cppPInvokeFunc(___0_mat);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_adjustROI(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_adjustROI_mF6611EECDA3B89135E983F570EE72AABEDEEE348 (intptr_t ___0_nativeObj, int32_t ___1_dtop, int32_t ___2_dbottom, int32_t ___3_dleft, int32_t ___4_dright, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_adjustROI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_adjustROI)(___0_nativeObj, ___1_dtop, ___2_dbottom, ___3_dleft, ___4_dright);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_nativeObj, ___1_dtop, ___2_dbottom, ___3_dleft, ___4_dright);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_assignTo1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_assignTo1_m17E26D921C1E1EE4929828D2EF0F3632061D9BA0 (intptr_t ___0_self, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_assignTo1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_assignTo1)(___0_self, ___1_m);
	#else
	il2cppPInvokeFunc(___0_self, ___1_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_assignTo2(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_assignTo2_m5190CE131B44C791FE1BBAF76C3F7ACC6A95841C (intptr_t ___0_self, intptr_t ___1_m, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_assignTo2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_assignTo2)(___0_self, ___1_m, ___2_type);
	#else
	il2cppPInvokeFunc(___0_self, ___1_m, ___2_type);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_channels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_channels_m80D1A8C9CBA8F73281A20115698D9A96A1084FBA (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_channels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_channels)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_checkVector1(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_checkVector1_mC841B4AFE41F6909C87BD31FD1DC3BA011A6C665 (intptr_t ___0_self, int32_t ___1_elemChannels, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_checkVector1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_checkVector1)(___0_self, ___1_elemChannels);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self, ___1_elemChannels);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_checkVector2(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_checkVector2_mAA18A81ECF636444C59082F28270F71A416F5629 (intptr_t ___0_self, int32_t ___1_elemChannels, int32_t ___2_depth, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_checkVector2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_checkVector2)(___0_self, ___1_elemChannels, ___2_depth);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self, ___1_elemChannels, ___2_depth);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_checkVector3(System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_checkVector3_mCE902EEA9D6F58EBEB320AB23DC70F11A5602B82 (intptr_t ___0_self, int32_t ___1_elemChannels, int32_t ___2_depth, int32_t ___3_requireContinuous, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_checkVector3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_checkVector3)(___0_self, ___1_elemChannels, ___2_depth, ___3_requireContinuous);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self, ___1_elemChannels, ___2_depth, ___3_requireContinuous);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_clone(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_clone_m67CCE9AD53C7FF2E3E7FBC07E739A20DD35AD9CD (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_clone", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_clone)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_col_toMat(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_col_toMat_m5D48B0E970E2B04F4AED13392EA78F63E5CE4144 (intptr_t ___0_self, int32_t ___1_x, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_col_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_col_toMat)(___0_self, ___1_x);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_x);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_col_toMatExpr(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_col_toMatExpr_mB297A535D1F366E994228AC58393A028602FCA92 (intptr_t ___0_self, int32_t ___1_x, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_col_toMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_col_toMatExpr)(___0_self, ___1_x);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_x);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_cols(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_cols_mF630EFD8705D48EC2A3C1F5E8947152D9A0B52F6 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_cols", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_cols)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_colRange_toMat(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_colRange_toMat_mC8C95886632FB96B6BC6BF81014FE924D465DBB6 (intptr_t ___0_self, int32_t ___1_startCol, int32_t ___2_endCol, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_colRange_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_colRange_toMat)(___0_self, ___1_startCol, ___2_endCol);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_startCol, ___2_endCol);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_colRange_toMatExpr(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_colRange_toMatExpr_mB512A81773817F3F984A0F0E9E65E46EE2BCD787 (intptr_t ___0_self, int32_t ___1_startCol, int32_t ___2_endCol, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_colRange_toMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_colRange_toMatExpr)(___0_self, ___1_startCol, ___2_endCol);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_startCol, ___2_endCol);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_dims(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_dims_mE2720402A472438BE500E9B5217B2618F23D8B81 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_dims", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_dims)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_convertTo(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_convertTo_m5D182482BF66D91AF41BB72F90B3347AA38477FC (intptr_t ___0_self, intptr_t ___1_m, int32_t ___2_rtype, double ___3_alpha, double ___4_beta, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_convertTo", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_convertTo)(___0_self, ___1_m, ___2_rtype, ___3_alpha, ___4_beta);
	#else
	il2cppPInvokeFunc(___0_self, ___1_m, ___2_rtype, ___3_alpha, ___4_beta);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_copyTo(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_copyTo_m06F4B21063CE9B970BDCC2C5FF84F254BDD8301D (intptr_t ___0_self, intptr_t ___1_m, intptr_t ___2_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_copyTo", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_copyTo)(___0_self, ___1_m, ___2_mask);
	#else
	il2cppPInvokeFunc(___0_self, ___1_m, ___2_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_create(System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_create_m0D1D3867F04D5420679AB1456EA5384D3854F535 (intptr_t ___0_self, int32_t ___1_rows, int32_t ___2_cols, int32_t ___3_type, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_create1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_create1)(___0_self, ___1_rows, ___2_cols, ___3_type);
	#else
	il2cppPInvokeFunc(___0_self, ___1_rows, ___2_cols, ___3_type);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_create(System.IntPtr,System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_create_m7F933560773A0A7C649BDD742E75DE54D701F7C0 (intptr_t ___0_self, int32_t ___1_ndims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_sizes, int32_t ___3_type, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_create2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_sizes' to native representation
	int32_t* ____2_sizes_marshaled = NULL;
	if (___2_sizes != NULL)
	{
		____2_sizes_marshaled = reinterpret_cast<int32_t*>((___2_sizes)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_create2)(___0_self, ___1_ndims, ____2_sizes_marshaled, ___3_type);
	#else
	il2cppPInvokeFunc(___0_self, ___1_ndims, ____2_sizes_marshaled, ___3_type);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_cross(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_cross_mA69E6828A8957B3C9264107A068D9DE69D036148 (intptr_t ___0_self, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_cross", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_cross)(___0_self, ___1_m);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_m);
	#endif

	return returnValue;
}
// System.Byte* OpenCvSharp.NativeMethods::core_Mat_data(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint8_t* NativeMethods_core_Mat_data_m87C91F8065B395DD0E89E723F3DC4C87A2131E38 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef uint8_t* (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_data", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint8_t* returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_data)(___0_self);
	#else
	uint8_t* returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_datastart(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_datastart_m2621C090D07015C8D6C2DD99FC44F79073C47CBE (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_datastart", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_datastart)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_dataend(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_dataend_mA1394E541513E6B95E47EAFBBEE35F5170165CF8 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_dataend", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_dataend)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_datalimit(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_datalimit_m46D411EB515E9C5822FDB3BA431A520B4DF34667 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_datalimit", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_datalimit)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_depth(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_depth_mF9C70D385E672341BEA21B6901C40B746D11FD5D (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_depth", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_depth)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_diag(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_diag_m9EE2EE364F7C2BFC7F75D26FDDF2E82534272C3F (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_diag1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_diag1)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_diag(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_diag_m9937D500F963E6F5C606D37AADCCE613C85539D3 (intptr_t ___0_self, int32_t ___1_d, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_diag2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_diag2)(___0_self, ___1_d);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_d);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_Mat_dot(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_Mat_dot_mE671CC5E12FB5642EDE1D5446B0B98B491506848 (intptr_t ___0_self, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_dot", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_dot)(___0_self, ___1_m);
	#else
	double returnValue = il2cppPInvokeFunc(___0_self, ___1_m);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_elemSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_elemSize_m14C5DA9B0B51A241F0086567DE7DF3891AA34FC6 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_elemSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_elemSize)(___0_self);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_elemSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_elemSize1_m333907608A2A7F36F46169649141CBB51FE5B484 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_elemSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_elemSize1)(___0_self);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_empty_m97020DBB430FF64555C81B6DA64C87E2295F3F3B (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_empty)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_eye(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_eye_m39A3F727E7C1589F579C17EF1E3F816F9C956D4F (int32_t ___0_rows, int32_t ___1_cols, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_eye", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_eye)(___0_rows, ___1_cols, ___2_type);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_rows, ___1_cols, ___2_type);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_inv1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_inv1_mAF202784A29B9721456AC1D58C44449A5FDFA886 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_inv1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_inv1)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_inv2(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_inv2_mE3664C709577E43664E441483ADA6886ACD0C913 (intptr_t ___0_self, int32_t ___1_method, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_inv2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_inv2)(___0_self, ___1_method);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_method);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_isContinuous(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_isContinuous_m6051F4C89135A316D0BFD44BC33D620EF93ADD35 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_isContinuous", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_isContinuous)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_isSubmatrix(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_isSubmatrix_m4AFDE270B580226138F15C83B50C810029EC6D8F (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_isSubmatrix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_isSubmatrix)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_locateROI(System.IntPtr,OpenCvSharp.Size&,OpenCvSharp.Point&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_locateROI_m50DF40552A710E58E38336636B46FF4EF9D70542 (intptr_t ___0_self, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31* ___1_wholeSize, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___2_ofs, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_locateROI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_locateROI)(___0_self, ___1_wholeSize, ___2_ofs);
	#else
	il2cppPInvokeFunc(___0_self, ___1_wholeSize, ___2_ofs);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_mul1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_mul1_m9F4D8DEB38263C05C3B99FFABCB6D36620FA289D (intptr_t ___0_self, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_mul1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_mul1)(___0_self, ___1_m);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_m);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_mul2(System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_mul2_m2E00BFD7DDD1F2F8C309ED101CE853B48675587C (intptr_t ___0_self, intptr_t ___1_m, double ___2_scale, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_mul2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_mul2)(___0_self, ___1_m, ___2_scale);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_m, ___2_scale);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ones1(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ones1_m8369338F984BD03AFA9BBD603B865009B8F0A4C7 (int32_t ___0_rows, int32_t ___1_cols, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ones1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ones1)(___0_rows, ___1_cols, ___2_type);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_rows, ___1_cols, ___2_type);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ones2(System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ones2_m07239C6CC734EF85DAF884A80E9696419D2E8D7E (int32_t ___0_ndims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_sz, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ones2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_sz' to native representation
	int32_t* ____1_sz_marshaled = NULL;
	if (___1_sz != NULL)
	{
		____1_sz_marshaled = reinterpret_cast<int32_t*>((___1_sz)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ones2)(___0_ndims, ____1_sz_marshaled, ___2_type);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ndims, ____1_sz_marshaled, ___2_type);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_reshape1(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_reshape1_m9F69B1B688C3348AE20894390C2E218A085C29B2 (intptr_t ___0_self, int32_t ___1_cn, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_reshape1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_reshape1)(___0_self, ___1_cn);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_cn);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_reshape2(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_reshape2_mBB065A52E329B59E918B856291B9A9B209BE9C68 (intptr_t ___0_self, int32_t ___1_cn, int32_t ___2_rows, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_reshape2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_reshape2)(___0_self, ___1_cn, ___2_rows);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_cn, ___2_rows);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_reshape3(System.IntPtr,System.Int32,System.Int32,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_reshape3_mB2FBACEF542AF92EBE6F93034F9935D14B2DD128 (intptr_t ___0_self, int32_t ___1_cn, int32_t ___2_newndims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_newsz, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_reshape3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_newsz' to native representation
	int32_t* ____3_newsz_marshaled = NULL;
	if (___3_newsz != NULL)
	{
		____3_newsz_marshaled = reinterpret_cast<int32_t*>((___3_newsz)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_reshape3)(___0_self, ___1_cn, ___2_newndims, ____3_newsz_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_cn, ___2_newndims, ____3_newsz_marshaled);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_rows(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_rows_m18441BF6F420F5F2FB99AE93FD0F9164CFA761E2 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_rows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_rows)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_row_toMat(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_row_toMat_mDF6C23D501A11EA7BA0BC2CAE488FD3143137C5B (intptr_t ___0_self, int32_t ___1_y, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_row_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_row_toMat)(___0_self, ___1_y);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_y);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_row_toMatExpr(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_row_toMatExpr_m3C3A1403CDD341C0B41F87753CD3DAF7E6F006DB (intptr_t ___0_self, int32_t ___1_y, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_row_toMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_row_toMatExpr)(___0_self, ___1_y);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_y);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_rowRange_toMat(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_rowRange_toMat_m35CB80FE89AB5398489A64F6E291D61EDDE0840F (intptr_t ___0_self, int32_t ___1_startRow, int32_t ___2_endRow, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_rowRange_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_rowRange_toMat)(___0_self, ___1_startRow, ___2_endRow);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_startRow, ___2_endRow);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_rowRange_toMatExpr(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_rowRange_toMatExpr_m21E824E8E5190E480CD3BA49B272A9BA8EAFECD6 (intptr_t ___0_self, int32_t ___1_startRow, int32_t ___2_endRow, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_rowRange_toMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_rowRange_toMatExpr)(___0_self, ___1_startRow, ___2_endRow);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_startRow, ___2_endRow);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_setTo_Scalar(System.IntPtr,OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_setTo_Scalar_mE12E03490D5DC709B5F3ADC4B0CB730FA7E2B212 (intptr_t ___0_self, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___1_value, intptr_t ___2_mask, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_setTo_Scalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_setTo_Scalar)(___0_self, ___1_value, ___2_mask);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_value, ___2_mask);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_setTo_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_setTo_InputArray_m7E381C807B1CDDE2B8BEAFB717C2EB256A506887 (intptr_t ___0_self, intptr_t ___1_value, intptr_t ___2_mask, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_setTo_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_setTo_InputArray)(___0_self, ___1_value, ___2_mask);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_value, ___2_mask);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::core_Mat_size(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_core_Mat_size_mFAFAA4A77BDD9D0A4F3A5786C25ED70DAD4FCC01 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_size", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_size)(___0_self);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_sizeAt(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_sizeAt_mE1472456961725F90D49F5D05789EF470BDF9E63 (intptr_t ___0_self, int32_t ___1_i, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_sizeAt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_sizeAt)(___0_self, ___1_i);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self, ___1_i);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_step1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_step1_m7D99722210F170F6324F4084338F061E63ED0C23 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_step11", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_step11)(___0_self);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_step1(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_step1_m6B85C3110D921BB7CC92C12F3E49D855277CB9B8 (intptr_t ___0_self, int32_t ___1_i, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_step12", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_step12)(___0_self, ___1_i);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___0_self, ___1_i);
	#endif

	return returnValue;
}
// System.Int64 OpenCvSharp.NativeMethods::core_Mat_step(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t NativeMethods_core_Mat_step_m53DDE04336F2BC3F97BBE61FBF906EA6F5A9F65C (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int64_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_step", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_step)(___0_self);
	#else
	int64_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_stepAt(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_stepAt_mCEB3AE8FB0547094B428A51A1B7CA5C7C26901DB (intptr_t ___0_self, int32_t ___1_i, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_stepAt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_stepAt)(___0_self, ___1_i);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___0_self, ___1_i);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_subMat1(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_subMat1_m481C2B26124E24B83C9D827763A34196E02CFB5F (intptr_t ___0_self, int32_t ___1_rowStart, int32_t ___2_rowEnd, int32_t ___3_colStart, int32_t ___4_colEnd, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_subMat1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_subMat1)(___0_self, ___1_rowStart, ___2_rowEnd, ___3_colStart, ___4_colEnd);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_rowStart, ___2_rowEnd, ___3_colStart, ___4_colEnd);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_subMat2(System.IntPtr,System.Int32,OpenCvSharp.Range[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_subMat2_mEB96369C92BFEB829AAA57279DEF88EDCDBD4B69 (intptr_t ___0_self, int32_t ___1_nRanges, RangeU5BU5D_t7A815EED0DB267C51F9F6C0507B9579B68391756* ___2_ranges, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, Range_t981FA0C4141FE7585A1C292A250B431019099C09*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_subMat2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_ranges' to native representation
	Range_t981FA0C4141FE7585A1C292A250B431019099C09* ____2_ranges_marshaled = NULL;
	if (___2_ranges != NULL)
	{
		____2_ranges_marshaled = reinterpret_cast<Range_t981FA0C4141FE7585A1C292A250B431019099C09*>((___2_ranges)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_subMat2)(___0_self, ___1_nRanges, ____2_ranges_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_nRanges, ____2_ranges_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_t(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_t_mFB75605539EB3F9B4032448630FE8B88D476BFCB (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_t", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_t)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_Mat_total(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_Mat_total_m4962391606BBBB8AE54A2EA32C6DB5567D1D4EBA (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_total", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_total)(___0_self);
	#else
	uint64_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_type(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_type_m174B6506782F0117DB1CA71D743B4D45A7BBA07E (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_type", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_type)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_zeros1(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_zeros1_m6F1B0177DDAEEFD4964C5B8AE1A29D4FD51E4580 (int32_t ___0_rows, int32_t ___1_cols, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_zeros1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_zeros1)(___0_rows, ___1_cols, ___2_type);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_rows, ___1_cols, ___2_type);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_zeros2(System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_zeros2_m410792E6A69E87BE440E6873565B69EE0A6A0070 (int32_t ___0_ndims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_sz, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_zeros2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_sz' to native representation
	int32_t* ____1_sz_marshaled = NULL;
	if (___1_sz != NULL)
	{
		____1_sz_marshaled = reinterpret_cast<int32_t*>((___1_sz)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_zeros2)(___0_ndims, ____1_sz_marshaled, ___2_type);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ndims, ____1_sz_marshaled, ___2_type);
	#endif

	return returnValue;
}
// System.SByte* OpenCvSharp.NativeMethods::core_Mat_dump(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int8_t* NativeMethods_core_Mat_dump_m4B1BC1F8351180AB83DC8823E952ECA9C514F11F (intptr_t ___0_self, String_t* ___1_format, const RuntimeMethod* method) 
{
	typedef int8_t* (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_dump", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_format' to native representation
	char* ____1_format_marshaled = NULL;
	____1_format_marshaled = il2cpp_codegen_marshal_string(___1_format);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int8_t* returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_dump)(___0_self, ____1_format_marshaled);
	#else
	int8_t* returnValue = il2cppPInvokeFunc(___0_self, ____1_format_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_format' native representation
	il2cpp_codegen_marshal_free(____1_format_marshaled);
	____1_format_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_dump_delete(System.SByte*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_dump_delete_m49C744B157C37A8D934C191E105A36516DEDFD59 (int8_t* ___0_buf, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (int8_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int8_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_dump_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_dump_delete)(___0_buf);
	#else
	il2cppPInvokeFunc(___0_buf);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ptr1d(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ptr1d_m1230FAD9A9BF684763B0446B604D38FE1BF47BF7 (intptr_t ___0_self, int32_t ___1_i0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ptr1d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ptr1d)(___0_self, ___1_i0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_i0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ptr2d(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ptr2d_mDFF6F457A377E33B300FF2627967E4029D659F21 (intptr_t ___0_self, int32_t ___1_i0, int32_t ___2_i1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ptr2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ptr2d)(___0_self, ___1_i0, ___2_i1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_i0, ___2_i1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ptr3d(System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ptr3d_m10CAB289CF53477FA3D8E264CAFC56BC2DF55BC8 (intptr_t ___0_self, int32_t ___1_i0, int32_t ___2_i1, int32_t ___3_i2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ptr3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ptr3d)(___0_self, ___1_i0, ___2_i1, ___3_i2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_i0, ___2_i1, ___3_i2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_ptrnd(System.IntPtr,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_ptrnd_m52C9E0BB7549AA70E865C7C4888DDB761C5AB6F0 (intptr_t ___0_self, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_idx, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_ptrnd", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_idx' to native representation
	int32_t* ____1_idx_marshaled = NULL;
	if (___1_idx != NULL)
	{
		____1_idx_marshaled = reinterpret_cast<int32_t*>((___1_idx)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_ptrnd)(___0_self, ____1_idx_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ____1_idx_marshaled);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_assignment_FromMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_assignment_FromMat_m50205E899801E9B95617C4987181E71C080C637C (intptr_t ___0_self, intptr_t ___1_newMat, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_assignment_FromMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_assignment_FromMat)(___0_self, ___1_newMat);
	#else
	il2cppPInvokeFunc(___0_self, ___1_newMat);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_assignment_FromMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_assignment_FromMatExpr_mC02BB6E8C192A6435FC4593EA66C56F438E52767 (intptr_t ___0_self, intptr_t ___1_newMatExpr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_assignment_FromMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_assignment_FromMatExpr)(___0_self, ___1_newMatExpr);
	#else
	il2cppPInvokeFunc(___0_self, ___1_newMatExpr);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_assignment_FromScalar(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_assignment_FromScalar_m8CD275ABA90C09D65CCB4519F5FACBC1C83C5DA8 (intptr_t ___0_self, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___1_scalar, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_assignment_FromScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_assignment_FromScalar)(___0_self, ___1_scalar);
	#else
	il2cppPInvokeFunc(___0_self, ___1_scalar);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_IplImage(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_IplImage_mD729E970FA21CF28C311CAC80E34379DB5915C24 (intptr_t ___0_self, intptr_t ___1_outImage, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_IplImage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_IplImage)(___0_self, ___1_outImage);
	#else
	il2cppPInvokeFunc(___0_self, ___1_outImage);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_IplImage_alignment(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_IplImage_alignment_m0BC565BF91D60D4B63A2A053CF943A6B733FB848 (intptr_t ___0_self, intptr_t* ___1_outImage, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_IplImage_alignment", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_IplImage_alignment)(___0_self, ___1_outImage);
	#else
	il2cppPInvokeFunc(___0_self, ___1_outImage);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_CvMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_CvMat_m615CCE353762E16806AAEC0D1A291172EB5BAF22 (intptr_t ___0_self, intptr_t ___1_outMat, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_CvMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_CvMat)(___0_self, ___1_outMat);
	#else
	il2cppPInvokeFunc(___0_self, ___1_outMat);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorUnaryMinus(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorUnaryMinus_m5F5DF9963154E4AC7A22349035270B83D75C9222 (intptr_t ___0_mat, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorUnaryMinus", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorUnaryMinus)(___0_mat);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAdd_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAdd_MatMat_m00D58D9482DDEB0A6905E56569DE462771569F0A (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAdd_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAdd_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAdd_MatScalar(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAdd_MatScalar_m94EB9BF9DC319640E3FABC518D4D8B8DC4B3D012 (intptr_t ___0_a, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAdd_MatScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAdd_MatScalar)(___0_a, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAdd_ScalarMat(OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAdd_ScalarMat_m8E5098ADD09C24144BD36FB702DDEBA0E3267C94 (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___0_s, intptr_t ___1_a, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAdd_ScalarMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAdd_ScalarMat)(___0_s, ___1_a);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_a);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorMinus_Mat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorMinus_Mat_m2F50772811881CC0EAE3A5627E55E9674F473628 (intptr_t ___0_a, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorMinus_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorMinus_Mat)(___0_a);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorSubtract_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorSubtract_MatMat_m16F6AD8550B80A27D7AC6F6B2C4E052DAD40A9ED (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorSubtract_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorSubtract_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorSubtract_MatScalar(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorSubtract_MatScalar_m68C4B0B39AC42B6EDB137B7AE5ADBB1DFA07989A (intptr_t ___0_a, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorSubtract_MatScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorSubtract_MatScalar)(___0_a, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorSubtract_ScalarMat(OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorSubtract_ScalarMat_m60B722DD0F56082B1DB751FF235C625100C6B59F (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___0_s, intptr_t ___1_a, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorSubtract_ScalarMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorSubtract_ScalarMat)(___0_s, ___1_a);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_a);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorMultiply_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorMultiply_MatMat_m0AAE0873BF799B0E15F2AA87F2B721298D1C08FA (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorMultiply_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorMultiply_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorMultiply_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorMultiply_MatDouble_m85BF7F93906DDA8564F3061C347668D8AE326640 (intptr_t ___0_a, double ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorMultiply_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorMultiply_MatDouble)(___0_a, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorMultiply_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorMultiply_DoubleMat_m9D3C8F3B4DD5F225CCCB0E572879B3EB9B30255F (double ___0_s, intptr_t ___1_a, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorMultiply_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorMultiply_DoubleMat)(___0_s, ___1_a);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_a);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorDivide_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorDivide_MatMat_m51A57B00A2106822533EE46853F9FE8132307FFE (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorDivide_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorDivide_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorDivide_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorDivide_MatDouble_m7D664A123A66593D275897472A7D358074D4201F (intptr_t ___0_a, double ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorDivide_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorDivide_MatDouble)(___0_a, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorDivide_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorDivide_DoubleMat_mA1402D805BBC63B7A4E2C3EC4099C015BFF80FAC (double ___0_s, intptr_t ___1_a, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorDivide_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorDivide_DoubleMat)(___0_s, ___1_a);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_a);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAnd_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAnd_MatMat_mF907E672E9FAB496FEEA2F9DBB31AC24F0E985C0 (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAnd_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAnd_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAnd_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAnd_MatDouble_mF9BB29CDE6538266654C2295AF256649B238A113 (intptr_t ___0_a, double ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAnd_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAnd_MatDouble)(___0_a, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorAnd_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorAnd_DoubleMat_m4F0F0AE0B3DB0DC326FEF2082CD036C600F5A740 (double ___0_s, intptr_t ___1_a, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorAnd_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorAnd_DoubleMat)(___0_s, ___1_a);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_a);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorOr_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorOr_MatMat_m25BA4BB271D5E09F7A5E97E1E7D262A3D149E5F0 (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorOr_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorOr_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorOr_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorOr_MatDouble_m9CD1E77876BC82531D7A8612BE6824A763B41E2C (intptr_t ___0_a, double ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorOr_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorOr_MatDouble)(___0_a, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorOr_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorOr_DoubleMat_mC8A5F6D6B80B72C474B05153AC448AA142E28274 (double ___0_s, intptr_t ___1_a, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorOr_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorOr_DoubleMat)(___0_s, ___1_a);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_a);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorXor_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorXor_MatMat_m07F5865E105F439DCC6470FB3C8A59691EF630A3 (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorXor_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorXor_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorXor_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorXor_MatDouble_m78B50C825112F7BBF91201999002C9C74EF8D5EF (intptr_t ___0_a, double ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorXor_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorXor_MatDouble)(___0_a, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorXor_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorXor_DoubleMat_mBDFEA87C207638985C077467AF6CD1B992CB50DF (double ___0_s, intptr_t ___1_a, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorXor_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorXor_DoubleMat)(___0_s, ___1_a);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_a);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorNot(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorNot_mED8949410CA665A347AF413088A3533E1784333C (intptr_t ___0_a, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorNot", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorNot)(___0_a);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLT_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLT_MatMat_m3B5D7CE8BEB3ACBEDD40A3D835C4808C97C457A3 (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLT_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLT_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLT_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLT_DoubleMat_m5BF11E716BBA861B8091886F202AD260EF610993 (double ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLT_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLT_DoubleMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLT_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLT_MatDouble_m2E70116AA38729187D9C533AAFBD4666954835D1 (intptr_t ___0_a, double ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLT_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLT_MatDouble)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLE_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLE_MatMat_m3B9B476D0975882282E1FBC6EA718BB590D00E1A (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLE_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLE_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLE_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLE_DoubleMat_mC30401DF10B9F0320245CA0EF369B6777BAB7205 (double ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLE_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLE_DoubleMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorLE_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorLE_MatDouble_mF07D85F308D1ADE5C2BC773D9D063BA4D3A3570A (intptr_t ___0_a, double ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorLE_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorLE_MatDouble)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGT_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGT_MatMat_mA34028CE36949B84A91195DF130BCC38E889E9D8 (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGT_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGT_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGT_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGT_DoubleMat_m04A88F73F46B4A89A515B69BCA2FD14113B4E983 (double ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGT_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGT_DoubleMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGT_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGT_MatDouble_m34453CED5E8610039D18EEB1F09BEB595F27D6FE (intptr_t ___0_a, double ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGT_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGT_MatDouble)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGE_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGE_MatMat_m31CCDC90061209E79BCDF3BEBA8533229EA19FB5 (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGE_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGE_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGE_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGE_DoubleMat_mC5F7CD0D7D5F01EED20EF44F73DAC904678EF4AC (double ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGE_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGE_DoubleMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorGE_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorGE_MatDouble_m4EB80A2D98C3D9E5E6634BCA5738BED3E844C63C (intptr_t ___0_a, double ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorGE_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorGE_MatDouble)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorEQ_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorEQ_MatMat_mE473CAD57D44D6816CFC49B6DEACA47FECE14DCD (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorEQ_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorEQ_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorEQ_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorEQ_DoubleMat_m096FDD61A327DF6CD30C7774AF254400C881E7CC (double ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorEQ_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorEQ_DoubleMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorEQ_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorEQ_MatDouble_mA8776E7399B6958ED05753171DECEF5E247CD719 (intptr_t ___0_a, double ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorEQ_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorEQ_MatDouble)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorNE_MatMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorNE_MatMat_m0E925011BFE24DDD4F3D1A909BA6334782CBFBA6 (intptr_t ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorNE_MatMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorNE_MatMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorNE_DoubleMat(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorNE_DoubleMat_mDC08AA4059A59A255A5CB5B3CB65D26A6E78E6ED (double ___0_a, intptr_t ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorNE_DoubleMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorNE_DoubleMat)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_Mat_operatorNE_MatDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_Mat_operatorNE_MatDouble_mB59CF70B29519BE8FBAD1E17C2784B8182E41631 (intptr_t ___0_a, double ___1_b, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_operatorNE_MatDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_operatorNE_MatDouble)(___0_a, ___1_b);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_a, ___1_b);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_abs_Mat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_abs_Mat_m64929112A3802D2F1C6265EA33A5CD589A961820 (intptr_t ___0_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_abs_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_abs_Mat)(___0_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetB(System.IntPtr,System.Int32,System.Int32,System.Byte[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetB_m90F68742DAE9F7EEE616BEDBC5D62EF0C5DE4B4F (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, uint8_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetB", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	uint8_t* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<uint8_t*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetB)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetB(System.IntPtr,System.Int32,System.Int32,System.Byte[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetB_mF413FCC4363467D486566D149DF5403FD7E2BFAB (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, ByteU5BU2CU5D_tFF0F8305C018904B90DCD1740962BABBC458B638* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Byte[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetS(System.IntPtr,System.Int32,System.Int32,System.Int16[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetS_mEE78367A84F502737F6761D8A17F58FE4A27D504 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Int16U5BU5D_t8175CE8DD9C9F9FB0CF4F58E45BC570575B43CFB* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int16_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetS", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	int16_t* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<int16_t*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetS)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetS(System.IntPtr,System.Int32,System.Int32,System.Int16[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetS_mC28ECDB5F96ED9940D5DDBE0F525D31940DE5A9E (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Int16U5BU2CU5D_tA1085F28F76441E5B3C4F55200C853889884825E* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Int16[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetS(System.IntPtr,System.Int32,System.Int32,System.UInt16[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetS_m899B967F446B7B00B09F91872B8551C1CD9B567F (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, UInt16U5BU5D_tEB7C42D811D999D2AA815BADC3FCCDD9C67B3F83* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, uint16_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetS", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	uint16_t* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<uint16_t*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetS)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetS(System.IntPtr,System.Int32,System.Int32,System.UInt16[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetS_mD6AE65746DB64A4582A0EB5E216BB854413EEE83 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, UInt16U5BU2CU5D_t2C918D9FF94D8CF06CE395FB8C6B931FA8B8AE1B* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.UInt16[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetI(System.IntPtr,System.Int32,System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetI_mCBB8510B8B0D57D99AD9E45C73E5D11AEF428D5A (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	int32_t* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<int32_t*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetI)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetI(System.IntPtr,System.Int32,System.Int32,System.Int32[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetI_m8A6D157BDB0EA5778403D6BD0B469FEB7B4C00A7 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Int32[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetF(System.IntPtr,System.Int32,System.Int32,System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetF_mB1229B222B47E76C5781D048AF7444DCE0B64CCA (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, float*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetF", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	float* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<float*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetF)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetF(System.IntPtr,System.Int32,System.Int32,System.Single[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetF_m205C46E1D7C0BB434C693338CA1A3DCB537D9815 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Single[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetD(System.IntPtr,System.Int32,System.Int32,System.Double[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetD_m9D5E47813B355EDC9019C574FFD778EE6B11C0D9 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, double*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetD", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	double* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<double*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetD)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetD(System.IntPtr,System.Int32,System.Int32,System.Double[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetD_mB9A3687BD9B80495A826E32183B7A298D99F12C2 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec3b(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3b[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec3b_m36C2E7C412F6B2CEAE5BD4B19D9857875F79C7BE (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec3bU5BU5D_t65AD1F336D24EA9AD600B4A6CB27B3B517C138EE* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetVec3b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetVec3b)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec3b(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3b[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec3b_mFE31A9A24533C672B99F92558FA14C97B6C730D3 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec3bU5BU2CU5D_tE90BFA4A10C08A985D030E3187325900CBF521B5* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec3b[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec3d_m0A7B89E34BDA638022B0C735D763B7DA2DC8676D (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec3dU5BU5D_t7F6500BD6738D9EF9379BBF49E20270DD8FE005E* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetVec3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetVec3d)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec3d_m9B24D32F6FCD7E250A18C50FB4EC6F6BEE221B18 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec3dU5BU2CU5D_t29CB373947AD17A0ECF7B4EEB20936B21D140804* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec3d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec4f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec4f_mA7F99FA954FEC8F9AD41E9BEC2023867E61CEE33 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetVec4f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetVec4f)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec4f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec4f_mBE6F6A4486ACAC0189D8E5EC1611878DC935C912 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec4fU5BU2CU5D_t54D8EA2F459F41BD179635792BF550EB3E317FDF* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec4f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec6f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec6f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec6f_m19A6979D93F9563BCC33FCE6BA3298DC06B42269 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetVec6f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetVec6f)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec6f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec6f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec6f_mA441EC9D0794EBDB0287F3C3EA35BB60A94B90BC (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec6fU5BU2CU5D_t7C67D2C5EDBC06D656BC54F1A2409DE9F3334AAE* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec6f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec4i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4i[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec4i_mDD3CEC4880E710CE4DC9BF20CC534BB894D4E87E (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetVec4i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetVec4i)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetVec4i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4i[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetVec4i_mF0E3884DBDBAF97E63EF09FD4A3E61A459C510BD (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec4iU5BU2CU5D_t438C08E75365B75E4142B910325D19F21F4C6CD9* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec4i[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint_m02D81EBC2BC75D76AC0DB2EC65335FEAFE685EF2 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint_m8CBAC89AEB5AC61D64FE2FAD0B468690B514B94B (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, PointU5BU2CU5D_t75336C640C8EF9A5D74131EF2FF56ADE1E04A0A3* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint2f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint2f_m60D58B82BC6675340CDCB68DC2B4E2B01A35D2C4 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint2f)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint2f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint2f_m4DA02EBB7E07205645F0F2605DB092EEDE9D2F46 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point2fU5BU2CU5D_t534637B478C32FFC446C173967390F3A2A61FBEF* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point2f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint2d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint2d_mF4B51C1630CC167B03E6158D802FD6F6624EE29F (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint2d)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint2d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint2d_mCDF1A6F2EFD0F1FAF4768F9BDD1A434BC3F00B46 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point2dU5BU2CU5D_t7484AAFF04C19494AB4D23D45BE7FB1371C8B4DE* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point2d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3i[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3i_mBE0D5281EFB8CAFA5380AC03966D4FD0C9639EDE (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint3i)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3i[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3i_mA928ED9A9CC3191866E122DF227A46F7B92C663A (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3iU5BU2CU5D_t9D63D6246F01F8C00A5D07420A3EC8F43E7EB075* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3i[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3f_m5170E89BAD02C0ED7C3314148CB07A402433E77D (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint3f)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3f_m1188799302D9F52422EF022A8A7765B5A2DC508D (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3fU5BU2CU5D_t956F68C0D8D3E941181E3BDAA0CDF49861545B6C* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3d_m7DD07210A5A9B6AA9EA3CAA038694C6785089FB7 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetPoint3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetPoint3d)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetPoint3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetPoint3d_m9B9D5C911D6768EDEA16615606C816BD0B23D8F7 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3dU5BU2CU5D_tF448DE8BEF99C9C7200AC09879C34D2B9BB16E43* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetRect(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Rect[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetRect_m6B08EBD9BDD5865C27E65A617DE9C96F67AFAFB0 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nSetRect", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nSetRect)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nSetRect(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Rect[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nSetRect_mF5F99B96F34A5916D20A81A80913D8707BA80DFE (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, RectU5BU2CU5D_t466728D2C4C1410891B29B2693FA0796C414CC2D* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Rect[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetB(System.IntPtr,System.Int32,System.Int32,System.Byte[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetB_m69E262AC3AF6284CA87667C587DECCC972F75344 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, uint8_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetB", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	uint8_t* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<uint8_t*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetB)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetB(System.IntPtr,System.Int32,System.Int32,System.Byte[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetB_m5D00AD41176B25BD37636D1BE496D83D1951837E (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, ByteU5BU2CU5D_tFF0F8305C018904B90DCD1740962BABBC458B638* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Byte[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetS(System.IntPtr,System.Int32,System.Int32,System.Int16[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetS_mD344E4B9587B7057662142CE54E7CB209A62D482 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Int16U5BU5D_t8175CE8DD9C9F9FB0CF4F58E45BC570575B43CFB* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int16_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetS", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	int16_t* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<int16_t*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetS)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetS(System.IntPtr,System.Int32,System.Int32,System.Int16[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetS_m2E09DE4EFEDBC8D80E4764C516B564837515FAA0 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Int16U5BU2CU5D_tA1085F28F76441E5B3C4F55200C853889884825E* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Int16[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetS(System.IntPtr,System.Int32,System.Int32,System.UInt16[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetS_m0DEC4C742968E455623BE9BF0D5A79176A547101 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, UInt16U5BU5D_tEB7C42D811D999D2AA815BADC3FCCDD9C67B3F83* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, uint16_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetS", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	uint16_t* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<uint16_t*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetS)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetS(System.IntPtr,System.Int32,System.Int32,System.UInt16[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetS_m9B0CADB4926F829B829AF9CA04D4F462E6F039F9 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, UInt16U5BU2CU5D_t2C918D9FF94D8CF06CE395FB8C6B931FA8B8AE1B* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.UInt16[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetI(System.IntPtr,System.Int32,System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetI_mEDB5D1241EF3E6390AD6A13E5C29E3751AA7F5F3 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	int32_t* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<int32_t*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetI)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetI(System.IntPtr,System.Int32,System.Int32,System.Int32[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetI_m65A95C1CD93D57AAF2FE3E4C003FDA44428A4129 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Int32U5BU2CU5D_t46F2694E7DAD7B2B05C940EC5B9DE04E40D0516F* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Int32[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetF(System.IntPtr,System.Int32,System.Int32,System.Single[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetF_m5C2FE910916F70C0085765BD81837A360EF4A230 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, float*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetF", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	float* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<float*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetF)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetF(System.IntPtr,System.Int32,System.Int32,System.Single[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetF_m08CD9D95A3F4B9FC453484B185D442654319D480 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Single[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetD(System.IntPtr,System.Int32,System.Int32,System.Double[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetD_mA1CCBA32A89AD4ECDBD9B9A7094D335CBDE0CFC0 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, double*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetD", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	double* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<double*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetD)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetD(System.IntPtr,System.Int32,System.Int32,System.Double[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetD_m5838CC4756A3CEA41B753A0FD79840F5E36D90D6 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, DoubleU5BU2CU5D_tA10EAF4C451E6EBC345A8881EBB9EF9441D01AAE* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Double[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec3b(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3b[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec3b_m306863887BCA6AF16CDF4A060FBD463B6086F810 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec3bU5BU5D_t65AD1F336D24EA9AD600B4A6CB27B3B517C138EE* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetVec3b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetVec3b)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec3b(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3b[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec3b_m4F3F5C344ABCBB0A8C92BF3BF2C21EBA77812364 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec3bU5BU2CU5D_tE90BFA4A10C08A985D030E3187325900CBF521B5* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec3b[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec3d_m4FE221D3EB45043CD4522E1577E8B18C846AD938 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec3dU5BU5D_t7F6500BD6738D9EF9379BBF49E20270DD8FE005E* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetVec3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetVec3d)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec3d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec3d_mFFDE9E95A5FF988B83DF222050F95F27CD3E486B (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec3dU5BU2CU5D_t29CB373947AD17A0ECF7B4EEB20936B21D140804* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec3d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec4f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec4f_m007B378A2F01DE60EB7F2B50EAAAAFC881E49241 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetVec4f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetVec4f)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec4f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec4f_mC00782274437C54EFAA492F61C2BF64CE2EE7CD9 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec4fU5BU2CU5D_t54D8EA2F459F41BD179635792BF550EB3E317FDF* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec4f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec6f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec6f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec6f_m55198031755C802A1526264D644A71D333D587D6 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetVec6f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetVec6f)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec6f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec6f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec6f_m38DC9ACAE124FBFEEF07C831560A4487A3C93AAF (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec6fU5BU2CU5D_t7C67D2C5EDBC06D656BC54F1A2409DE9F3334AAE* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec6f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec4i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4i[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec4i_mF168381AA81F93EB7CF7674BDAA74E74D92B63F7 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetVec4i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetVec4i)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetVec4i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Vec4i[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetVec4i_m179670DFC84E186BB5F68D71FB5F199084A51CB7 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Vec4iU5BU2CU5D_t438C08E75365B75E4142B910325D19F21F4C6CD9* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Vec4i[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint_m185D871A36D154E4F7F66592898751115FFDE01E (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint_m6449E9FEAEDF9584E644280FE6777013C59A6616 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, PointU5BU2CU5D_t75336C640C8EF9A5D74131EF2FF56ADE1E04A0A3* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint2f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint2f_m243EDEF71223C21F9336A64588126A1FA3356530 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint2f)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint2f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint2f_mDCDEBB139706B3537CFA85B69440BAC4435C787C (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point2fU5BU2CU5D_t534637B478C32FFC446C173967390F3A2A61FBEF* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point2f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint2d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint2d_m2734C73EEB07BC59E9BFC18EB20C649A5320652E (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point2dU5BU5D_t4CEE55A36AC0D63864BDAFCAE1AFCB33D2E6F485* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint2d)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint2d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point2d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint2d_mD39E690BA5AD124D22A85B19EBDB1291C388FE22 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point2dU5BU2CU5D_t7484AAFF04C19494AB4D23D45BE7FB1371C8B4DE* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point2d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3i[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3i_m58775BE8CF2C3A6C7D43E30F5784B2B21AC53E11 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint3i)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3i(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3i[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3i_mEB376F47A69A65D19FFDD62FEA0E27E944402AB7 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3iU5BU2CU5D_t9D63D6246F01F8C00A5D07420A3EC8F43E7EB075* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3i[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3f_m4A9221D69A746ADC85D538C15FF8CF81C6D7211E (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint3f)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3f(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3f[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3f_m22A1AF147D831B1BCC663A8573FCA2C3032862BB (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3fU5BU2CU5D_t956F68C0D8D3E941181E3BDAA0CDF49861545B6C* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3f[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3d[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3d_m92548C14BCF2C4155173D9721FA8EC32C4DD7332 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3dU5BU5D_tCFCFAEE9362D1E9BA210F2CBFABAEC68D052F43D* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetPoint3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetPoint3d)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetPoint3d(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point3d[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetPoint3d_m49824F3D1E68EFF5F41B929B1047AAFA0C4CE9DD (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, Point3dU5BU2CU5D_tF448DE8BEF99C9C7200AC09879C34D2B9BB16E43* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Point3d[,]'."), NULL);
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetRect(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Rect[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetRect_mDCDCC669B308A91C8D0B2E6225889B9DA1EF95D6 (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_nGetRect", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_vals' to native representation
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ____3_vals_marshaled = NULL;
	if (___3_vals != NULL)
	{
		____3_vals_marshaled = reinterpret_cast<Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*>((___3_vals)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_Mat_nGetRect)(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_row, ___2_col, ____3_vals_marshaled, ___4_valsLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_Mat_nGetRect(System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Rect[,],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_Mat_nGetRect_m2850554E41088A364B2B22B9C33BDE68BC6A4EEA (intptr_t ___0_obj, int32_t ___1_row, int32_t ___2_col, RectU5BU2CU5D_t466728D2C4C1410891B29B2693FA0796C414CC2D* ___3_vals, int32_t ___4_valsLength, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'OpenCvSharp.Rect[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Mat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Mat_m70BE3DDE9612E0D502C52A9AC0724249E989F9E6 (intptr_t ___0_self, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Mat)(___0_self, ___1_m);
	#else
	il2cppPInvokeFunc(___0_self, ___1_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_char(System.IntPtr,System.SByte)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_char_mB101F5C70A4F987F56BE7250A57808162D4995ED (intptr_t ___0_self, int8_t ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int8_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int8_t) + 3;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_char", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_char)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_uchar(System.IntPtr,System.Byte)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_uchar_mF818638AB0885DBB051C1F7B6A6FE57BD872A800 (intptr_t ___0_self, uint8_t ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, uint8_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint8_t) + 3;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_uchar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_uchar)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_short(System.IntPtr,System.Int16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_short_mD25766225AE2F0A30B10748177434EA970B2501C (intptr_t ___0_self, int16_t ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int16_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int16_t) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_short", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_short)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_ushort(System.IntPtr,System.UInt16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_ushort_m670461B82E7C2514161201C3C78F2078D6672C0F (intptr_t ___0_self, uint16_t ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, uint16_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(uint16_t) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_ushort", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_ushort)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_int(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_int_m404546D59B9C28954EC0D4388403633DF92CA017 (intptr_t ___0_self, int32_t ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_int", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_int)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_float(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_float_mDABBD55D04BE3103BA2EF6714D820C30ED118EE1 (intptr_t ___0_self, float ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_float", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_float)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_double(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_double_m6DA33703634FF86FF1362E9C239BC0C4CEF71A4E (intptr_t ___0_self, double ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_double", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_double)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2b(System.IntPtr,OpenCvSharp.Vec2b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2b_m3C098EBD3E99F5BE2CB498BF40F4F0FD5C45F14D (intptr_t ___0_self, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2b)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3b(System.IntPtr,OpenCvSharp.Vec3b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3b_m04F69047591446352668B6B3C4524CDC27C6E6F2 (intptr_t ___0_self, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9) + 1;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3b)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec4b(System.IntPtr,OpenCvSharp.Vec4b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec4b_m74756BC1FAF0212C4E18947BC9E1B7DE3A2F8FA0 (intptr_t ___0_self, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec4b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec4b)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6b(System.IntPtr,OpenCvSharp.Vec6b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6b_m9264CC291E50F47E9200650BDC834608A746D7BF (intptr_t ___0_self, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6b)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2s(System.IntPtr,OpenCvSharp.Vec2s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2s_m38AFF5F97C0150550A40AB78735D9BE473943768 (intptr_t ___0_self, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2s)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3s(System.IntPtr,OpenCvSharp.Vec3s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3s_m28F34DFA558827601064C1F5C59874B195A36D05 (intptr_t ___0_self, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3s)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec4s(System.IntPtr,OpenCvSharp.Vec4s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec4s_m08B7678081437DC4A87EDC28A1E008D330F10340 (intptr_t ___0_self, Vec4s_t36070B932676A14293929ED30FF39D45635126B5 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec4s_t36070B932676A14293929ED30FF39D45635126B5);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec4s_t36070B932676A14293929ED30FF39D45635126B5);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec4s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec4s)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6s(System.IntPtr,OpenCvSharp.Vec6s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6s_m1E2675838C2CDDD4828DF325A798F31CB13C77D6 (intptr_t ___0_self, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6s)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2w(System.IntPtr,OpenCvSharp.Vec2w)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2w_m401CA26E55906BD42536AE8B302325C1586C94E6 (intptr_t ___0_self, Vec2w_tC86992B28B612E016C5DFE0C6AEFB352CA530B97 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2w_tC86992B28B612E016C5DFE0C6AEFB352CA530B97);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2w_tC86992B28B612E016C5DFE0C6AEFB352CA530B97);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2w", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2w)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3w(System.IntPtr,OpenCvSharp.Vec3w)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3w_m599C0921162019F2AAD82C1A81B341C5E00436A1 (intptr_t ___0_self, Vec3w_t639AB866E901F11C8B2102D9AABF3D326C187343 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3w_t639AB866E901F11C8B2102D9AABF3D326C187343);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3w_t639AB866E901F11C8B2102D9AABF3D326C187343) + 2;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3w", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3w)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec4w(System.IntPtr,OpenCvSharp.Vec4w)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec4w_m8F89A3E2CB5A4C88B9A6E84B6811BC271995676D (intptr_t ___0_self, Vec4w_tA5261E05040FD831243C9A62E36D8644449ECA63 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec4w_tA5261E05040FD831243C9A62E36D8644449ECA63);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec4w_tA5261E05040FD831243C9A62E36D8644449ECA63);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec4w", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec4w)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6w(System.IntPtr,OpenCvSharp.Vec6w)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6w_m9F5D245151F1224F7B858E81189BF169881F6434 (intptr_t ___0_self, Vec6w_tAB37C7CF73E1BD9071AF39DA9F4F30A4A0D667D9 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6w_tAB37C7CF73E1BD9071AF39DA9F4F30A4A0D667D9);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6w_tAB37C7CF73E1BD9071AF39DA9F4F30A4A0D667D9);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6w", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6w)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2i(System.IntPtr,OpenCvSharp.Vec2i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2i_m00AF5C5B73DA01AABF356A7D49A79D1A2CF59883 (intptr_t ___0_self, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2i)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3i(System.IntPtr,OpenCvSharp.Vec3i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3i_m7BA9FC7E54A83BD4A9D36B9A2D7F2139C6973CA8 (intptr_t ___0_self, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3i)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec4i(System.IntPtr,OpenCvSharp.Vec4i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec4i_m34312AB92E236DB13E53D9418C6B2D02D94D49FE (intptr_t ___0_self, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec4i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec4i)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6i(System.IntPtr,OpenCvSharp.Vec6i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6i_mBCE2624B0AAA746215733B1BE835854DDEF32025 (intptr_t ___0_self, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6i)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2f(System.IntPtr,OpenCvSharp.Vec2f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2f_mD9D0985FF139EB32C6AE690216498B544B1CBACA (intptr_t ___0_self, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2f)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3f(System.IntPtr,OpenCvSharp.Vec3f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3f_m9C46310B5988725A88314E74D031D6F0955BB4D6 (intptr_t ___0_self, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3f)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec4f(System.IntPtr,OpenCvSharp.Vec4f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec4f_m7305A57C86E5F3117E1C76DC0620177910F6E884 (intptr_t ___0_self, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec4f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec4f)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6f(System.IntPtr,OpenCvSharp.Vec6f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6f_mE4376DA7B6B85AD3A74E9AF18A6065571AC08DBF (intptr_t ___0_self, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6f)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec2d(System.IntPtr,OpenCvSharp.Vec2d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec2d_m21AC3B6632D2B5BE7E2CC35EAE6144E32D536B50 (intptr_t ___0_self, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec2d)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec3d(System.IntPtr,OpenCvSharp.Vec3d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec3d_mB3CEA500061356A79D4904064DE35960E8EF681D (intptr_t ___0_self, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec3d)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Vec6d(System.IntPtr,OpenCvSharp.Vec6d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Vec6d_m153C979289EFB7A95FBC5A8EB18014F92D8ADB3E (intptr_t ___0_self, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Vec6d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Vec6d)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point(System.IntPtr,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point_m4BDE9478F11123D1CB110E84C85855F34EF476B3 (intptr_t ___0_self, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point2f(System.IntPtr,OpenCvSharp.Point2f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point2f_m4576037C26ABE0239BBD4D80C713C1A4B5907143 (intptr_t ___0_self, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point2f)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point2d(System.IntPtr,OpenCvSharp.Point2d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point2d_mA820C81E67968955070762F48773DA930D4CC63A (intptr_t ___0_self, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point2d)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point3i(System.IntPtr,OpenCvSharp.Point3i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point3i_m23D12478A0A1AAED4AE94F2B5E94AE4966D9CC4E (intptr_t ___0_self, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point3i)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point3f(System.IntPtr,OpenCvSharp.Point3f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point3f_mDBDEB6AFAC98DE16BEAF4689B18DF50E7ED2A9D5 (intptr_t ___0_self, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point3f)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Point3d(System.IntPtr,OpenCvSharp.Point3d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Point3d_m03397D42A1E3435ACF145689324E38914878963A (intptr_t ___0_self, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point3d_t236BB7C7FD05C6ABCA6981715A797B3A22898ADC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Point3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Point3d)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Size(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Size_mE9E829F458886B178B052209F682ECC8428388A2 (intptr_t ___0_self, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Size", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Size)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Size2f(System.IntPtr,OpenCvSharp.Size2f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Size2f_m172E7C3568F53E2521CCBABAA4D407BA85CACECC (intptr_t ___0_self, Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7 ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size2f_tDE98F6BC79C37B2862E0197FB9FB5B739FA3EFF7);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Size2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Size2f)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_push_back_Rect(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_push_back_Rect_m9BBE95B6CCB3EFACE0D1CDFD81E6861540B08B2B (intptr_t ___0_self, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___1_v, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_push_back_Rect", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_push_back_Rect)(___0_self, ___1_v);
	#else
	il2cppPInvokeFunc(___0_self, ___1_v);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_reserve(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_reserve_m1050FE5FF0E08BBA5E387A98D80E3137033DAB29 (intptr_t ___0_obj, intptr_t ___1_sz, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_reserve", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_reserve)(___0_obj, ___1_sz);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_sz);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_resize1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_resize1_m53ABB6D474355CBA95806D260976F9665451A4D4 (intptr_t ___0_obj, intptr_t ___1_sz, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_resize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_resize1)(___0_obj, ___1_sz);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_sz);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_resize2(System.IntPtr,System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_resize2_mE94A071D7DDCC5C8D776DFDC3B7CD54BCF69DE51 (intptr_t ___0_obj, intptr_t ___1_sz, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___2_s, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_resize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_resize2)(___0_obj, ___1_sz, ___2_s);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_sz, ___2_s);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_pop_back(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_pop_back_m99BDBFC30C5A874FF65CF7667E2167F2BDA1F0E7 (intptr_t ___0_obj, intptr_t ___1_nelems, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_pop_back", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_pop_back)(___0_obj, ___1_nelems);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_nelems);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_uchar(System.IntPtr,OpenCvSharp.MatForeachFunctionByte)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_uchar_m7A87BBD8A8E92576CF7CAD93EADB554BDEA6E48C (intptr_t ___0_m, MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_uchar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_uchar)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec2b(System.IntPtr,OpenCvSharp.MatForeachFunctionVec2b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec2b_m79D6B7979D25FB938AEE281FDA5F52B8E61C7BBC (intptr_t ___0_m, MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec2b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec2b)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec3b(System.IntPtr,OpenCvSharp.MatForeachFunctionVec3b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec3b_m781590374564829B8CCF34677EACD8BC028692F6 (intptr_t ___0_m, MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec3b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec3b)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec4b(System.IntPtr,OpenCvSharp.MatForeachFunctionVec4b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec4b_mA6D5AEEB6CD94638DFA2EFAA2E60FA1B5BD01F44 (intptr_t ___0_m, MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec4b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec4b)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec6b(System.IntPtr,OpenCvSharp.MatForeachFunctionVec6b)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec6b_mC264B94E11BD13F9EA53823A5405352E97B01323 (intptr_t ___0_m, MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec6b", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec6b)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_short(System.IntPtr,OpenCvSharp.MatForeachFunctionInt16)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_short_mEBB4FB40B481D012D847C91BDF0949DE02868136 (intptr_t ___0_m, MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_short", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_short)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec2s(System.IntPtr,OpenCvSharp.MatForeachFunctionVec2s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec2s_m93C661B9D412906F984F452782518EE5CE96BC6B (intptr_t ___0_m, MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec2s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec2s)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec3s(System.IntPtr,OpenCvSharp.MatForeachFunctionVec3s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec3s_mE1BA68AF6001D0AFF386B35E8A957A222C6E4E3F (intptr_t ___0_m, MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec3s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec3s)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec4s(System.IntPtr,OpenCvSharp.MatForeachFunctionVec4s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec4s_mD24AFEF6A9BF905A2D70BF90D0FA5DDF94BBE3B0 (intptr_t ___0_m, MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec4s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec4s)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec6s(System.IntPtr,OpenCvSharp.MatForeachFunctionVec6s)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec6s_m43E9E9A5480EC3E4E1096DA1361C4094C2DAF165 (intptr_t ___0_m, MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec6s", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec6s)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_int(System.IntPtr,OpenCvSharp.MatForeachFunctionInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_int_m5DB7D4775F51120955AA6C58789FA027D16218F8 (intptr_t ___0_m, MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_int", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_int)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec2i(System.IntPtr,OpenCvSharp.MatForeachFunctionVec2i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec2i_m910E35A36D9A32772BA7C63C626231E1F2C3F7FF (intptr_t ___0_m, MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec2i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec2i)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec3i(System.IntPtr,OpenCvSharp.MatForeachFunctionVec3i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec3i_m0B195C1DAD217B294CF4463C75A5138A814A91E0 (intptr_t ___0_m, MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec3i)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec4i(System.IntPtr,OpenCvSharp.MatForeachFunctionVec4i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec4i_mEA80409C44EFABF12678CCDBCD8B5E35956174BE (intptr_t ___0_m, MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec4i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec4i)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec6i(System.IntPtr,OpenCvSharp.MatForeachFunctionVec6i)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec6i_mB48FA1A4B95974560BD8F8524068BFF912F18027 (intptr_t ___0_m, MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec6i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec6i)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_float(System.IntPtr,OpenCvSharp.MatForeachFunctionFloat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_float_mE1F55667ED2902A8452DD38EFB968F0F90A9A44A (intptr_t ___0_m, MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_float", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_float)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec2f(System.IntPtr,OpenCvSharp.MatForeachFunctionVec2f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec2f_mD661D2B05D7367BAEE8D1DE4780CF0EE67A2ADF2 (intptr_t ___0_m, MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec2f)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec3f(System.IntPtr,OpenCvSharp.MatForeachFunctionVec3f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec3f_m5E54C0647C2E61CD646CA247FDD60192BE5E6730 (intptr_t ___0_m, MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec3f)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec4f(System.IntPtr,OpenCvSharp.MatForeachFunctionVec4f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec4f_m95DBD22BF72706D670D00619E5E42250A6117EA5 (intptr_t ___0_m, MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec4f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec4f)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec6f(System.IntPtr,OpenCvSharp.MatForeachFunctionVec6f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec6f_mE159CBEB8D4B0DD018F80F12505956E3AC341F84 (intptr_t ___0_m, MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec6f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec6f)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_double(System.IntPtr,OpenCvSharp.MatForeachFunctionDouble)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_double_m4C58DA8A4DE5AA11347DE60414C628AA0BE1B49A (intptr_t ___0_m, MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_double", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_double)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec2d(System.IntPtr,OpenCvSharp.MatForeachFunctionVec2d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec2d_m923F8AF68D6EBAAC50A233C14625DB9082AF3991 (intptr_t ___0_m, MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec2d)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec3d(System.IntPtr,OpenCvSharp.MatForeachFunctionVec3d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec3d_m72F9C335313484E261FB8F7CD9B7CCD4C26C8C02 (intptr_t ___0_m, MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec3d)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec4d(System.IntPtr,OpenCvSharp.MatForeachFunctionVec4d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec4d_mC0CACC06FE1580A797FCEC14C64502A03E1ECC11 (intptr_t ___0_m, MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec4d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec4d)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_Mat_forEach_Vec6d(System.IntPtr,OpenCvSharp.MatForeachFunctionVec6d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_Mat_forEach_Vec6d_m14B871420212A8C504BF15377C6D7CA3D1E40472 (intptr_t ___0_m, MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* ___1_proc, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Il2CppMethodPointer);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_Mat_forEach_Vec6d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_proc' to native representation
	Il2CppMethodPointer ____1_proc_marshaled = NULL;
	____1_proc_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_proc));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_Mat_forEach_Vec6d)(___0_m, ____1_proc_marshaled);
	#else
	il2cppPInvokeFunc(___0_m, ____1_proc_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_new_mD96000693A3475891DD8C35623C0D494A78F6697 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_new(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_new_m74CD69726240FC56FD150D0EF4106D73E601C231 (intptr_t ___0_mat, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_new2)(___0_mat);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_mat);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_MatExpr_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_MatExpr_delete_mA060E36C3419ED055684E9B5F9072E276F9BF18A (intptr_t ___0_expr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_MatExpr_delete)(___0_expr);
	#else
	il2cppPInvokeFunc(___0_expr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_toMat(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_toMat_mE7BAE50A860B0B8160A253148162EAC7E75E4F33 (intptr_t ___0_expr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_toMat)(___0_expr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_expr);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorUnaryMinus_MatExpr(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorUnaryMinus_MatExpr_m0BF568801667D2718554ECCAD9EE7928AE42B3B6 (intptr_t ___0_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorUnaryMinus_MatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorUnaryMinus_MatExpr)(___0_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorUnaryNot_MatExpr(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorUnaryNot_MatExpr_mE64094C586EED540C1AB9A9350805DE2243DB954 (intptr_t ___0_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorUnaryNot_MatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorUnaryNot_MatExpr)(___0_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorAdd_MatExprMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorAdd_MatExprMat_m8EEA8F0906B91CEBBDD98DC0D5736E282BD8F8E3 (intptr_t ___0_e, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorAdd_MatExprMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorAdd_MatExprMat)(___0_e, ___1_m);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e, ___1_m);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorAdd_MatMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorAdd_MatMatExpr_mBE44B371B329619B098B4612FB1F731588759782 (intptr_t ___0_m, intptr_t ___1_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorAdd_MatMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorAdd_MatMatExpr)(___0_m, ___1_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_m, ___1_e);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorAdd_MatExprScalar(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorAdd_MatExprScalar_m2B125C86895F0FDC655BB4C8947295DCC420668A (intptr_t ___0_e, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorAdd_MatExprScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorAdd_MatExprScalar)(___0_e, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorAdd_ScalarMatExpr(OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorAdd_ScalarMatExpr_mF488567939BBFBB778A065E904A71D9A6EC4C88C (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___0_s, intptr_t ___1_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorAdd_ScalarMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorAdd_ScalarMatExpr)(___0_s, ___1_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_e);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorAdd_MatExprMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorAdd_MatExprMatExpr_m841F66BA449A4BF8F705384AE66FEA99230D87D6 (intptr_t ___0_e1, intptr_t ___1_e2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorAdd_MatExprMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorAdd_MatExprMatExpr)(___0_e1, ___1_e2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e1, ___1_e2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorSubtract_MatExprMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorSubtract_MatExprMat_m0BC999BC47F4210DCFD74A051C98FF8E4425BF60 (intptr_t ___0_e, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorSubtract_MatExprMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorSubtract_MatExprMat)(___0_e, ___1_m);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e, ___1_m);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorSubtract_MatMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorSubtract_MatMatExpr_mBA77111E70BD0CC1F0457A580B98105DCCF20F73 (intptr_t ___0_m, intptr_t ___1_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorSubtract_MatMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorSubtract_MatMatExpr)(___0_m, ___1_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_m, ___1_e);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorSubtract_MatExprScalar(System.IntPtr,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorSubtract_MatExprScalar_m1481329FEAE07DBD99538C49ECDF20FA3DB0ADFA (intptr_t ___0_e, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorSubtract_MatExprScalar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorSubtract_MatExprScalar)(___0_e, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorSubtract_ScalarMatExpr(OpenCvSharp.Scalar,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorSubtract_ScalarMatExpr_m7BC44177771DD92F7587F5A23E88375B696E54DE (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___0_s, intptr_t ___1_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorSubtract_ScalarMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorSubtract_ScalarMatExpr)(___0_s, ___1_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_e);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorSubtract_MatExprMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorSubtract_MatExprMatExpr_m8C335C4483BD5D9204916201E5F326F875B8AB3D (intptr_t ___0_e1, intptr_t ___1_e2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorSubtract_MatExprMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorSubtract_MatExprMatExpr)(___0_e1, ___1_e2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e1, ___1_e2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorMultiply_MatExprMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorMultiply_MatExprMat_m7934C4970BBA95C519F08B0293A241DCE779B253 (intptr_t ___0_e, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorMultiply_MatExprMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorMultiply_MatExprMat)(___0_e, ___1_m);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e, ___1_m);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorMultiply_MatMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorMultiply_MatMatExpr_m01C4B3CACFFDFF200E1A30C58E55C1235D867876 (intptr_t ___0_m, intptr_t ___1_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorMultiply_MatMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorMultiply_MatMatExpr)(___0_m, ___1_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_m, ___1_e);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorMultiply_MatExprDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorMultiply_MatExprDouble_m55ACCBE699531813D96F1332BC30E0A2E23FDF2B (intptr_t ___0_e, double ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorMultiply_MatExprDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorMultiply_MatExprDouble)(___0_e, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorMultiply_DoubleMatExpr(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorMultiply_DoubleMatExpr_mF9EE1C2DA774183BE066CE5E02BF2E57E531FFA5 (double ___0_s, intptr_t ___1_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorMultiply_DoubleMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorMultiply_DoubleMatExpr)(___0_s, ___1_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_e);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorMultiply_MatExprMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorMultiply_MatExprMatExpr_m7B32FA3026D7B938F72E651A52C385EE518B9CC6 (intptr_t ___0_e1, intptr_t ___1_e2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorMultiply_MatExprMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorMultiply_MatExprMatExpr)(___0_e1, ___1_e2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e1, ___1_e2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorDivide_MatExprMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorDivide_MatExprMat_m3E2815651D34777A149F8E3506D95815CD2A9B9A (intptr_t ___0_e, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorDivide_MatExprMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorDivide_MatExprMat)(___0_e, ___1_m);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e, ___1_m);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorDivide_MatMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorDivide_MatMatExpr_mDF319C1D784E8329319F1F096BE6561F08B489DF (intptr_t ___0_m, intptr_t ___1_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorDivide_MatMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorDivide_MatMatExpr)(___0_m, ___1_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_m, ___1_e);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorDivide_MatExprDouble(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorDivide_MatExprDouble_mD0CCA150ECAD33279C11451C5F566725575E3C79 (intptr_t ___0_e, double ___1_s, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorDivide_MatExprDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorDivide_MatExprDouble)(___0_e, ___1_s);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e, ___1_s);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorDivide_DoubleMatExpr(System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorDivide_DoubleMatExpr_m8D107CD587DEA1E3E82F3C2F5F7D45D6E854CE2A (double ___0_s, intptr_t ___1_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorDivide_DoubleMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorDivide_DoubleMatExpr)(___0_s, ___1_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_s, ___1_e);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_operatorDivide_MatExprMatExpr(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_operatorDivide_MatExprMatExpr_mC1129B490D162A519A24313D62530948185516F6 (intptr_t ___0_e1, intptr_t ___1_e2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_operatorDivide_MatExprMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_operatorDivide_MatExprMatExpr)(___0_e1, ___1_e2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e1, ___1_e2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_row(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_row_m1B5FF465B0C762774C996213606A45E5D7999675 (intptr_t ___0_self, int32_t ___1_y, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_row", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_row)(___0_self, ___1_y);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_y);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_col(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_col_m31C62ABBE379884D37700B84C86C4E76C3DEC0B3 (intptr_t ___0_self, int32_t ___1_x, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_col", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_col)(___0_self, ___1_x);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_x);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_diag(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_diag_m25734EF7B6292997C67646778F06A3DE09D084B7 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_diag1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_diag1)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_diag(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_diag_m43C637B161DD42C8642525F404E7DC42ECD6CDCC (intptr_t ___0_self, int32_t ___1_d, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_diag2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_diag2)(___0_self, ___1_d);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_d);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_submat(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_submat_m3DB24CD0AED66A933880E782087553B0C5256F52 (intptr_t ___0_self, int32_t ___1_rowStart, int32_t ___2_rowEnd, int32_t ___3_colStart, int32_t ___4_colEnd, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_submat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_submat)(___0_self, ___1_rowStart, ___2_rowEnd, ___3_colStart, ___4_colEnd);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_rowStart, ___2_rowEnd, ___3_colStart, ___4_colEnd);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_cross(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_cross_m3286879B1BDC9FC41455D34113A349C31CB71584 (intptr_t ___0_self, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_cross", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_cross)(___0_self, ___1_m);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_m);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::core_MatExpr_dot(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_core_MatExpr_dot_mCD8667C9CF43FA359866AAA5CD637569F4E3D4E4 (intptr_t ___0_self, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_dot", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_dot)(___0_self, ___1_m);
	#else
	double returnValue = il2cppPInvokeFunc(___0_self, ___1_m);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_t(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_t_mFD09D060B88861EE26B4804F4213005F3B512730 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_t", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_t)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_inv(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_inv_m47E2A9D1BC493E6281397711A52CA0603BCB6913 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_inv1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_inv1)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_inv(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_inv_mF2CEC0651B2A4B98C8A78287C5939A7D8B7BCDC0 (intptr_t ___0_self, int32_t ___1_method, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_inv2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_inv2)(___0_self, ___1_method);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_method);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_mul_toMatExpr(System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_mul_toMatExpr_m1454B0726DC09F1DC015131477C6C8FBE37F0DEA (intptr_t ___0_self, intptr_t ___1_e, double ___2_scale, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_mul_toMatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_mul_toMatExpr)(___0_self, ___1_e, ___2_scale);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_e, ___2_scale);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_MatExpr_mul_toMat(System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_MatExpr_mul_toMat_mD82DE226F1175F1C14DC30DF10479C37185C3D09 (intptr_t ___0_self, intptr_t ___1_m, double ___2_scale, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_mul_toMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_mul_toMat)(___0_self, ___1_m, ___2_scale);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self, ___1_m, ___2_scale);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::core_MatExpr_size(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_core_MatExpr_size_m4F23113E8A28C40B4A5D022F4498A60A10B30B89 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_size", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_size)(___0_self);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_MatExpr_type(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_MatExpr_type_m3E01131E96EB62B40A0ADD64C40432A819F59D25 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_MatExpr_type", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_MatExpr_type)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_abs_MatExpr(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_abs_MatExpr_mF983343AAE0FCAD53B973380245D360FD514DC8D (intptr_t ___0_e, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_abs_MatExpr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_abs_MatExpr)(___0_e);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_e);
	#endif

	return returnValue;
}
// System.UInt64 OpenCvSharp.NativeMethods::core_SparseMat_sizeof()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t NativeMethods_core_SparseMat_sizeof_m3F3F941E338DE39033F9EAFA0577412F7B127057 (const RuntimeMethod* method) 
{
	typedef uint64_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_sizeof", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	uint64_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_sizeof)();
	#else
	uint64_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_new1_m381D5DA8E081D0801B22FD935C08815042B18DC4 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_new2(System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_new2_m76BFA2F18379F788905D40EE7E91836234750A9C (int32_t ___0_dims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_sizes, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_sizes' to native representation
	int32_t* ____1_sizes_marshaled = NULL;
	if (___1_sizes != NULL)
	{
		____1_sizes_marshaled = reinterpret_cast<int32_t*>((___1_sizes)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_new2)(___0_dims, ____1_sizes_marshaled, ___2_type);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_dims, ____1_sizes_marshaled, ___2_type);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_new3(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_new3_m00EE589F243F727D49FD71638835B95027BF0DC0 (intptr_t ___0_m, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_new3)(___0_m);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_m);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_delete_mFC923725289B76E16BB44DB2750C9A82FEFFEE00 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_operatorAssign_SparseMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_operatorAssign_SparseMat_mADEDEB3000C7CA25000D7FDF93521C78BCC23058 (intptr_t ___0_obj, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_operatorAssign_SparseMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_operatorAssign_SparseMat)(___0_obj, ___1_m);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_operatorAssign_Mat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_operatorAssign_Mat_m61184D0396BB6CE837042138D91A7C662E21C589 (intptr_t ___0_obj, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_operatorAssign_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_operatorAssign_Mat)(___0_obj, ___1_m);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_m);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_clone(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_clone_mDD4EF47B25C6752F61140478C607BF9BAAE54FB2 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_clone", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_clone)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_copyTo_SparseMat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_copyTo_SparseMat_mA1814000FFD95909E268E45FBB9E4C0AF0347E20 (intptr_t ___0_obj, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_copyTo_SparseMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_copyTo_SparseMat)(___0_obj, ___1_m);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_copyTo_Mat(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_copyTo_Mat_mA0765D33A59775F8A3C6A60E5E18F83E082F87D2 (intptr_t ___0_obj, intptr_t ___1_m, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_copyTo_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_copyTo_Mat)(___0_obj, ___1_m);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_m);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_convertTo_SparseMat(System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_convertTo_SparseMat_m6C34308F6C5D52BF9F0A3F64135352B1413CAAF7 (intptr_t ___0_obj, intptr_t ___1_m, int32_t ___2_rtype, double ___3_alpha, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_convertTo_SparseMat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_convertTo_SparseMat)(___0_obj, ___1_m, ___2_rtype, ___3_alpha);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_m, ___2_rtype, ___3_alpha);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_convertTo_Mat(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_convertTo_Mat_m961CB038B3918946D17524104FFA222AF521988D (intptr_t ___0_obj, intptr_t ___1_m, int32_t ___2_rtype, double ___3_alpha, double ___4_beta, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_convertTo_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_convertTo_Mat)(___0_obj, ___1_m, ___2_rtype, ___3_alpha, ___4_beta);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_m, ___2_rtype, ___3_alpha, ___4_beta);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_assignTo(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_assignTo_mB46CEC9AF709BCB6E4DAED4AA1732B29BFC5EE27 (intptr_t ___0_obj, intptr_t ___1_m, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_assignTo", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_assignTo)(___0_obj, ___1_m, ___2_type);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_m, ___2_type);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_create(System.IntPtr,System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_create_m858E2193E8879B1ADF4DA3168C46BB85A0AD5075 (intptr_t ___0_obj, int32_t ___1_dims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_sizes, int32_t ___3_type, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_sizes' to native representation
	int32_t* ____2_sizes_marshaled = NULL;
	if (___2_sizes != NULL)
	{
		____2_sizes_marshaled = reinterpret_cast<int32_t*>((___2_sizes)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_create)(___0_obj, ___1_dims, ____2_sizes_marshaled, ___3_type);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_dims, ____2_sizes_marshaled, ___3_type);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_clear(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_clear_m4E86B39582168CF7CB13BA17E9E7383BCE4FDE1A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_clear", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_clear)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_addref(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_addref_mF6A44287886F25EF1F8F53F94771F9E34587EB3E (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_addref", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_addref)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_SparseMat_release(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_SparseMat_release_m4057CE6DA18146633CDA1BA570CED723A621E7EB (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_release", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_SparseMat_release)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_elemSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_elemSize_m6D582F05951B2180512A23AD607C62CD584CB0EC (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_elemSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_elemSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_elemSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_elemSize1_m1CAB337CD6A216B5547F901A92E701B2FB079216 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_elemSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_elemSize1)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_type(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_type_m0C231D6023801D42A099C0AC98A915DACE135CE1 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_type", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_type)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_depth(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_depth_m9D3BC07FF32EE55991FA72377AA7F2C081CD88B9 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_depth", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_depth)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_channels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_channels_mA88F22AF32F8E65A5E8B320B0D12C74193EDD3C5 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_channels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_channels)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_size1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_size1_mFEBD150F95A6835D10389629D32EAAC03821512D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_size1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_size1)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_size2(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_size2_m521D19392DED19742DF65030DF50DE4BC907227F (intptr_t ___0_obj, int32_t ___1_i, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_size2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_size2)(___0_obj, ___1_i);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::core_SparseMat_dims(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_core_SparseMat_dims_mF9F5455A624FE0BBDB2AE63C95B35EE91B57BA22 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_dims", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_dims)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_nzcount(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_nzcount_m9C6521C983320323A8781BC8694B6BB4F80E21A5 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_nzcount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_nzcount)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_hash_1d(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_hash_1d_m85BBC04D0CDCAD83C6BDAE644FD662F7B4525ADE (intptr_t ___0_obj, int32_t ___1_i0, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_hash_1d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_hash_1d)(___0_obj, ___1_i0);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i0);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_hash_2d(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_hash_2d_m665F2AF768152C7DD3CE37D8C46F7A40E7D51234 (intptr_t ___0_obj, int32_t ___1_i0, int32_t ___2_i1, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_hash_2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_hash_2d)(___0_obj, ___1_i0, ___2_i1);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i0, ___2_i1);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_hash_3d(System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_hash_3d_m10F2D379B38D7BA8BF804B86B0E02356629CA8C6 (intptr_t ___0_obj, int32_t ___1_i0, int32_t ___2_i1, int32_t ___3_i2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_hash_3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_hash_3d)(___0_obj, ___1_i0, ___2_i1, ___3_i2);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i0, ___2_i1, ___3_i2);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_hash_nd(System.IntPtr,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_hash_nd_m91404EAECCBEB57AAA0FA3BD0BBFAF3672BA9F64 (intptr_t ___0_obj, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_idx, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_hash_nd", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_idx' to native representation
	int32_t* ____1_idx_marshaled = NULL;
	if (___1_idx != NULL)
	{
		____1_idx_marshaled = reinterpret_cast<int32_t*>((___1_idx)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_hash_nd)(___0_obj, ____1_idx_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_idx_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_1d(System.IntPtr,System.Int32,System.Int32,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_1d_mB29F8A43C321E494671DF03FBC1858216BEBB99B (intptr_t ___0_obj, int32_t ___1_i0, int32_t ___2_createMissing, uint64_t* ___3_hashval, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_1d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_1d)(___0_obj, ___1_i0, ___2_createMissing, ___3_hashval);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i0, ___2_createMissing, ___3_hashval);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_1d(System.IntPtr,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_1d_m54CF56A58A256DB98F998EEE15628848E9AFA196 (intptr_t ___0_obj, int32_t ___1_i0, int32_t ___2_createMissing, intptr_t ___3_hashval, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_1d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_1d)(___0_obj, ___1_i0, ___2_createMissing, ___3_hashval);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i0, ___2_createMissing, ___3_hashval);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_2d(System.IntPtr,System.Int32,System.Int32,System.Int32,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_2d_m6C7CAF5576B107831D7EE9A46CA46A28D6CCA980 (intptr_t ___0_obj, int32_t ___1_i0, int32_t ___2_i1, int32_t ___3_createMissing, uint64_t* ___4_hashval, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_2d)(___0_obj, ___1_i0, ___2_i1, ___3_createMissing, ___4_hashval);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i0, ___2_i1, ___3_createMissing, ___4_hashval);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_2d(System.IntPtr,System.Int32,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_2d_mBD2FD7DC9FA5671CE651D1E96C75521936073D4F (intptr_t ___0_obj, int32_t ___1_i0, int32_t ___2_i1, int32_t ___3_createMissing, intptr_t ___4_hashval, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_2d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_2d)(___0_obj, ___1_i0, ___2_i1, ___3_createMissing, ___4_hashval);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i0, ___2_i1, ___3_createMissing, ___4_hashval);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_3d(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_3d_m7F62ECF6B69249F4503C12205882D3A014881DDA (intptr_t ___0_obj, int32_t ___1_i0, int32_t ___2_i1, int32_t ___3_i2, int32_t ___4_createMissing, uint64_t* ___5_hashval, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_3d)(___0_obj, ___1_i0, ___2_i1, ___3_i2, ___4_createMissing, ___5_hashval);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i0, ___2_i1, ___3_i2, ___4_createMissing, ___5_hashval);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_3d(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_3d_mC91F831A6D9B186CE7B3C3B8AD82CF52FAD7A2F0 (intptr_t ___0_obj, int32_t ___1_i0, int32_t ___2_i1, int32_t ___3_i2, int32_t ___4_createMissing, intptr_t ___5_hashval, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_3d", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_3d)(___0_obj, ___1_i0, ___2_i1, ___3_i2, ___4_createMissing, ___5_hashval);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_i0, ___2_i1, ___3_i2, ___4_createMissing, ___5_hashval);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_nd(System.IntPtr,System.Int32[],System.Int32,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_nd_m62D628EE08FEE9A880AFB3A01908E2B6E8AA9CA7 (intptr_t ___0_obj, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_idx, int32_t ___2_createMissing, uint64_t* ___3_hashval, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t*, int32_t, uint64_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(uint64_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_nd", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_idx' to native representation
	int32_t* ____1_idx_marshaled = NULL;
	if (___1_idx != NULL)
	{
		____1_idx_marshaled = reinterpret_cast<int32_t*>((___1_idx)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_nd)(___0_obj, ____1_idx_marshaled, ___2_createMissing, ___3_hashval);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_idx_marshaled, ___2_createMissing, ___3_hashval);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::core_SparseMat_ptr_nd(System.IntPtr,System.Int32[],System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_core_SparseMat_ptr_nd_m3DC29C48FB887F464B3D3E6C10003EC1EAB217AB (intptr_t ___0_obj, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_idx, int32_t ___2_createMissing, intptr_t ___3_hashval, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t*, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_SparseMat_ptr_nd", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_idx' to native representation
	int32_t* ____1_idx_marshaled = NULL;
	if (___1_idx != NULL)
	{
		____1_idx_marshaled = reinterpret_cast<int32_t*>((___1_idx)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(core_SparseMat_ptr_nd)(___0_obj, ____1_idx_marshaled, ___2_createMissing, ___3_hashval);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_idx_marshaled, ___2_createMissing, ___3_hashval);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::face_createEigenFaceRecognizer(System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_face_createEigenFaceRecognizer_mD216D6D4D0BA7229E0FF04503C03ECB0E99E98E6 (int32_t ___0_numComponents, double ___1_threshold, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_createEigenFaceRecognizer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(face_createEigenFaceRecognizer)(___0_numComponents, ___1_threshold);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_numComponents, ___1_threshold);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::face_createFisherFaceRecognizer(System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_face_createFisherFaceRecognizer_mE0CB8FD3490B7ADEF6E28274C957F80172F09905 (int32_t ___0_numComponents, double ___1_threshold, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_createFisherFaceRecognizer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(face_createFisherFaceRecognizer)(___0_numComponents, ___1_threshold);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_numComponents, ___1_threshold);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::face_createLBPHFaceRecognizer(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_face_createLBPHFaceRecognizer_m38787054958291BF2C1D7318D283C1DD4963312A (int32_t ___0_radius, int32_t ___1_neighbors, int32_t ___2_gridX, int32_t ___3_gridY, double ___4_threshold, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_createLBPHFaceRecognizer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(face_createLBPHFaceRecognizer)(___0_radius, ___1_neighbors, ___2_gridX, ___3_gridY, ___4_threshold);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_radius, ___1_neighbors, ___2_gridX, ___3_gridY, ___4_threshold);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getNumComponents(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_BasicFaceRecognizer_getNumComponents_mB1B039570728AC9A0F3DD3D8CC25646700DB598D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getNumComponents", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getNumComponents)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_setNumComponents(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_setNumComponents_mE03567B8340EBCD6F2D2BBC1177D4776A14A4B66 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_setNumComponents", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_setNumComponents)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_face_BasicFaceRecognizer_getThreshold_m018D93A9E68C3F10809140D305416E14152347A1 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getThreshold)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_setThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_setThreshold_m627BA6B7204365BB246FAF326E23B233F0B16ED7 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_setThreshold)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getProjections(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_getProjections_mB5303E3800903FA19253AE5D652D5916934E4AA1 (intptr_t ___0_obj, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getProjections", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getProjections)(___0_obj, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getLabels(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_getLabels_mD2028ABA15868467C63433E716219968A118EC73 (intptr_t ___0_obj, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getLabels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getLabels)(___0_obj, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getEigenValues(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_getEigenValues_mC4BBD0329CB540C784DB1EC788A4B340DEF49357 (intptr_t ___0_obj, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getEigenValues", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getEigenValues)(___0_obj, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getEigenVectors(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_getEigenVectors_m03451E7D0953B1C4C432943802B8CA10EE90E4A2 (intptr_t ___0_obj, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getEigenVectors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getEigenVectors)(___0_obj, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_BasicFaceRecognizer_getMean(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_BasicFaceRecognizer_getMean_m2486F0643C3FA0FD9F1133717E9C4B76432507CE (intptr_t ___0_obj, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_BasicFaceRecognizer_getMean", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_BasicFaceRecognizer_getMean)(___0_obj, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_dst);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::face_Ptr_BasicFaceRecognizer_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_face_Ptr_BasicFaceRecognizer_get_mF055C50B9B835DA9787B007E452DD760F7CB1980 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_Ptr_BasicFaceRecognizer_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(face_Ptr_BasicFaceRecognizer_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_Ptr_BasicFaceRecognizer_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_Ptr_BasicFaceRecognizer_delete_m323A59EA6D13239E6C553C55A06187E87FF0E781 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_Ptr_BasicFaceRecognizer_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_Ptr_BasicFaceRecognizer_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_train(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_train_m1AFF438D3640BDB7A7438D689FDDC9BCB09E1869 (intptr_t ___0_obj, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_src, int32_t ___2_srcLength, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_labels, int32_t ___4_labelsLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_train", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_src' to native representation
	intptr_t* ____1_src_marshaled = NULL;
	if (___1_src != NULL)
	{
		____1_src_marshaled = reinterpret_cast<intptr_t*>((___1_src)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_labels' to native representation
	int32_t* ____3_labels_marshaled = NULL;
	if (___3_labels != NULL)
	{
		____3_labels_marshaled = reinterpret_cast<int32_t*>((___3_labels)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_train)(___0_obj, ____1_src_marshaled, ___2_srcLength, ____3_labels_marshaled, ___4_labelsLength);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_src_marshaled, ___2_srcLength, ____3_labels_marshaled, ___4_labelsLength);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_update(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_update_m2F200FF65CE37BFEB937C06F36A3A33690AA6C91 (intptr_t ___0_obj, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_src, int32_t ___2_srcLength, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_labels, int32_t ___4_labelsLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_update", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_src' to native representation
	intptr_t* ____1_src_marshaled = NULL;
	if (___1_src != NULL)
	{
		____1_src_marshaled = reinterpret_cast<intptr_t*>((___1_src)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_labels' to native representation
	int32_t* ____3_labels_marshaled = NULL;
	if (___3_labels != NULL)
	{
		____3_labels_marshaled = reinterpret_cast<int32_t*>((___3_labels)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_update)(___0_obj, ____1_src_marshaled, ___2_srcLength, ____3_labels_marshaled, ___4_labelsLength);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_src_marshaled, ___2_srcLength, ____3_labels_marshaled, ___4_labelsLength);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::face_FaceRecognizer_predict1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_FaceRecognizer_predict1_mE801C62A3315E9D8F9C3F6997EF5CC5BD3F9B4AF (intptr_t ___0_obj, intptr_t ___1_src, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_predict1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_predict1)(___0_obj, ___1_src);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_src);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_predict2(System.IntPtr,System.IntPtr,System.Int32&,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_predict2_m57E2EDBA5E5707797F49B2AE5BB20BD294CDDF75 (intptr_t ___0_obj, intptr_t ___1_src, int32_t* ___2_label, double* ___3_confidence, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t*, double*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t*) + sizeof(double*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_predict2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_predict2)(___0_obj, ___1_src, ___2_label, ___3_confidence);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_src, ___2_label, ___3_confidence);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_save1(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_save1_m60DBE6D112CA9A316C94B24A3D4F89E49637EC92 (intptr_t ___0_obj, String_t* ___1_filename, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_save1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_filename' to native representation
	char* ____1_filename_marshaled = NULL;
	____1_filename_marshaled = il2cpp_codegen_marshal_string(___1_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_save1)(___0_obj, ____1_filename_marshaled);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_filename_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_filename' native representation
	il2cpp_codegen_marshal_free(____1_filename_marshaled);
	____1_filename_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_load1(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_load1_m2926B7A9C7F1C06D1AA53E3D25261A5A1B12A696 (intptr_t ___0_obj, String_t* ___1_filename, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_load1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_filename' to native representation
	char* ____1_filename_marshaled = NULL;
	____1_filename_marshaled = il2cpp_codegen_marshal_string(___1_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_load1)(___0_obj, ____1_filename_marshaled);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_filename_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_filename' native representation
	il2cpp_codegen_marshal_free(____1_filename_marshaled);
	____1_filename_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_save2(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_save2_m457A5C4124DA038A58A085FEC084232F4E7DEF59 (intptr_t ___0_obj, intptr_t ___1_fs, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_save2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_save2)(___0_obj, ___1_fs);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_fs);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_load2(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_load2_m5C7DC84921549ABF64BD1805FB82194FCF9FE75E (intptr_t ___0_obj, intptr_t ___1_fs, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_load2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_load2)(___0_obj, ___1_fs);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_fs);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_setLabelInfo(System.IntPtr,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_setLabelInfo_m37C89420F50F053611ED7A0B04F66635A2956EB5 (intptr_t ___0_obj, int32_t ___1_label, String_t* ___2_strInfo, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_setLabelInfo", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_strInfo' to native representation
	char* ____2_strInfo_marshaled = NULL;
	____2_strInfo_marshaled = il2cpp_codegen_marshal_string(___2_strInfo);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_setLabelInfo)(___0_obj, ___1_label, ____2_strInfo_marshaled);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_label, ____2_strInfo_marshaled);
	#endif

	// Marshaling cleanup of parameter '___2_strInfo' native representation
	il2cpp_codegen_marshal_free(____2_strInfo_marshaled);
	____2_strInfo_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_getLabelInfo(System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_getLabelInfo_m20D83E763FDEF75A3697853761CDED009BA01809 (intptr_t ___0_obj, int32_t ___1_label, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_getLabelInfo", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_getLabelInfo)(___0_obj, ___1_label, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_label, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_getLabelsByString(System.IntPtr,System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_getLabelsByString_m085B5A35C231A0D703370DCFC9E0F708081FE9C9 (intptr_t ___0_obj, String_t* ___1_str, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_getLabelsByString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_str' to native representation
	char* ____1_str_marshaled = NULL;
	____1_str_marshaled = il2cpp_codegen_marshal_string(___1_str);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_getLabelsByString)(___0_obj, ____1_str_marshaled, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_str_marshaled, ___2_dst);
	#endif

	// Marshaling cleanup of parameter '___1_str' native representation
	il2cpp_codegen_marshal_free(____1_str_marshaled);
	____1_str_marshaled = NULL;

}
// System.Double OpenCvSharp.NativeMethods::face_FaceRecognizer_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_face_FaceRecognizer_getThreshold_m3F057B265EE6D0B898A5C584F2A318CF2C91F279 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_getThreshold)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_FaceRecognizer_setThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_FaceRecognizer_setThreshold_m3347B1427B97F9CA67CBC3739B614DA52B8446CA (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_FaceRecognizer_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_FaceRecognizer_setThreshold)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getGridX(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_LBPHFaceRecognizer_getGridX_m4EB83AD7F699B8282892B82C75BE24B64559C93B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getGridX", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getGridX)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_setGridX(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_setGridX_mC3B858D13848B884D9A0129036175141CABC0A3E (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_setGridX", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_setGridX)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getGridY(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_LBPHFaceRecognizer_getGridY_m5606C1D66E4BB126BA29C21DFD294108705BEB7C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getGridY", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getGridY)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_setGridY(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_setGridY_m83F21738F670DFA99CB9A200C847C3F1B177F1C8 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_setGridY", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_setGridY)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getRadius(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_LBPHFaceRecognizer_getRadius_m4F39FEA86FF20EAF88C05679D3F88789930B9F2D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getRadius)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_setRadius(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_setRadius_mCDDBCD07902128126C182753B692924370D6C2F4 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_setRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_setRadius)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getNeighbors(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_face_LBPHFaceRecognizer_getNeighbors_m864ED400052992F1FC524A80445EAA001F4816F4 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getNeighbors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getNeighbors)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_setNeighbors(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_setNeighbors_m560312848B1AB40BFC7ACDEF839D8D8C7925004C (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_setNeighbors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_setNeighbors)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_face_LBPHFaceRecognizer_getThreshold_mF1D78267065ED4C93E6724657E61E18E2A75DC69 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getThreshold)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_setThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_setThreshold_m33D03628448EF3D1A8C798D86F71432AD4D82430 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_setThreshold)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getHistograms(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_getHistograms_m52351BDA1FACDB551F010DDD754BB8B17B2DE45B (intptr_t ___0_obj, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getHistograms", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getHistograms)(___0_obj, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::face_LBPHFaceRecognizer_getLabels(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_LBPHFaceRecognizer_getLabels_m3350EDE8C1D1322F3A765F22727C4DE50796BB49 (intptr_t ___0_obj, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_LBPHFaceRecognizer_getLabels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_LBPHFaceRecognizer_getLabels)(___0_obj, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_dst);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::face_Ptr_LBPHFaceRecognizer_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_face_Ptr_LBPHFaceRecognizer_get_mA27969E96E7EF940314F925C680705C2E347B477 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_Ptr_LBPHFaceRecognizer_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(face_Ptr_LBPHFaceRecognizer_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::face_Ptr_LBPHFaceRecognizer_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_face_Ptr_LBPHFaceRecognizer_delete_m9AAA5DEC43C476E61A0F1D12C128841E5B50DF8B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "face_Ptr_LBPHFaceRecognizer_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(face_Ptr_LBPHFaceRecognizer_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_drawKeypoints(System.IntPtr,OpenCvSharp.KeyPoint[],System.Int32,System.IntPtr,OpenCvSharp.Scalar,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_drawKeypoints_mB1197955E01BDD5B5133975F3458B86AEC2171E8 (intptr_t ___0_image, KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___1_keypoints, int32_t ___2_keypointsLength, intptr_t ___3_outImage, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___4_color, int32_t ___5_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_drawKeypoints", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_keypoints' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____1_keypoints_marshaled = NULL;
	if (___1_keypoints != NULL)
	{
		____1_keypoints_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___1_keypoints)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_drawKeypoints)(___0_image, ____1_keypoints_marshaled, ___2_keypointsLength, ___3_outImage, ___4_color, ___5_flags);
	#else
	il2cppPInvokeFunc(___0_image, ____1_keypoints_marshaled, ___2_keypointsLength, ___3_outImage, ___4_color, ___5_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_drawMatches1(System.IntPtr,OpenCvSharp.KeyPoint[],System.Int32,System.IntPtr,OpenCvSharp.KeyPoint[],System.Int32,OpenCvSharp.DMatch[],System.Int32,System.IntPtr,OpenCvSharp.Scalar,OpenCvSharp.Scalar,System.Byte[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_drawMatches1_m1FAA39CA71A4D5136613490D6C221E4AF6A98CA7 (intptr_t ___0_img1, KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___1_keypoints1, int32_t ___2_keypoints1Length, intptr_t ___3_img2, KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___4_keypoints2, int32_t ___5_keypoints2Length, DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* ___6_matches1to2, int32_t ___7_matches1to2Length, intptr_t ___8_outImg, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___9_matchColor, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___10_singlePointColor, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___11_matchesMask, int32_t ___12_matchesMaskLength, int32_t ___13_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*, int32_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, uint8_t*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_drawMatches1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_keypoints1' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____1_keypoints1_marshaled = NULL;
	if (___1_keypoints1 != NULL)
	{
		____1_keypoints1_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___1_keypoints1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_keypoints2' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____4_keypoints2_marshaled = NULL;
	if (___4_keypoints2 != NULL)
	{
		____4_keypoints2_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___4_keypoints2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___6_matches1to2' to native representation
	DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A* ____6_matches1to2_marshaled = NULL;
	if (___6_matches1to2 != NULL)
	{
		____6_matches1to2_marshaled = reinterpret_cast<DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*>((___6_matches1to2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___11_matchesMask' to native representation
	uint8_t* ____11_matchesMask_marshaled = NULL;
	if (___11_matchesMask != NULL)
	{
		____11_matchesMask_marshaled = reinterpret_cast<uint8_t*>((___11_matchesMask)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_drawMatches1)(___0_img1, ____1_keypoints1_marshaled, ___2_keypoints1Length, ___3_img2, ____4_keypoints2_marshaled, ___5_keypoints2Length, ____6_matches1to2_marshaled, ___7_matches1to2Length, ___8_outImg, ___9_matchColor, ___10_singlePointColor, ____11_matchesMask_marshaled, ___12_matchesMaskLength, ___13_flags);
	#else
	il2cppPInvokeFunc(___0_img1, ____1_keypoints1_marshaled, ___2_keypoints1Length, ___3_img2, ____4_keypoints2_marshaled, ___5_keypoints2Length, ____6_matches1to2_marshaled, ___7_matches1to2Length, ___8_outImg, ___9_matchColor, ___10_singlePointColor, ____11_matchesMask_marshaled, ___12_matchesMaskLength, ___13_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_drawMatches2(System.IntPtr,OpenCvSharp.KeyPoint[],System.Int32,System.IntPtr,OpenCvSharp.KeyPoint[],System.Int32,System.IntPtr[],System.Int32,System.Int32[],System.IntPtr,OpenCvSharp.Scalar,OpenCvSharp.Scalar,System.IntPtr[],System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_drawMatches2_m032ADFFDBC57813AAAD07BADB77BFD62421C39C0 (intptr_t ___0_img1, KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___1_keypoints1, int32_t ___2_keypoints1Length, intptr_t ___3_img2, KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___4_keypoints2, int32_t ___5_keypoints2Length, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___6_matches1to2, int32_t ___7_matches1to2Size1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___8_matches1to2Size2, intptr_t ___9_outImg, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___10_matchColor, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___11_singlePointColor, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___12_matchesMask, int32_t ___13_matchesMaskSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___14_matchesMaskSize2, int32_t ___15_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t, KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, int32_t, intptr_t*, int32_t, int32_t*, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, intptr_t*, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_drawMatches2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_keypoints1' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____1_keypoints1_marshaled = NULL;
	if (___1_keypoints1 != NULL)
	{
		____1_keypoints1_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___1_keypoints1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_keypoints2' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____4_keypoints2_marshaled = NULL;
	if (___4_keypoints2 != NULL)
	{
		____4_keypoints2_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___4_keypoints2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___6_matches1to2' to native representation
	intptr_t* ____6_matches1to2_marshaled = NULL;
	if (___6_matches1to2 != NULL)
	{
		____6_matches1to2_marshaled = reinterpret_cast<intptr_t*>((___6_matches1to2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___8_matches1to2Size2' to native representation
	int32_t* ____8_matches1to2Size2_marshaled = NULL;
	if (___8_matches1to2Size2 != NULL)
	{
		____8_matches1to2Size2_marshaled = reinterpret_cast<int32_t*>((___8_matches1to2Size2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___12_matchesMask' to native representation
	intptr_t* ____12_matchesMask_marshaled = NULL;
	if (___12_matchesMask != NULL)
	{
		____12_matchesMask_marshaled = reinterpret_cast<intptr_t*>((___12_matchesMask)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___14_matchesMaskSize2' to native representation
	int32_t* ____14_matchesMaskSize2_marshaled = NULL;
	if (___14_matchesMaskSize2 != NULL)
	{
		____14_matchesMaskSize2_marshaled = reinterpret_cast<int32_t*>((___14_matchesMaskSize2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_drawMatches2)(___0_img1, ____1_keypoints1_marshaled, ___2_keypoints1Length, ___3_img2, ____4_keypoints2_marshaled, ___5_keypoints2Length, ____6_matches1to2_marshaled, ___7_matches1to2Size1, ____8_matches1to2Size2_marshaled, ___9_outImg, ___10_matchColor, ___11_singlePointColor, ____12_matchesMask_marshaled, ___13_matchesMaskSize1, ____14_matchesMaskSize2_marshaled, ___15_flags);
	#else
	il2cppPInvokeFunc(___0_img1, ____1_keypoints1_marshaled, ___2_keypoints1Length, ___3_img2, ____4_keypoints2_marshaled, ___5_keypoints2Length, ____6_matches1to2_marshaled, ___7_matches1to2Size1, ____8_matches1to2Size2_marshaled, ___9_outImg, ___10_matchColor, ___11_singlePointColor, ____12_matchesMask_marshaled, ___13_matchesMaskSize1, ____14_matchesMaskSize2_marshaled, ___15_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_evaluateFeatureDetector(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Single&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_evaluateFeatureDetector_mD3D81EA014F82B79D670F1492560B947CBF87C72 (intptr_t ___0_img1, intptr_t ___1_img2, intptr_t ___2_H1to2, intptr_t ___3_keypoints1, intptr_t ___4_keypoints2, float* ___5_repeatability, int32_t* ___6_correspCount, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, float*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_evaluateFeatureDetector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_evaluateFeatureDetector)(___0_img1, ___1_img2, ___2_H1to2, ___3_keypoints1, ___4_keypoints2, ___5_repeatability, ___6_correspCount);
	#else
	il2cppPInvokeFunc(___0_img1, ___1_img2, ___2_H1to2, ___3_keypoints1, ___4_keypoints2, ___5_repeatability, ___6_correspCount);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_computeRecallPrecisionCurve(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_computeRecallPrecisionCurve_m2281CCAE2EECA1ADBC110F50A704E91988949C3F (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_matches1to2, int32_t ___1_matches1to2Size1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_matches1to2Size2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___3_correctMatches1to2Mask, int32_t ___4_correctMatches1to2MaskSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___5_correctMatches1to2MaskSize2, intptr_t ___6_recallPrecisionCurve, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, int32_t*, intptr_t*, int32_t, int32_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_computeRecallPrecisionCurve", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_matches1to2' to native representation
	intptr_t* ____0_matches1to2_marshaled = NULL;
	if (___0_matches1to2 != NULL)
	{
		____0_matches1to2_marshaled = reinterpret_cast<intptr_t*>((___0_matches1to2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_matches1to2Size2' to native representation
	int32_t* ____2_matches1to2Size2_marshaled = NULL;
	if (___2_matches1to2Size2 != NULL)
	{
		____2_matches1to2Size2_marshaled = reinterpret_cast<int32_t*>((___2_matches1to2Size2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_correctMatches1to2Mask' to native representation
	intptr_t* ____3_correctMatches1to2Mask_marshaled = NULL;
	if (___3_correctMatches1to2Mask != NULL)
	{
		____3_correctMatches1to2Mask_marshaled = reinterpret_cast<intptr_t*>((___3_correctMatches1to2Mask)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___5_correctMatches1to2MaskSize2' to native representation
	int32_t* ____5_correctMatches1to2MaskSize2_marshaled = NULL;
	if (___5_correctMatches1to2MaskSize2 != NULL)
	{
		____5_correctMatches1to2MaskSize2_marshaled = reinterpret_cast<int32_t*>((___5_correctMatches1to2MaskSize2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_computeRecallPrecisionCurve)(____0_matches1to2_marshaled, ___1_matches1to2Size1, ____2_matches1to2Size2_marshaled, ____3_correctMatches1to2Mask_marshaled, ___4_correctMatches1to2MaskSize1, ____5_correctMatches1to2MaskSize2_marshaled, ___6_recallPrecisionCurve);
	#else
	il2cppPInvokeFunc(____0_matches1to2_marshaled, ___1_matches1to2Size1, ____2_matches1to2Size2_marshaled, ____3_correctMatches1to2Mask_marshaled, ___4_correctMatches1to2MaskSize1, ____5_correctMatches1to2MaskSize2_marshaled, ___6_recallPrecisionCurve);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::features2d_getRecall(OpenCvSharp.Point2f[],System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_features2d_getRecall_mF1EA01DC3693A52137FD86C8684AB4CA68DF24AA (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_recallPrecisionCurve, int32_t ___1_recallPrecisionCurveSize, float ___2_l_precision, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_getRecall", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_recallPrecisionCurve' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_recallPrecisionCurve_marshaled = NULL;
	if (___0_recallPrecisionCurve != NULL)
	{
		____0_recallPrecisionCurve_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_recallPrecisionCurve)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(features2d_getRecall)(____0_recallPrecisionCurve_marshaled, ___1_recallPrecisionCurveSize, ___2_l_precision);
	#else
	float returnValue = il2cppPInvokeFunc(____0_recallPrecisionCurve_marshaled, ___1_recallPrecisionCurveSize, ___2_l_precision);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::features2d_getNearestPoint(OpenCvSharp.Point2f[],System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_getNearestPoint_m4F3714E72B00EF9A3B738F01346A9EAB6889A96E (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_recallPrecisionCurve, int32_t ___1_recallPrecisionCurveSize, float ___2_l_precision, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_getNearestPoint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_recallPrecisionCurve' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_recallPrecisionCurve_marshaled = NULL;
	if (___0_recallPrecisionCurve != NULL)
	{
		____0_recallPrecisionCurve_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_recallPrecisionCurve)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_getNearestPoint)(____0_recallPrecisionCurve_marshaled, ___1_recallPrecisionCurveSize, ___2_l_precision);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_recallPrecisionCurve_marshaled, ___1_recallPrecisionCurveSize, ___2_l_precision);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AGAST(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AGAST_m45AE4BEBD87C896AA3B0F7B0FFE73AF495C0CE69 (intptr_t ___0_image, intptr_t ___1_keypoints, int32_t ___2_threshold, int32_t ___3_nonmaxSuppression, int32_t ___4_type, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AGAST", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AGAST)(___0_image, ___1_keypoints, ___2_threshold, ___3_nonmaxSuppression, ___4_type);
	#else
	il2cppPInvokeFunc(___0_image, ___1_keypoints, ___2_threshold, ___3_nonmaxSuppression, ___4_type);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_create(System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_AgastFeatureDetector_create_m3E72A10C1BC2DC7572E60D6F1BD932275F57F835 (int32_t ___0_threshold, int32_t ___1_nonmaxSuppression, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_create)(___0_threshold, ___1_nonmaxSuppression, ___2_type);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_threshold, ___1_nonmaxSuppression, ___2_type);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_AgastFeatureDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_AgastFeatureDetector_delete_mD6F3DA40A27A7A0110AD16DCB5ABF9F9200573D6 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_AgastFeatureDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_AgastFeatureDetector_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_AgastFeatureDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_AgastFeatureDetector_get_mCF3C45119EA022745DBB49231550207643A1A7C8 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_AgastFeatureDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_AgastFeatureDetector_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_setThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AgastFeatureDetector_setThreshold_m7B438FA4130413C10877105944D982A5725ADF51 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_setThreshold)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AgastFeatureDetector_getThreshold_m09442D2A9122E4C284F612B61FE915BE474B19EA (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_getThreshold)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_setNonmaxSuppression(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AgastFeatureDetector_setNonmaxSuppression_m11D13B411FCD14AF22F393EA622520FBF67D2623 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_setNonmaxSuppression", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_setNonmaxSuppression)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_getNonmaxSuppression(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AgastFeatureDetector_getNonmaxSuppression_m51976AA3F78CCF88C87B2DFBFB4837C2908EACE8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_getNonmaxSuppression", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_getNonmaxSuppression)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_setType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AgastFeatureDetector_setType_m5EC0C85D4401C0EB18172AA109866254981DC30E (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_setType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_setType)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AgastFeatureDetector_getType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AgastFeatureDetector_getType_m12A8AD5965D99231ADE5B8FB3BF2BEF85C1B6057 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AgastFeatureDetector_getType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AgastFeatureDetector_getType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_AKAZE_create(System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_AKAZE_create_mE7101AEB32D1F9FCD100856B9AACD28327B88341 (int32_t ___0_descriptor_type, int32_t ___1_descriptor_size, int32_t ___2_descriptor_channels, float ___3_threshold, int32_t ___4_nOctaves, int32_t ___5_nOctaveLayers, int32_t ___6_diffusivity, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, float, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_create)(___0_descriptor_type, ___1_descriptor_size, ___2_descriptor_channels, ___3_threshold, ___4_nOctaves, ___5_nOctaveLayers, ___6_diffusivity);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_descriptor_type, ___1_descriptor_size, ___2_descriptor_channels, ___3_threshold, ___4_nOctaves, ___5_nOctaveLayers, ___6_diffusivity);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_AKAZE_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_AKAZE_delete_mC71FC6CFD98F71DA0AC9001D67FFE94F97D53098 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_AKAZE_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_AKAZE_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_AKAZE_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_AKAZE_get_m40522A638EFDBD4B91F7FFEB56AF08A9543D56B7 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_AKAZE_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_AKAZE_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setDescriptorType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setDescriptorType_mF4ACB033108E0BF514F9C3E5A4FBAB5B7FFECA69 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setDescriptorType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setDescriptorType)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getDescriptorType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getDescriptorType_m73EFBCD821649E8A173FEECD3047CB4FA3F2829F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getDescriptorType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getDescriptorType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setDescriptorSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setDescriptorSize_mF782ED8A89E4F2C08E3EDF9946E3008CD8B05857 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setDescriptorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setDescriptorSize)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getDescriptorSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getDescriptorSize_m1601CEC1909D40ED1B610B06E63F4D82F0D5DB5E (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getDescriptorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getDescriptorSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setDescriptorChannels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setDescriptorChannels_mB7B64F3B8325D07D2AFA59D18E20DA28459B53A7 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setDescriptorChannels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setDescriptorChannels)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getDescriptorChannels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getDescriptorChannels_mB912868449F59A45AA896434DAE30B8DB7E62327 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getDescriptorChannels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getDescriptorChannels)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setThreshold_m296A6A0A38BDD3A8886877A064A57337FC074763 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setThreshold)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_AKAZE_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_AKAZE_getThreshold_mE7A60BA24317B0867F5565939625E52BF4ED2666 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getThreshold)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setNOctaves(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setNOctaves_m30DCAADD7E429C460D6DF176385037073075FD22 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setNOctaves)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getNOctaves(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getNOctaves_mE493509AE3B184A84B6BCBA594DB358626F146E6 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getNOctaves)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setNOctaveLayers(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setNOctaveLayers_m3385C43EB4266D6B81970B814AAACBC66D7AC855 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setNOctaveLayers)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getNOctaveLayers(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getNOctaveLayers_m39A1F79D123F195318B5A60F41173C4968FB696A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getNOctaveLayers)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_AKAZE_setDiffusivity(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_AKAZE_setDiffusivity_m2F30B786729795D31CD00213FDD536175B346C4E (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_setDiffusivity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_AKAZE_setDiffusivity)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_AKAZE_getDiffusivity(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_AKAZE_getDiffusivity_m29DC455D781ECCA6D291D01E8BB6227507F595C0 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_AKAZE_getDiffusivity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_AKAZE_getDiffusivity)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_BRISK_create1(System.Int32,System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_BRISK_create1_m38EF47D96DDEF998BD9C274161008D83D209EE52 (int32_t ___0_thresh, int32_t ___1_octaves, float ___2_patternScale, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_BRISK_create1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_BRISK_create1)(___0_thresh, ___1_octaves, ___2_patternScale);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_thresh, ___1_octaves, ___2_patternScale);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_BRISK_create2(System.Single[],System.Int32,System.Int32[],System.Int32,System.Single,System.Single,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_BRISK_create2_m80EF21B8F33554863F90F90BE043754277DB81A1 (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___0_radiusList, int32_t ___1_radiusListLength, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_numberList, int32_t ___3_numberListLength, float ___4_dMax, float ___5_dMin, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___6_indexChange, int32_t ___7_indexChangeLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (float*, int32_t, int32_t*, int32_t, float, float, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(float) + sizeof(float) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_BRISK_create2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_radiusList' to native representation
	float* ____0_radiusList_marshaled = NULL;
	if (___0_radiusList != NULL)
	{
		____0_radiusList_marshaled = reinterpret_cast<float*>((___0_radiusList)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_numberList' to native representation
	int32_t* ____2_numberList_marshaled = NULL;
	if (___2_numberList != NULL)
	{
		____2_numberList_marshaled = reinterpret_cast<int32_t*>((___2_numberList)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___6_indexChange' to native representation
	int32_t* ____6_indexChange_marshaled = NULL;
	if (___6_indexChange != NULL)
	{
		____6_indexChange_marshaled = reinterpret_cast<int32_t*>((___6_indexChange)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_BRISK_create2)(____0_radiusList_marshaled, ___1_radiusListLength, ____2_numberList_marshaled, ___3_numberListLength, ___4_dMax, ___5_dMin, ____6_indexChange_marshaled, ___7_indexChangeLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_radiusList_marshaled, ___1_radiusListLength, ____2_numberList_marshaled, ___3_numberListLength, ___4_dMax, ___5_dMin, ____6_indexChange_marshaled, ___7_indexChangeLength);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_BRISK_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_BRISK_delete_m85C49CC47CE3241E904569EC39BC2FC061EB8F65 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_BRISK_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_BRISK_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_BRISK_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_BRISK_get_m8BD515238BB413961B22BF936313FC41106280F7 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_BRISK_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_BRISK_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_add(System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_add_mDC29C55D531CF46666FDC08A5A013F73125EB31C (intptr_t ___0_obj, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_descriptors, int32_t ___2_descriptorLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_add", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_descriptors' to native representation
	intptr_t* ____1_descriptors_marshaled = NULL;
	if (___1_descriptors != NULL)
	{
		____1_descriptors_marshaled = reinterpret_cast<intptr_t*>((___1_descriptors)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_add)(___0_obj, ____1_descriptors_marshaled, ___2_descriptorLength);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_descriptors_marshaled, ___2_descriptorLength);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_getTrainDescriptors(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_getTrainDescriptors_mE5B9ACBD37152D7862F39297EAE9CFE2507ECA39 (intptr_t ___0_obj, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_getTrainDescriptors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_getTrainDescriptors)(___0_obj, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_clear(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_clear_mFD507679242484CFBD0D8628B886348FF74023B2 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_clear", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_clear)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_DescriptorMatcher_empty_mBC830FD9A3C3606B903CBA4AA529F78D16730735 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_empty)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_isMaskSupported(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_DescriptorMatcher_isMaskSupported_m984EF8D585AA917A9C47A42B1683DF7889861775 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_isMaskSupported", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_isMaskSupported)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_train(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_train_m36A9DED7B8A553D759E24E4EBCFE0953AF4E88FF (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_train", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_train)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_match1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_match1_mAD0622AFBC946F7F354262AA0FF658741D2FA359 (intptr_t ___0_obj, intptr_t ___1_queryDescriptors, intptr_t ___2_trainDescriptors, intptr_t ___3_matches, intptr_t ___4_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_match1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_match1)(___0_obj, ___1_queryDescriptors, ___2_trainDescriptors, ___3_matches, ___4_mask);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_queryDescriptors, ___2_trainDescriptors, ___3_matches, ___4_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_knnMatch1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_knnMatch1_m30D7A0EF2244296D91F47F69ACFFD262B56DBA6F (intptr_t ___0_obj, intptr_t ___1_queryDescriptors, intptr_t ___2_trainDescriptors, intptr_t ___3_matches, int32_t ___4_k, intptr_t ___5_mask, int32_t ___6_compactResult, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_knnMatch1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_knnMatch1)(___0_obj, ___1_queryDescriptors, ___2_trainDescriptors, ___3_matches, ___4_k, ___5_mask, ___6_compactResult);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_queryDescriptors, ___2_trainDescriptors, ___3_matches, ___4_k, ___5_mask, ___6_compactResult);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_radiusMatch1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_radiusMatch1_mB9A12AB2ACEEFD0F8A318C158E3EB36678C2F31E (intptr_t ___0_obj, intptr_t ___1_queryDescriptors, intptr_t ___2_trainDescriptors, intptr_t ___3_matches, float ___4_maxDistance, intptr_t ___5_mask, int32_t ___6_compactResult, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, float, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_radiusMatch1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_radiusMatch1)(___0_obj, ___1_queryDescriptors, ___2_trainDescriptors, ___3_matches, ___4_maxDistance, ___5_mask, ___6_compactResult);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_queryDescriptors, ___2_trainDescriptors, ___3_matches, ___4_maxDistance, ___5_mask, ___6_compactResult);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_match2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_match2_m78A72E6108A2850BD81CB1B37DFECB00F0143B03 (intptr_t ___0_obj, intptr_t ___1_queryDescriptors, intptr_t ___2_matches, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___3_masks, int32_t ___4_masksSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_match2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___3_masks' to native representation
	intptr_t* ____3_masks_marshaled = NULL;
	if (___3_masks != NULL)
	{
		____3_masks_marshaled = reinterpret_cast<intptr_t*>((___3_masks)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_match2)(___0_obj, ___1_queryDescriptors, ___2_matches, ____3_masks_marshaled, ___4_masksSize);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_queryDescriptors, ___2_matches, ____3_masks_marshaled, ___4_masksSize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_knnMatch2(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_knnMatch2_m8193C7EBBFB63BBAD586CC8C1A6A75755616E7E7 (intptr_t ___0_obj, intptr_t ___1_queryDescriptors, intptr_t ___2_matches, int32_t ___3_k, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___4_masks, int32_t ___5_masksSize, int32_t ___6_compactResult, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, intptr_t*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_knnMatch2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___4_masks' to native representation
	intptr_t* ____4_masks_marshaled = NULL;
	if (___4_masks != NULL)
	{
		____4_masks_marshaled = reinterpret_cast<intptr_t*>((___4_masks)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_knnMatch2)(___0_obj, ___1_queryDescriptors, ___2_matches, ___3_k, ____4_masks_marshaled, ___5_masksSize, ___6_compactResult);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_queryDescriptors, ___2_matches, ___3_k, ____4_masks_marshaled, ___5_masksSize, ___6_compactResult);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_radiusMatch2(System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.IntPtr[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_DescriptorMatcher_radiusMatch2_m51AEFDAB480685EEB38D5133A079C6C4FF6F3B62 (intptr_t ___0_obj, intptr_t ___1_queryDescriptors, intptr_t ___2_matches, float ___3_maxDistance, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___4_masks, int32_t ___5_masksSize, int32_t ___6_compactResult, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, float, intptr_t*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_radiusMatch2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___4_masks' to native representation
	intptr_t* ____4_masks_marshaled = NULL;
	if (___4_masks != NULL)
	{
		____4_masks_marshaled = reinterpret_cast<intptr_t*>((___4_masks)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_radiusMatch2)(___0_obj, ___1_queryDescriptors, ___2_matches, ___3_maxDistance, ____4_masks_marshaled, ___5_masksSize, ___6_compactResult);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_queryDescriptors, ___2_matches, ___3_maxDistance, ____4_masks_marshaled, ___5_masksSize, ___6_compactResult);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_DescriptorMatcher_create(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_DescriptorMatcher_create_m08F5F0CC3130D0C678D21A459FAB51C2042981FF (String_t* ___0_descriptorMatcherType, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_DescriptorMatcher_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_descriptorMatcherType' to native representation
	char* ____0_descriptorMatcherType_marshaled = NULL;
	____0_descriptorMatcherType_marshaled = il2cpp_codegen_marshal_string(___0_descriptorMatcherType);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_DescriptorMatcher_create)(____0_descriptorMatcherType_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_descriptorMatcherType_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_descriptorMatcherType' native representation
	il2cpp_codegen_marshal_free(____0_descriptorMatcherType_marshaled);
	____0_descriptorMatcherType_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_DescriptorMatcher_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_DescriptorMatcher_get_mB6641906D436F20B962D9D4974B61865D46F69CC (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_DescriptorMatcher_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_DescriptorMatcher_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_DescriptorMatcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_DescriptorMatcher_delete_m4E30A929BDAB21D0785099D6B46A300E7E10F576 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_DescriptorMatcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_DescriptorMatcher_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_BFMatcher_new(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_BFMatcher_new_m6148A840BBAA6BA92CC604BD6F3A25804B908B19 (int32_t ___0_normType, int32_t ___1_crossCheck, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_BFMatcher_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_BFMatcher_new)(___0_normType, ___1_crossCheck);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_normType, ___1_crossCheck);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_BFMatcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_BFMatcher_delete_mF69BA8BAF6C6100F442FFEA710830AEBB96B6C9B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_BFMatcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_BFMatcher_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_BFMatcher_isMaskSupported(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_BFMatcher_isMaskSupported_mDDD838368FBF3D5DD5EF2FF48A6477684A15E0BA (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_BFMatcher_isMaskSupported", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_BFMatcher_isMaskSupported)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_BFMatcher_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_BFMatcher_get_m4E5D1914A10D0E644047F5D444B88F3C974F75EA (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_BFMatcher_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_BFMatcher_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_BFMatcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_BFMatcher_delete_mF401DF6A4617B334F9014893D1AF495235A3D454 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_BFMatcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_BFMatcher_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_new(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_FlannBasedMatcher_new_m87C6628375C7DBB84D2CC6810602ABED27FFD1B8 (intptr_t ___0_indexParams, intptr_t ___1_searchParams, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_new)(___0_indexParams, ___1_searchParams);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_indexParams, ___1_searchParams);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FlannBasedMatcher_delete_m0A425A3402F20A9FBAD50CF41C569B04B9E55A8C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_add(System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FlannBasedMatcher_add_m5F42D5298DF5402ABC32D4699DB0CEC6EE6600DB (intptr_t ___0_obj, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_descriptors, int32_t ___2_descriptorsSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_add", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_descriptors' to native representation
	intptr_t* ____1_descriptors_marshaled = NULL;
	if (___1_descriptors != NULL)
	{
		____1_descriptors_marshaled = reinterpret_cast<intptr_t*>((___1_descriptors)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_add)(___0_obj, ____1_descriptors_marshaled, ___2_descriptorsSize);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_descriptors_marshaled, ___2_descriptorsSize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_clear(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FlannBasedMatcher_clear_m7EF634463EEC4877D746BCB60A3063EC518FAC8B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_clear", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_clear)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_train(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FlannBasedMatcher_train_m860E87503A05D7D6B3E0A2367A40EF525FBACBFC (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_train", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_train)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_FlannBasedMatcher_isMaskSupported(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_FlannBasedMatcher_isMaskSupported_mE9ADFC8F0D7791BE43C45643A75A768BD958E0F7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FlannBasedMatcher_isMaskSupported", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FlannBasedMatcher_isMaskSupported)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_FlannBasedMatcher_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_FlannBasedMatcher_get_mB8A093D1E26B331E6FAE2911629B28FBFDFF8361 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_FlannBasedMatcher_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_FlannBasedMatcher_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_FlannBasedMatcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_FlannBasedMatcher_delete_m096283304F4BCBD55E774A6109E2602FB26D3907 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_FlannBasedMatcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_FlannBasedMatcher_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_FAST1(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FAST1_m186AD286369C6E7095352FC661CBAB2521CE9E9F (intptr_t ___0_image, intptr_t ___1_keypoints, int32_t ___2_threshold, int32_t ___3_nonmaxSupression, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FAST1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FAST1)(___0_image, ___1_keypoints, ___2_threshold, ___3_nonmaxSupression);
	#else
	il2cppPInvokeFunc(___0_image, ___1_keypoints, ___2_threshold, ___3_nonmaxSupression);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_FAST2(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FAST2_m3689D40BEE68D27AF04A85C9221663FBB77F5ADC (intptr_t ___0_image, intptr_t ___1_keypoints, int32_t ___2_threshold, int32_t ___3_nonmaxSupression, int32_t ___4_type, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FAST2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FAST2)(___0_image, ___1_keypoints, ___2_threshold, ___3_nonmaxSupression, ___4_type);
	#else
	il2cppPInvokeFunc(___0_image, ___1_keypoints, ___2_threshold, ___3_nonmaxSupression, ___4_type);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_create(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_FastFeatureDetector_create_m0C7B3D1523C80928C7FAD6098E10E1E361A1BA01 (int32_t ___0_threshold, int32_t ___1_nonmaxSuppression, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_create)(___0_threshold, ___1_nonmaxSuppression);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_threshold, ___1_nonmaxSuppression);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_FastFeatureDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_FastFeatureDetector_delete_mCA49EE1EBF637C457CC9FDF42061789D268A3315 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_FastFeatureDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_FastFeatureDetector_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_FastFeatureDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_FastFeatureDetector_get_m5DA591E4EA78EF97A05DDAAB15AE3330F9A1BE4B (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_FastFeatureDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_FastFeatureDetector_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_setThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FastFeatureDetector_setThreshold_m048B6877176620CB5E59BE0B58919C194B8D0E35 (intptr_t ___0_obj, int32_t ___1_threshold, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_setThreshold)(___0_obj, ___1_threshold);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_threshold);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_FastFeatureDetector_getThreshold_mCFC8A1136E531A3B1E1BDCFECDBAFD9B58EA4906 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_getThreshold)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_setNonmaxSuppression(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FastFeatureDetector_setNonmaxSuppression_mBAA64AA120C82963D2F73F844BC07267CBD37A26 (intptr_t ___0_obj, int32_t ___1_f, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_setNonmaxSuppression", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_setNonmaxSuppression)(___0_obj, ___1_f);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_f);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_getNonmaxSuppression(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_FastFeatureDetector_getNonmaxSuppression_m64CCA1E4F8BF7C94AF98BF0B26CBCCA5537C27B1 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_getNonmaxSuppression", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_getNonmaxSuppression)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_setType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_FastFeatureDetector_setType_m69FCE1BF6C7A96E14DFA208A93D80D0A8209AD54 (intptr_t ___0_obj, int32_t ___1_type, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_setType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_setType)(___0_obj, ___1_type);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_type);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_FastFeatureDetector_getType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_FastFeatureDetector_getType_mC4B4D7AB1F4AB5AD837E66EC40461E648EE1447C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_FastFeatureDetector_getType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_FastFeatureDetector_getType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_Feature2D_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_Feature2D_get_m314DD4BCE52CE266878148228667791C4C42EBCA (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_Feature2D_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_Feature2D_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_Feature2D_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_Feature2D_delete_mB2B443E5254A64614D4481C6F0C03A0AF6EECE82 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_Feature2D_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_Feature2D_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_detect_Mat1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_detect_Mat1_mE800B3BC29651600FC1977EE7F43EA46CCBE8888 (intptr_t ___0_detector, intptr_t ___1_image, intptr_t ___2_keypoints, intptr_t ___3_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_detect_Mat1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_detect_Mat1)(___0_detector, ___1_image, ___2_keypoints, ___3_mask);
	#else
	il2cppPInvokeFunc(___0_detector, ___1_image, ___2_keypoints, ___3_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_detect_Mat2(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_detect_Mat2_mD940936B4F5C4C7C117C724EFC8E24BF162AD23E (intptr_t ___0_detector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_images, int32_t ___2_imageLength, intptr_t ___3_keypoints, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___4_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_detect_Mat2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_images' to native representation
	intptr_t* ____1_images_marshaled = NULL;
	if (___1_images != NULL)
	{
		____1_images_marshaled = reinterpret_cast<intptr_t*>((___1_images)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_mask' to native representation
	intptr_t* ____4_mask_marshaled = NULL;
	if (___4_mask != NULL)
	{
		____4_mask_marshaled = reinterpret_cast<intptr_t*>((___4_mask)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_detect_Mat2)(___0_detector, ____1_images_marshaled, ___2_imageLength, ___3_keypoints, ____4_mask_marshaled);
	#else
	il2cppPInvokeFunc(___0_detector, ____1_images_marshaled, ___2_imageLength, ___3_keypoints, ____4_mask_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_detect_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_detect_InputArray_m4CD6F4489FEA4EB0FCD073C8043777DE90FBC918 (intptr_t ___0_detector, intptr_t ___1_image, intptr_t ___2_keypoints, intptr_t ___3_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_detect_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_detect_InputArray)(___0_detector, ___1_image, ___2_keypoints, ___3_mask);
	#else
	il2cppPInvokeFunc(___0_detector, ___1_image, ___2_keypoints, ___3_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_compute1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_compute1_m8784F894ECBD58140310B995F2E62EE9393732AB (intptr_t ___0_obj, intptr_t ___1_image, intptr_t ___2_keypoints, intptr_t ___3_descriptors, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_compute1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_compute1)(___0_obj, ___1_image, ___2_keypoints, ___3_descriptors);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image, ___2_keypoints, ___3_descriptors);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_compute2(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_compute2_mA2EBE33BA355EEB047ABEB7407C9C865C6D3FAC4 (intptr_t ___0_detector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_images, int32_t ___2_imageLength, intptr_t ___3_keypoints, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___4_descriptors, int32_t ___5_descriptorsLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_compute2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_images' to native representation
	intptr_t* ____1_images_marshaled = NULL;
	if (___1_images != NULL)
	{
		____1_images_marshaled = reinterpret_cast<intptr_t*>((___1_images)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_descriptors' to native representation
	intptr_t* ____4_descriptors_marshaled = NULL;
	if (___4_descriptors != NULL)
	{
		____4_descriptors_marshaled = reinterpret_cast<intptr_t*>((___4_descriptors)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_compute2)(___0_detector, ____1_images_marshaled, ___2_imageLength, ___3_keypoints, ____4_descriptors_marshaled, ___5_descriptorsLength);
	#else
	il2cppPInvokeFunc(___0_detector, ____1_images_marshaled, ___2_imageLength, ___3_keypoints, ____4_descriptors_marshaled, ___5_descriptorsLength);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_Feature2D_detectAndCompute(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Feature2D_detectAndCompute_mC44ECFA83EC8D6E2D4740908210AE70B70944E7C (intptr_t ___0_detector, intptr_t ___1_image, intptr_t ___2_mask, intptr_t ___3_keypoints, intptr_t ___4_descriptors, int32_t ___5_useProvidedKeypoints, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_detectAndCompute", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Feature2D_detectAndCompute)(___0_detector, ___1_image, ___2_mask, ___3_keypoints, ___4_descriptors, ___5_useProvidedKeypoints);
	#else
	il2cppPInvokeFunc(___0_detector, ___1_image, ___2_mask, ___3_keypoints, ___4_descriptors, ___5_useProvidedKeypoints);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_Feature2D_descriptorSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_Feature2D_descriptorSize_m36EAF8E7B9236C2787C7369C141711CA0769D86C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_descriptorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Feature2D_descriptorSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::features2d_Feature2D_descriptorType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_Feature2D_descriptorType_m07A46EECEE26C8FB9B3A2C0870FA52A355DCCA05 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_descriptorType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Feature2D_descriptorType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::features2d_Feature2D_defaultNorm(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_Feature2D_defaultNorm_m7F7E0797053B34D21BB8BDB77D2BC27AC728AD01 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_defaultNorm", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Feature2D_defaultNorm)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::features2d_Feature2D_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_Feature2D_empty_m0B59AB5376075B723299E01195CBFB9CF0475767 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Feature2D_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Feature2D_empty)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_GFTTDetector_create(System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_GFTTDetector_create_m007DB2EF63DBF09DC7BE9C222E114B0A0C6F6D63 (int32_t ___0_maxCorners, double ___1_qualityLevel, double ___2_minDistance, int32_t ___3_blockSize, int32_t ___4_useHarrisDetector, double ___5_k, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double, double, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_create)(___0_maxCorners, ___1_qualityLevel, ___2_minDistance, ___3_blockSize, ___4_useHarrisDetector, ___5_k);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_maxCorners, ___1_qualityLevel, ___2_minDistance, ___3_blockSize, ___4_useHarrisDetector, ___5_k);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_GFTTDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_GFTTDetector_get_mC4F2A7D553487F6834930A7B84DBC1C275BA56FA (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_GFTTDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_GFTTDetector_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_GFTTDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_GFTTDetector_delete_mA0076519F16AE0F52B1B41A828D0C87A638066EE (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_GFTTDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_GFTTDetector_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setMaxFeatures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setMaxFeatures_m6F3DC14D92E2E3733B2E2C2166F9DDC121F363A5 (intptr_t ___0_obj, int32_t ___1_maxFeatures, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setMaxFeatures)(___0_obj, ___1_maxFeatures);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_maxFeatures);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_GFTTDetector_getMaxFeatures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_GFTTDetector_getMaxFeatures_mC7CF002118521714F2070E3FCE7678273B4967E3 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getMaxFeatures)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setQualityLevel(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setQualityLevel_m9931D40111E2464F476D902D63D14CCA06EDBAD6 (intptr_t ___0_obj, double ___1_qlevel, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setQualityLevel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setQualityLevel)(___0_obj, ___1_qlevel);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_qlevel);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_GFTTDetector_getQualityLevel(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_GFTTDetector_getQualityLevel_mF6A7E917FF58C211FF91245B2E595D2181EEE8B0 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getQualityLevel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getQualityLevel)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setMinDistance(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setMinDistance_m4DBC123DAFC41C5FFC2933234E1E04D9F1F3CD02 (intptr_t ___0_obj, double ___1_minDistance, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setMinDistance", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setMinDistance)(___0_obj, ___1_minDistance);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_minDistance);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_GFTTDetector_getMinDistance(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_GFTTDetector_getMinDistance_mD3E1D27475EDBB900BCBD27079DD87B3AA0147D5 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getMinDistance", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getMinDistance)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setBlockSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setBlockSize_m71302EC574A9CC5DA51BA88FDC810329DB694B3A (intptr_t ___0_obj, int32_t ___1_blockSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setBlockSize)(___0_obj, ___1_blockSize);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_blockSize);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_GFTTDetector_getBlockSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_GFTTDetector_getBlockSize_m04E4BD95EA99F05F28649B13522CE489A4FCE077 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getBlockSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getBlockSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setHarrisDetector(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setHarrisDetector_m699D44822B0381DFBD31A3876D1E0B7BD29F815E (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setHarrisDetector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setHarrisDetector)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_GFTTDetector_getHarrisDetector(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_GFTTDetector_getHarrisDetector_m85320F9D97315A9626E482FD1C87E8E26BFB085C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getHarrisDetector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getHarrisDetector)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_GFTTDetector_setK(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_GFTTDetector_setK_mAF068EDE4745FD8FB4A0056EA59DB78511B3BE1F (intptr_t ___0_obj, double ___1_k, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_setK", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_setK)(___0_obj, ___1_k);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_k);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_GFTTDetector_getK(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_GFTTDetector_getK_m5AB2E15FE3DD7E30A1EBA659247E48938588EDB9 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_GFTTDetector_getK", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_GFTTDetector_getK)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_KAZE_create(System.Boolean,System.Boolean,System.Single,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_KAZE_create_m904D536177F61BDED708517B4FB83ABA12FBB3D8 (bool ___0_extended, bool ___1_upright, float ___2_threshold, int32_t ___3_nOctaves, int32_t ___4_nOctaveLayers, int32_t ___5_diffusivity, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, float, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 4 + 4 + sizeof(float) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_create)(static_cast<int32_t>(___0_extended), static_cast<int32_t>(___1_upright), ___2_threshold, ___3_nOctaves, ___4_nOctaveLayers, ___5_diffusivity);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(static_cast<int32_t>(___0_extended), static_cast<int32_t>(___1_upright), ___2_threshold, ___3_nOctaves, ___4_nOctaveLayers, ___5_diffusivity);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_KAZE_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_KAZE_delete_m247B57A566A51928D1DBD9D196E05959E00F591C (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_KAZE_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_KAZE_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_KAZE_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_KAZE_get_mD120A70598D5829B174AD8DAC4BF41CCCF264485 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_KAZE_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_KAZE_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setDiffusivity(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setDiffusivity_m1E1813CBC3BCF9744059FD470D7143C576083BF6 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setDiffusivity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setDiffusivity)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_KAZE_getDiffusivity(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_KAZE_getDiffusivity_m6F315C1A23C741277FB9A9AD3159C697EB3197F8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getDiffusivity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getDiffusivity)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setExtended(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setExtended_m638F8DF8B54EEBACD90DE7505BF800A741AF5529 (intptr_t ___0_obj, bool ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setExtended", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setExtended)(___0_obj, static_cast<int32_t>(___1_val));
	#else
	il2cppPInvokeFunc(___0_obj, static_cast<int32_t>(___1_val));
	#endif

}
// System.Boolean OpenCvSharp.NativeMethods::features2d_KAZE_getExtended(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_features2d_KAZE_getExtended_m295642F737AA85E4AB4CD7AE9E90ED84A8B0E434 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getExtended", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getExtended)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setNOctaveLayers(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setNOctaveLayers_m3B6EE3EA63E758798476B20D93934937AE814297 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setNOctaveLayers)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_KAZE_getNOctaveLayers(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_KAZE_getNOctaveLayers_mB94B3FCB8F4271832BBA7964C59800BE68F60A09 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getNOctaveLayers)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setNOctaves(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setNOctaves_mDEB6AE84A3A3BE522BC1DE507CCE0C1EE3584DE1 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setNOctaves)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_KAZE_getNOctaves(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_KAZE_getNOctaves_m35DBF136B331FCD44E3EDFD2928E218E9FAC3F46 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getNOctaves)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setThreshold_mFD02B97209785405E1DCD0AA44A06337E417F882 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setThreshold)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_KAZE_getThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_KAZE_getThreshold_mF44340A4448D147DAF305366CDF747930CF2E976 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getThreshold)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_KAZE_setUpright(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KAZE_setUpright_m0492AA94A00CD760F6CAFD983E59F5624A780E65 (intptr_t ___0_obj, bool ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_setUpright", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KAZE_setUpright)(___0_obj, static_cast<int32_t>(___1_val));
	#else
	il2cppPInvokeFunc(___0_obj, static_cast<int32_t>(___1_val));
	#endif

}
// System.Boolean OpenCvSharp.NativeMethods::features2d_KAZE_getUpright(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_features2d_KAZE_getUpright_mC05577F5396EF6E9D2E793A26E636A648DFB2CCF (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KAZE_getUpright", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_KAZE_getUpright)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Void OpenCvSharp.NativeMethods::features2d_KeyPointsFilter_runByImageBorder(System.IntPtr,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KeyPointsFilter_runByImageBorder_m2D514EE3F81F3FD316A48165285F30E9A69D2A8A (intptr_t ___0_keypoints, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_imageSize, int32_t ___2_borderSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KeyPointsFilter_runByImageBorder", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KeyPointsFilter_runByImageBorder)(___0_keypoints, ___1_imageSize, ___2_borderSize);
	#else
	il2cppPInvokeFunc(___0_keypoints, ___1_imageSize, ___2_borderSize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_KeyPointsFilter_runByKeypointSize(System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KeyPointsFilter_runByKeypointSize_mD47EA2FF15A188F2F9D184E9B717AE6DE5817A50 (intptr_t ___0_keypoints, float ___1_minSize, float ___2_maxSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KeyPointsFilter_runByKeypointSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KeyPointsFilter_runByKeypointSize)(___0_keypoints, ___1_minSize, ___2_maxSize);
	#else
	il2cppPInvokeFunc(___0_keypoints, ___1_minSize, ___2_maxSize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_KeyPointsFilter_runByPixelsMask(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KeyPointsFilter_runByPixelsMask_m6E95839E6E8E9881D1AD100F21248E75EB362C48 (intptr_t ___0_keypoints, intptr_t ___1_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KeyPointsFilter_runByPixelsMask", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KeyPointsFilter_runByPixelsMask)(___0_keypoints, ___1_mask);
	#else
	il2cppPInvokeFunc(___0_keypoints, ___1_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_KeyPointsFilter_removeDuplicated(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KeyPointsFilter_removeDuplicated_m0E29B851C9F45E3DB435D848018FE9FA6397DDCC (intptr_t ___0_keypoints, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KeyPointsFilter_removeDuplicated", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KeyPointsFilter_removeDuplicated)(___0_keypoints);
	#else
	il2cppPInvokeFunc(___0_keypoints);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_KeyPointsFilter_retainBest(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_KeyPointsFilter_retainBest_mA640A74779291E40865388141D6BB6B20764B6F5 (intptr_t ___0_keypoints, int32_t ___1_npoints, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_KeyPointsFilter_retainBest", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_KeyPointsFilter_retainBest)(___0_keypoints, ___1_npoints);
	#else
	il2cppPInvokeFunc(___0_keypoints, ___1_npoints);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_MSER_create(System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_MSER_create_m822EA7D852F42A2B2E2DF2D08DCC37D93AC1FF00 (int32_t ___0_delta, int32_t ___1_minArea, int32_t ___2_maxArea, double ___3_maxVariation, double ___4_minDiversity, int32_t ___5_maxEvolution, double ___6_areaThreshold, double ___7_minMargin, int32_t ___8_edgeBlurSize, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, double, double, int32_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_MSER_create)(___0_delta, ___1_minArea, ___2_maxArea, ___3_maxVariation, ___4_minDiversity, ___5_maxEvolution, ___6_areaThreshold, ___7_minMargin, ___8_edgeBlurSize);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_delta, ___1_minArea, ___2_maxArea, ___3_maxVariation, ___4_minDiversity, ___5_maxEvolution, ___6_areaThreshold, ___7_minMargin, ___8_edgeBlurSize);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_MSER_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_MSER_delete_mB88B1AA14B878C8E83EFA4606A797E11AADAC3BB (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_MSER_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_MSER_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_MSER_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_MSER_get_m4A80CF220176FF56E1511D4DAA41FB80A277F431 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_MSER_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_MSER_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_MSER_detectRegions(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_MSER_detectRegions_m435FD1A00CE3FA40A579A07AA744C0AEA9DB91CF (intptr_t ___0_obj, intptr_t ___1_image, intptr_t ___2_msers, intptr_t ___3_bboxes, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_detectRegions", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_MSER_detectRegions)(___0_obj, ___1_image, ___2_msers, ___3_bboxes);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image, ___2_msers, ___3_bboxes);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::features2d_MSER_setDelta(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_MSER_setDelta_mB6144DAFE35816A060B31C4E5667E4B4ED898C5A (intptr_t ___0_obj, int32_t ___1_delta, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_setDelta", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_MSER_setDelta)(___0_obj, ___1_delta);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_delta);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_MSER_getDelta(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_MSER_getDelta_m391FCC37909BBF470E2AB32285B208A7704594EE (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_getDelta", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_MSER_getDelta)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_MSER_setMinArea(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_MSER_setMinArea_mABE5EFA2CA9ADF3B1AC56C602A859D8CF343EB1E (intptr_t ___0_obj, int32_t ___1_minArea, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_setMinArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_MSER_setMinArea)(___0_obj, ___1_minArea);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_minArea);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_MSER_getMinArea(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_MSER_getMinArea_m553DE8AC8F246D0EAB4EFF25752AEC89CADD98CF (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_getMinArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_MSER_getMinArea)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_MSER_setMaxArea(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_MSER_setMaxArea_m64FD137CD431CF547276C13CD2BAC6BC2B86C196 (intptr_t ___0_obj, int32_t ___1_maxArea, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_setMaxArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_MSER_setMaxArea)(___0_obj, ___1_maxArea);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_maxArea);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_MSER_getMaxArea(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_MSER_getMaxArea_m64FB05ED76C00A285E0CE7BE22C28884AD3E9743 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_getMaxArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_MSER_getMaxArea)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_MSER_setPass2Only(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_MSER_setPass2Only_mACE2564A938135EBE12AEB348A837B480AB1BFCF (intptr_t ___0_obj, int32_t ___1_f, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_setPass2Only", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_MSER_setPass2Only)(___0_obj, ___1_f);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_f);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_MSER_getPass2Only(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_MSER_getPass2Only_m62A544E47363834D7CB7E5F2004C90FD1D163603 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_MSER_getPass2Only", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_MSER_getPass2Only)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_ORB_create(System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_ORB_create_m6C3AFB7EC42AAB0957203D7A64896B4275594729 (int32_t ___0_nFeatures, float ___1_scaleFactor, int32_t ___2_nlevels, int32_t ___3_edgeThreshold, int32_t ___4_firstLevel, int32_t ___5_wtaK, int32_t ___6_scoreType, int32_t ___7_patchSize, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, float, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_create)(___0_nFeatures, ___1_scaleFactor, ___2_nlevels, ___3_edgeThreshold, ___4_firstLevel, ___5_wtaK, ___6_scoreType, ___7_patchSize);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_nFeatures, ___1_scaleFactor, ___2_nlevels, ___3_edgeThreshold, ___4_firstLevel, ___5_wtaK, ___6_scoreType, ___7_patchSize);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_ORB_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_ORB_delete_mF94F580F19C68F3F823379A860F9AA85CCD039DF (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_ORB_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_ORB_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_ORB_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_ORB_get_m0C7DEFBF2A9EDB22C518DB0D25ED8AE3BC455FD8 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_ORB_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_ORB_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setMaxFeatures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setMaxFeatures_mA6FF6689654D6541A6EBF92CEC9C96D069FACFC1 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setMaxFeatures)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getMaxFeatures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getMaxFeatures_m8995C35E18CCDAC32F1B98D42984411D1E054148 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getMaxFeatures)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setScaleFactor(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setScaleFactor_mEC50749412C31B259E558B6A6B78100941439724 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setScaleFactor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setScaleFactor)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::features2d_ORB_getScaleFactor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_features2d_ORB_getScaleFactor_m1F8CDE4F757C171F71F327D9AADDA77911ABC006 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getScaleFactor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getScaleFactor)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setNLevels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setNLevels_m59FFC0BF011A89258639A4F1999B09916D307938 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setNLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setNLevels)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getNLevels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getNLevels_mE2BC18784125C6F21FF50948CD2D9D3336083466 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getNLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getNLevels)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setEdgeThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setEdgeThreshold_m9CB8C33939896C62AD12CBBA78B9BE7C71964D94 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setEdgeThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setEdgeThreshold)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getEdgeThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getEdgeThreshold_m0759D602F65247F59B70DEEE21B38AC9653FFADB (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getEdgeThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getEdgeThreshold)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setFirstLevel(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setFirstLevel_m7DD06C3E93F4F07DFE5270E7C8DF74AF44741720 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setFirstLevel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setFirstLevel)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getFirstLevel(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getFirstLevel_mF1ACF9F05428D1524A0225FAC81EAA4F45BA5E52 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getFirstLevel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getFirstLevel)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setWTA_K(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setWTA_K_m59E3C34F980A71779DBF22169FD9A7850DE811C9 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setWTA_K", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setWTA_K)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getWTA_K(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getWTA_K_mB20A1DCD9F8270D311EC5FDE82895211F7D337EF (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getWTA_K", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getWTA_K)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setScoreType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setScoreType_m94990E7B48AA40A4CD1A6B4EC63FE901DBC8876E (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setScoreType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setScoreType)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getScoreType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getScoreType_m75BC44190B575ED695DB38F85908BFF57D20040C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getScoreType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getScoreType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setPatchSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setPatchSize_mC5F5B3C852043FED703F527433AB55DDC7E0CE25 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setPatchSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setPatchSize)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getPatchSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getPatchSize_m2AE9E75EA1A0A3AE0D53E46EAC7A19504BE9665B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getPatchSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getPatchSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_ORB_setFastThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_ORB_setFastThreshold_m3FB134D18FF728554AA660E148A1D2A07105AC06 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_setFastThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_ORB_setFastThreshold)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::features2d_ORB_getFastThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_features2d_ORB_getFastThreshold_m983A2DD8CC2E5101388B9DAB608D831421D68DE9 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_ORB_getFastThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_ORB_getFastThreshold)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_SimpleBlobDetector_create(OpenCvSharp.SimpleBlobDetector/WParams&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_SimpleBlobDetector_create_m50F83A62C1B701064EF6BCAB5250686539051FE4 (WParams_tF352D7BCB627DF6ABFC3538BAE8B601298495A54* ___0_parameters, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (WParams_tF352D7BCB627DF6ABFC3538BAE8B601298495A54*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(WParams_tF352D7BCB627DF6ABFC3538BAE8B601298495A54*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_SimpleBlobDetector_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_SimpleBlobDetector_create)(___0_parameters);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_parameters);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::features2d_Ptr_SimpleBlobDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_features2d_Ptr_SimpleBlobDetector_get_mE0CD8990C963F5269C13F02B66A66857993E2A5A (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_SimpleBlobDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(features2d_Ptr_SimpleBlobDetector_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::features2d_Ptr_SimpleBlobDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_features2d_Ptr_SimpleBlobDetector_delete_m79ED2BCA1232809FABD199EA27D16CBB73546EDE (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "features2d_Ptr_SimpleBlobDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(features2d_Ptr_SimpleBlobDetector_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getGaussianKernel(System.Int32,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getGaussianKernel_m5CEDBFA0CE9E0B11D3EE8A4DA9F204E32E329B5A (int32_t ___0_ksize, double ___1_sigma, int32_t ___2_ktype, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getGaussianKernel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getGaussianKernel)(___0_ksize, ___1_sigma, ___2_ktype);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ksize, ___1_sigma, ___2_ktype);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_getDerivKernels(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_getDerivKernels_mEFB0820356776DA7EB379F81AD1F651A695EA791 (intptr_t ___0_kx, intptr_t ___1_ky, int32_t ___2_dx, int32_t ___3_dy, int32_t ___4_ksize, int32_t ___5_normalize, int32_t ___6_ktype, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getDerivKernels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_getDerivKernels)(___0_kx, ___1_ky, ___2_dx, ___3_dy, ___4_ksize, ___5_normalize, ___6_ktype);
	#else
	il2cppPInvokeFunc(___0_kx, ___1_ky, ___2_dx, ___3_dy, ___4_ksize, ___5_normalize, ___6_ktype);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getGaborKernel(OpenCvSharp.Size,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getGaborKernel_m019D4933A2CDFECD97CB5DBB495126814666A030 (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___0_ksize, double ___1_sigma, double ___2_theta, double ___3_lambd, double ___4_gamma, double ___5_psi, int32_t ___6_ktype, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getGaborKernel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getGaborKernel)(___0_ksize, ___1_sigma, ___2_theta, ___3_lambd, ___4_gamma, ___5_psi, ___6_ktype);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ksize, ___1_sigma, ___2_theta, ___3_lambd, ___4_gamma, ___5_psi, ___6_ktype);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getStructuringElement(System.Int32,OpenCvSharp.Size,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getStructuringElement_m5B0A6A6A4D175512DECF203E5A201B53894D150E (int32_t ___0_shape, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_ksize, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___2_anchor, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getStructuringElement", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getStructuringElement)(___0_shape, ___1_ksize, ___2_anchor);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_shape, ___1_ksize, ___2_anchor);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_copyMakeBorder(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_copyMakeBorder_mBADEAE4FAA9272542BE336233FE34217B581631C (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_top, int32_t ___3_bottom, int32_t ___4_left, int32_t ___5_right, int32_t ___6_borderType, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___7_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_copyMakeBorder", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_copyMakeBorder)(___0_src, ___1_dst, ___2_top, ___3_bottom, ___4_left, ___5_right, ___6_borderType, ___7_value);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_top, ___3_bottom, ___4_left, ___5_right, ___6_borderType, ___7_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_medianBlur(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_medianBlur_mFDD6FB73FAA81C3AD38DAF8807D5876E0B23198A (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_ksize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_medianBlur", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_medianBlur)(___0_src, ___1_dst, ___2_ksize);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_ksize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GaussianBlur(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GaussianBlur_m920B2D69163A606DA6D38A63C13C24C9166FCFFB (intptr_t ___0_src, intptr_t ___1_dst, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_ksize, double ___3_sigmaX, double ___4_sigmaY, int32_t ___5_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GaussianBlur", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GaussianBlur)(___0_src, ___1_dst, ___2_ksize, ___3_sigmaX, ___4_sigmaY, ___5_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_ksize, ___3_sigmaX, ___4_sigmaY, ___5_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_bilateralFilter(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_bilateralFilter_mE6666B19C661EF75C6B11E139173A8527E0DE36D (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_d, double ___3_sigmaColor, double ___4_sigmaSpace, int32_t ___5_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_bilateralFilter", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_bilateralFilter)(___0_src, ___1_dst, ___2_d, ___3_sigmaColor, ___4_sigmaSpace, ___5_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_d, ___3_sigmaColor, ___4_sigmaSpace, ___5_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_boxFilter(System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.Size,OpenCvSharp.Point,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_boxFilter_m8CA4320C3B6AA8BF89D0C8CE7FF8E10DF5745FED (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_ddepth, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___3_ksize, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___4_anchor, int32_t ___5_normalize, int32_t ___6_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_boxFilter", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_boxFilter)(___0_src, ___1_dst, ___2_ddepth, ___3_ksize, ___4_anchor, ___5_normalize, ___6_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_ddepth, ___3_ksize, ___4_anchor, ___5_normalize, ___6_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_blur(System.IntPtr,System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Point,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_blur_mD70F1F2FD3C75F8D04E3CA937FD30F20214418D3 (intptr_t ___0_src, intptr_t ___1_dst, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_ksize, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___3_anchor, int32_t ___4_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_blur", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_blur)(___0_src, ___1_dst, ___2_ksize, ___3_anchor, ___4_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_ksize, ___3_anchor, ___4_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_filter2D(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,OpenCvSharp.Point,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_filter2D_m62C2E811CB4E4275E7FD8F32B1D8E6838497613A (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_ddepth, intptr_t ___3_kernel, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___4_anchor, double ___5_delta, int32_t ___6_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_filter2D", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_filter2D)(___0_src, ___1_dst, ___2_ddepth, ___3_kernel, ___4_anchor, ___5_delta, ___6_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_ddepth, ___3_kernel, ___4_anchor, ___5_delta, ___6_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_sepFilter2D(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,OpenCvSharp.Point,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_sepFilter2D_m0EBD9A8008D78E0C696EBDA403E1DBB1375AEC1A (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_ddepth, intptr_t ___3_kernelX, intptr_t ___4_kernelY, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___5_anchor, double ___6_delta, int32_t ___7_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_sepFilter2D", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_sepFilter2D)(___0_src, ___1_dst, ___2_ddepth, ___3_kernelX, ___4_kernelY, ___5_anchor, ___6_delta, ___7_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_ddepth, ___3_kernelX, ___4_kernelY, ___5_anchor, ___6_delta, ___7_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Sobel(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Sobel_mFD013909CC9E6E787854F3545EB7587F5D8A323E (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_ddepth, int32_t ___3_dx, int32_t ___4_dy, int32_t ___5_ksize, double ___6_scale, double ___7_delta, int32_t ___8_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t, int32_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Sobel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Sobel)(___0_src, ___1_dst, ___2_ddepth, ___3_dx, ___4_dy, ___5_ksize, ___6_scale, ___7_delta, ___8_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_ddepth, ___3_dx, ___4_dy, ___5_ksize, ___6_scale, ___7_delta, ___8_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Scharr(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Scharr_m0D558D2663FE2CE8FF2A18A92E112E6B92CA634E (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_ddepth, int32_t ___3_dx, int32_t ___4_dy, double ___5_scale, double ___6_delta, int32_t ___7_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Scharr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Scharr)(___0_src, ___1_dst, ___2_ddepth, ___3_dx, ___4_dy, ___5_scale, ___6_delta, ___7_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_ddepth, ___3_dx, ___4_dy, ___5_scale, ___6_delta, ___7_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Laplacian(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Laplacian_m90C6ACBE99B627BFCB5928D55D30775882B853BA (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_ddepth, int32_t ___3_ksize, double ___4_scale, double ___5_delta, int32_t ___6_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Laplacian", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Laplacian)(___0_src, ___1_dst, ___2_ddepth, ___3_ksize, ___4_scale, ___5_delta, ___6_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_ddepth, ___3_ksize, ___4_scale, ___5_delta, ___6_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Canny(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Canny_m25914843FB5F31CB2F837F02C07DCEB86241475E (intptr_t ___0_src, intptr_t ___1_edges, double ___2_threshold1, double ___3_threshold2, int32_t ___4_apertureSize, int32_t ___5_L2gradient, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Canny", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Canny)(___0_src, ___1_edges, ___2_threshold1, ___3_threshold2, ___4_apertureSize, ___5_L2gradient);
	#else
	il2cppPInvokeFunc(___0_src, ___1_edges, ___2_threshold1, ___3_threshold2, ___4_apertureSize, ___5_L2gradient);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_cornerEigenValsAndVecs(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_cornerEigenValsAndVecs_mC759D45EBAA3D949F40AB368C0ABA3FCE4A395F1 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_blockSize, int32_t ___3_ksize, int32_t ___4_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_cornerEigenValsAndVecs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_cornerEigenValsAndVecs)(___0_src, ___1_dst, ___2_blockSize, ___3_ksize, ___4_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_blockSize, ___3_ksize, ___4_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_preCornerDetect(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_preCornerDetect_m5D4B970B8CFE6981A8EE6C481B08B33C8099C9D0 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_ksize, int32_t ___3_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_preCornerDetect", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_preCornerDetect)(___0_src, ___1_dst, ___2_ksize, ___3_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_ksize, ___3_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_cornerSubPix(System.IntPtr,System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_cornerSubPix_m0A2100CB8CB9D7923C965FEA6F6D3109C9111709 (intptr_t ___0_image, intptr_t ___1_corners, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_winSize, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___3_zeroZone, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___4_criteria, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_cornerSubPix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_cornerSubPix)(___0_image, ___1_corners, ___2_winSize, ___3_zeroZone, ___4_criteria);
	#else
	il2cppPInvokeFunc(___0_image, ___1_corners, ___2_winSize, ___3_zeroZone, ___4_criteria);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_goodFeaturesToTrack(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double,System.IntPtr,System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_goodFeaturesToTrack_mAFA0C0160AE08B45BBE183A7690C390425705183 (intptr_t ___0_src, intptr_t ___1_corners, int32_t ___2_maxCorners, double ___3_qualityLevel, double ___4_minDistance, intptr_t ___5_mask, int32_t ___6_blockSize, int32_t ___7_useHarrisDetector, double ___8_k, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double, intptr_t, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_goodFeaturesToTrack", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_goodFeaturesToTrack)(___0_src, ___1_corners, ___2_maxCorners, ___3_qualityLevel, ___4_minDistance, ___5_mask, ___6_blockSize, ___7_useHarrisDetector, ___8_k);
	#else
	il2cppPInvokeFunc(___0_src, ___1_corners, ___2_maxCorners, ___3_qualityLevel, ___4_minDistance, ___5_mask, ___6_blockSize, ___7_useHarrisDetector, ___8_k);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_HoughLines(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_HoughLines_m80BEFF8DF1D02A3C230C0F60C44F607BEDBD195E (intptr_t ___0_src, intptr_t ___1_lines, double ___2_rho, double ___3_theta, int32_t ___4_threshold, double ___5_srn, double ___6_stn, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_HoughLines", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_HoughLines)(___0_src, ___1_lines, ___2_rho, ___3_theta, ___4_threshold, ___5_srn, ___6_stn);
	#else
	il2cppPInvokeFunc(___0_src, ___1_lines, ___2_rho, ___3_theta, ___4_threshold, ___5_srn, ___6_stn);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_HoughLinesP(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_HoughLinesP_m4C689611DDCEE4DB33AF5C03ACB9D3F13DC7F68B (intptr_t ___0_src, intptr_t ___1_lines, double ___2_rho, double ___3_theta, int32_t ___4_threshold, double ___5_minLineLength, double ___6_maxLineG, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_HoughLinesP", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_HoughLinesP)(___0_src, ___1_lines, ___2_rho, ___3_theta, ___4_threshold, ___5_minLineLength, ___6_maxLineG);
	#else
	il2cppPInvokeFunc(___0_src, ___1_lines, ___2_rho, ___3_theta, ___4_threshold, ___5_minLineLength, ___6_maxLineG);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_HoughCircles(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_HoughCircles_mB58488243AD0A6FF594A988F1A8DE1772F4A65A5 (intptr_t ___0_src, intptr_t ___1_circles, int32_t ___2_method, double ___3_dp, double ___4_minDist, double ___5_param1, double ___6_param2, int32_t ___7_minRadius, int32_t ___8_maxRadius, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double, double, double, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_HoughCircles", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_HoughCircles)(___0_src, ___1_circles, ___2_method, ___3_dp, ___4_minDist, ___5_param1, ___6_param2, ___7_minRadius, ___8_maxRadius);
	#else
	il2cppPInvokeFunc(___0_src, ___1_circles, ___2_method, ___3_dp, ___4_minDist, ___5_param1, ___6_param2, ___7_minRadius, ___8_maxRadius);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_erode(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Point,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_erode_mD84B677C29D8308FF1C3B5EEB79AA56513C72B37 (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_kernel, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___3_anchor, int32_t ___4_iterations, int32_t ___5_borderType, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___6_borderValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_erode", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_erode)(___0_src, ___1_dst, ___2_kernel, ___3_anchor, ___4_iterations, ___5_borderType, ___6_borderValue);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_kernel, ___3_anchor, ___4_iterations, ___5_borderType, ___6_borderValue);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_dilate(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Point,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_dilate_mBDFE6A2C3ADFD07E0709B59957C1E9AD81D4B71D (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_kernel, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___3_anchor, int32_t ___4_iterations, int32_t ___5_borderType, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___6_borderValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_dilate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_dilate)(___0_src, ___1_dst, ___2_kernel, ___3_anchor, ___4_iterations, ___5_borderType, ___6_borderValue);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_kernel, ___3_anchor, ___4_iterations, ___5_borderType, ___6_borderValue);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_morphologyEx(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,OpenCvSharp.Point,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_morphologyEx_m809241AAD68D5F2C80490C9C5CE0BD6DA67F821A (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_op, intptr_t ___3_kernel, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___4_anchor, int32_t ___5_iterations, int32_t ___6_borderType, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___7_borderValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_morphologyEx", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_morphologyEx)(___0_src, ___1_dst, ___2_op, ___3_kernel, ___4_anchor, ___5_iterations, ___6_borderType, ___7_borderValue);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_op, ___3_kernel, ___4_anchor, ___5_iterations, ___6_borderType, ___7_borderValue);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_resize(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_resize_m9AA7DE0487FBE8B4F01E22C0C2FE6E3849C83813 (intptr_t ___0_src, intptr_t ___1_dst, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_dsize, double ___3_fx, double ___4_fy, int32_t ___5_interpolation, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_resize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_resize)(___0_src, ___1_dst, ___2_dsize, ___3_fx, ___4_fy, ___5_interpolation);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_dsize, ___3_fx, ___4_fy, ___5_interpolation);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_warpAffine(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_warpAffine_mE11794D9B825B9E0806246002C86081262E4C201 (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_m, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___3_dsize, int32_t ___4_flags, int32_t ___5_borderMode, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___6_borderValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_warpAffine", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_warpAffine)(___0_src, ___1_dst, ___2_m, ___3_dsize, ___4_flags, ___5_borderMode, ___6_borderValue);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_m, ___3_dsize, ___4_flags, ___5_borderMode, ___6_borderValue);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_warpPerspective_MisInputArray(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_warpPerspective_MisInputArray_mD3B805E8DA5E471A54DF58A3915A3144C714BBEB (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_m, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___3_dsize, int32_t ___4_flags, int32_t ___5_borderMode, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___6_borderValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_warpPerspective_MisInputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_warpPerspective_MisInputArray)(___0_src, ___1_dst, ___2_m, ___3_dsize, ___4_flags, ___5_borderMode, ___6_borderValue);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_m, ___3_dsize, ___4_flags, ___5_borderMode, ___6_borderValue);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_warpPerspective_MisArray(System.IntPtr,System.IntPtr,System.Single[,],System.Int32,System.Int32,OpenCvSharp.Size,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_warpPerspective_MisArray_m36EBD22154DFF05BC268EAADE80A0D6DA6D94DF4 (intptr_t ___0_src, intptr_t ___1_dst, SingleU5BU2CU5D_t8C95DA2D5056EB0490FC7DCB1ED30E33DE1D53F4* ___2_m, int32_t ___3_mRow, int32_t ___4_mCol, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___5_dsize, int32_t ___6_flags, int32_t ___7_borderMode, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___8_borderValue, const RuntimeMethod* method) 
{
	IL2CPP_RAISE_MANAGED_EXCEPTION(il2cpp_codegen_get_marshal_directive_exception("Cannot marshal type 'System.Single[,]'."), NULL);
}
// System.Void OpenCvSharp.NativeMethods::imgproc_remap(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_remap_m4C811277DB4B9FAC767762B1B60F372A8648FD11 (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_map1, intptr_t ___3_map2, int32_t ___4_interpolation, int32_t ___5_borderMode, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___6_borderValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_remap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_remap)(___0_src, ___1_dst, ___2_map1, ___3_map2, ___4_interpolation, ___5_borderMode, ___6_borderValue);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_map1, ___3_map2, ___4_interpolation, ___5_borderMode, ___6_borderValue);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convertMaps(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convertMaps_mB3289FDC806B484E44F7AF1917986113B8AF1A86 (intptr_t ___0_map1, intptr_t ___1_map2, intptr_t ___2_dstmap1, intptr_t ___3_dstmap2, int32_t ___4_dstmap1Type, int32_t ___5_nninterpolation, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convertMaps", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convertMaps)(___0_map1, ___1_map2, ___2_dstmap1, ___3_dstmap2, ___4_dstmap1Type, ___5_nninterpolation);
	#else
	il2cppPInvokeFunc(___0_map1, ___1_map2, ___2_dstmap1, ___3_dstmap2, ___4_dstmap1Type, ___5_nninterpolation);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getRotationMatrix2D(OpenCvSharp.Point2f,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getRotationMatrix2D_m7833FB5E5C0BAB4613FED13C693D3977CD01717C (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___0_center, double ___1_angle, double ___2_scale, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getRotationMatrix2D", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getRotationMatrix2D)(___0_center, ___1_angle, ___2_scale);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_center, ___1_angle, ___2_scale);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_invertAffineTransform(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_invertAffineTransform_m41CD7BE334E3F66654BEC8D17A77DDFC91409090 (intptr_t ___0_m, intptr_t ___1_im, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_invertAffineTransform", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_invertAffineTransform)(___0_m, ___1_im);
	#else
	il2cppPInvokeFunc(___0_m, ___1_im);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getPerspectiveTransform1(OpenCvSharp.Point2f[],OpenCvSharp.Point2f[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getPerspectiveTransform1_mEE671F222F53C92A9A0E3163243EE03394D75C3E (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_src, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___1_dst, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getPerspectiveTransform1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_src' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_src_marshaled = NULL;
	if (___0_src != NULL)
	{
		____0_src_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_src)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___1_dst' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getPerspectiveTransform1)(____0_src_marshaled, ____1_dst_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_src_marshaled, ____1_dst_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getPerspectiveTransform2(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getPerspectiveTransform2_m5D974EE64DC03BFDB1B4A4C64F50E19B083B6F7F (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getPerspectiveTransform2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getPerspectiveTransform2)(___0_src, ___1_dst);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getAffineTransform1(OpenCvSharp.Point2f[],OpenCvSharp.Point2f[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getAffineTransform1_m6438CF823E28038AD192FAE6486FEDF4966C7D2E (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_src, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___1_dst, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getAffineTransform1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_src' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_src_marshaled = NULL;
	if (___0_src != NULL)
	{
		____0_src_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_src)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___1_dst' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getAffineTransform1)(____0_src_marshaled, ____1_dst_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_src_marshaled, ____1_dst_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getAffineTransform2(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getAffineTransform2_m2EBFDA3847C8962D5127E78DEBB37A9CD96503B8 (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getAffineTransform2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getAffineTransform2)(___0_src, ___1_dst);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_getRectSubPix(System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Point2f,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_getRectSubPix_m0D6A23C5F083F5A2BE8D7A0E89AEA33733B93189 (intptr_t ___0_image, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_patchSize, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___2_center, intptr_t ___3_patch, int32_t ___4_patchType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getRectSubPix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_getRectSubPix)(___0_image, ___1_patchSize, ___2_center, ___3_patch, ___4_patchType);
	#else
	il2cppPInvokeFunc(___0_image, ___1_patchSize, ___2_center, ___3_patch, ___4_patchType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_logPolar(System.IntPtr,System.IntPtr,OpenCvSharp.Point2f,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_logPolar_m8A05D45AC3F87D6D09AD37B0C9C632EB57E19936 (intptr_t ___0_src, intptr_t ___1_dst, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___2_center, double ___3_m, int32_t ___4_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_logPolar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_logPolar)(___0_src, ___1_dst, ___2_center, ___3_m, ___4_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_center, ___3_m, ___4_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_linearPolar(System.IntPtr,System.IntPtr,OpenCvSharp.Point2f,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_linearPolar_m7C277471ECFFC2CD31339177EB56728986670DB7 (intptr_t ___0_src, intptr_t ___1_dst, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___2_center, double ___3_maxRadius, int32_t ___4_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_linearPolar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_linearPolar)(___0_src, ___1_dst, ___2_center, ___3_maxRadius, ___4_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_center, ___3_maxRadius, ___4_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_integral1(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_integral1_m576B8101D0273BA1C690C8329D6B0B45661BFD99 (intptr_t ___0_src, intptr_t ___1_sum, int32_t ___2_sdepth, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_integral1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_integral1)(___0_src, ___1_sum, ___2_sdepth);
	#else
	il2cppPInvokeFunc(___0_src, ___1_sum, ___2_sdepth);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_integral2(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_integral2_mC12A89AD1A8D35906E3F7E24351BCF8DDEEAF6F3 (intptr_t ___0_src, intptr_t ___1_sum, intptr_t ___2_sqsum, int32_t ___3_sdepth, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_integral2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_integral2)(___0_src, ___1_sum, ___2_sqsum, ___3_sdepth);
	#else
	il2cppPInvokeFunc(___0_src, ___1_sum, ___2_sqsum, ___3_sdepth);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_integral3(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_integral3_mCCD1DDFE4A595D71FAF56EF5174BB642C0D1470B (intptr_t ___0_src, intptr_t ___1_sum, intptr_t ___2_sqsum, intptr_t ___3_tilted, int32_t ___4_sdepth, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_integral3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_integral3)(___0_src, ___1_sum, ___2_sqsum, ___3_tilted, ___4_sdepth);
	#else
	il2cppPInvokeFunc(___0_src, ___1_sum, ___2_sqsum, ___3_tilted, ___4_sdepth);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_accumulate(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_accumulate_mD0D594E06D7B6E82DED8523B31AF656DBB9BEBFD (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_accumulate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_accumulate)(___0_src, ___1_dst, ___2_mask);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_accumulateSquare(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_accumulateSquare_m15D638C762FC71E070BA8C2A4916AFAFCBCFF756 (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_accumulateSquare", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_accumulateSquare)(___0_src, ___1_dst, ___2_mask);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_accumulateProduct(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_accumulateProduct_m4ED9CBCFB49BC0D9215C7E2F98DEB52D6D5E3885 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_dst, intptr_t ___3_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_accumulateProduct", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_accumulateProduct)(___0_src1, ___1_src2, ___2_dst, ___3_mask);
	#else
	il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_dst, ___3_mask);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_accumulateWeighted(System.IntPtr,System.IntPtr,System.Double,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_accumulateWeighted_m0655AC54A4FA4794E956DC7164D597F1878C495C (intptr_t ___0_src, intptr_t ___1_dst, double ___2_alpha, intptr_t ___3_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_accumulateWeighted", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_accumulateWeighted)(___0_src, ___1_dst, ___2_alpha, ___3_mask);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_alpha, ___3_mask);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_PSNR(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_PSNR_m2485A02FE9A231480757CC9C3EEE4D6513BED0CD (intptr_t ___0_src1, intptr_t ___1_src2, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_PSNR", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_PSNR)(___0_src1, ___1_src2);
	#else
	double returnValue = il2cppPInvokeFunc(___0_src1, ___1_src2);
	#endif

	return returnValue;
}
// OpenCvSharp.Point2d OpenCvSharp.NativeMethods::imgproc_phaseCorrelate(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C NativeMethods_imgproc_phaseCorrelate_m7FBF4E9C96FFF07A0BCD5E0150F14DFC7A36AFB8 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_window, const RuntimeMethod* method) 
{
	typedef Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_phaseCorrelate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C returnValue = reinterpret_cast<PInvokeFunc>(imgproc_phaseCorrelate)(___0_src1, ___1_src2, ___2_window);
	#else
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C returnValue = il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_window);
	#endif

	return returnValue;
}
// OpenCvSharp.Point2d OpenCvSharp.NativeMethods::imgproc_phaseCorrelateRes(System.IntPtr,System.IntPtr,System.IntPtr,System.Double&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C NativeMethods_imgproc_phaseCorrelateRes_mD4352F1588037E7A005CF3FAD56E4703F7E74ED7 (intptr_t ___0_src1, intptr_t ___1_src2, intptr_t ___2_window, double* ___3_response, const RuntimeMethod* method) 
{
	typedef Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_phaseCorrelateRes", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C returnValue = reinterpret_cast<PInvokeFunc>(imgproc_phaseCorrelateRes)(___0_src1, ___1_src2, ___2_window, ___3_response);
	#else
	Point2d_tD665ADB6819834E40D5C00D69B387BF279231B9C returnValue = il2cppPInvokeFunc(___0_src1, ___1_src2, ___2_window, ___3_response);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_createHanningWindow(System.IntPtr,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_createHanningWindow_m04E836E332287CE3C37D1E4C3B5A496FB97641C3 (intptr_t ___0_dst, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_winSize, int32_t ___2_type, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_createHanningWindow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_createHanningWindow)(___0_dst, ___1_winSize, ___2_type);
	#else
	il2cppPInvokeFunc(___0_dst, ___1_winSize, ___2_type);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_threshold(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_threshold_m2CB20A8876607C05BF717E8EEF1FD34E6DC07531 (intptr_t ___0_src, intptr_t ___1_dst, double ___2_thresh, double ___3_maxval, int32_t ___4_type, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_threshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_threshold)(___0_src, ___1_dst, ___2_thresh, ___3_maxval, ___4_type);
	#else
	double returnValue = il2cppPInvokeFunc(___0_src, ___1_dst, ___2_thresh, ___3_maxval, ___4_type);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_adaptiveThreshold(System.IntPtr,System.IntPtr,System.Double,System.Int32,System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_adaptiveThreshold_m82B2105CE639DC139B310991220CA7BE38B9A171 (intptr_t ___0_src, intptr_t ___1_dst, double ___2_maxValue, int32_t ___3_adaptiveMethod, int32_t ___4_thresholdType, int32_t ___5_blockSize, double ___6_c, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, int32_t, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_adaptiveThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_adaptiveThreshold)(___0_src, ___1_dst, ___2_maxValue, ___3_adaptiveMethod, ___4_thresholdType, ___5_blockSize, ___6_c);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_maxValue, ___3_adaptiveMethod, ___4_thresholdType, ___5_blockSize, ___6_c);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_pyrDown(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_pyrDown_m152CA733EC89602C2CD7B1E16414A39AB4F8E132 (intptr_t ___0_src, intptr_t ___1_dst, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_dstsize, int32_t ___3_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pyrDown", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_pyrDown)(___0_src, ___1_dst, ___2_dstsize, ___3_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_dstsize, ___3_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_pyrUp(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_pyrUp_m7E54F612E8200BB5BFD6B6DF4BA948C50A701ACC (intptr_t ___0_src, intptr_t ___1_dst, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_dstsize, int32_t ___3_borderType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pyrUp", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_pyrUp)(___0_src, ___1_dst, ___2_dstsize, ___3_borderType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_dstsize, ___3_borderType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_undistort(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_undistort_mDF62F9911CA27BEA4C7AABE705D303E874919396 (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_cameraMatrix, intptr_t ___3_distCoeffs, intptr_t ___4_newCameraMatrix, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_undistort", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_undistort)(___0_src, ___1_dst, ___2_cameraMatrix, ___3_distCoeffs, ___4_newCameraMatrix);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_cameraMatrix, ___3_distCoeffs, ___4_newCameraMatrix);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_initUndistortRectifyMap(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_initUndistortRectifyMap_mE9C1036C278D5F857BB03012D50819DC63C2BB0D (intptr_t ___0_cameraMatrix, intptr_t ___1_distCoeffs, intptr_t ___2_r, intptr_t ___3_newCameraMatrix, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___4_size, int32_t ___5_m1Type, intptr_t ___6_map1, intptr_t ___7_map2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_initUndistortRectifyMap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_initUndistortRectifyMap)(___0_cameraMatrix, ___1_distCoeffs, ___2_r, ___3_newCameraMatrix, ___4_size, ___5_m1Type, ___6_map1, ___7_map2);
	#else
	il2cppPInvokeFunc(___0_cameraMatrix, ___1_distCoeffs, ___2_r, ___3_newCameraMatrix, ___4_size, ___5_m1Type, ___6_map1, ___7_map2);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::imgproc_initWideAngleProjMap(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.Int32,System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_imgproc_initWideAngleProjMap_mB9EB24C44919D4086A10E9F1A0E8A708253578DC (intptr_t ___0_cameraMatrix, intptr_t ___1_distCoeffs, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_imageSize, int32_t ___3_destImageWidth, int32_t ___4_m1Type, intptr_t ___5_map1, intptr_t ___6_map2, int32_t ___7_projType, double ___8_alpha, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_initWideAngleProjMap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(imgproc_initWideAngleProjMap)(___0_cameraMatrix, ___1_distCoeffs, ___2_imageSize, ___3_destImageWidth, ___4_m1Type, ___5_map1, ___6_map2, ___7_projType, ___8_alpha);
	#else
	float returnValue = il2cppPInvokeFunc(___0_cameraMatrix, ___1_distCoeffs, ___2_imageSize, ___3_destImageWidth, ___4_m1Type, ___5_map1, ___6_map2, ___7_projType, ___8_alpha);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_getDefaultNewCameraMatrix(System.IntPtr,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_getDefaultNewCameraMatrix_m0E61EF2E216A64A41343948F2F9DB97E67163BC9 (intptr_t ___0_cameraMatrix, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_imgSize, int32_t ___2_centerPrincipalPoint, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_getDefaultNewCameraMatrix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_getDefaultNewCameraMatrix)(___0_cameraMatrix, ___1_imgSize, ___2_centerPrincipalPoint);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_cameraMatrix, ___1_imgSize, ___2_centerPrincipalPoint);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_undistortPoints(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_undistortPoints_m6FC74F5EB58A53FC52A37C66318A80BCF6822C00 (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_cameraMatrix, intptr_t ___3_distCoeffs, intptr_t ___4_r, intptr_t ___5_p, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_undistortPoints", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_undistortPoints)(___0_src, ___1_dst, ___2_cameraMatrix, ___3_distCoeffs, ___4_r, ___5_p);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_cameraMatrix, ___3_distCoeffs, ___4_r, ___5_p);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_calcHist1(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.Int32,System.Int32[],System.IntPtr[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_calcHist1_mFE12836AF312E8CC9FD299FCA6A43B62012790C4 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_images, int32_t ___1_nimages, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_channels, intptr_t ___3_mask, intptr_t ___4_hist, int32_t ___5_dims, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___6_histSize, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___7_ranges, int32_t ___8_uniform, int32_t ___9_accumulate, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, int32_t*, intptr_t, intptr_t, int32_t, int32_t*, intptr_t*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_calcHist1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_images' to native representation
	intptr_t* ____0_images_marshaled = NULL;
	if (___0_images != NULL)
	{
		____0_images_marshaled = reinterpret_cast<intptr_t*>((___0_images)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_channels' to native representation
	int32_t* ____2_channels_marshaled = NULL;
	if (___2_channels != NULL)
	{
		____2_channels_marshaled = reinterpret_cast<int32_t*>((___2_channels)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___6_histSize' to native representation
	int32_t* ____6_histSize_marshaled = NULL;
	if (___6_histSize != NULL)
	{
		____6_histSize_marshaled = reinterpret_cast<int32_t*>((___6_histSize)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___7_ranges' to native representation
	intptr_t* ____7_ranges_marshaled = NULL;
	if (___7_ranges != NULL)
	{
		____7_ranges_marshaled = reinterpret_cast<intptr_t*>((___7_ranges)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_calcHist1)(____0_images_marshaled, ___1_nimages, ____2_channels_marshaled, ___3_mask, ___4_hist, ___5_dims, ____6_histSize_marshaled, ____7_ranges_marshaled, ___8_uniform, ___9_accumulate);
	#else
	il2cppPInvokeFunc(____0_images_marshaled, ___1_nimages, ____2_channels_marshaled, ___3_mask, ___4_hist, ___5_dims, ____6_histSize_marshaled, ____7_ranges_marshaled, ___8_uniform, ___9_accumulate);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_calcBackProject(System.IntPtr[],System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_calcBackProject_mB78AF58FC9F6EEBD76E9B6B5863C8933842F06EE (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_images, int32_t ___1_nimages, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_channels, intptr_t ___3_hist, intptr_t ___4_backProject, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___5_ranges, int32_t ___6_uniform, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, int32_t*, intptr_t, intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_calcBackProject", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_images' to native representation
	intptr_t* ____0_images_marshaled = NULL;
	if (___0_images != NULL)
	{
		____0_images_marshaled = reinterpret_cast<intptr_t*>((___0_images)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_channels' to native representation
	int32_t* ____2_channels_marshaled = NULL;
	if (___2_channels != NULL)
	{
		____2_channels_marshaled = reinterpret_cast<int32_t*>((___2_channels)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___5_ranges' to native representation
	intptr_t* ____5_ranges_marshaled = NULL;
	if (___5_ranges != NULL)
	{
		____5_ranges_marshaled = reinterpret_cast<intptr_t*>((___5_ranges)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_calcBackProject)(____0_images_marshaled, ___1_nimages, ____2_channels_marshaled, ___3_hist, ___4_backProject, ____5_ranges_marshaled, ___6_uniform);
	#else
	il2cppPInvokeFunc(____0_images_marshaled, ___1_nimages, ____2_channels_marshaled, ___3_hist, ___4_backProject, ____5_ranges_marshaled, ___6_uniform);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_compareHist1(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_compareHist1_mF314B3015655FA8F2ED23CC5A0B006EA85B88442 (intptr_t ___0_h1, intptr_t ___1_h2, int32_t ___2_method, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_compareHist1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_compareHist1)(___0_h1, ___1_h2, ___2_method);
	#else
	double returnValue = il2cppPInvokeFunc(___0_h1, ___1_h2, ___2_method);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_equalizeHist(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_equalizeHist_mC86847DF30C7D42BB8279F72EF243002AECD03A2 (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_equalizeHist", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_equalizeHist)(___0_src, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::imgproc_EMD(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.Single&,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_imgproc_EMD_m94C89D445E409F2554009E6085E4E54606BC19F5 (intptr_t ___0_signature1, intptr_t ___1_signature2, int32_t ___2_distType, intptr_t ___3_cost, float* ___4_lowerBound, intptr_t ___5_flow, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, float*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(float*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_EMD", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(imgproc_EMD)(___0_signature1, ___1_signature2, ___2_distType, ___3_cost, ___4_lowerBound, ___5_flow);
	#else
	float returnValue = il2cppPInvokeFunc(___0_signature1, ___1_signature2, ___2_distType, ___3_cost, ___4_lowerBound, ___5_flow);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_watershed(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_watershed_mB8B6F49B3FFBDA9FD540C418B09DA77C69549B8B (intptr_t ___0_image, intptr_t ___1_markers, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_watershed", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_watershed)(___0_image, ___1_markers);
	#else
	il2cppPInvokeFunc(___0_image, ___1_markers);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_pyrMeanShiftFiltering(System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_pyrMeanShiftFiltering_m1BFB915263370368A1EE5F095E9AA30A0D5AAE17 (intptr_t ___0_src, intptr_t ___1_dst, double ___2_sp, double ___3_sr, int32_t ___4_maxLevel, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___5_termcrit, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pyrMeanShiftFiltering", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_pyrMeanShiftFiltering)(___0_src, ___1_dst, ___2_sp, ___3_sr, ___4_maxLevel, ___5_termcrit);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_sp, ___3_sr, ___4_maxLevel, ___5_termcrit);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_grabCut(System.IntPtr,System.IntPtr,OpenCvSharp.Rect,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_grabCut_m461F5849109D1BBDCF14FE5BEB922929EF6B02E1 (intptr_t ___0_img, intptr_t ___1_mask, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___2_rect, intptr_t ___3_bgdModel, intptr_t ___4_fgdModel, int32_t ___5_iterCount, int32_t ___6_mode, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_grabCut", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_grabCut)(___0_img, ___1_mask, ___2_rect, ___3_bgdModel, ___4_fgdModel, ___5_iterCount, ___6_mode);
	#else
	il2cppPInvokeFunc(___0_img, ___1_mask, ___2_rect, ___3_bgdModel, ___4_fgdModel, ___5_iterCount, ___6_mode);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_distanceTransformWithLabels(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_distanceTransformWithLabels_mA8427D558B965BC272632EC96622E8482B6CFDCC (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_labels, int32_t ___3_distanceType, int32_t ___4_maskSize, int32_t ___5_labelType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_distanceTransformWithLabels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_distanceTransformWithLabels)(___0_src, ___1_dst, ___2_labels, ___3_distanceType, ___4_maskSize, ___5_labelType);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_labels, ___3_distanceType, ___4_maskSize, ___5_labelType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_distanceTransform(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_distanceTransform_m1A59FA77C60011D2DC28755617BCB202C1613080 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_distanceType, int32_t ___3_maskSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_distanceTransform", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_distanceTransform)(___0_src, ___1_dst, ___2_distanceType, ___3_maskSize);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_distanceType, ___3_maskSize);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_floodFill(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Scalar,OpenCvSharp.Rect&,OpenCvSharp.Scalar,OpenCvSharp.Scalar,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_floodFill_m25B571C4DA82B60EF6E9ACBCF55EF5CD4D7CE0C3 (intptr_t ___0_image, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___1_seedPoint, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___2_newVal, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___3_rect, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___4_loDiff, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___5_upDiff, int32_t ___6_flags, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_floodFill1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_floodFill1)(___0_image, ___1_seedPoint, ___2_newVal, ___3_rect, ___4_loDiff, ___5_upDiff, ___6_flags);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_image, ___1_seedPoint, ___2_newVal, ___3_rect, ___4_loDiff, ___5_upDiff, ___6_flags);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_floodFill(System.IntPtr,System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Scalar,OpenCvSharp.Rect&,OpenCvSharp.Scalar,OpenCvSharp.Scalar,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_floodFill_m3A2C2DE23486A8DDD4AD4D70A1CD7D5CC11E513C (intptr_t ___0_image, intptr_t ___1_mask, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___2_seedPoint, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___3_newVal, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___4_rect, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___5_loDiff, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___6_upDiff, int32_t ___7_flags, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_floodFill2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_floodFill2)(___0_image, ___1_mask, ___2_seedPoint, ___3_newVal, ___4_rect, ___5_loDiff, ___6_upDiff, ___7_flags);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_image, ___1_mask, ___2_seedPoint, ___3_newVal, ___4_rect, ___5_loDiff, ___6_upDiff, ___7_flags);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_cvtColor(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_cvtColor_m2C7AAEA0EE7B29B710CCF05CAC7CF1481143B978 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_code, int32_t ___3_dstCn, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_cvtColor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_cvtColor)(___0_src, ___1_dst, ___2_code, ___3_dstCn);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_code, ___3_dstCn);
	#endif

}
// OpenCvSharp.Moments/NativeStruct OpenCvSharp.NativeMethods::imgproc_moments(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 NativeMethods_imgproc_moments_m944E19C119DF82AA98D3142CB11C5A1BB0109C22 (intptr_t ___0_arr, int32_t ___1_binaryImage, const RuntimeMethod* method) 
{
	typedef NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_moments", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_moments)(___0_arr, ___1_binaryImage);
	#else
	NativeStruct_tB25EB88E7E834223F80F1F898DE4BE9853B6D3C8 returnValue = il2cppPInvokeFunc(___0_arr, ___1_binaryImage);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_matchTemplate(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_matchTemplate_m5647A257D02D1889BE92D66917E2BA74A4A9D84D (intptr_t ___0_image, intptr_t ___1_templ, intptr_t ___2_result, int32_t ___3_method, intptr_t ___4_mask, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_matchTemplate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_matchTemplate)(___0_image, ___1_templ, ___2_result, ___3_method, ___4_mask);
	#else
	il2cppPInvokeFunc(___0_image, ___1_templ, ___2_result, ___3_method, ___4_mask);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_connectedComponents(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_connectedComponents_m2E49BBA4FB2FBBBE1A0C204BE478FA4626BF5A1A (intptr_t ___0_image, intptr_t ___1_labels, int32_t ___2_connectivity, int32_t ___3_ltype, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_connectedComponents", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_connectedComponents)(___0_image, ___1_labels, ___2_connectivity, ___3_ltype);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_image, ___1_labels, ___2_connectivity, ___3_ltype);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_connectedComponentsWithStats(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_connectedComponentsWithStats_m24C8BDB69D70D465E4CD03A547FB31048FFB1CEE (intptr_t ___0_image, intptr_t ___1_labels, intptr_t ___2_stats, intptr_t ___3_centroids, int32_t ___4_connectivity, int32_t ___5_ltype, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_connectedComponentsWithStats", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_connectedComponentsWithStats)(___0_image, ___1_labels, ___2_stats, ___3_centroids, ___4_connectivity, ___5_ltype);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_image, ___1_labels, ___2_stats, ___3_centroids, ___4_connectivity, ___5_ltype);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_findContours1_vector(System.IntPtr,System.IntPtr&,System.IntPtr&,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_findContours1_vector_m1803F4888C6FFB06031E1C94171199D1EE6CEBF0 (intptr_t ___0_image, intptr_t* ___1_contours, intptr_t* ___2_hierarchy, int32_t ___3_mode, int32_t ___4_method, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___5_offset, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(intptr_t*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_findContours1_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_findContours1_vector)(___0_image, ___1_contours, ___2_hierarchy, ___3_mode, ___4_method, ___5_offset);
	#else
	il2cppPInvokeFunc(___0_image, ___1_contours, ___2_hierarchy, ___3_mode, ___4_method, ___5_offset);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_findContours1_OutputArray(System.IntPtr,System.IntPtr&,System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_findContours1_OutputArray_m29D174899509FAA48E553B6DD33CEF583A79E6EC (intptr_t ___0_image, intptr_t* ___1_contours, intptr_t ___2_hierarchy, int32_t ___3_mode, int32_t ___4_method, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___5_offset, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_findContours1_OutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_findContours1_OutputArray)(___0_image, ___1_contours, ___2_hierarchy, ___3_mode, ___4_method, ___5_offset);
	#else
	il2cppPInvokeFunc(___0_image, ___1_contours, ___2_hierarchy, ___3_mode, ___4_method, ___5_offset);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_findContours2_vector(System.IntPtr,System.IntPtr&,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_findContours2_vector_mDCCA2E206FD7DC4792059EC5C948B82AA91C8BEF (intptr_t ___0_image, intptr_t* ___1_contours, int32_t ___2_mode, int32_t ___3_method, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___4_offset, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_findContours2_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_findContours2_vector)(___0_image, ___1_contours, ___2_mode, ___3_method, ___4_offset);
	#else
	il2cppPInvokeFunc(___0_image, ___1_contours, ___2_mode, ___3_method, ___4_offset);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_findContours2_OutputArray(System.IntPtr,System.IntPtr&,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_findContours2_OutputArray_m020D562AE36491B564E298410668856FE3C2568F (intptr_t ___0_image, intptr_t* ___1_contours, int32_t ___2_mode, int32_t ___3_method, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___4_offset, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_findContours2_OutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_findContours2_OutputArray)(___0_image, ___1_contours, ___2_mode, ___3_method, ___4_offset);
	#else
	il2cppPInvokeFunc(___0_image, ___1_contours, ___2_mode, ___3_method, ___4_offset);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_drawContours_vector_fix(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32,OpenCvSharp.Vec4i[],System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_drawContours_vector_fix_m1E6A17BFFD47B0A47FCCAC323836FB6E3D5188AC (intptr_t ___0_image, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_contours, int32_t ___2_contoursSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_contoursSize2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___4_color, int32_t ___5_contourIdx, int32_t ___6_thickness, int32_t ___7_lineType, Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157* ___8_hierarchy, int32_t ___9_hiearchyLength, int32_t ___10_maxLevel, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___11_offset, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_drawContours_vector_fix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_contours' to native representation
	intptr_t* ____1_contours_marshaled = NULL;
	if (___1_contours != NULL)
	{
		____1_contours_marshaled = reinterpret_cast<intptr_t*>((___1_contours)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_contoursSize2' to native representation
	int32_t* ____3_contoursSize2_marshaled = NULL;
	if (___3_contoursSize2 != NULL)
	{
		____3_contoursSize2_marshaled = reinterpret_cast<int32_t*>((___3_contoursSize2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___8_hierarchy' to native representation
	Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ____8_hierarchy_marshaled = NULL;
	if (___8_hierarchy != NULL)
	{
		____8_hierarchy_marshaled = reinterpret_cast<Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*>((___8_hierarchy)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_drawContours_vector_fix)(___0_image, ____1_contours_marshaled, ___2_contoursSize1, ____3_contoursSize2_marshaled, ___4_color, ___5_contourIdx, ___6_thickness, ___7_lineType, ____8_hierarchy_marshaled, ___9_hiearchyLength, ___10_maxLevel, ___11_offset);
	#else
	il2cppPInvokeFunc(___0_image, ____1_contours_marshaled, ___2_contoursSize1, ____3_contoursSize2_marshaled, ___4_color, ___5_contourIdx, ___6_thickness, ___7_lineType, ____8_hierarchy_marshaled, ___9_hiearchyLength, ___10_maxLevel, ___11_offset);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_drawContours_vector_fix(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_drawContours_vector_fix_m16F4E3D99DFF15434255E62841209B7BA197CC74 (intptr_t ___0_image, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_contours, int32_t ___2_contoursSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_contoursSize2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___4_color, int32_t ___5_contourIdx, int32_t ___6_thickness, int32_t ___7_lineType, intptr_t ___8_hierarchy, int32_t ___9_hiearchyLength, int32_t ___10_maxLevel, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___11_offset, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t, intptr_t, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_drawContours_vector_fix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_contours' to native representation
	intptr_t* ____1_contours_marshaled = NULL;
	if (___1_contours != NULL)
	{
		____1_contours_marshaled = reinterpret_cast<intptr_t*>((___1_contours)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_contoursSize2' to native representation
	int32_t* ____3_contoursSize2_marshaled = NULL;
	if (___3_contoursSize2 != NULL)
	{
		____3_contoursSize2_marshaled = reinterpret_cast<int32_t*>((___3_contoursSize2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_drawContours_vector_fix)(___0_image, ____1_contours_marshaled, ___2_contoursSize1, ____3_contoursSize2_marshaled, ___4_color, ___5_contourIdx, ___6_thickness, ___7_lineType, ___8_hierarchy, ___9_hiearchyLength, ___10_maxLevel, ___11_offset);
	#else
	il2cppPInvokeFunc(___0_image, ____1_contours_marshaled, ___2_contoursSize1, ____3_contoursSize2_marshaled, ___4_color, ___5_contourIdx, ___6_thickness, ___7_lineType, ___8_hierarchy, ___9_hiearchyLength, ___10_maxLevel, ___11_offset);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_drawContours_InputArray(System.IntPtr,System.IntPtr[],System.Int32,System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32,System.IntPtr,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_drawContours_InputArray_m27D32864A267199C869DFD8208E8FB7A0E65232C (intptr_t ___0_image, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_contours, int32_t ___2_contoursLength, int32_t ___3_contourIdx, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___4_color, int32_t ___5_thickness, int32_t ___6_lineType, intptr_t ___7_hierarchy, int32_t ___8_maxLevel, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___9_offset, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, intptr_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_drawContours_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_contours' to native representation
	intptr_t* ____1_contours_marshaled = NULL;
	if (___1_contours != NULL)
	{
		____1_contours_marshaled = reinterpret_cast<intptr_t*>((___1_contours)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_drawContours_InputArray)(___0_image, ____1_contours_marshaled, ___2_contoursLength, ___3_contourIdx, ___4_color, ___5_thickness, ___6_lineType, ___7_hierarchy, ___8_maxLevel, ___9_offset);
	#else
	il2cppPInvokeFunc(___0_image, ____1_contours_marshaled, ___2_contoursLength, ___3_contourIdx, ___4_color, ___5_thickness, ___6_lineType, ___7_hierarchy, ___8_maxLevel, ___9_offset);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_approxPolyDP_InputArray(System.IntPtr,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_approxPolyDP_InputArray_m79A8D2FCE609A5B7C521D8A797FB8DF94F8F92D7 (intptr_t ___0_curve, intptr_t ___1_approxCurve, double ___2_epsilon, int32_t ___3_closed, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_approxPolyDP_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_approxPolyDP_InputArray)(___0_curve, ___1_approxCurve, ___2_epsilon, ___3_closed);
	#else
	il2cppPInvokeFunc(___0_curve, ___1_approxCurve, ___2_epsilon, ___3_closed);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_approxPolyDP_Point(OpenCvSharp.Point[],System.Int32,System.IntPtr&,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_approxPolyDP_Point_m597C6F7CC4E058172C7CD6212D00368BD23E7621 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_curve, int32_t ___1_curveLength, intptr_t* ___2_approxCurve, double ___3_epsilon, int32_t ___4_closed, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_approxPolyDP_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_curve' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_curve_marshaled = NULL;
	if (___0_curve != NULL)
	{
		____0_curve_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_curve)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_approxPolyDP_Point)(____0_curve_marshaled, ___1_curveLength, ___2_approxCurve, ___3_epsilon, ___4_closed);
	#else
	il2cppPInvokeFunc(____0_curve_marshaled, ___1_curveLength, ___2_approxCurve, ___3_epsilon, ___4_closed);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_approxPolyDP_Point2f(OpenCvSharp.Point2f[],System.Int32,System.IntPtr&,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_approxPolyDP_Point2f_m8E172A1B54C62BC6BB736EB4154ECC0ED1FD7388 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_curve, int32_t ___1_curveLength, intptr_t* ___2_approxCurve, double ___3_epsilon, int32_t ___4_closed, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_approxPolyDP_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_curve' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_curve_marshaled = NULL;
	if (___0_curve != NULL)
	{
		____0_curve_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_curve)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_approxPolyDP_Point2f)(____0_curve_marshaled, ___1_curveLength, ___2_approxCurve, ___3_epsilon, ___4_closed);
	#else
	il2cppPInvokeFunc(____0_curve_marshaled, ___1_curveLength, ___2_approxCurve, ___3_epsilon, ___4_closed);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_arcLength_InputArray(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_arcLength_InputArray_m420D1B198210AFA6FA7CC07D05925AEFE2C7386F (intptr_t ___0_curve, int32_t ___1_closed, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_arcLength_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_arcLength_InputArray)(___0_curve, ___1_closed);
	#else
	double returnValue = il2cppPInvokeFunc(___0_curve, ___1_closed);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_arcLength_Point(OpenCvSharp.Point[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_arcLength_Point_mEFBD68B57E218DD972A191CBC92D3711CADEC3DF (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_curve, int32_t ___1_curveLength, int32_t ___2_closed, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_arcLength_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_curve' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_curve_marshaled = NULL;
	if (___0_curve != NULL)
	{
		____0_curve_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_curve)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_arcLength_Point)(____0_curve_marshaled, ___1_curveLength, ___2_closed);
	#else
	double returnValue = il2cppPInvokeFunc(____0_curve_marshaled, ___1_curveLength, ___2_closed);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_arcLength_Point2f(OpenCvSharp.Point2f[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_arcLength_Point2f_mFECFDC8060EA37E229AFA8048E97C53624350557 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_curve, int32_t ___1_curveLength, int32_t ___2_closed, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_arcLength_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_curve' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_curve_marshaled = NULL;
	if (___0_curve != NULL)
	{
		____0_curve_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_curve)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_arcLength_Point2f)(____0_curve_marshaled, ___1_curveLength, ___2_closed);
	#else
	double returnValue = il2cppPInvokeFunc(____0_curve_marshaled, ___1_curveLength, ___2_closed);
	#endif

	return returnValue;
}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::imgproc_boundingRect_InputArray(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_imgproc_boundingRect_InputArray_m349593BB4FD41A86BF1178D9E06738F00A330FA0 (intptr_t ___0_curve, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_boundingRect_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(imgproc_boundingRect_InputArray)(___0_curve);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(___0_curve);
	#endif

	return returnValue;
}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::imgproc_boundingRect_Point(OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_imgproc_boundingRect_Point_m547FD5974F448DE09FB36AE7405E4FE1582F7F59 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_curve, int32_t ___1_curveLength, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_boundingRect_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_curve' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_curve_marshaled = NULL;
	if (___0_curve != NULL)
	{
		____0_curve_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_curve)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(imgproc_boundingRect_Point)(____0_curve_marshaled, ___1_curveLength);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(____0_curve_marshaled, ___1_curveLength);
	#endif

	return returnValue;
}
// OpenCvSharp.Rect OpenCvSharp.NativeMethods::imgproc_boundingRect_Point2f(OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A NativeMethods_imgproc_boundingRect_Point2f_m821BB3ADD31FE419A9D89B85E7BD0E9014EAD7F0 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_curve, int32_t ___1_curveLength, const RuntimeMethod* method) 
{
	typedef Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_boundingRect_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_curve' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_curve_marshaled = NULL;
	if (___0_curve != NULL)
	{
		____0_curve_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_curve)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = reinterpret_cast<PInvokeFunc>(imgproc_boundingRect_Point2f)(____0_curve_marshaled, ___1_curveLength);
	#else
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A returnValue = il2cppPInvokeFunc(____0_curve_marshaled, ___1_curveLength);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_contourArea_InputArray(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_contourArea_InputArray_mA6E2405AB99C59BA1501A2C615F3804D759C1EEC (intptr_t ___0_contour, int32_t ___1_oriented, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_contourArea_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_contourArea_InputArray)(___0_contour, ___1_oriented);
	#else
	double returnValue = il2cppPInvokeFunc(___0_contour, ___1_oriented);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_contourArea_Point(OpenCvSharp.Point[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_contourArea_Point_m6EDDEC6257F17E0D1096C7F71D0DA582B508D44E (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_contour, int32_t ___1_contourLength, int32_t ___2_oriented, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_contourArea_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_contour' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_contour_marshaled = NULL;
	if (___0_contour != NULL)
	{
		____0_contour_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_contour)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_contourArea_Point)(____0_contour_marshaled, ___1_contourLength, ___2_oriented);
	#else
	double returnValue = il2cppPInvokeFunc(____0_contour_marshaled, ___1_contourLength, ___2_oriented);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_contourArea_Point2f(OpenCvSharp.Point2f[],System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_contourArea_Point2f_m5A20002BEDC946EAB57FCFF2C522F22D650FF60F (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_contour, int32_t ___1_contourLength, int32_t ___2_oriented, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_contourArea_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_contour' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_contour_marshaled = NULL;
	if (___0_contour != NULL)
	{
		____0_contour_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_contour)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_contourArea_Point2f)(____0_contour_marshaled, ___1_contourLength, ___2_oriented);
	#else
	double returnValue = il2cppPInvokeFunc(____0_contour_marshaled, ___1_contourLength, ___2_oriented);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_minAreaRect_InputArray(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_minAreaRect_InputArray_mB4BDD1CF771469C037E5D853355667952D17CFBF (intptr_t ___0_points, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minAreaRect_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_minAreaRect_InputArray)(___0_points);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(___0_points);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_minAreaRect_Point(OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_minAreaRect_Point_mD2A82682E5759E6E029413D776F3CF02CB5C25F3 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_points, int32_t ___1_pointsLength, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minAreaRect_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_minAreaRect_Point)(____0_points_marshaled, ___1_pointsLength);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_minAreaRect_Point2f(OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_minAreaRect_Point2f_m17D8DC5A8C96AD9BE16F5D3F1207759AA8004A66 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_points, int32_t ___1_pointsLength, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minAreaRect_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_minAreaRect_Point2f)(____0_points_marshaled, ___1_pointsLength);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_minEnclosingCircle_InputArray(System.IntPtr,OpenCvSharp.Point2f&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_minEnclosingCircle_InputArray_m603AB485CDE2252BCBA3E93353DD85C253492417 (intptr_t ___0_points, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___1_center, float* ___2_radius, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minEnclosingCircle_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_minEnclosingCircle_InputArray)(___0_points, ___1_center, ___2_radius);
	#else
	il2cppPInvokeFunc(___0_points, ___1_center, ___2_radius);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_minEnclosingCircle_Point(OpenCvSharp.Point[],System.Int32,OpenCvSharp.Point2f&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_minEnclosingCircle_Point_m1DE471D1ACDFA3F133748CF0C202A45010827F45 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_points, int32_t ___1_pointsLength, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___2_center, float* ___3_radius, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minEnclosingCircle_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_minEnclosingCircle_Point)(____0_points_marshaled, ___1_pointsLength, ___2_center, ___3_radius);
	#else
	il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength, ___2_center, ___3_radius);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_minEnclosingCircle_Point2f(OpenCvSharp.Point2f[],System.Int32,OpenCvSharp.Point2f&,System.Single&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_minEnclosingCircle_Point2f_m4B5A72D64C95DE98977319B1FB891D3BD77B42AB (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_points, int32_t ___1_pointsLength, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___2_center, float* ___3_radius, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, float*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*) + sizeof(float*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_minEnclosingCircle_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_minEnclosingCircle_Point2f)(____0_points_marshaled, ___1_pointsLength, ___2_center, ___3_radius);
	#else
	il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength, ___2_center, ___3_radius);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_matchShapes_InputArray(System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_matchShapes_InputArray_m0637199B940A55EA8DD78D249B4A13EDE41152B7 (intptr_t ___0_contour1, intptr_t ___1_contour2, int32_t ___2_method, double ___3_parameter, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_matchShapes_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_matchShapes_InputArray)(___0_contour1, ___1_contour2, ___2_method, ___3_parameter);
	#else
	double returnValue = il2cppPInvokeFunc(___0_contour1, ___1_contour2, ___2_method, ___3_parameter);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_matchShapes_Point(OpenCvSharp.Point[],System.Int32,OpenCvSharp.Point[],System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_matchShapes_Point_mE98B7207D4770292950AC6943E5843953F175446 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_contour1, int32_t ___1_contour1Length, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___2_contour2, int32_t ___3_contour2Length, int32_t ___4_method, double ___5_parameter, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_matchShapes_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_contour1' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_contour1_marshaled = NULL;
	if (___0_contour1 != NULL)
	{
		____0_contour1_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_contour1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_contour2' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____2_contour2_marshaled = NULL;
	if (___2_contour2 != NULL)
	{
		____2_contour2_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___2_contour2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_matchShapes_Point)(____0_contour1_marshaled, ___1_contour1Length, ____2_contour2_marshaled, ___3_contour2Length, ___4_method, ___5_parameter);
	#else
	double returnValue = il2cppPInvokeFunc(____0_contour1_marshaled, ___1_contour1Length, ____2_contour2_marshaled, ___3_contour2Length, ___4_method, ___5_parameter);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexHull_InputArray(System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexHull_InputArray_mC71CD14DA48210E166E393585FC9EF4A9833CF7A (intptr_t ___0_points, intptr_t ___1_hull, int32_t ___2_clockwise, int32_t ___3_returnPoints, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexHull_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexHull_InputArray)(___0_points, ___1_hull, ___2_clockwise, ___3_returnPoints);
	#else
	il2cppPInvokeFunc(___0_points, ___1_hull, ___2_clockwise, ___3_returnPoints);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexHull_Point_ReturnsPoints(OpenCvSharp.Point[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexHull_Point_ReturnsPoints_m2659B74F09324FA070C3C5606D68510D1E32CF32 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_points, int32_t ___1_pointsLength, intptr_t* ___2_hull, int32_t ___3_clockwise, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexHull_Point_ReturnsPoints", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexHull_Point_ReturnsPoints)(____0_points_marshaled, ___1_pointsLength, ___2_hull, ___3_clockwise);
	#else
	il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength, ___2_hull, ___3_clockwise);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexHull_Point2f_ReturnsPoints(OpenCvSharp.Point2f[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexHull_Point2f_ReturnsPoints_m51EEA68640B85475A01D97EE907C61920AEBD4AA (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_points, int32_t ___1_pointsLength, intptr_t* ___2_hull, int32_t ___3_clockwise, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexHull_Point2f_ReturnsPoints", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexHull_Point2f_ReturnsPoints)(____0_points_marshaled, ___1_pointsLength, ___2_hull, ___3_clockwise);
	#else
	il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength, ___2_hull, ___3_clockwise);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexHull_Point_ReturnsIndices(OpenCvSharp.Point[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexHull_Point_ReturnsIndices_mF83342B636AF38BFF8793237513F24A3002F5E44 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_points, int32_t ___1_pointsLength, intptr_t* ___2_hull, int32_t ___3_clockwise, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexHull_Point_ReturnsIndices", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexHull_Point_ReturnsIndices)(____0_points_marshaled, ___1_pointsLength, ___2_hull, ___3_clockwise);
	#else
	il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength, ___2_hull, ___3_clockwise);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexHull_Point2f_ReturnsIndices(OpenCvSharp.Point2f[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexHull_Point2f_ReturnsIndices_mFB7FD81713C366A273297E236BDFF78529DA85F5 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_points, int32_t ___1_pointsLength, intptr_t* ___2_hull, int32_t ___3_clockwise, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexHull_Point2f_ReturnsIndices", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexHull_Point2f_ReturnsIndices)(____0_points_marshaled, ___1_pointsLength, ___2_hull, ___3_clockwise);
	#else
	il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength, ___2_hull, ___3_clockwise);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexityDefects_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexityDefects_InputArray_m3AE93015A68CA4C76C4FA8915CB6DB8205786702 (intptr_t ___0_contour, intptr_t ___1_convexHull, intptr_t ___2_convexityDefects, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexityDefects_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexityDefects_InputArray)(___0_contour, ___1_convexHull, ___2_convexityDefects);
	#else
	il2cppPInvokeFunc(___0_contour, ___1_convexHull, ___2_convexityDefects);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexityDefects_Point(OpenCvSharp.Point[],System.Int32,System.Int32[],System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexityDefects_Point_m6514BA37960D33BDF67728C462FB63B2E8676B1E (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_contour, int32_t ___1_contourLength, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_convexHull, int32_t ___3_convexHullLength, intptr_t* ___4_convexityDefects, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, int32_t*, int32_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexityDefects_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_contour' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_contour_marshaled = NULL;
	if (___0_contour != NULL)
	{
		____0_contour_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_contour)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_convexHull' to native representation
	int32_t* ____2_convexHull_marshaled = NULL;
	if (___2_convexHull != NULL)
	{
		____2_convexHull_marshaled = reinterpret_cast<int32_t*>((___2_convexHull)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexityDefects_Point)(____0_contour_marshaled, ___1_contourLength, ____2_convexHull_marshaled, ___3_convexHullLength, ___4_convexityDefects);
	#else
	il2cppPInvokeFunc(____0_contour_marshaled, ___1_contourLength, ____2_convexHull_marshaled, ___3_convexHullLength, ___4_convexityDefects);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_convexityDefects_Point2f(OpenCvSharp.Point2f[],System.Int32,System.Int32[],System.Int32,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_convexityDefects_Point2f_mB51910E1ABF5096CCB132EB50849BFB6937CFFA4 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_contour, int32_t ___1_contourLength, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_convexHull, int32_t ___3_convexHullLength, intptr_t* ___4_convexityDefects, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, int32_t*, int32_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_convexityDefects_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_contour' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_contour_marshaled = NULL;
	if (___0_contour != NULL)
	{
		____0_contour_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_contour)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_convexHull' to native representation
	int32_t* ____2_convexHull_marshaled = NULL;
	if (___2_convexHull != NULL)
	{
		____2_convexHull_marshaled = reinterpret_cast<int32_t*>((___2_convexHull)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_convexityDefects_Point2f)(____0_contour_marshaled, ___1_contourLength, ____2_convexHull_marshaled, ___3_convexHullLength, ___4_convexityDefects);
	#else
	il2cppPInvokeFunc(____0_contour_marshaled, ___1_contourLength, ____2_convexHull_marshaled, ___3_convexHullLength, ___4_convexityDefects);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_isContourConvex_InputArray(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_isContourConvex_InputArray_m50A4AD2965D3442D866BA330049053FF302BD0EC (intptr_t ___0_contour, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_isContourConvex_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_isContourConvex_InputArray)(___0_contour);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_contour);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_isContourConvex_Point(OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_isContourConvex_Point_m9B2810BB5E66B371319C8AB9ACD9FE6CE9A7058B (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_contour, int32_t ___1_contourLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_isContourConvex_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_contour' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_contour_marshaled = NULL;
	if (___0_contour != NULL)
	{
		____0_contour_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_contour)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_isContourConvex_Point)(____0_contour_marshaled, ___1_contourLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_contour_marshaled, ___1_contourLength);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_isContourConvex_Point2f(OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_isContourConvex_Point2f_mADDE9D3AC7AA30BB6CC065647BE4C5189001163F (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_contour, int32_t ___1_contourLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_isContourConvex_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_contour' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_contour_marshaled = NULL;
	if (___0_contour != NULL)
	{
		____0_contour_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_contour)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_isContourConvex_Point2f)(____0_contour_marshaled, ___1_contourLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_contour_marshaled, ___1_contourLength);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::imgproc_intersectConvexConvex_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_imgproc_intersectConvexConvex_InputArray_mB3E92D37F165FC92235CE719938F6D440E6A4C04 (intptr_t ___0_p1, intptr_t ___1_p2, intptr_t ___2_p12, int32_t ___3_handleNested, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_intersectConvexConvex_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(imgproc_intersectConvexConvex_InputArray)(___0_p1, ___1_p2, ___2_p12, ___3_handleNested);
	#else
	float returnValue = il2cppPInvokeFunc(___0_p1, ___1_p2, ___2_p12, ___3_handleNested);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::imgproc_intersectConvexConvex_Point(OpenCvSharp.Point[],System.Int32,OpenCvSharp.Point[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_imgproc_intersectConvexConvex_Point_mC1748EABC113C43C2BD4F921DF40FE787D83C93D (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_p1, int32_t ___1_p1Length, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___2_p2, int32_t ___3_p2Length, intptr_t* ___4_p12, int32_t ___5_handleNested, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_intersectConvexConvex_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_p1' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_p1_marshaled = NULL;
	if (___0_p1 != NULL)
	{
		____0_p1_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_p1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_p2' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____2_p2_marshaled = NULL;
	if (___2_p2 != NULL)
	{
		____2_p2_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___2_p2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(imgproc_intersectConvexConvex_Point)(____0_p1_marshaled, ___1_p1Length, ____2_p2_marshaled, ___3_p2Length, ___4_p12, ___5_handleNested);
	#else
	float returnValue = il2cppPInvokeFunc(____0_p1_marshaled, ___1_p1Length, ____2_p2_marshaled, ___3_p2Length, ___4_p12, ___5_handleNested);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::imgproc_intersectConvexConvex_Point2f(OpenCvSharp.Point2f[],System.Int32,OpenCvSharp.Point2f[],System.Int32,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_imgproc_intersectConvexConvex_Point2f_mE82E93D44CFF30B2438113ABFA887A461B69C7AB (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_p1, int32_t ___1_p1Length, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___2_p2, int32_t ___3_p2Length, intptr_t* ___4_p12, int32_t ___5_handleNested, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_intersectConvexConvex_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_p1' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_p1_marshaled = NULL;
	if (___0_p1 != NULL)
	{
		____0_p1_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_p1)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_p2' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____2_p2_marshaled = NULL;
	if (___2_p2 != NULL)
	{
		____2_p2_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___2_p2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(imgproc_intersectConvexConvex_Point2f)(____0_p1_marshaled, ___1_p1Length, ____2_p2_marshaled, ___3_p2Length, ___4_p12, ___5_handleNested);
	#else
	float returnValue = il2cppPInvokeFunc(____0_p1_marshaled, ___1_p1Length, ____2_p2_marshaled, ___3_p2Length, ___4_p12, ___5_handleNested);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_fitEllipse_InputArray(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_fitEllipse_InputArray_m065A846936AA67A24090DFB548EA63F855298950 (intptr_t ___0_points, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitEllipse_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_fitEllipse_InputArray)(___0_points);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(___0_points);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_fitEllipse_Point(OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_fitEllipse_Point_m7D29D4889466C4EECA9554D888E33E2AA2D70B43 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_points, int32_t ___1_pointsLength, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitEllipse_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_fitEllipse_Point)(____0_points_marshaled, ___1_pointsLength);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::imgproc_fitEllipse_Point2f(OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_imgproc_fitEllipse_Point2f_m9DAB12FBBE09DB4350A584AC992E8616CC4CC063 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_points, int32_t ___1_pointsLength, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitEllipse_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_fitEllipse_Point2f)(____0_points_marshaled, ___1_pointsLength);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_fitLine_InputArray(System.IntPtr,System.IntPtr,System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fitLine_InputArray_m132DD0692A6DE05F0B173D02E62DAE8FF6A8C954 (intptr_t ___0_points, intptr_t ___1_line, int32_t ___2_distType, double ___3_param, double ___4_reps, double ___5_aeps, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitLine_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fitLine_InputArray)(___0_points, ___1_line, ___2_distType, ___3_param, ___4_reps, ___5_aeps);
	#else
	il2cppPInvokeFunc(___0_points, ___1_line, ___2_distType, ___3_param, ___4_reps, ___5_aeps);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fitLine_Point(OpenCvSharp.Point[],System.Int32,System.Single[],System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fitLine_Point_mDE6113128F8AC46E7CE6A38004854CB486AB8BD9 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_points, int32_t ___1_pointsLength, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___2_line, int32_t ___3_distType, double ___4_param, double ___5_reps, double ___6_aeps, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, float*, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitLine_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_line' to native representation
	float* ____2_line_marshaled = NULL;
	if (___2_line != NULL)
	{
		____2_line_marshaled = reinterpret_cast<float*>((___2_line)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fitLine_Point)(____0_points_marshaled, ___1_pointsLength, ____2_line_marshaled, ___3_distType, ___4_param, ___5_reps, ___6_aeps);
	#else
	il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength, ____2_line_marshaled, ___3_distType, ___4_param, ___5_reps, ___6_aeps);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fitLine_Point2f(OpenCvSharp.Point2f[],System.Int32,System.Single[],System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fitLine_Point2f_m69A14B5632F4BE54537F159691844C61CEC16850 (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_points, int32_t ___1_pointsLength, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___2_line, int32_t ___3_distType, double ___4_param, double ___5_reps, double ___6_aeps, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, float*, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitLine_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_line' to native representation
	float* ____2_line_marshaled = NULL;
	if (___2_line != NULL)
	{
		____2_line_marshaled = reinterpret_cast<float*>((___2_line)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fitLine_Point2f)(____0_points_marshaled, ___1_pointsLength, ____2_line_marshaled, ___3_distType, ___4_param, ___5_reps, ___6_aeps);
	#else
	il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength, ____2_line_marshaled, ___3_distType, ___4_param, ___5_reps, ___6_aeps);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fitLine_Point3i(OpenCvSharp.Point3i[],System.Int32,System.Single[],System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fitLine_Point3i_mE31C5808063198CAA183B9B4202B3445B46469B7 (Point3iU5BU5D_t4ADE5D61157E49120DBB2AC37D0C253B312688EC* ___0_points, int32_t ___1_pointsLength, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___2_line, int32_t ___3_distType, double ___4_param, double ___5_reps, double ___6_aeps, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*, int32_t, float*, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitLine_Point3i", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point3i_tEA3F92B6568085C84C74B814A53BA7643DA8D33B*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_line' to native representation
	float* ____2_line_marshaled = NULL;
	if (___2_line != NULL)
	{
		____2_line_marshaled = reinterpret_cast<float*>((___2_line)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fitLine_Point3i)(____0_points_marshaled, ___1_pointsLength, ____2_line_marshaled, ___3_distType, ___4_param, ___5_reps, ___6_aeps);
	#else
	il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength, ____2_line_marshaled, ___3_distType, ___4_param, ___5_reps, ___6_aeps);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fitLine_Point3f(OpenCvSharp.Point3f[],System.Int32,System.Single[],System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fitLine_Point3f_mE6941736AC587CB2F1105884692C91612C7FD75B (Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___0_points, int32_t ___1_pointsLength, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___2_line, int32_t ___3_distType, double ___4_param, double ___5_reps, double ___6_aeps, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, int32_t, float*, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fitLine_Point3f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_points' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____0_points_marshaled = NULL;
	if (___0_points != NULL)
	{
		____0_points_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___0_points)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_line' to native representation
	float* ____2_line_marshaled = NULL;
	if (___2_line != NULL)
	{
		____2_line_marshaled = reinterpret_cast<float*>((___2_line)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fitLine_Point3f)(____0_points_marshaled, ___1_pointsLength, ____2_line_marshaled, ___3_distType, ___4_param, ___5_reps, ___6_aeps);
	#else
	il2cppPInvokeFunc(____0_points_marshaled, ___1_pointsLength, ____2_line_marshaled, ___3_distType, ___4_param, ___5_reps, ___6_aeps);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_pointPolygonTest_InputArray(System.IntPtr,OpenCvSharp.Point2f,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_pointPolygonTest_InputArray_m26FD958E0A8085B476462CAA25FCAA757DCC32C0 (intptr_t ___0_contour, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___1_pt, int32_t ___2_measureDist, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pointPolygonTest_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_pointPolygonTest_InputArray)(___0_contour, ___1_pt, ___2_measureDist);
	#else
	double returnValue = il2cppPInvokeFunc(___0_contour, ___1_pt, ___2_measureDist);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_pointPolygonTest_Point(OpenCvSharp.Point[],System.Int32,OpenCvSharp.Point2f,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_pointPolygonTest_Point_m319392AC20AC70C112B7EC1B19C6F9879516C0AB (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_contour, int32_t ___1_contourLength, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___2_pt, int32_t ___3_measureDist, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pointPolygonTest_Point", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_contour' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_contour_marshaled = NULL;
	if (___0_contour != NULL)
	{
		____0_contour_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_contour)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_pointPolygonTest_Point)(____0_contour_marshaled, ___1_contourLength, ___2_pt, ___3_measureDist);
	#else
	double returnValue = il2cppPInvokeFunc(____0_contour_marshaled, ___1_contourLength, ___2_pt, ___3_measureDist);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::imgproc_pointPolygonTest_Point2f(OpenCvSharp.Point2f[],System.Int32,OpenCvSharp.Point2f,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_pointPolygonTest_Point2f_m3B222C837A3A201E421453E34C7A78F15A8B465D (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_contour, int32_t ___1_contourLength, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___2_pt, int32_t ___3_measureDist, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_pointPolygonTest_Point2f", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_contour' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_contour_marshaled = NULL;
	if (___0_contour != NULL)
	{
		____0_contour_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_contour)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_pointPolygonTest_Point2f)(____0_contour_marshaled, ___1_contourLength, ___2_pt, ___3_measureDist);
	#else
	double returnValue = il2cppPInvokeFunc(____0_contour_marshaled, ___1_contourLength, ___2_pt, ___3_measureDist);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_rotatedRectangleIntersection_OutputArray(OpenCvSharp.RotatedRect,OpenCvSharp.RotatedRect,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_rotatedRectangleIntersection_OutputArray_m485886EEE6C6C439CE83C83EDA478B457DFCE485 (RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 ___0_rect1, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 ___1_rect2, intptr_t ___2_intersectingRegion, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967) + sizeof(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_rotatedRectangleIntersection_OutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_rotatedRectangleIntersection_OutputArray)(___0_rect1, ___1_rect2, ___2_intersectingRegion);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_rect1, ___1_rect2, ___2_intersectingRegion);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_rotatedRectangleIntersection_vector(OpenCvSharp.RotatedRect,OpenCvSharp.RotatedRect,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_rotatedRectangleIntersection_vector_m68FA2F694FBEC77C9121210E30DA84096FC90C8B (RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 ___0_rect1, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 ___1_rect2, intptr_t ___2_intersectingRegion, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967) + sizeof(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_rotatedRectangleIntersection_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_rotatedRectangleIntersection_vector)(___0_rect1, ___1_rect2, ___2_intersectingRegion);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_rect1, ___1_rect2, ___2_intersectingRegion);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_applyColorMap(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_applyColorMap_m81A05C2F8E58E55F42E0C4AAAA59269178BDD443 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_colormap, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_applyColorMap", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_applyColorMap)(___0_src, ___1_dst, ___2_colormap);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_colormap);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_line(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Point,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_line_m351D848FFFC9C457851B3EE0D3B446EA04E27E46 (intptr_t ___0_img, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___1_pt1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___2_pt2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___3_color, int32_t ___4_thickness, int32_t ___5_lineType, int32_t ___6_shift, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_line", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_line)(___0_img, ___1_pt1, ___2_pt2, ___3_color, ___4_thickness, ___5_lineType, ___6_shift);
	#else
	il2cppPInvokeFunc(___0_img, ___1_pt1, ___2_pt2, ___3_color, ___4_thickness, ___5_lineType, ___6_shift);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_arrowedLine(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Point,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_arrowedLine_m68EC6F7F1DE23CB7FD11F406BC4AE919651BE735 (intptr_t ___0_img, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___1_pt1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___2_pt2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___3_color, int32_t ___4_thickness, int32_t ___5_lineType, int32_t ___6_shift, double ___7_tipLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_arrowedLine", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_arrowedLine)(___0_img, ___1_pt1, ___2_pt2, ___3_color, ___4_thickness, ___5_lineType, ___6_shift, ___7_tipLength);
	#else
	il2cppPInvokeFunc(___0_img, ___1_pt1, ___2_pt2, ___3_color, ___4_thickness, ___5_lineType, ___6_shift, ___7_tipLength);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_rectangle_InputOutputArray(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Point,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_rectangle_InputOutputArray_mD90CA194C3EB0B28072F2670B7CDDECCF3FAFB35 (intptr_t ___0_img, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___1_pt1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___2_pt2, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___3_color, int32_t ___4_thickness, int32_t ___5_lineType, int32_t ___6_shift, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_rectangle_InputOutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_rectangle_InputOutputArray)(___0_img, ___1_pt1, ___2_pt2, ___3_color, ___4_thickness, ___5_lineType, ___6_shift);
	#else
	il2cppPInvokeFunc(___0_img, ___1_pt1, ___2_pt2, ___3_color, ___4_thickness, ___5_lineType, ___6_shift);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_rectangle_Mat(System.IntPtr,OpenCvSharp.Rect,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_rectangle_Mat_m2CBDEB571880E2BE1F787F2DCE7D3A814FC66B98 (intptr_t ___0_img, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___1_rect, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___2_color, int32_t ___3_thickness, int32_t ___4_lineType, int32_t ___5_shift, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_rectangle_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_rectangle_Mat)(___0_img, ___1_rect, ___2_color, ___3_thickness, ___4_lineType, ___5_shift);
	#else
	il2cppPInvokeFunc(___0_img, ___1_rect, ___2_color, ___3_thickness, ___4_lineType, ___5_shift);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_circle(System.IntPtr,OpenCvSharp.Point,System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_circle_m99714610AC42685BE9C159A36FBAE84627960A32 (intptr_t ___0_img, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___1_center, int32_t ___2_radius, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___3_color, int32_t ___4_thickness, int32_t ___5_lineType, int32_t ___6_shift, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_circle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_circle)(___0_img, ___1_center, ___2_radius, ___3_color, ___4_thickness, ___5_lineType, ___6_shift);
	#else
	il2cppPInvokeFunc(___0_img, ___1_center, ___2_radius, ___3_color, ___4_thickness, ___5_lineType, ___6_shift);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_ellipse1(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Size,System.Double,System.Double,System.Double,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_ellipse1_mA9DB43D3F1E2548D6499C053604766412A365F46 (intptr_t ___0_img, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___1_center, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_axes, double ___3_angle, double ___4_startAngle, double ___5_endAngle, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___6_color, int32_t ___7_thickness, int32_t ___8_lineType, int32_t ___9_shift, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, double, double, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_ellipse1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_ellipse1)(___0_img, ___1_center, ___2_axes, ___3_angle, ___4_startAngle, ___5_endAngle, ___6_color, ___7_thickness, ___8_lineType, ___9_shift);
	#else
	il2cppPInvokeFunc(___0_img, ___1_center, ___2_axes, ___3_angle, ___4_startAngle, ___5_endAngle, ___6_color, ___7_thickness, ___8_lineType, ___9_shift);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_ellipse2(System.IntPtr,OpenCvSharp.RotatedRect,OpenCvSharp.Scalar,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_ellipse2_mC3D02D0726076D8DDDD0B61449B6D0EEC52D4314 (intptr_t ___0_img, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 ___1_box, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___2_color, int32_t ___3_thickness, int32_t ___4_lineType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_ellipse2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_ellipse2)(___0_img, ___1_box, ___2_color, ___3_thickness, ___4_lineType);
	#else
	il2cppPInvokeFunc(___0_img, ___1_box, ___2_color, ___3_thickness, ___4_lineType);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fillConvexPoly_Mat(System.IntPtr,OpenCvSharp.Point[],System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fillConvexPoly_Mat_m37D522CC7AA722D8B7AAFB7C98FD00703EC9014C (intptr_t ___0_img, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___1_pts, int32_t ___2_npts, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___3_color, int32_t ___4_lineType, int32_t ___5_shift, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fillConvexPoly_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_pts' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____1_pts_marshaled = NULL;
	if (___1_pts != NULL)
	{
		____1_pts_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___1_pts)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fillConvexPoly_Mat)(___0_img, ____1_pts_marshaled, ___2_npts, ___3_color, ___4_lineType, ___5_shift);
	#else
	il2cppPInvokeFunc(___0_img, ____1_pts_marshaled, ___2_npts, ___3_color, ___4_lineType, ___5_shift);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fillConvexPoly_InputOutputArray(System.IntPtr,System.IntPtr,OpenCvSharp.Scalar,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fillConvexPoly_InputOutputArray_m93673D2CE0F725F75C437595431D8CE541441F6D (intptr_t ___0_img, intptr_t ___1_points, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___2_color, int32_t ___3_lineType, int32_t ___4_shift, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fillConvexPoly_InputOutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fillConvexPoly_InputOutputArray)(___0_img, ___1_points, ___2_color, ___3_lineType, ___4_shift);
	#else
	il2cppPInvokeFunc(___0_img, ___1_points, ___2_color, ___3_lineType, ___4_shift);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fillPoly_Mat(System.IntPtr,System.IntPtr[],System.Int32[],System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fillPoly_Mat_m1B1E358DCCFDB71EF5C9D0640635153ED020BA4D (intptr_t ___0_img, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_pts, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_npts, int32_t ___3_ncontours, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___4_color, int32_t ___5_lineType, int32_t ___6_shift, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___7_offset, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fillPoly_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_pts' to native representation
	intptr_t* ____1_pts_marshaled = NULL;
	if (___1_pts != NULL)
	{
		____1_pts_marshaled = reinterpret_cast<intptr_t*>((___1_pts)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_npts' to native representation
	int32_t* ____2_npts_marshaled = NULL;
	if (___2_npts != NULL)
	{
		____2_npts_marshaled = reinterpret_cast<int32_t*>((___2_npts)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fillPoly_Mat)(___0_img, ____1_pts_marshaled, ____2_npts_marshaled, ___3_ncontours, ___4_color, ___5_lineType, ___6_shift, ___7_offset);
	#else
	il2cppPInvokeFunc(___0_img, ____1_pts_marshaled, ____2_npts_marshaled, ___3_ncontours, ___4_color, ___5_lineType, ___6_shift, ___7_offset);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_fillPoly_InputOutputArray(System.IntPtr,System.IntPtr,OpenCvSharp.Scalar,System.Int32,System.Int32,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_fillPoly_InputOutputArray_mDD42BBE7D939B8CBA04F2D1FB34D60C4B7988ADB (intptr_t ___0_img, intptr_t ___1_pts, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___2_color, int32_t ___3_lineType, int32_t ___4_shift, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___5_offset, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_fillPoly_InputOutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_fillPoly_InputOutputArray)(___0_img, ___1_pts, ___2_color, ___3_lineType, ___4_shift, ___5_offset);
	#else
	il2cppPInvokeFunc(___0_img, ___1_pts, ___2_color, ___3_lineType, ___4_shift, ___5_offset);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_polylines_Mat(System.IntPtr,System.IntPtr[],System.Int32[],System.Int32,System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_polylines_Mat_m6B9B604F9DA8D7265B3F64BF3B1EABCCF79843B8 (intptr_t ___0_img, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_pts, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_npts, int32_t ___3_ncontours, int32_t ___4_isClosed, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___5_color, int32_t ___6_thickness, int32_t ___7_lineType, int32_t ___8_shift, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t*, int32_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_polylines_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_pts' to native representation
	intptr_t* ____1_pts_marshaled = NULL;
	if (___1_pts != NULL)
	{
		____1_pts_marshaled = reinterpret_cast<intptr_t*>((___1_pts)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_npts' to native representation
	int32_t* ____2_npts_marshaled = NULL;
	if (___2_npts != NULL)
	{
		____2_npts_marshaled = reinterpret_cast<int32_t*>((___2_npts)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_polylines_Mat)(___0_img, ____1_pts_marshaled, ____2_npts_marshaled, ___3_ncontours, ___4_isClosed, ___5_color, ___6_thickness, ___7_lineType, ___8_shift);
	#else
	il2cppPInvokeFunc(___0_img, ____1_pts_marshaled, ____2_npts_marshaled, ___3_ncontours, ___4_isClosed, ___5_color, ___6_thickness, ___7_lineType, ___8_shift);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_polylines_InputOutputArray(System.IntPtr,System.IntPtr,System.Int32,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_polylines_InputOutputArray_mC7CC4E23DFFD7F0BA3FD7E4E75CE05DE119B7FA2 (intptr_t ___0_img, intptr_t ___1_pts, int32_t ___2_isClosed, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___3_color, int32_t ___4_thickness, int32_t ___5_lineType, int32_t ___6_shift, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_polylines_InputOutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_polylines_InputOutputArray)(___0_img, ___1_pts, ___2_isClosed, ___3_color, ___4_thickness, ___5_lineType, ___6_shift);
	#else
	il2cppPInvokeFunc(___0_img, ___1_pts, ___2_isClosed, ___3_color, ___4_thickness, ___5_lineType, ___6_shift);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_clipLine1(OpenCvSharp.Size,OpenCvSharp.Point&,OpenCvSharp.Point&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_clipLine1_m29F1A7A49AE258E7839C7D3708723A10228287E6 (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___0_imgSize, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___1_pt1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___2_pt2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_clipLine1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_clipLine1)(___0_imgSize, ___1_pt1, ___2_pt2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_imgSize, ___1_pt1, ___2_pt2);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_clipLine2(OpenCvSharp.Rect,OpenCvSharp.Point&,OpenCvSharp.Point&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_clipLine2_m8CCE16F56CB58D335CF2B141B5FCCD87A1EF504A (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___0_imgRect, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___1_pt1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ___2_pt2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_clipLine2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_clipLine2)(___0_imgRect, ___1_pt1, ___2_pt2);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_imgRect, ___1_pt1, ___2_pt2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_ellipse2Poly(OpenCvSharp.Point,OpenCvSharp.Size,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_ellipse2Poly_m8FDFAAFB6FD316CD003122F2355221FB1A8AD048 (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___0_center, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_axes, int32_t ___2_angle, int32_t ___3_arcStart, int32_t ___4_arcEnd, int32_t ___5_delta, intptr_t ___6_pts, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_ellipse2Poly", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_ellipse2Poly)(___0_center, ___1_axes, ___2_angle, ___3_arcStart, ___4_arcEnd, ___5_delta, ___6_pts);
	#else
	il2cppPInvokeFunc(___0_center, ___1_axes, ___2_angle, ___3_arcStart, ___4_arcEnd, ___5_delta, ___6_pts);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::core_putText(System.IntPtr,System.String,OpenCvSharp.Point,System.Int32,System.Double,OpenCvSharp.Scalar,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_core_putText_m508400FFA4B932A89ABB0EAB49630BEF64ED48EB (intptr_t ___0_img, String_t* ___1_text, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___2_org, int32_t ___3_fontFace, double ___4_fontScale, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___5_color, int32_t ___6_thickness, int32_t ___7_lineType, int32_t ___8_bottomLeftOrigin, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, double, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(double) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_putText", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_text' to native representation
	char* ____1_text_marshaled = NULL;
	____1_text_marshaled = il2cpp_codegen_marshal_string(___1_text);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(core_putText)(___0_img, ____1_text_marshaled, ___2_org, ___3_fontFace, ___4_fontScale, ___5_color, ___6_thickness, ___7_lineType, ___8_bottomLeftOrigin);
	#else
	il2cppPInvokeFunc(___0_img, ____1_text_marshaled, ___2_org, ___3_fontFace, ___4_fontScale, ___5_color, ___6_thickness, ___7_lineType, ___8_bottomLeftOrigin);
	#endif

	// Marshaling cleanup of parameter '___1_text' native representation
	il2cpp_codegen_marshal_free(____1_text_marshaled);
	____1_text_marshaled = NULL;

}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::core_getTextSize(System.String,System.Int32,System.Double,System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_core_getTextSize_mB0029B8E8AB618D09C482797F14F5FD42638442D (String_t* ___0_text, int32_t ___1_fontFace, double ___2_fontScale, int32_t ___3_thickness, int32_t* ___4_baseLine, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (char*, int32_t, double, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "core_getTextSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_text' to native representation
	char* ____0_text_marshaled = NULL;
	____0_text_marshaled = il2cpp_codegen_marshal_string(___0_text);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(core_getTextSize)(____0_text_marshaled, ___1_fontFace, ___2_fontScale, ___3_thickness, ___4_baseLine);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(____0_text_marshaled, ___1_fontFace, ___2_fontScale, ___3_thickness, ___4_baseLine);
	#endif

	// Marshaling cleanup of parameter '___0_text' native representation
	il2cpp_codegen_marshal_free(____0_text_marshaled);
	____0_text_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_createCLAHE(System.Double,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_createCLAHE_mD48B53EBADAFF5F21348E25CC7617CA8DDE6C443 (double ___0_clipLimit, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_tileGridSize, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_createCLAHE", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_createCLAHE)(___0_clipLimit, ___1_tileGridSize);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_clipLimit, ___1_tileGridSize);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Ptr_CLAHE_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Ptr_CLAHE_delete_m31B6F1B66AAA52BA5F6DAA2871D6630D9B01551F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_CLAHE_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Ptr_CLAHE_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Ptr_CLAHE_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Ptr_CLAHE_get_mF03FAC855E03A553CAE316B0C38CD19A54E7CEF8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_CLAHE_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Ptr_CLAHE_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_CLAHE_apply(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_CLAHE_apply_mEDE4B5073D3E2EB5B95BB791F651D755A8E814E3 (intptr_t ___0_obj, intptr_t ___1_src, intptr_t ___2_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_apply", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_apply)(___0_obj, ___1_src, ___2_dst);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_src, ___2_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_CLAHE_setClipLimit(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_CLAHE_setClipLimit_m5766527DE26B2FABDB177FC7B2E5EABE251C5B3D (intptr_t ___0_obj, double ___1_clipLimit, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_setClipLimit", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_setClipLimit)(___0_obj, ___1_clipLimit);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_clipLimit);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_CLAHE_getClipLimit(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_CLAHE_getClipLimit_mECF07153FE4DE3795503D8F8201AD43D4FE55158 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_getClipLimit", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_getClipLimit)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_CLAHE_setTilesGridSize(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_CLAHE_setTilesGridSize_mA6EF6739CED6F3C40C9246B5B2CEE4D094050627 (intptr_t ___0_obj, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_tileGridSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_setTilesGridSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_setTilesGridSize)(___0_obj, ___1_tileGridSize);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_tileGridSize);
	#endif

}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::imgproc_CLAHE_getTilesGridSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_imgproc_CLAHE_getTilesGridSize_m491CDE80B3CEFE4990F4AFE4C51EC466185E24A2 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_getTilesGridSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_getTilesGridSize)(___0_obj);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_CLAHE_collectGarbage(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_CLAHE_collectGarbage_m1A3478A973E84CD69771602B0B7C486F57B1F0AB (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_CLAHE_collectGarbage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_CLAHE_collectGarbage)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setTemplate1(System.IntPtr,System.IntPtr,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setTemplate1_m09F823515D32DB69B2231E698CEFC2CFC8BF50AD (intptr_t ___0_obj, intptr_t ___1_templ, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___2_templCenter, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setTemplate1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setTemplate1)(___0_obj, ___1_templ, ___2_templCenter);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_templ, ___2_templCenter);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setTemplate2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Point)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setTemplate2_m18AC3E8AC48BD26871C26B8D49DA6EA8B88EE458 (intptr_t ___0_obj, intptr_t ___1_edges, intptr_t ___2_dx, intptr_t ___3_dy, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___4_templCenter, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setTemplate2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setTemplate2)(___0_obj, ___1_edges, ___2_dx, ___3_dy, ___4_templCenter);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_edges, ___2_dx, ___3_dy, ___4_templCenter);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_detect1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_detect1_m2BD170F906E01CDC03A4CDEE73EC94BE16C145E4 (intptr_t ___0_obj, intptr_t ___1_image, intptr_t ___2_positions, intptr_t ___3_votes, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_detect1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_detect1)(___0_obj, ___1_image, ___2_positions, ___3_votes);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image, ___2_positions, ___3_votes);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_detect2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_detect2_mB047D6CA00D2BC039DA88861BFFD093362C1C616 (intptr_t ___0_obj, intptr_t ___1_edges, intptr_t ___2_dx, intptr_t ___3_dy, intptr_t ___4_positions, intptr_t ___5_votes, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_detect2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_detect2)(___0_obj, ___1_edges, ___2_dx, ___3_dy, ___4_positions, ___5_votes);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_edges, ___2_dx, ___3_dy, ___4_positions, ___5_votes);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setCannyLowThresh(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setCannyLowThresh_m9A0CBF98ACA1D8D4DB9E22C1D9790F06AFD8BE1D (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setCannyLowThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setCannyLowThresh)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_getCannyLowThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHough_getCannyLowThresh_mBC6F8A0EE07895309B58F91589ADFC9220FA6CF3 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_getCannyLowThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_getCannyLowThresh)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setCannyHighThresh(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setCannyHighThresh_mFA72084C0581EFA04402B265F02E8C76081B6643 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setCannyHighThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setCannyHighThresh)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_getCannyHighThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHough_getCannyHighThresh_m6CE314EFC305399F85C44966E2BD3ABD978A61D7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_getCannyHighThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_getCannyHighThresh)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setMinDist(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setMinDist_m26BA202BA520B16210A878DF43CDB9AB11772D1C (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setMinDist", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setMinDist)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_getMinDist(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHough_getMinDist_mDE8EC94283488DE868C01990B4A8A36D007AB4EA (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_getMinDist", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_getMinDist)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setDp(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setDp_m93D87D06464C1553660E0408DCD00B5781949455 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setDp", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setDp)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_getDp(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHough_getDp_m19D7260EEA50A2426A212639909383A0F115D15F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_getDp", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_getDp)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_setMaxBufferSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHough_setMaxBufferSize_mE391561749F4CC46629CF4ADA16CFF5A5368C01D (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_setMaxBufferSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_setMaxBufferSize)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHough_getMaxBufferSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHough_getMaxBufferSize_m3B561310E11E01C4F567C4AB5B247ED228AEA0D7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHough_getMaxBufferSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHough_getMaxBufferSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_createGeneralizedHoughBallard()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_createGeneralizedHoughBallard_m65155B24BBA06D78D4EFA0ED2C14422301C217A1 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_createGeneralizedHoughBallard", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_createGeneralizedHoughBallard)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Ptr_GeneralizedHoughBallard_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Ptr_GeneralizedHoughBallard_get_m0CD50A1A709C5481D8381DD8F45C1F5A656AE750 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_GeneralizedHoughBallard_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Ptr_GeneralizedHoughBallard_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Ptr_GeneralizedHoughBallard_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Ptr_GeneralizedHoughBallard_delete_m2E0C5AEB536B73129E819C415D6C98AD868E01D3 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_GeneralizedHoughBallard_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Ptr_GeneralizedHoughBallard_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughBallard_setLevels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughBallard_setLevels_m080066526AAA220C9288DBAD6A2C1EC2042D481E (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughBallard_setLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughBallard_setLevels)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughBallard_getLevels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughBallard_getLevels_mF90A2AB462BCE829A5F6D76B8193E0ADE5784D31 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughBallard_getLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughBallard_getLevels)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughBallard_setVotesThreshold(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughBallard_setVotesThreshold_m45F7E3E898D2009539ED6A767B6890C60C8ED304 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughBallard_setVotesThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughBallard_setVotesThreshold)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughBallard_getVotesThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughBallard_getVotesThreshold_m88C84CC42D087872F166ADB92A99E5E542D7413E (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughBallard_getVotesThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughBallard_getVotesThreshold)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_createGeneralizedHoughGuil()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_createGeneralizedHoughGuil_m3A6C3ACCF4891699C432C388236A0C03698F8093 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_createGeneralizedHoughGuil", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_createGeneralizedHoughGuil)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Ptr_GeneralizedHoughGuil_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Ptr_GeneralizedHoughGuil_get_m30DD31227FDA2F97624AC4B47059F1391AEEECB7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_GeneralizedHoughGuil_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Ptr_GeneralizedHoughGuil_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Ptr_GeneralizedHoughGuil_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Ptr_GeneralizedHoughGuil_delete_m6A9B9578A395833031ABD59D64047BEC574E1DA6 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_GeneralizedHoughGuil_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Ptr_GeneralizedHoughGuil_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setXi(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setXi_m36537479CCC5CE4C676A792F249D4F147588CDC4 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setXi", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setXi)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getXi(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getXi_mD15125785084A4C1CDF0799FF36A3040A11AF9A5 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getXi", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getXi)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setLevels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setLevels_m6FD3CFFC6C538C985420C4E4A61FAB4704D3A1FE (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setLevels)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getLevels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughGuil_getLevels_m7827FEB3E18D7606425A5929110CB4FE8BDEE800 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getLevels)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setAngleEpsilon(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setAngleEpsilon_m5D7BB29BF1281980192C9E02C5D61058340A94F7 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setAngleEpsilon", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setAngleEpsilon)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getAngleEpsilon(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getAngleEpsilon_mE4DDA7E0958129FBF3A585C90AF8F013CDD27CF7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getAngleEpsilon", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getAngleEpsilon)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setMinAngle(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setMinAngle_m5C50467D13C0DF3B7DFE15AE5612FB9C70EC4208 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setMinAngle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setMinAngle)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getMinAngle(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getMinAngle_m00194F7578B01A1AA3E41699819E0EDC00E20971 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getMinAngle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getMinAngle)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setMaxAngle(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setMaxAngle_mBF453C4B187BCA0017926D1049E55A9B3620F912 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setMaxAngle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setMaxAngle)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getMaxAngle(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getMaxAngle_m59C79121667FA039911AD0D473D2E414EB6E59F8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getMaxAngle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getMaxAngle)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setAngleStep(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setAngleStep_mC026F57E79AD626392AA4B031F5C78D1F61749EB (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setAngleStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setAngleStep)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getAngleStep(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getAngleStep_m73C3D9122B449D33BC4DC3E15C08B84F4638164A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getAngleStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getAngleStep)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setAngleThresh(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setAngleThresh_mE17C073DB3E8A0D6618F457809F45DFD3DE2B9CB (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setAngleThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setAngleThresh)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getAngleThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughGuil_getAngleThresh_mFC890D8A16349A77B935E8A53ED94D0AF8BC3208 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getAngleThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getAngleThresh)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setMinScale(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setMinScale_m44B4B78FFE3B93F91D9E7BCF75BCF8B1DC0BF5F8 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setMinScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setMinScale)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getMinScale(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getMinScale_m16D7478BF2E97FDA9C740D5476D0B17700ECA934 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getMinScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getMinScale)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setMaxScale(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setMaxScale_m035104161E5AF551B4CE7B948F52FFADEF8DDD49 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setMaxScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setMaxScale)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getMaxScale(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getMaxScale_m7891003937FC38AE8C527271AE92DE1CD664A8B5 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getMaxScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getMaxScale)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setScaleStep(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setScaleStep_m788077326AEB67D16CECD3CEBB279CA31AD6F252 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setScaleStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setScaleStep)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getScaleStep(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_imgproc_GeneralizedHoughGuil_getScaleStep_m31AC52DA82158024CC37AA43578B2DB1120B909B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getScaleStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getScaleStep)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setScaleThresh(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setScaleThresh_m60AF940585113D3D2EA612541EBDF02FBDF84FD1 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setScaleThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setScaleThresh)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getScaleThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughGuil_getScaleThresh_m117DD866C1A5625180E11CCC3A3DF1D0A520E63E (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getScaleThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getScaleThresh)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_setPosThresh(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_GeneralizedHoughGuil_setPosThresh_mC90B75D1808FADD86290B28D6DC29BAC2BC634D7 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_setPosThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_setPosThresh)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_GeneralizedHoughGuil_getPosThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_GeneralizedHoughGuil_getPosThresh_m5821E1F5BD975CA4EADD503E8EDE2032FD0DBACD (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_GeneralizedHoughGuil_getPosThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_GeneralizedHoughGuil_getPosThresh)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_LineIterator_new(System.IntPtr,OpenCvSharp.Point,OpenCvSharp.Point,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_LineIterator_new_m6FA87385E02E946E1EF84CA3DB8B85954C007B3C (intptr_t ___0_img, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___1_pt1, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___2_pt2, int32_t ___3_connectivity, int32_t ___4_leftToRight, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_new)(___0_img, ___1_pt1, ___2_pt2, ___3_connectivity, ___4_leftToRight);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_img, ___1_pt1, ___2_pt2, ___3_connectivity, ___4_leftToRight);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_delete_mB89FD0D40FD0A6537FC561877A55EA23373CE0FC (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_LineIterator_operatorEntity(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_LineIterator_operatorEntity_m4237FEF98AA2A858BD20789417DCED616A82553D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_operatorEntity", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_operatorEntity)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_operatorPP(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_operatorPP_mD814AE3B2B01AB7982B2566B88F5AE5AAD8BB581 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_operatorPP", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_operatorPP)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// OpenCvSharp.Point OpenCvSharp.NativeMethods::imgproc_LineIterator_pos(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC NativeMethods_imgproc_LineIterator_pos_mD94C71A1D03DA6B3E000A1A36E63D62D1243E8F6 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_pos", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_pos)(___0_obj);
	#else
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_LineIterator_ptr_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_LineIterator_ptr_get_m86D4848021F049A04FBC1F98DF3984A1170D496F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_ptr_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_ptr_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_ptr_set(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_ptr_set_m6DE4C83581636AA429D884FDC93BBBA254CF2F1A (intptr_t ___0_obj, intptr_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_ptr_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_ptr_set)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_LineIterator_ptr0_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_LineIterator_ptr0_get_m36C27372C98E87D80251400798ECA3ADEDEA0539 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_ptr0_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_ptr0_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_step_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_step_get_m5BBDD38A35CE145F5087807EE4C7519D98D8036E (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_step_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_step_get)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_step_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_step_set_mD9385E0496DFBEB1752234DD0FA85DD37B218CE6 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_step_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_step_set)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_elemSize_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_elemSize_get_m93355EA6D62E5A5273FFD4FBF6BC3FBD868E6831 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_elemSize_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_elemSize_get)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_elemSize_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_elemSize_set_mFF9E18CF2ECCCEA94675F00DD906D6E50D20101D (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_elemSize_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_elemSize_set)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_err_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_err_get_m2014DA22A1268B4675654225247C352965173C7A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_err_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_err_get)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_err_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_err_set_m519BA73B74CC56EC3C8D5D66A0DEFFF7C30697CE (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_err_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_err_set)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_count_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_count_get_mDA3B4B41AA1908C47C6B7182AEC05F8F54C20B87 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_count_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_count_get)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_count_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_count_set_mEEA99569DD2F3BE9BCBE38C52D54DC730BEFE0C0 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_count_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_count_set)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_minusDelta_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_minusDelta_get_mC2F52A3F4D8F518F1AC1795495602F1972778D1F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_minusDelta_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_minusDelta_get)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_minusDelta_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_minusDelta_set_mD4474952B12D99943F105E16D62B73190DFC4EED (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_minusDelta_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_minusDelta_set)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_plusDelta_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_plusDelta_get_mA632625B265AAC28DA4B0334EE1B920B711FC7E8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_plusDelta_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_plusDelta_get)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_plusDelta_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_plusDelta_set_m41241CD7AB69299DFE871A4E959A576BC5D83525 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_plusDelta_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_plusDelta_set)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_minusStep_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_minusStep_get_mFB9F038F551A3B949D420111C4C15E66ED06D098 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_minusStep_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_minusStep_get)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_minusStep_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_minusStep_set_m46F1616B4778189A93737BF072ADF85531ADAD25 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_minusStep_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_minusStep_set)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineIterator_plusStep_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineIterator_plusStep_get_m55AE6E320242E9EC48380E28B6B05FFB3A43C9EF (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_plusStep_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_plusStep_get)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineIterator_plusStep_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineIterator_plusStep_set_mA3193813F4D4467AAE24F9C6B4435E53AD94055A (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineIterator_plusStep_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineIterator_plusStep_set)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineSegmentDetector_detect_OutputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineSegmentDetector_detect_OutputArray_m0EAFAE04E0E66E11401EE8EEBE6F26577053AB9F (intptr_t ___0_obj, intptr_t ___1_image, intptr_t ___2_lines, intptr_t ___3_width, intptr_t ___4_prec, intptr_t ___5_nfa, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineSegmentDetector_detect_OutputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineSegmentDetector_detect_OutputArray)(___0_obj, ___1_image, ___2_lines, ___3_width, ___4_prec, ___5_nfa);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image, ___2_lines, ___3_width, ___4_prec, ___5_nfa);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineSegmentDetector_detect_vector(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineSegmentDetector_detect_vector_m4BDEB50DBB1A07DCFEF42985B7E5C48057B66B58 (intptr_t ___0_obj, intptr_t ___1_image, intptr_t ___2_lines, intptr_t ___3_width, intptr_t ___4_prec, intptr_t ___5_nfa, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineSegmentDetector_detect_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineSegmentDetector_detect_vector)(___0_obj, ___1_image, ___2_lines, ___3_width, ___4_prec, ___5_nfa);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image, ___2_lines, ___3_width, ___4_prec, ___5_nfa);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_LineSegmentDetector_drawSegments(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_LineSegmentDetector_drawSegments_m03D630E52C8B215EE9B9A0F8308941ED80D05901 (intptr_t ___0_obj, intptr_t ___1_image, intptr_t ___2_lines, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineSegmentDetector_drawSegments", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_LineSegmentDetector_drawSegments)(___0_obj, ___1_image, ___2_lines);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image, ___2_lines);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_LineSegmentDetector_compareSegments(System.IntPtr,OpenCvSharp.Size,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_LineSegmentDetector_compareSegments_mF8FCE952039594096E0730B768EB4C35423ED5B8 (intptr_t ___0_obj, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_size, intptr_t ___2_lines1, intptr_t ___3_lines2, intptr_t ___4_image, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_LineSegmentDetector_compareSegments", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_LineSegmentDetector_compareSegments)(___0_obj, ___1_size, ___2_lines1, ___3_lines2, ___4_image);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_size, ___2_lines1, ___3_lines2, ___4_image);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_createLineSegmentDetector(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_createLineSegmentDetector_m45892903FD50E09FADD96C7B04C31EBB157ED724 (int32_t ___0_refine, double ___1_scale, double ___2_sigma_scale, double ___3_quant, double ___4_ang_th, double ___5_log_eps, double ___6_density_th, int32_t ___7_n_bins, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double, double, double, double, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_createLineSegmentDetector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_createLineSegmentDetector)(___0_refine, ___1_scale, ___2_sigma_scale, ___3_quant, ___4_ang_th, ___5_log_eps, ___6_density_th, ___7_n_bins);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_refine, ___1_scale, ___2_sigma_scale, ___3_quant, ___4_ang_th, ___5_log_eps, ___6_density_th, ___7_n_bins);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Ptr_LineSegmentDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Ptr_LineSegmentDetector_delete_m3306A51F93D2029E00FDCEB2D38DBE1FC2E77A73 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_LineSegmentDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Ptr_LineSegmentDetector_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Ptr_LineSegmentDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Ptr_LineSegmentDetector_get_m9157D1F37268CD899C8632A97F5798FE83D516C3 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Ptr_LineSegmentDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Ptr_LineSegmentDetector_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Subdiv2D_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Subdiv2D_new_m75978951433311F9A671392677165BED75A2943E (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgproc_Subdiv2D_new(OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgproc_Subdiv2D_new_m94336AFDDA8F0F7730884F4216DB8B09746002AD (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___0_rect, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_new2)(___0_rect);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_rect);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_delete_m7518983496E0EAECBD14F0DF32AD52AFD4A124E1 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_initDelaunay(System.IntPtr,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_initDelaunay_m6C300A3DA8D9391821C52145A89E5F59202B165F (intptr_t ___0_obj, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___1_rect, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_initDelaunay", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_initDelaunay)(___0_obj, ___1_rect);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_rect);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_insert(System.IntPtr,OpenCvSharp.Point2f)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_insert_m411DB7EA71DCD42256C121936D55933C6628F819 (intptr_t ___0_obj, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___1_pt, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_insert1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_insert1)(___0_obj, ___1_pt);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_pt);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_insert(System.IntPtr,OpenCvSharp.Point2f[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_insert_mA5C78C62306D68C9438B2EF780AE8B9951826D87 (intptr_t ___0_obj, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___1_ptArray, int32_t ___2_length, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_insert2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_ptArray' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____1_ptArray_marshaled = NULL;
	if (___1_ptArray != NULL)
	{
		____1_ptArray_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___1_ptArray)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_insert2)(___0_obj, ____1_ptArray_marshaled, ___2_length);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_ptArray_marshaled, ___2_length);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_locate(System.IntPtr,OpenCvSharp.Point2f,System.Int32&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_locate_m6B31BD09DA3B8EFF550D5E52B43CBBE447A219A6 (intptr_t ___0_obj, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___1_pt, int32_t* ___2_edge, int32_t* ___3_vertex, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, int32_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(int32_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_locate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_locate)(___0_obj, ___1_pt, ___2_edge, ___3_vertex);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_pt, ___2_edge, ___3_vertex);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_findNearest(System.IntPtr,OpenCvSharp.Point2f,OpenCvSharp.Point2f&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_findNearest_m2784C66986D9C1477002F9823143C892D47CC2D7 (intptr_t ___0_obj, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 ___1_pt, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___2_nearestPt, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_findNearest", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_findNearest)(___0_obj, ___1_pt, ___2_nearestPt);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_pt, ___2_nearestPt);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getEdgeList(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_getEdgeList_mE461F9966B479049F08BF137CE71A0795FD154A1 (intptr_t ___0_obj, intptr_t* ___1_edgeList, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getEdgeList", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getEdgeList)(___0_obj, ___1_edgeList);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_edgeList);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getTriangleList(System.IntPtr,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_getTriangleList_m52AD2C0F4BC003C63248CAC5B689EC6F899B263F (intptr_t ___0_obj, intptr_t* ___1_triangleList, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getTriangleList", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getTriangleList)(___0_obj, ___1_triangleList);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_triangleList);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getVoronoiFacetList(System.IntPtr,System.Int32[],System.Int32,System.IntPtr&,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_getVoronoiFacetList_m4D606F506B270BBFD5B7880CF918B9C7F5FEFBCD (intptr_t ___0_obj, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___1_idx, int32_t ___2_idxCount, intptr_t* ___3_facetList, intptr_t* ___4_facetCenters, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t*, int32_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getVoronoiFacetList", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_idx' to native representation
	int32_t* ____1_idx_marshaled = NULL;
	if (___1_idx != NULL)
	{
		____1_idx_marshaled = reinterpret_cast<int32_t*>((___1_idx)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getVoronoiFacetList)(___0_obj, ____1_idx_marshaled, ___2_idxCount, ___3_facetList, ___4_facetCenters);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_idx_marshaled, ___2_idxCount, ___3_facetList, ___4_facetCenters);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getVoronoiFacetList(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr&,System.IntPtr&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgproc_Subdiv2D_getVoronoiFacetList_mA8FD4568A0FB717C5B29F569E65F92E7383E8CA5 (intptr_t ___0_obj, intptr_t ___1_idx, int32_t ___2_idxCount, intptr_t* ___3_facetList, intptr_t* ___4_facetCenters, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t*) + sizeof(intptr_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getVoronoiFacetList", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getVoronoiFacetList)(___0_obj, ___1_idx, ___2_idxCount, ___3_facetList, ___4_facetCenters);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_idx, ___2_idxCount, ___3_facetList, ___4_facetCenters);
	#endif

}
// OpenCvSharp.Point2f OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getVertex(System.IntPtr,System.Int32,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 NativeMethods_imgproc_Subdiv2D_getVertex_mB55AF85C17CEB472BECF557C99B1B78DB3A9E40A (intptr_t ___0_obj, int32_t ___1_vertex, int32_t* ___2_firstEdge, const RuntimeMethod* method) 
{
	typedef Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getVertex", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getVertex)(___0_obj, ___1_vertex, ___2_firstEdge);
	#else
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8 returnValue = il2cppPInvokeFunc(___0_obj, ___1_vertex, ___2_firstEdge);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_getEdge(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_getEdge_mAB8B0CC42F0458C79B0CEB4D664604C721228CDF (intptr_t ___0_obj, int32_t ___1_edge, int32_t ___2_nextEdgeType, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_getEdge", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_getEdge)(___0_obj, ___1_edge, ___2_nextEdgeType);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_edge, ___2_nextEdgeType);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_nextEdge(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_nextEdge_mEAABFD28A1A03D053D2FA50EA9736BD923314AD2 (intptr_t ___0_obj, int32_t ___1_edge, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_nextEdge", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_nextEdge)(___0_obj, ___1_edge);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_edge);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_rotateEdge(System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_rotateEdge_mFCB7E0CFD15181AF5CCC1F3953884F6C3EA20A37 (intptr_t ___0_obj, int32_t ___1_edge, int32_t ___2_rotate, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_rotateEdge", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_rotateEdge)(___0_obj, ___1_edge, ___2_rotate);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_edge, ___2_rotate);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_symEdge(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_symEdge_mE48689F5F8A2790A7C801370FB47C441D08CE0E0 (intptr_t ___0_obj, int32_t ___1_edge, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_symEdge", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_symEdge)(___0_obj, ___1_edge);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_edge);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_edgeOrg(System.IntPtr,System.Int32,OpenCvSharp.Point2f&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_edgeOrg_m1976199AB16B15C9DFBBEFF32C6E67E3E2799FE4 (intptr_t ___0_obj, int32_t ___1_edge, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___2_orgpt, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_edgeOrg", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_edgeOrg)(___0_obj, ___1_edge, ___2_orgpt);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_edge, ___2_orgpt);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgproc_Subdiv2D_edgeDst(System.IntPtr,System.Int32,OpenCvSharp.Point2f&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgproc_Subdiv2D_edgeDst_m50BC9247F0BE49310867D3A74FFE9EFA900EF66C (intptr_t ___0_obj, int32_t ___1_edge, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ___2_dstpt, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, int32_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgproc_Subdiv2D_edgeDst", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgproc_Subdiv2D_edgeDst)(___0_obj, ___1_edge, ___2_dstpt);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_edge, ___2_dstpt);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setTrainMethod(System.IntPtr,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setTrainMethod_m1A87300DB700280DF7C1C7AEA44939D5A204A013 (intptr_t ___0_obj, int32_t ___1_method, double ___2_param1, double ___3_param2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setTrainMethod", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setTrainMethod)(___0_obj, ___1_method, ___2_param1, ___3_param2);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_method, ___2_param1, ___3_param2);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_ANN_MLP_getTrainMethod(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_ANN_MLP_getTrainMethod_mE58DA4F7A1DDB23491B2435547FE3C6906CA6FEC (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getTrainMethod", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getTrainMethod)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setActivationFunction(System.IntPtr,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setActivationFunction_m83A5838A3D22EEDA1989269C2B13838CE4303002 (intptr_t ___0_obj, int32_t ___1_type, double ___2_param1, double ___3_param2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setActivationFunction", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setActivationFunction)(___0_obj, ___1_type, ___2_param1, ___3_param2);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_type, ___2_param1, ___3_param2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setLayerSizes(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setLayerSizes_m9329DCBBEF984ECC8B4A59C7324B8C714DC2A4CA (intptr_t ___0_obj, intptr_t ___1_layerSizes, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setLayerSizes", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setLayerSizes)(___0_obj, ___1_layerSizes);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_layerSizes);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_ANN_MLP_getLayerSizes(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_ANN_MLP_getLayerSizes_m2C454202550676960D8AF8930BBCAA84AD9168A6 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getLayerSizes", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getLayerSizes)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// OpenCvSharp.TermCriteria OpenCvSharp.NativeMethods::ml_ANN_MLP_getTermCriteria(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 NativeMethods_ml_ANN_MLP_getTermCriteria_mCD85CCDABCBC7B0BB9F6F5873115F9FB4E07BBF7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getTermCriteria)(___0_obj);
	#else
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setTermCriteria(System.IntPtr,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setTermCriteria_m86BFE4E16608F440031593D942BC9F5259754CE3 (intptr_t ___0_obj, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setTermCriteria)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getBackpropWeightScale(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getBackpropWeightScale_m2652D32D93032ABAFEE57D4B4CC71679507F65DF (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getBackpropWeightScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getBackpropWeightScale)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setBackpropWeightScale(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setBackpropWeightScale_m30DFC4984EC5FF7402920AF436CCA7B0F0F7E25B (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setBackpropWeightScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setBackpropWeightScale)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getBackpropMomentumScale(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getBackpropMomentumScale_m757733C94C00C0BF9045EB83538AE14CAEC6E5C0 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getBackpropMomentumScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getBackpropMomentumScale)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setBackpropMomentumScale(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setBackpropMomentumScale_mE1F1690ACA438B369592932C88FA303CA905D3E0 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setBackpropMomentumScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setBackpropMomentumScale)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getRpropDW0(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getRpropDW0_mE7FA963CA5619D53B82EA6EBD04485AA012E09CB (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getRpropDW0", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getRpropDW0)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setRpropDW0(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setRpropDW0_mF4E1D1EA1DF934E650D1843D2EB1956E84C9C70A (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setRpropDW0", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setRpropDW0)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getRpropDWPlus(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getRpropDWPlus_m19175CBD4BC68853C9B1CCC6AA5A3853C957089C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getRpropDWPlus", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getRpropDWPlus)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setRpropDWPlus(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setRpropDWPlus_m2C079D5DDF51E34CF26E9BBF499542A815A0162A (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setRpropDWPlus", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setRpropDWPlus)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getRpropDWMinus(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getRpropDWMinus_mFF76B58E62E2CDAB7A66E4D4EED40E798EA65382 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getRpropDWMinus", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getRpropDWMinus)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setRpropDWMinus(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setRpropDWMinus_m945F365CD2F1642BF08EB1A2A1641D05B097D9CA (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setRpropDWMinus", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setRpropDWMinus)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getRpropDWMin(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getRpropDWMin_m406061EB373BB89CEEB3B9C778AF083050687CB2 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getRpropDWMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getRpropDWMin)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setRpropDWMin(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setRpropDWMin_m3A0233C135075C4A93D40AF2A0785B91F028254F (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setRpropDWMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setRpropDWMin)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_ANN_MLP_getRpropDWMax(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_ANN_MLP_getRpropDWMax_m7FEC5981C259537172E999634A4865813ECEB194 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getRpropDWMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getRpropDWMax)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_ANN_MLP_setRpropDWMax(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_ANN_MLP_setRpropDWMax_mB872F510AD14D1B59492147E961667887B145D38 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_setRpropDWMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_setRpropDWMax)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_ANN_MLP_getWeights(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_ANN_MLP_getWeights_m3C254657CFD491F7E1F422A14964DBF8585AD7CE (intptr_t ___0_obj, int32_t ___1_layerIdx, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_getWeights", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_getWeights)(___0_obj, ___1_layerIdx);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_layerIdx);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_ANN_MLP_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_ANN_MLP_create_m61E13EDEAB02DEC6EB12D60F062920430514C52A (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_ANN_MLP_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_ANN_MLP_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_ANN_MLP_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_ANN_MLP_delete_m8F29AE44343D0C4453BA22762C246FF10F38A688 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_ANN_MLP_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_ANN_MLP_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_ANN_MLP_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_ANN_MLP_get_m5690AF2BBFFF01EC357542C2AA233CBCC2D7B3E5 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_ANN_MLP_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_ANN_MLP_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_Boost_getBoostType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_Boost_getBoostType_m9ADD3E4BBEE3B0B65BCD1BF397BAC22568118206 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_getBoostType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Boost_getBoostType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Boost_setBoostType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Boost_setBoostType_m6CBE92BA7A57D7CAE3097DA1729C5491D4260CA0 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_setBoostType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Boost_setBoostType)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_Boost_getWeakCount(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_Boost_getWeakCount_mF554AF3253504C95777B5C500FE26F1FFAB375AD (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_getWeakCount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Boost_getWeakCount)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Boost_setWeakCount(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Boost_setWeakCount_m66249AA12D0C3454096B1B1C2BE881770F014C9B (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_setWeakCount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Boost_setWeakCount)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_Boost_getWeightTrimRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_Boost_getWeightTrimRate_m354AFD5481A7D409FE172FE0E8F44DBE0E5A40C8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_getWeightTrimRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_Boost_getWeightTrimRate)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Boost_setWeightTrimRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Boost_setWeightTrimRate_mD8D433C00B9CE7633458C8319EF1FDFDDF7A5321 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_setWeightTrimRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Boost_setWeightTrimRate)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Boost_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Boost_create_m8682FE1580F1ECC0349A7390C84B7C54D06B5ABA (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Boost_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Boost_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_Boost_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_Boost_delete_mEF2A868A05E4881237769945C112166372247722 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_Boost_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_Boost_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_Boost_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_Boost_get_m6DE6DA2B0F6888FB880ACF77C72F4A0132C6FDE7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_Boost_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_Boost_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_EM_getClustersNumber(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_EM_getClustersNumber_mA41166A97565BCF81E53F0D7C5D0B9C863DC03C7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getClustersNumber", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_getClustersNumber)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_EM_setClustersNumber(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_EM_setClustersNumber_m044B2C5097044E9E474C382A096858027E5968DD (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_setClustersNumber", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_EM_setClustersNumber)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_EM_getCovarianceMatrixType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_EM_getCovarianceMatrixType_mD23A058703722E241132C701A0F709D3D9218740 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getCovarianceMatrixType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_getCovarianceMatrixType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_EM_setCovarianceMatrixType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_EM_setCovarianceMatrixType_mC719E938B32CF688304C02D25F9584792D391899 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_setCovarianceMatrixType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_EM_setCovarianceMatrixType)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// OpenCvSharp.TermCriteria OpenCvSharp.NativeMethods::ml_EM_getTermCriteria(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 NativeMethods_ml_EM_getTermCriteria_mB74A3ADD101C3DB278E9CC0DD704366EE53E2F0B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_getTermCriteria)(___0_obj);
	#else
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_EM_setTermCriteria(System.IntPtr,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_EM_setTermCriteria_m0E61063233E562E9BEEE5DD0DEB34E03842AEE64 (intptr_t ___0_obj, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_setTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_EM_setTermCriteria)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_EM_getWeights(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_EM_getWeights_mA6E3A90C46442F7C43CC929B4C1A9EE9859FD258 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getWeights", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_getWeights)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_EM_getMeans(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_EM_getMeans_m34C2BC5FD0B8A4623379EC0B14A9459C363F0089 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getMeans", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_getMeans)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_EM_getCovs(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_EM_getCovs_m81C547F192FCA07499F117F357045F75B3867DAA (intptr_t ___0_obj, intptr_t ___1_covs, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_getCovs", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_EM_getCovs)(___0_obj, ___1_covs);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_covs);
	#endif

}
// OpenCvSharp.Vec2d OpenCvSharp.NativeMethods::ml_EM_predict2(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 NativeMethods_ml_EM_predict2_m68A9C5746B38ABD116E117EC9BC8B38D84F8CD1E (intptr_t ___0_model, intptr_t ___1_sample, intptr_t ___2_probs, const RuntimeMethod* method) 
{
	typedef Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_predict2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_predict2)(___0_model, ___1_sample, ___2_probs);
	#else
	Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23 returnValue = il2cppPInvokeFunc(___0_model, ___1_sample, ___2_probs);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_EM_trainEM(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_EM_trainEM_m64829D163649B2A76EB2DC9F7CF89B60765287BF (intptr_t ___0_obj, intptr_t ___1_samples, intptr_t ___2_logLikelihoods, intptr_t ___3_labels, intptr_t ___4_probs, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_trainEM", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_trainEM)(___0_obj, ___1_samples, ___2_logLikelihoods, ___3_labels, ___4_probs);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_samples, ___2_logLikelihoods, ___3_labels, ___4_probs);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_EM_trainE(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_EM_trainE_m9C6363C5BE14FA3EDB47BB02AA2A8DC51A12A47B (intptr_t ___0_model, intptr_t ___1_samples, intptr_t ___2_means0, intptr_t ___3_covs0, intptr_t ___4_weights0, intptr_t ___5_logLikelihoods, intptr_t ___6_labels, intptr_t ___7_probs, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_trainE", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_trainE)(___0_model, ___1_samples, ___2_means0, ___3_covs0, ___4_weights0, ___5_logLikelihoods, ___6_labels, ___7_probs);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_model, ___1_samples, ___2_means0, ___3_covs0, ___4_weights0, ___5_logLikelihoods, ___6_labels, ___7_probs);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_EM_trainM(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_EM_trainM_m7803FDFF8AA33F2781C84A70ABDD32369EE4B50F (intptr_t ___0_model, intptr_t ___1_samples, intptr_t ___2_probs0, intptr_t ___3_logLikelihoods, intptr_t ___4_labels, intptr_t ___5_probs, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_trainM", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_trainM)(___0_model, ___1_samples, ___2_probs0, ___3_logLikelihoods, ___4_labels, ___5_probs);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_model, ___1_samples, ___2_probs0, ___3_logLikelihoods, ___4_labels, ___5_probs);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_EM_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_EM_create_mB2F85EE7A63A3E04164948A30DFB9B42DCDD8BCA (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_EM_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_EM_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_EM_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_EM_get_mCB89BBE4906EF962E40BA8B3BAB8E12640591E4D (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_EM_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_EM_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_EM_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_EM_delete_mE7CC0E4651985FBB3A09F9377D58461FD26B9DC2 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_EM_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_EM_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_KNearest_getDefaultK(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_KNearest_getDefaultK_mDCDAF798D6EC92E2E549A5337A62DA42192A9B91 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_getDefaultK", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_getDefaultK)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_KNearest_setDefaultK(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_KNearest_setDefaultK_m13499CA44507D01C38FF2EA1380349514A73D63E (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_setDefaultK", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_KNearest_setDefaultK)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_KNearest_getIsClassifier(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_KNearest_getIsClassifier_mE8548C44119B184564CB5976E04F239582646926 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_getIsClassifier", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_getIsClassifier)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_KNearest_setIsClassifier(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_KNearest_setIsClassifier_mD6A9D522BAFE545A9186BE3CDBB89087F34F352B (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_setIsClassifier", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_KNearest_setIsClassifier)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_KNearest_getEmax(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_KNearest_getEmax_m7D4DE6FC87ED010406DD31579A5741088E55A217 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_getEmax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_getEmax)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_KNearest_setEmax(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_KNearest_setEmax_m0F86CA714A78E8D7EDA10349B81B593AD8B5FEAA (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_setEmax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_KNearest_setEmax)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_KNearest_getAlgorithmType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_KNearest_getAlgorithmType_mB1D017679891BE12210538EF0C08A6440A631D8A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_getAlgorithmType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_getAlgorithmType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_KNearest_setAlgorithmType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_KNearest_setAlgorithmType_m4FF77315D88F728B3DF7D8207D4A2838838655B4 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_setAlgorithmType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_KNearest_setAlgorithmType)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::ml_KNearest_findNearest(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_ml_KNearest_findNearest_m8557BE99C149B417B51AD88BAF0D610CFCCEB1B4 (intptr_t ___0_obj, intptr_t ___1_samples, int32_t ___2_k, intptr_t ___3_results, intptr_t ___4_neighborResponses, intptr_t ___5_dist, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_findNearest", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_findNearest)(___0_obj, ___1_samples, ___2_k, ___3_results, ___4_neighborResponses, ___5_dist);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj, ___1_samples, ___2_k, ___3_results, ___4_neighborResponses, ___5_dist);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_KNearest_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_KNearest_create_m2D2177EE73817EE3387013A6E4710601FD97405A (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_KNearest_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_KNearest_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_KNearest_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_KNearest_delete_mB9286FF9E119009A72B001540F2D86610142B256 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_KNearest_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_KNearest_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_KNearest_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_KNearest_get_m2E0A53E56F7D5B255B9BE72F82BC950B5F238A52 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_KNearest_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_KNearest_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::ml_LogisticRegression_getLearningRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_LogisticRegression_getLearningRate_mA7A5B0BBA09FD4D8458D25347B5A2CD845B91C70 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getLearningRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getLearningRate)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setLearningRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setLearningRate_m2BE89A6018CF1608F1E3ABE911962911F8CFA867 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setLearningRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setLearningRate)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_LogisticRegression_getIterations(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_LogisticRegression_getIterations_m26C0BA4E28F533E80C5A8C664987B940F10AC8A1 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getIterations)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setIterations(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setIterations_m9B24590B6097BE979E39163C342995CEF29930F0 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setIterations)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_LogisticRegression_getRegularization(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_LogisticRegression_getRegularization_m9C82982A3D6778DADF2988DB360C7D02986A7D27 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getRegularization", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getRegularization)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setRegularization(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setRegularization_m577D2D927E16AFF4CB537DEF8EE7AC33A12A81C2 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setRegularization", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setRegularization)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_LogisticRegression_getTrainMethod(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_LogisticRegression_getTrainMethod_mBAEFC3F872C905BBE93A5BEB596E37620F8A7E46 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getTrainMethod", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getTrainMethod)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setTrainMethod(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setTrainMethod_m505D0D8B2401DE60E9A0F30C0767B243AF46C033 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setTrainMethod", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setTrainMethod)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_LogisticRegression_getMiniBatchSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_LogisticRegression_getMiniBatchSize_mCCE881DE89B314BF8EE1EE6C9F694578B4E98C79 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getMiniBatchSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getMiniBatchSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setMiniBatchSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setMiniBatchSize_mB22544A2281F519D285FDA00975FF467C6676FB6 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setMiniBatchSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setMiniBatchSize)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// OpenCvSharp.TermCriteria OpenCvSharp.NativeMethods::ml_LogisticRegression_getTermCriteria(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 NativeMethods_ml_LogisticRegression_getTermCriteria_mF131E546FC5D02E3B15A9F80058ED425E4D06F70 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_getTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_getTermCriteria)(___0_obj);
	#else
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_LogisticRegression_setTermCriteria(System.IntPtr,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_LogisticRegression_setTermCriteria_m7AAE0F6C506A01B5DFEB69336C391C6D7C2B6E5D (intptr_t ___0_obj, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_setTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_setTermCriteria)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::ml_LogisticRegression_predict(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_ml_LogisticRegression_predict_m5318190C847E9E822E000349A70E9AA38327FFAE (intptr_t ___0_obj, intptr_t ___1_samples, intptr_t ___2_results, int32_t ___3_flags, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_predict", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_predict)(___0_obj, ___1_samples, ___2_results, ___3_flags);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj, ___1_samples, ___2_results, ___3_flags);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_LogisticRegression_get_learnt_thetas(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_LogisticRegression_get_learnt_thetas_mB2BA0585D97C77248B4D3C2155B8E653099B0AFD (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_get_learnt_thetas", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_get_learnt_thetas)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_LogisticRegression_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_LogisticRegression_create_mC0A86951971F8893FD2929419F5BC6134DA68BE6 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_LogisticRegression_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_LogisticRegression_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_LogisticRegression_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_LogisticRegression_delete_m15B4CE5B5206F35CC7509AD4865A7920DE144F93 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_LogisticRegression_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_LogisticRegression_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_LogisticRegression_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_LogisticRegression_get_mCD79DC56406C7AE8AF1312732FE69EBB673C5E98 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_LogisticRegression_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_LogisticRegression_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::ml_NormalBayesClassifier_predictProb(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_ml_NormalBayesClassifier_predictProb_mBFE93104595565544CDD7C01096B30912A12C764 (intptr_t ___0_obj, intptr_t ___1_inputs, intptr_t ___2_samples, intptr_t ___3_outputProbs, int32_t ___4_flags, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_NormalBayesClassifier_predictProb", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(ml_NormalBayesClassifier_predictProb)(___0_obj, ___1_inputs, ___2_samples, ___3_outputProbs, ___4_flags);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj, ___1_inputs, ___2_samples, ___3_outputProbs, ___4_flags);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_NormalBayesClassifier_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_NormalBayesClassifier_create_mFE36D98EEA0D3761045D5104CF58B1497A27E77B (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_NormalBayesClassifier_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_NormalBayesClassifier_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_NormalBayesClassifier_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_NormalBayesClassifier_delete_m91148B5851D51EE223FBFC838402C884FDD9E7D4 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_NormalBayesClassifier_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_NormalBayesClassifier_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_NormalBayesClassifier_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_NormalBayesClassifier_get_m8A8438740B27A5CACE681395022E66168B38335A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_NormalBayesClassifier_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_NormalBayesClassifier_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_StatModel_clear(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_StatModel_clear_m023485F516CA98DF8BB8A649E63133B40DE1F89A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_clear", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_StatModel_clear)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_getVarCount(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_getVarCount_m8D7879110B8A19E3E1AF1CC1E0D482FB506AE510 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_getVarCount", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_getVarCount)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_empty_m0CFEE209DB905FD052A5C37E0164DCC010D90462 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_empty)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_isTrained(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_isTrained_m53B5810168387D41B3805BDC4D560F360D6A8D0B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_isTrained", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_isTrained)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_isClassifier(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_isClassifier_m6520C7CE77E89CE179DB99DA2CBE5D99F0B67FBB (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_isClassifier", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_isClassifier)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_train1(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_train1_mE5DF49D0B583346E4D2084970B885779A58EBAE6 (intptr_t ___0_obj, intptr_t ___1_trainData, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_train1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_train1)(___0_obj, ___1_trainData, ___2_flags);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_trainData, ___2_flags);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::ml_StatModel_train2(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_StatModel_train2_m0FCAE5B664DD17C1323D903ACE3782DF27E1172F (intptr_t ___0_obj, intptr_t ___1_samples, int32_t ___2_layout, intptr_t ___3_responses, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_train2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_train2)(___0_obj, ___1_samples, ___2_layout, ___3_responses);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_samples, ___2_layout, ___3_responses);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::ml_StatModel_calcError(System.IntPtr,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_ml_StatModel_calcError_m0938AF48671A992C257C4C949A6903E6EA5072C3 (intptr_t ___0_obj, intptr_t ___1_data, int32_t ___2_test, intptr_t ___3_resp, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_calcError", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_calcError)(___0_obj, ___1_data, ___2_test, ___3_resp);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj, ___1_data, ___2_test, ___3_resp);
	#endif

	return returnValue;
}
// System.Single OpenCvSharp.NativeMethods::ml_StatModel_predict(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_ml_StatModel_predict_mCD6DB9AF310110313A857C4AB0EBD38C0FCB4729 (intptr_t ___0_obj, intptr_t ___1_samples, intptr_t ___2_results, int32_t ___3_flags, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_predict", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(ml_StatModel_predict)(___0_obj, ___1_samples, ___2_results, ___3_flags);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj, ___1_samples, ___2_results, ___3_flags);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_StatModel_save(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_StatModel_save_m5C6F73C695F44495050ADF38F0EFF81E1B8C82FE (intptr_t ___0_obj, String_t* ___1_filename, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_StatModel_save", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_filename' to native representation
	char* ____1_filename_marshaled = NULL;
	____1_filename_marshaled = il2cpp_codegen_marshal_string(___1_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_StatModel_save)(___0_obj, ____1_filename_marshaled);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_filename_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_filename' native representation
	il2cpp_codegen_marshal_free(____1_filename_marshaled);
	____1_filename_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::ml_SVM_getType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_SVM_getType_mB10515187A50E5738930B08D8121644D4792C366 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setType(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setType_m0DB80965509B7EC30A71EEB8D866B88BC517ACBE (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setType)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getGamma(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getGamma_m256FE0C90B09EFC097BE39180D0E39750B14C503 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getGamma", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getGamma)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setGamma(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setGamma_m1F1836C65D3B50544D04167F0B86AA32C7C36394 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setGamma", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setGamma)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getCoef0(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getCoef0_mA81F0F13F4F0EDFB456E10A5FD715979271DC4FC (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getCoef0", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getCoef0)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setCoef0(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setCoef0_mE6ADC166060CBD1C66028CED236BFF540CE1F7CF (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setCoef0", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setCoef0)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getDegree(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getDegree_mBD414534AFC3CDC37D4EE9826694E57017DD94DE (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getDegree", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getDegree)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setDegree(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setDegree_m18DC4E949117EBB6630BC73FC37D5F20A9123376 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setDegree", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setDegree)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getC(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getC_m1C236888DE92198BAAD7CE8090B238491E375E39 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getC", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getC)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setC(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setC_mA23F3A85BE797BA024EA348A8FD9E3CF95B2350D (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setC", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setC)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getP(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getP_m38AC6AB4BEAB40028154601E4575371CE803945C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getP", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getP)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setP(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setP_m1CBA0B022256F166AF53C90A49C36DD9DC9730D9 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setP", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setP)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getNu(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getNu_mB947426AF02ED5F85FDCBAC849F620D775646ABA (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getNu", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getNu)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setNu(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setNu_m456679AB677A39247D31FF8C37ED7A8BFB257A29 (intptr_t ___0_obj, double ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setNu", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setNu)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_SVM_getClassWeights(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_SVM_getClassWeights_mEA80125067E44B68A74D3E5BC6252A1F36B502E2 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getClassWeights", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getClassWeights)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setClassWeights(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setClassWeights_m0E47BE5DFE43C50E5C97592790041F180D1B48B4 (intptr_t ___0_obj, intptr_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setClassWeights", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setClassWeights)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// OpenCvSharp.TermCriteria OpenCvSharp.NativeMethods::ml_SVM_getTermCriteria(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 NativeMethods_ml_SVM_getTermCriteria_m1A97C4853348EE7794E39A82DD9AF5853FA3B863 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getTermCriteria)(___0_obj);
	#else
	TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setTermCriteria(System.IntPtr,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setTermCriteria_mB258C3AA194FE64CD1E984C541221878A929BF66 (intptr_t ___0_obj, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setTermCriteria", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setTermCriteria)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::ml_SVM_getKernelType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_ml_SVM_getKernelType_m80882B52D77C28581C34F9A5E95A4E245EFBBB3D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getKernelType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getKernelType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_SVM_setKernel(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_SVM_setKernel_mEEA5F1CFCEC3A203C710986AE1E46FE0FF88D2F5 (intptr_t ___0_obj, int32_t ___1_kernelType, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_setKernel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_SVM_setKernel)(___0_obj, ___1_kernelType);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_kernelType);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_SVM_getSupportVectors(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_SVM_getSupportVectors_m12835EC34ECB2686F813ED981FD7771E27BB6173 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getSupportVectors", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getSupportVectors)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::ml_SVM_getDecisionFunction(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_ml_SVM_getDecisionFunction_mE36BC50D816364621ACDF229D22C4D0CD3EBDB0B (intptr_t ___0_obj, int32_t ___1_i, intptr_t ___2_alpha, intptr_t ___3_svidx, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getDecisionFunction", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getDecisionFunction)(___0_obj, ___1_i, ___2_alpha, ___3_svidx);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj, ___1_i, ___2_alpha, ___3_svidx);
	#endif

	return returnValue;
}
// OpenCvSharp.ML.ParamGrid OpenCvSharp.NativeMethods::ml_SVM_getDefaultGrid(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D NativeMethods_ml_SVM_getDefaultGrid_m504B0567BFE5AD935ED75F4977B134BAF564574E (int32_t ___0_paramId, const RuntimeMethod* method) 
{
	typedef ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_getDefaultGrid", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_getDefaultGrid)(___0_paramId);
	#else
	ParamGrid_t0F18158C237FDE12E81979168156D10ABD2E0A6D returnValue = il2cppPInvokeFunc(___0_paramId);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::ml_SVM_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_SVM_create_m01273E4F0C24AFA1C151A9FE60A6E3606E08A9C3 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_SVM_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_SVM_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::ml_Ptr_SVM_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_ml_Ptr_SVM_delete_m5E09AD2B8BC7ABD12F4DC65AFDC6F13CEEA8D64B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_SVM_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(ml_Ptr_SVM_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::ml_Ptr_SVM_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_ml_Ptr_SVM_get_m7211BA4A4974C4F237CA601A48ABD6C82F1ED6F2 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "ml_Ptr_SVM_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(ml_Ptr_SVM_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods__cctor_m1B283C13B5D3B94C2470AA15F4B5E2D457EA04DA (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_U3C_cctorU3Eb__1286_0_m3CEB893697AD4AF356D15350AAE6136FB0D0A49B_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_U3C_cctorU3Eb__1286_1_m71C25B4F275F33A4FF39BFEC18D7EBBA195B06BC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral81151D1E9FF5F53A008A360CAFF19A0083D10880);
		s_Il2CppMethodInitialized = true;
	}
	{
		// private static bool tried = false;
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___tried_0 = (bool)0;
		// private static readonly string[] RuntimeDllNames =
		// {
		//     //DllVCRuntime,
		//     //DllMsvcp,
		// };
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_0 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)0);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___RuntimeDllNames_5 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___RuntimeDllNames_5), (void*)L_0);
		// private static readonly string[] OpenCVDllNames =
		// {
		//     "opencv_world",
		// };
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_1 = (StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248*)SZArrayNew(StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248_il2cpp_TypeInfo_var, (uint32_t)1);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_2 = L_1;
		NullCheck(L_2);
		ArrayElementTypeCheck (L_2, _stringLiteral81151D1E9FF5F53A008A360CAFF19A0083D10880);
		(L_2)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral81151D1E9FF5F53A008A360CAFF19A0083D10880);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___OpenCVDllNames_6 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___OpenCVDllNames_6), (void*)L_2);
		// public static readonly CvErrorCallback ErrorHandlerThrowException =
		//     delegate(ErrorCode status, string funcName, string errMsg, string fileName, int line, IntPtr userdata)
		//     {
		//         try
		//         {
		//             //cvSetErrStatus(CvStatus.StsOk);
		//             return 0;
		//         }
		//         finally
		//         {
		//             throw new OpenCVException(status, funcName, errMsg, fileName, line);
		//         }
		//     };
		il2cpp_codegen_runtime_class_init_inline(U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var);
		U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* L_3 = ((U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var))->___U3CU3E9_0;
		CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* L_4 = (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)il2cpp_codegen_object_new(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var);
		NullCheck(L_4);
		CvErrorCallback__ctor_mFAA228DCA256624CAC949BDCEBE1027F94C57D44(L_4, L_3, (intptr_t)((void*)U3CU3Ec_U3C_cctorU3Eb__1286_0_m3CEB893697AD4AF356D15350AAE6136FB0D0A49B_RuntimeMethod_var), NULL);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerThrowException_9 = L_4;
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerThrowException_9), (void*)L_4);
		// public static readonly CvErrorCallback ErrorHandlerIgnorance =
		//     delegate(ErrorCode status, string funcName, string errMsg, string fileName, int line, IntPtr userdata)
		//     {
		//         //cvSetErrStatus(CvStatus.StsOk);
		//         return 0;
		//     };
		U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* L_5 = ((U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var))->___U3CU3E9_0;
		CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* L_6 = (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)il2cpp_codegen_object_new(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var);
		NullCheck(L_6);
		CvErrorCallback__ctor_mFAA228DCA256624CAC949BDCEBE1027F94C57D44(L_6, L_5, (intptr_t)((void*)U3CU3Ec_U3C_cctorU3Eb__1286_1_m71C25B4F275F33A4FF39BFEC18D7EBBA195B06BC_RuntimeMethod_var), NULL);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerIgnorance_10 = L_6;
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerIgnorance_10), (void*)L_6);
		// LoadLibraries(WindowsLibraryLoader.Instance.AdditionalPaths);
		il2cpp_codegen_runtime_class_init_inline(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* L_7;
		L_7 = WindowsLibraryLoader_get_Instance_m11C2C03E0669B2812F5A54BE2630DC036A41BBFD_inline(NULL);
		NullCheck(L_7);
		List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* L_8;
		L_8 = WindowsLibraryLoader_get_AdditionalPaths_m3305759C5A1160F085A7B8E8842870B8D1E36E19_inline(L_7, NULL);
		NativeMethods_LoadLibraries_m13273F98CC7A19457FDEB9DC147CAF9F074FDBC8(L_8, NULL);
		// TryPInvoke();
		NativeMethods_TryPInvoke_mFFF8E81F7A8BACC0028BE71C3F15443E415501BC(NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.NativeMethods::LoadLibraries(System.Collections.Generic.IEnumerable`1<System.String>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_LoadLibraries_m13273F98CC7A19457FDEB9DC147CAF9F074FDBC8 (RuntimeObject* ___0_additionalPaths, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_0_0_0_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&EnumerableEx_ToArray_TisString_t_mCA90F3B45146DE88899CA1E3A6C69AE7D279AEDC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_Add_mF10DB1D3CBB0B14215F0E4F8AB4934A1955E5351_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1__ctor_m0BAB01B25B1D62E100CC97401B1A9972D6DEB6EC_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Type_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral3EE2B7884D8BAA386714E3413F22889095B05B25);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteral924CB591C7F83A8003577672F4A8CAFA3D9C6F31);
		s_Il2CppMethodInitialized = true;
	}
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* V_0 = NULL;
	List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* V_1 = NULL;
	intptr_t V_2;
	memset((&V_2), 0, sizeof(V_2));
	intptr_t V_3;
	memset((&V_3), 0, sizeof(V_3));
	StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* V_4 = NULL;
	int32_t V_5 = 0;
	String_t* V_6 = NULL;
	String_t* V_7 = NULL;
	{
		// if (IsUnix())
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = NativeMethods_IsUnix_m055B37F48B586F5C2B0B448329A206BFC1327D72(NULL);
		if (!L_0)
		{
			goto IL_0008;
		}
	}
	{
		// return;
		return;
	}

IL_0008:
	{
		// string[] ap = EnumerableEx.ToArray(additionalPaths);
		RuntimeObject* L_1 = ___0_additionalPaths;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_2;
		L_2 = EnumerableEx_ToArray_TisString_t_mCA90F3B45146DE88899CA1E3A6C69AE7D279AEDC(L_1, EnumerableEx_ToArray_TisString_t_mCA90F3B45146DE88899CA1E3A6C69AE7D279AEDC_RuntimeMethod_var);
		V_0 = L_2;
		// List<string> runtimePaths = new List<string> (ap);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_3 = V_0;
		List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* L_4 = (List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD*)il2cpp_codegen_object_new(List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD_il2cpp_TypeInfo_var);
		NullCheck(L_4);
		List_1__ctor_m0BAB01B25B1D62E100CC97401B1A9972D6DEB6EC(L_4, (RuntimeObject*)L_3, List_1__ctor_m0BAB01B25B1D62E100CC97401B1A9972D6DEB6EC_RuntimeMethod_var);
		V_1 = L_4;
		// runtimePaths.Add(Environment.GetFolderPath(Environment.SpecialFolder.System));
		List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* L_5 = V_1;
		String_t* L_6;
		L_6 = Environment_GetFolderPath_m8D283450E7FCF2F2CAFFF157D599C3EBA212B58C(((int32_t)37), NULL);
		NullCheck(L_5);
		List_1_Add_mF10DB1D3CBB0B14215F0E4F8AB4934A1955E5351_inline(L_5, L_6, List_1_Add_mF10DB1D3CBB0B14215F0E4F8AB4934A1955E5351_RuntimeMethod_var);
		// foreach (string dll in RuntimeDllNames)
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_7 = ((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___RuntimeDllNames_5;
		V_4 = L_7;
		V_5 = 0;
		goto IL_0049;
	}

IL_002f:
	{
		// foreach (string dll in RuntimeDllNames)
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_8 = V_4;
		int32_t L_9 = V_5;
		NullCheck(L_8);
		int32_t L_10 = L_9;
		String_t* L_11 = (L_8)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		V_6 = L_11;
		// WindowsLibraryLoader.Instance.LoadLibrary(dll, runtimePaths);
		il2cpp_codegen_runtime_class_init_inline(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* L_12;
		L_12 = WindowsLibraryLoader_get_Instance_m11C2C03E0669B2812F5A54BE2630DC036A41BBFD_inline(NULL);
		String_t* L_13 = V_6;
		List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* L_14 = V_1;
		NullCheck(L_12);
		WindowsLibraryLoader_LoadLibrary_m05228C618D3CD3D6EB2D1763FFB1426103464FDA(L_12, L_13, L_14, NULL);
		int32_t L_15 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add(L_15, 1));
	}

IL_0049:
	{
		// foreach (string dll in RuntimeDllNames)
		int32_t L_16 = V_5;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_17 = V_4;
		NullCheck(L_17);
		if ((((int32_t)L_16) < ((int32_t)((int32_t)(((RuntimeArray*)L_17)->max_length)))))
		{
			goto IL_002f;
		}
	}
	{
		// foreach (string dll in OpenCVDllNames)
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_18 = ((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___OpenCVDllNames_6;
		V_4 = L_18;
		V_5 = 0;
		goto IL_0081;
	}

IL_005d:
	{
		// foreach (string dll in OpenCVDllNames)
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_19 = V_4;
		int32_t L_20 = V_5;
		NullCheck(L_19);
		int32_t L_21 = L_20;
		String_t* L_22 = (L_19)->GetAt(static_cast<il2cpp_array_size_t>(L_21));
		V_7 = L_22;
		// WindowsLibraryLoader.Instance.LoadLibrary(dll + Version, ap);
		il2cpp_codegen_runtime_class_init_inline(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* L_23;
		L_23 = WindowsLibraryLoader_get_Instance_m11C2C03E0669B2812F5A54BE2630DC036A41BBFD_inline(NULL);
		String_t* L_24 = V_7;
		String_t* L_25;
		L_25 = String_Concat_m9E3155FB84015C823606188F53B47CB44C444991(L_24, _stringLiteral3EE2B7884D8BAA386714E3413F22889095B05B25, NULL);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_26 = V_0;
		NullCheck(L_23);
		WindowsLibraryLoader_LoadLibrary_m05228C618D3CD3D6EB2D1763FFB1426103464FDA(L_23, L_25, (RuntimeObject*)L_26, NULL);
		int32_t L_27 = V_5;
		V_5 = ((int32_t)il2cpp_codegen_add(L_27, 1));
	}

IL_0081:
	{
		// foreach (string dll in OpenCVDllNames)
		int32_t L_28 = V_5;
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_29 = V_4;
		NullCheck(L_29);
		if ((((int32_t)L_28) < ((int32_t)((int32_t)(((RuntimeArray*)L_29)->max_length)))))
		{
			goto IL_005d;
		}
	}
	{
		// WindowsLibraryLoader.Instance.LoadLibrary(DllExtern, ap);
		il2cpp_codegen_runtime_class_init_inline(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* L_30;
		L_30 = WindowsLibraryLoader_get_Instance_m11C2C03E0669B2812F5A54BE2630DC036A41BBFD_inline(NULL);
		StringU5BU5D_t7674CD946EC0CE7B3AE0BE70E6EE85F2ECD9F248* L_31 = V_0;
		NullCheck(L_30);
		WindowsLibraryLoader_LoadLibrary_m05228C618D3CD3D6EB2D1763FFB1426103464FDA(L_30, _stringLiteral924CB591C7F83A8003577672F4A8CAFA3D9C6F31, (RuntimeObject*)L_31, NULL);
		// IntPtr zero = IntPtr.Zero;
		intptr_t L_32 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		V_2 = L_32;
		// IntPtr current = redirectError(ErrorHandlerThrowException, zero, ref zero);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* L_33 = ((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerThrowException_9;
		intptr_t L_34 = V_2;
		intptr_t L_35;
		L_35 = NativeMethods_redirectError_mB9D0FD5DE6877218A0C72F29D9184A3C331E8412(L_33, L_34, (&V_2), NULL);
		V_3 = L_35;
		// if (current != IntPtr.Zero)
		intptr_t L_36 = V_3;
		intptr_t L_37 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_38;
		L_38 = IntPtr_op_Inequality_m90EFC9C4CAD9A33E309F2DDF98EE4E1DD253637B(L_36, L_37, NULL);
		if (!L_38)
		{
			goto IL_00d5;
		}
	}
	{
		// ErrorHandlerDefault = (CvErrorCallback)Marshal.GetDelegateForFunctionPointer(
		//     current,
		//     typeof(CvErrorCallback)
		// );
		intptr_t L_39 = V_3;
		RuntimeTypeHandle_t332A452B8B6179E4469B69525D0FE82A88030F7B L_40 = { reinterpret_cast<intptr_t> (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_0_0_0_var) };
		il2cpp_codegen_runtime_class_init_inline(Type_t_il2cpp_TypeInfo_var);
		Type_t* L_41;
		L_41 = Type_GetTypeFromHandle_m6062B81682F79A4D6DF2640692EE6D9987858C57(L_40, NULL);
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		Delegate_t* L_42;
		L_42 = Marshal_GetDelegateForFunctionPointer_mC8100D33A78463ADEEECC4D86AA17B5809FBB304(L_39, L_41, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerDefault_11 = ((CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)CastclassSealed((RuntimeObject*)L_42, CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var));
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerDefault_11), (void*)((CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)CastclassSealed((RuntimeObject*)L_42, CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D_il2cpp_TypeInfo_var)));
		return;
	}

IL_00d5:
	{
		// ErrorHandlerDefault = null;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerDefault_11 = (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)NULL;
		Il2CppCodeGenWriteBarrier((void**)(&((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___ErrorHandlerDefault_11), (void*)(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*)NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.NativeMethods::TryPInvoke()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_TryPInvoke_mFFF8E81F7A8BACC0028BE71C3F15443E415501BC (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* V_0 = NULL;
	OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* V_1 = NULL;
	Exception_t* V_2 = NULL;
	Exception_t* V_3 = NULL;
	il2cpp::utils::ExceptionSupportStack<RuntimeObject*, 2> __active_exceptions;
	Exception_t* G_B20_0 = NULL;
	Exception_t* G_B19_0 = NULL;
	{
		// if (tried)
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		bool L_0 = ((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___tried_0;
		if (!L_0)
		{
			goto IL_0008;
		}
	}
	{
		// return;
		return;
	}

IL_0008:
	{
		// tried = true;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		((NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_StaticFields*)il2cpp_codegen_static_fields_for(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var))->___tried_0 = (bool)1;
	}
	try
	{// begin try (depth: 1)
		// core_Mat_sizeof();
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		uint64_t L_1;
		L_1 = NativeMethods_core_Mat_sizeof_m1D86AFD8D85DAA5EE37ED46C693855D0A7770997(NULL);
		// }
		goto IL_0077;
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&DllNotFoundException_t8CAE636A394C482C9FCF38FB7B7929506319D534_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0016;
		}
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BadImageFormatException_t7EBAEDCD74D3274D00106EC0051755C18D20E552_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0034;
		}
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_0052;
		}
		throw e;
	}

CATCH_0016:
	{// begin catch(System.DllNotFoundException)
		{
			// var exception = PInvokeHelper.CreateException(e);
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_2;
			L_2 = PInvokeHelper_CreateException_mF9C1E5CE049D3E526D144EBAE7528097401108D1(((DllNotFoundException_t8CAE636A394C482C9FCF38FB7B7929506319D534*)IL2CPP_GET_ACTIVE_EXCEPTION(DllNotFoundException_t8CAE636A394C482C9FCF38FB7B7929506319D534*)), NULL);
			V_0 = L_2;
		}
		try
		{// begin try (depth: 2)
			// try{Console.WriteLine(exception.Message);}
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_3 = V_0;
			NullCheck(L_3);
			String_t* L_4;
			L_4 = VirtualFuncInvoker0< String_t* >::Invoke(5 /* System.String System.Exception::get_Message() */, L_3);
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Console_t5EDF9498D011BD48287171978EDBBA6964829C3E_il2cpp_TypeInfo_var)));
			Console_WriteLine_m77CEDA0C084428F0D6220988DA66992EC1925AEA(L_4, NULL);
			// try{Console.WriteLine(exception.Message);}
			goto IL_002c;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_0029;
			}
			throw e;
		}

CATCH_0029:
		{// begin catch(System.Object)
			// catch{}
			// catch{}
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_002c;
		}// end catch (depth: 2)

IL_002c:
		{
		}
		try
		{// begin try (depth: 2)
			// try{Debug.WriteLine(exception.Message);}
			goto IL_0032;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_002f;
			}
			throw e;
		}

CATCH_002f:
		{// begin catch(System.Object)
			// catch{}
			// catch{}
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0032;
		}// end catch (depth: 2)

IL_0032:
		{
			// throw exception;
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_5 = V_0;
			IL2CPP_RAISE_MANAGED_EXCEPTION(L_5, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NativeMethods_TryPInvoke_mFFF8E81F7A8BACC0028BE71C3F15443E415501BC_RuntimeMethod_var)));
		}
	}// end catch (depth: 1)

CATCH_0034:
	{// begin catch(System.BadImageFormatException)
		{
			// var exception = PInvokeHelper.CreateException(e);
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_6;
			L_6 = PInvokeHelper_CreateException_mF9C1E5CE049D3E526D144EBAE7528097401108D1(((BadImageFormatException_t7EBAEDCD74D3274D00106EC0051755C18D20E552*)IL2CPP_GET_ACTIVE_EXCEPTION(BadImageFormatException_t7EBAEDCD74D3274D00106EC0051755C18D20E552*)), NULL);
			V_1 = L_6;
		}
		try
		{// begin try (depth: 2)
			// try { Console.WriteLine(exception.Message); }
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_7 = V_1;
			NullCheck(L_7);
			String_t* L_8;
			L_8 = VirtualFuncInvoker0< String_t* >::Invoke(5 /* System.String System.Exception::get_Message() */, L_7);
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Console_t5EDF9498D011BD48287171978EDBBA6964829C3E_il2cpp_TypeInfo_var)));
			Console_WriteLine_m77CEDA0C084428F0D6220988DA66992EC1925AEA(L_8, NULL);
			// try { Console.WriteLine(exception.Message); }
			goto IL_004a;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_0047;
			}
			throw e;
		}

CATCH_0047:
		{// begin catch(System.Object)
			// catch { }
			// catch { }
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_004a;
		}// end catch (depth: 2)

IL_004a:
		{
		}
		try
		{// begin try (depth: 2)
			// try { Debug.WriteLine(exception.Message); }
			goto IL_0050;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_004d;
			}
			throw e;
		}

CATCH_004d:
		{// begin catch(System.Object)
			// catch { }
			// catch { }
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0050;
		}// end catch (depth: 2)

IL_0050:
		{
			// throw exception;
			OpenCvSharpException_tBD376059F0CA43815884BC4364354B525FD4F83A* L_9 = V_1;
			IL2CPP_RAISE_MANAGED_EXCEPTION(L_9, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&NativeMethods_TryPInvoke_mFFF8E81F7A8BACC0028BE71C3F15443E415501BC_RuntimeMethod_var)));
		}
	}// end catch (depth: 1)

CATCH_0052:
	{// begin catch(System.Exception)
		{
			// catch (Exception e)
			V_2 = ((Exception_t*)IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
			// Exception ex = e.InnerException ?? e;
			Exception_t* L_10 = V_2;
			NullCheck(L_10);
			Exception_t* L_11;
			L_11 = Exception_get_InnerException_m0C1BDB339C786BA4DA7D2C1AD214571CFBBB1410_inline(L_10, NULL);
			Exception_t* L_12 = L_11;
			G_B19_0 = L_12;
			if (L_12)
			{
				G_B20_0 = L_12;
				goto IL_005e;
			}
		}
		{
			Exception_t* L_13 = V_2;
			G_B20_0 = L_13;
		}

IL_005e:
		{
			V_3 = G_B20_0;
		}
		try
		{// begin try (depth: 2)
			// try{ Console.WriteLine(ex.Message); }
			Exception_t* L_14 = V_3;
			NullCheck(L_14);
			String_t* L_15;
			L_15 = VirtualFuncInvoker0< String_t* >::Invoke(5 /* System.String System.Exception::get_Message() */, L_14);
			il2cpp_codegen_runtime_class_init_inline(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Console_t5EDF9498D011BD48287171978EDBBA6964829C3E_il2cpp_TypeInfo_var)));
			Console_WriteLine_m77CEDA0C084428F0D6220988DA66992EC1925AEA(L_15, NULL);
			// try{ Console.WriteLine(ex.Message); }
			goto IL_006f;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_006c;
			}
			throw e;
		}

CATCH_006c:
		{// begin catch(System.Object)
			// catch{}
			// catch{}
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_006f;
		}// end catch (depth: 2)

IL_006f:
		{
		}
		try
		{// begin try (depth: 2)
			// try{ Debug.WriteLine(ex.Message); }
			goto IL_0075;
		}// end try (depth: 2)
		catch(Il2CppExceptionWrapper& e)
		{
			if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
			{
				IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
				goto CATCH_0072;
			}
			throw e;
		}

CATCH_0072:
		{// begin catch(System.Object)
			// catch{}
			// catch{}
			IL2CPP_POP_ACTIVE_EXCEPTION();
			goto IL_0075;
		}// end catch (depth: 2)

IL_0075:
		{
			// throw;
			IL2CPP_RETHROW_MANAGED_EXCEPTION(IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
		}
	}// end catch (depth: 1)

IL_0077:
	{
		// }
		return;
	}
}
// System.Boolean OpenCvSharp.NativeMethods::IsWindows()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_IsWindows_m42E1AC75913AC7DD40B5ED8A8D44B2557C85EE02 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return !IsUnix();
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		bool L_0;
		L_0 = NativeMethods_IsUnix_m055B37F48B586F5C2B0B448329A206BFC1327D72(NULL);
		return (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
	}
}
// System.Boolean OpenCvSharp.NativeMethods::IsUnix()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_IsUnix_m055B37F48B586F5C2B0B448329A206BFC1327D72 (const RuntimeMethod* method) 
{
	int32_t V_0 = 0;
	{
		// var p = Environment.OSVersion.Platform;
		OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557* L_0;
		L_0 = Environment_get_OSVersion_mDDD265F5864A2086664CAE56D7C4B59E9A50AF66(NULL);
		NullCheck(L_0);
		int32_t L_1;
		L_1 = OperatingSystem_get_Platform_m01AF3D6217E4031C3AA824481BBE9E2933347E26_inline(L_0, NULL);
		V_0 = L_1;
		// return (p == PlatformID.Unix ||
		//         p == PlatformID.MacOSX ||
		//         (int)p == 128);
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) == ((int32_t)4)))
		{
			goto IL_001c;
		}
	}
	{
		int32_t L_3 = V_0;
		if ((((int32_t)L_3) == ((int32_t)6)))
		{
			goto IL_001c;
		}
	}
	{
		int32_t L_4 = V_0;
		return (bool)((((int32_t)L_4) == ((int32_t)((int32_t)128)))? 1 : 0);
	}

IL_001c:
	{
		return (bool)1;
	}
}
// System.Boolean OpenCvSharp.NativeMethods::IsMono()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_IsMono_m913A306478F83546BB60FF065B17F92C6789C095 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_IsMono_m913A306478F83546BB60FF065B17F92C6789C095_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Type_GetType_m71A077E0B5DA3BD1DC0AB9AE387056CFCF56F93F_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Type_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA18A4AE569C5BE88A9C406093C040EFEBFF78C5E);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return (Type.GetType("Mono.Runtime") != null);
		il2cpp_codegen_runtime_class_init_inline(Type_t_il2cpp_TypeInfo_var);
		Type_t* L_0;
		L_0 = il2cpp_codegen_get_type(_stringLiteralA18A4AE569C5BE88A9C406093C040EFEBFF78C5E, Type_GetType_m71A077E0B5DA3BD1DC0AB9AE387056CFCF56F93F_RuntimeMethod_var, NativeMethods_IsMono_m913A306478F83546BB60FF065B17F92C6789C095_RuntimeMethod_var);
		bool L_1;
		L_1 = Type_op_Inequality_m83209C7BB3C05DFBEA3B6199B0BEFE8037301172(L_0, (Type_t*)NULL, NULL);
		return L_1;
	}
}
// System.IntPtr OpenCvSharp.NativeMethods::aruco_getPredefinedDictionary(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_aruco_getPredefinedDictionary_mB10DD5B0F1A8566A9D3DC0802FC2B26B1DD9ADC9 (int32_t ___0_name, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_getPredefinedDictionary", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_getPredefinedDictionary)(___0_name);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_name);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::aruco_detectMarkers(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_detectMarkers_m02EC25F9DA6EF1A4FAD5F5F920D37060FECD8351 (intptr_t ___0_image, intptr_t ___1_dictionary, intptr_t ___2_corners, intptr_t ___3_ids, intptr_t ___4_detectParameters, intptr_t ___5_outrejectedImgPoints, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_detectMarkers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_detectMarkers)(___0_image, ___1_dictionary, ___2_corners, ___3_ids, ___4_detectParameters, ___5_outrejectedImgPoints);
	#else
	il2cppPInvokeFunc(___0_image, ___1_dictionary, ___2_corners, ___3_ids, ___4_detectParameters, ___5_outrejectedImgPoints);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_drawDetectedMarkers(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],System.Int32[],System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_drawDetectedMarkers_mF8A1042303C3AE5BFE8C366FF0936AC9F86C2FEB (intptr_t ___0_image, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_corners, int32_t ___2_cornerSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_contoursSize2, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___4_ids, int32_t ___5_idxLength, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___6_borderColor, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, int32_t*, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_drawDetectedMarkers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_corners' to native representation
	intptr_t* ____1_corners_marshaled = NULL;
	if (___1_corners != NULL)
	{
		____1_corners_marshaled = reinterpret_cast<intptr_t*>((___1_corners)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_contoursSize2' to native representation
	int32_t* ____3_contoursSize2_marshaled = NULL;
	if (___3_contoursSize2 != NULL)
	{
		____3_contoursSize2_marshaled = reinterpret_cast<int32_t*>((___3_contoursSize2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_ids' to native representation
	int32_t* ____4_ids_marshaled = NULL;
	if (___4_ids != NULL)
	{
		____4_ids_marshaled = reinterpret_cast<int32_t*>((___4_ids)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_drawDetectedMarkers)(___0_image, ____1_corners_marshaled, ___2_cornerSize1, ____3_contoursSize2_marshaled, ____4_ids_marshaled, ___5_idxLength, ___6_borderColor);
	#else
	il2cppPInvokeFunc(___0_image, ____1_corners_marshaled, ___2_cornerSize1, ____3_contoursSize2_marshaled, ____4_ids_marshaled, ___5_idxLength, ___6_borderColor);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_drawDetectedMarkers(System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],System.IntPtr,System.Int32,OpenCvSharp.Scalar)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_drawDetectedMarkers_mE4906399FFF394E490240DCC74F989ED5C796EDD (intptr_t ___0_image, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_corners, int32_t ___2_cornerSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_contoursSize2, intptr_t ___4_ids, int32_t ___5_idxLength, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3 ___6_borderColor, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, int32_t*, intptr_t, int32_t, Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(Scalar_t8B98956EC01C0BDC682762AFF695488E8D0410B3);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_drawDetectedMarkers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_corners' to native representation
	intptr_t* ____1_corners_marshaled = NULL;
	if (___1_corners != NULL)
	{
		____1_corners_marshaled = reinterpret_cast<intptr_t*>((___1_corners)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_contoursSize2' to native representation
	int32_t* ____3_contoursSize2_marshaled = NULL;
	if (___3_contoursSize2 != NULL)
	{
		____3_contoursSize2_marshaled = reinterpret_cast<int32_t*>((___3_contoursSize2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_drawDetectedMarkers)(___0_image, ____1_corners_marshaled, ___2_cornerSize1, ____3_contoursSize2_marshaled, ___4_ids, ___5_idxLength, ___6_borderColor);
	#else
	il2cppPInvokeFunc(___0_image, ____1_corners_marshaled, ___2_cornerSize1, ____3_contoursSize2_marshaled, ___4_ids, ___5_idxLength, ___6_borderColor);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_drawMarker(System.IntPtr,System.Int32,System.Int32,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_drawMarker_m251656B20EDB0D643E4628692387290D91B126F1 (intptr_t ___0_dictionary, int32_t ___1_id, int32_t ___2_sidePixels, intptr_t ___3_mat, int32_t ___4_borderBits, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_drawMarker", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_drawMarker)(___0_dictionary, ___1_id, ___2_sidePixels, ___3_mat, ___4_borderBits);
	#else
	il2cppPInvokeFunc(___0_dictionary, ___1_id, ___2_sidePixels, ___3_mat, ___4_borderBits);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_drawAxis(System.IntPtr,System.IntPtr,System.Double[],System.Int32,System.Double[],System.Double[],System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_drawAxis_m028B8AE110EB7B92F8CF2E486FCF018118957BCB (intptr_t ___0_image, intptr_t ___1_cameraMatrix, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___2_distCoeffs, int32_t ___3_distCoeffsLength, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___4_rvec, DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___5_tvec, float ___6_lenght, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double*, int32_t, double*, double*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_drawAxis", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_distCoeffs' to native representation
	double* ____2_distCoeffs_marshaled = NULL;
	if (___2_distCoeffs != NULL)
	{
		____2_distCoeffs_marshaled = reinterpret_cast<double*>((___2_distCoeffs)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_rvec' to native representation
	double* ____4_rvec_marshaled = NULL;
	if (___4_rvec != NULL)
	{
		____4_rvec_marshaled = reinterpret_cast<double*>((___4_rvec)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___5_tvec' to native representation
	double* ____5_tvec_marshaled = NULL;
	if (___5_tvec != NULL)
	{
		____5_tvec_marshaled = reinterpret_cast<double*>((___5_tvec)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_drawAxis)(___0_image, ___1_cameraMatrix, ____2_distCoeffs_marshaled, ___3_distCoeffsLength, ____4_rvec_marshaled, ____5_tvec_marshaled, ___6_lenght);
	#else
	il2cppPInvokeFunc(___0_image, ___1_cameraMatrix, ____2_distCoeffs_marshaled, ___3_distCoeffsLength, ____4_rvec_marshaled, ____5_tvec_marshaled, ___6_lenght);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::aruco_DetectorParameters_create()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_aruco_DetectorParameters_create_m4C252A774F657BAC6FB969EA24BE4E4D6CE8EE01 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_create)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::aruco_Ptr_DetectorParameters_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_Ptr_DetectorParameters_delete_m196C517B8B30D3D6969E84303438FE7D36F0AB39 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Ptr_DetectorParameters_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_Ptr_DetectorParameters_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::aruco_Ptr_DetectorParameters_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_aruco_Ptr_DetectorParameters_get_m3B50E311DAACEE18666A57C934310DF8A82E7B2D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Ptr_DetectorParameters_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_Ptr_DetectorParameters_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setDoCornerRefinement(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setDoCornerRefinement_mE1499109568A29C376A6FC81E83B848A62AAF062 (intptr_t ___0_obj, bool ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setDoCornerRefinement", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setDoCornerRefinement)(___0_obj, static_cast<int32_t>(___1_value));
	#else
	il2cppPInvokeFunc(___0_obj, static_cast<int32_t>(___1_value));
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setAdaptiveThreshConstant(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setAdaptiveThreshConstant_mD951E49B71F2233A08078C434ED44F92A5DBB103 (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setAdaptiveThreshConstant", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setAdaptiveThreshConstant)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setCornerRefinementMinAccuracy(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setCornerRefinementMinAccuracy_mE370E7B5135620E95B1C543CA13AEBC737DE5556 (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setCornerRefinementMinAccuracy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setCornerRefinementMinAccuracy)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setErrorCorrectionRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setErrorCorrectionRate_mF70651DE0D6FB3EAFE1DC170284553F80AC8E2D9 (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setErrorCorrectionRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setErrorCorrectionRate)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMaxErroneousBitsInBorderRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMaxErroneousBitsInBorderRate_m3D00D423EC9F243C9194CA97385C18C0318F9F8F (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMaxErroneousBitsInBorderRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMaxErroneousBitsInBorderRate)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMaxMarkerPerimeterRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMaxMarkerPerimeterRate_m3529057F4999F46367AD3C4EBDCF5C87E7C4C58A (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMaxMarkerPerimeterRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMaxMarkerPerimeterRate)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMinCornerDistanceRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMinCornerDistanceRate_mE6BF0A0CEFC6E2FD98D5E6FB742C8C22CF34CE55 (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMinCornerDistanceRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMinCornerDistanceRate)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMinMarkerDistanceRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMinMarkerDistanceRate_m968DE4288C290B3F4148C1E08B734DA783915727 (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMinMarkerDistanceRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMinMarkerDistanceRate)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMinMarkerPerimeterRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMinMarkerPerimeterRate_mB9B449A0C31B1F7DEEB5F964891462922F1A9C64 (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMinMarkerPerimeterRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMinMarkerPerimeterRate)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMinOtsuStdDev(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMinOtsuStdDev_mA4D6EC06B57FF7FDF2A789F6E9E694197C267C10 (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMinOtsuStdDev", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMinOtsuStdDev)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setPerspectiveRemoveIgnoredMarginPerCell(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setPerspectiveRemoveIgnoredMarginPerCell_m5324F41D19F0D2703EB41E0A206467D970A2441E (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setPerspectiveRemoveIgnoredMarginPerCell", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setPerspectiveRemoveIgnoredMarginPerCell)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setPolygonalApproxAccuracyRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setPolygonalApproxAccuracyRate_m246CCD36A0687508DF875A6BA79728B8010464EA (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setPolygonalApproxAccuracyRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setPolygonalApproxAccuracyRate)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setAdaptiveThreshWinSizeMax(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setAdaptiveThreshWinSizeMax_mE46940576AE4128234FCB406A3AA8D3A4961E547 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setAdaptiveThreshWinSizeMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setAdaptiveThreshWinSizeMax)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setAdaptiveThreshWinSizeMin(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setAdaptiveThreshWinSizeMin_m50637289E73AD654F9E1E774A4D95BD0DEC17B6A (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setAdaptiveThreshWinSizeMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setAdaptiveThreshWinSizeMin)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setAdaptiveThreshWinSizeStep(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setAdaptiveThreshWinSizeStep_m0629A491045F7ABFA203CC86EBCD3C340633D83E (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setAdaptiveThreshWinSizeStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setAdaptiveThreshWinSizeStep)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setCornerRefinementMaxIterations(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setCornerRefinementMaxIterations_m5B8C2526D7EF16A36C5E32346C060CA92FABA456 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setCornerRefinementMaxIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setCornerRefinementMaxIterations)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setCornerRefinementWinSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setCornerRefinementWinSize_m8A6073BBE906C6A6D729DAE81A2522CD6F66CD04 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setCornerRefinementWinSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setCornerRefinementWinSize)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMarkerBorderBits(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMarkerBorderBits_m2FCB272CA3A460244E98B363050FC42D08E29590 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMarkerBorderBits", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMarkerBorderBits)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setMinDistanceToBorder(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setMinDistanceToBorder_mDF9128D015A5FCF7AEFDBB673F7DB68485838C34 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setMinDistanceToBorder", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setMinDistanceToBorder)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_DetectorParameters_setPerspectiveRemovePixelPerCell(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_DetectorParameters_setPerspectiveRemovePixelPerCell_m2FA406C9BA4ABD2CBCC5F253EFECBBEB8A5D600D (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_setPerspectiveRemovePixelPerCell", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_setPerspectiveRemovePixelPerCell)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Boolean OpenCvSharp.NativeMethods::aruco_DetectorParameters_getDoCornerRefinement(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_aruco_DetectorParameters_getDoCornerRefinement_m6FD7A1DA422E89AD1C843F8AC6D1E8E7DD062667 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getDoCornerRefinement", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getDoCornerRefinement)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getAdaptiveThreshConstant(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getAdaptiveThreshConstant_mB3A2B53DCD830A65ABCB4B74D893228C386F0CBD (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getAdaptiveThreshConstant", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getAdaptiveThreshConstant)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getCornerRefinementMinAccuracy(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getCornerRefinementMinAccuracy_m7FA4350E6EF562825481CB173C2B41C3E27548BF (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getCornerRefinementMinAccuracy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getCornerRefinementMinAccuracy)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getErrorCorrectionRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getErrorCorrectionRate_m0A475194EA887E3EB9820787FFC46AD4577761BE (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getErrorCorrectionRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getErrorCorrectionRate)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMaxErroneousBitsInBorderRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMaxErroneousBitsInBorderRate_mD961BA9384B9248775A0E52122B22E8CC86A49FE (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMaxErroneousBitsInBorderRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMaxErroneousBitsInBorderRate)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMaxMarkerPerimeterRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMaxMarkerPerimeterRate_m461F6D374E2ED9ABB85C23086B1351910231499B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMaxMarkerPerimeterRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMaxMarkerPerimeterRate)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMinCornerDistanceRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMinCornerDistanceRate_mD4A1600A17A1F042C1F9D7D9F72D1E50BDC46FFE (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMinCornerDistanceRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMinCornerDistanceRate)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMinMarkerDistanceRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMinMarkerDistanceRate_mEE5393D353ECD6595CBE5B0C7FDD3C3D78A0CB5B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMinMarkerDistanceRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMinMarkerDistanceRate)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMinMarkerPerimeterRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMinMarkerPerimeterRate_m41535738C5CB4E0B6DD765479A372ABC2973BF83 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMinMarkerPerimeterRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMinMarkerPerimeterRate)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMinOtsuStdDev(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getMinOtsuStdDev_m4EEC9F26DB9CDE086B472DB4013163FB8F07B936 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMinOtsuStdDev", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMinOtsuStdDev)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getPerspectiveRemoveIgnoredMarginPerCell(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getPerspectiveRemoveIgnoredMarginPerCell_m6C273BEDD3071A44EA5F8CAFF9F11AFA83330B58 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getPerspectiveRemoveIgnoredMarginPerCell", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getPerspectiveRemoveIgnoredMarginPerCell)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::aruco_DetectorParameters_getPolygonalApproxAccuracyRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_aruco_DetectorParameters_getPolygonalApproxAccuracyRate_mC7B324CFF2D0799561A9EB735983740BE9922101 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getPolygonalApproxAccuracyRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getPolygonalApproxAccuracyRate)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getAdaptiveThreshWinSizeMax(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getAdaptiveThreshWinSizeMax_m40870239F3679B3E4ED8B90A4D5814D91EEA04F6 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getAdaptiveThreshWinSizeMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getAdaptiveThreshWinSizeMax)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getAdaptiveThreshWinSizeMin(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getAdaptiveThreshWinSizeMin_m3A18FA89349D7A524E6C2D2C681B53CA4D00586E (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getAdaptiveThreshWinSizeMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getAdaptiveThreshWinSizeMin)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getAdaptiveThreshWinSizeStep(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getAdaptiveThreshWinSizeStep_m53D63BECA09DEC785ACF91497473960A90EE0132 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getAdaptiveThreshWinSizeStep", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getAdaptiveThreshWinSizeStep)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getCornerRefinementMaxIterations(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getCornerRefinementMaxIterations_mF8F3AB4A37B8E757AE25F7942CD2173B8369DC10 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getCornerRefinementMaxIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getCornerRefinementMaxIterations)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getCornerRefinementWinSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getCornerRefinementWinSize_m8CE08B58A7CC531A984B8CD357ADECE61B05DEA8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getCornerRefinementWinSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getCornerRefinementWinSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMarkerBorderBits(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getMarkerBorderBits_m0FA05A90ACEC2407B4B7B838788D95D70F3F8CD6 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMarkerBorderBits", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMarkerBorderBits)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getMinDistanceToBorder(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getMinDistanceToBorder_m91C5551472AFC3D8B30BD97C168F504C8A9D86FD (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getMinDistanceToBorder", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getMinDistanceToBorder)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_DetectorParameters_getPerspectiveRemovePixelPerCell(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_DetectorParameters_getPerspectiveRemovePixelPerCell_m197044818270FBE1FC56AD94CA2D4E7FFD74F7AC (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_DetectorParameters_getPerspectiveRemovePixelPerCell", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_DetectorParameters_getPerspectiveRemovePixelPerCell)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::aruco_Ptr_Dictionary_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_Ptr_Dictionary_delete_mBE266C6A20F4545C8B55BE634CB2B5B6B3B48745 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Ptr_Dictionary_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_Ptr_Dictionary_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::aruco_Ptr_Dictionary_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_aruco_Ptr_Dictionary_get_mC9BCC5457B60B2144374D118DD8CBD8FE0A7552D (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Ptr_Dictionary_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_Ptr_Dictionary_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::aruco_Dictionary_setMarkerSize(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_Dictionary_setMarkerSize_m8F18B6404A090EC5DC55CE36F7D8E33D896D412F (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Dictionary_setMarkerSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_Dictionary_setMarkerSize)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::aruco_Dictionary_setMaxCorrectionBits(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_aruco_Dictionary_setMaxCorrectionBits_mE48E9B232A217872753E9B1F300C69364470730E (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Dictionary_setMaxCorrectionBits", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(aruco_Dictionary_setMaxCorrectionBits)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::aruco_Dictionary_getBytesList(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_aruco_Dictionary_getBytesList_mBD7095CF342AF6CAE7799768F8707525918EB40D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Dictionary_getBytesList", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_Dictionary_getBytesList)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_Dictionary_getMarkerSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_Dictionary_getMarkerSize_m749C87FBDAA80DB850D98F7D12234455E7E6FAE0 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Dictionary_getMarkerSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_Dictionary_getMarkerSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::aruco_Dictionary_getMaxCorrectionBits(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_aruco_Dictionary_getMaxCorrectionBits_mDAF53E9A1890DDCE7B8796D296AF510691AF71F8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "aruco_Dictionary_getMaxCorrectionBits", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(aruco_Dictionary_getMaxCorrectionBits)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::bgsegm_createBackgroundSubtractorMOG(System.Int32,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_bgsegm_createBackgroundSubtractorMOG_mD3553F98D1E5A47B37CD66559B1778B7B3C5BB59 (int32_t ___0_history, int32_t ___1_nmixtures, double ___2_backgroundRatio, double ___3_noiseSigma, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_createBackgroundSubtractorMOG", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_createBackgroundSubtractorMOG)(___0_history, ___1_nmixtures, ___2_backgroundRatio, ___3_noiseSigma);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_history, ___1_nmixtures, ___2_backgroundRatio, ___3_noiseSigma);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_Ptr_BackgroundSubtractorMOG_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_Ptr_BackgroundSubtractorMOG_delete_m9E8C82BF0FF17099728995495AD507051C2DF774 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_Ptr_BackgroundSubtractorMOG_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_Ptr_BackgroundSubtractorMOG_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::bgsegm_Ptr_BackgroundSubtractorMOG_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_bgsegm_Ptr_BackgroundSubtractorMOG_get_m01902A1476BCC6AA6EBA40567816C1CF87F45639 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_Ptr_BackgroundSubtractorMOG_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_Ptr_BackgroundSubtractorMOG_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getHistory(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorMOG_getHistory_m8AA1E6DB10A83CC0719AA7AC632C4CF8B2543F57 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_getHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_getHistory)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setHistory(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setHistory_m1DA569899B88FCDA4E60F162D6BD06E75DA2AF7B (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_setHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_setHistory)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getNMixtures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorMOG_getNMixtures_m2CBE8EB0AC47783366B9357DF58E5A35C2470283 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_getNMixtures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_getNMixtures)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setNMixtures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setNMixtures_m78C266C7069D991ED9F971893B50B4F4BF1B4079 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_setNMixtures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_setNMixtures)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getBackgroundRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorMOG_getBackgroundRatio_m67A9216C0A2B8D8C365D54EB7DD2B342BDF568E5 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_getBackgroundRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_getBackgroundRatio)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setBackgroundRatio(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setBackgroundRatio_m1C3811C253AF6CFCE59C524CA4E82EF06A3D9D75 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_setBackgroundRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_setBackgroundRatio)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_getNoiseSigma(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorMOG_getNoiseSigma_mABF73CF4BBB4508A17CFC2849F5AFE5AD4094A61 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_getNoiseSigma", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_getNoiseSigma)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorMOG_setNoiseSigma(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorMOG_setNoiseSigma_mC981AD991B0EB1C9B2250AEC88D01914F9CE41BA (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorMOG_setNoiseSigma", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorMOG_setNoiseSigma)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::bgsegm_createBackgroundSubtractorGMG(System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_bgsegm_createBackgroundSubtractorGMG_mF432F351B79FE09B1258E2104B8ABD13D3D026A4 (int32_t ___0_initializationFrames, double ___1_decisionThreshold, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_createBackgroundSubtractorGMG", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_createBackgroundSubtractorGMG)(___0_initializationFrames, ___1_decisionThreshold);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_initializationFrames, ___1_decisionThreshold);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_Ptr_BackgroundSubtractorGMG_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_Ptr_BackgroundSubtractorGMG_delete_mAC16A50840618FD5B2EC9CEE91257ADEE604314E (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_Ptr_BackgroundSubtractorGMG_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_Ptr_BackgroundSubtractorGMG_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::bgsegm_Ptr_BackgroundSubtractorGMG_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_bgsegm_Ptr_BackgroundSubtractorGMG_get_m0E36286D3D5D8E266DD3B6F7DD1920C3405DB986 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_Ptr_BackgroundSubtractorGMG_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_Ptr_BackgroundSubtractorGMG_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getMaxFeatures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getMaxFeatures_m63031B6F8BFF6B336D818C73E91AF7C82389CA10 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getMaxFeatures)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setMaxFeatures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setMaxFeatures_mE92697EB6FA5437261686004FC463560219051AD (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setMaxFeatures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setMaxFeatures)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate_m95F77F961FE0AE58489245DEC13B1C3C728EF291 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate_mB6E704F9952A759E8E638CC0AD3075FA2EAEB9EA (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getNumFrames(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getNumFrames_mB9A3DA5E136B56B8EFB003011E7063A60DCE182B (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getNumFrames", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getNumFrames)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setNumFrames(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setNumFrames_mBAD4A9731C20B815A4C86C665E06970EF89A0ED5 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setNumFrames", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setNumFrames)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getQuantizationLevels(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getQuantizationLevels_m0823D53B6EF140AE877F3ECCCB554C8EE276E19B (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getQuantizationLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getQuantizationLevels)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setQuantizationLevels(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setQuantizationLevels_m4A58F3E6E9E8FB71C4E85C8DB1EF32FBB8C03FAC (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setQuantizationLevels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setQuantizationLevels)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getBackgroundPrior(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getBackgroundPrior_m6FE9207319E4987D2A53E8DBA43352C6A4E00113 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getBackgroundPrior", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getBackgroundPrior)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setBackgroundPrior(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setBackgroundPrior_mC73830E4C6E8F313D1FF1F081218130152D60DD7 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setBackgroundPrior", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setBackgroundPrior)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getSmoothingRadius(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getSmoothingRadius_m16EC6C8B1A3ABE4C04D5F12A710657C576B23EC6 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getSmoothingRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getSmoothingRadius)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setSmoothingRadius(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setSmoothingRadius_m7B8FABC59AE7D0AC74BB3918A88416D9830AEB23 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setSmoothingRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setSmoothingRadius)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getDecisionThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getDecisionThreshold_m1B96DA81D16DF56BA910794082292B6BD58C0046 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getDecisionThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getDecisionThreshold)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setDecisionThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setDecisionThreshold_m366B56BF98AF9D1CD4388B2FBF4CA5CC16785EC8 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setDecisionThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setDecisionThreshold)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel_mEBAA9845C8708FA80C2F49E25A0CA5E0BACA68B4 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel_mE56C5210272F81D26F816669693CEE4E9CCC78FD (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getMinVal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getMinVal_m9195EF9CFA1FC0F810AF57496BFB926FF0C4D2EF (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getMinVal", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getMinVal)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setMinVal(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setMinVal_m3A2E7BE1F2FE252A0FE9975AEB0BC1369359258A (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setMinVal", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setMinVal)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_getMaxVal(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_bgsegm_BackgroundSubtractorGMG_getMaxVal_m3509211EE923D69AA64CFC52C62AA5AB66B5111F (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_getMaxVal", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_getMaxVal)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::bgsegm_BackgroundSubtractorGMG_setMaxVal(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_bgsegm_BackgroundSubtractorGMG_setMaxVal_m043335F79D117FC4FD6C723B6270318F7138336E (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "bgsegm_BackgroundSubtractorGMG_setMaxVal", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(bgsegm_BackgroundSubtractorGMG_setMaxVal)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_Index_new(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_Index_new_m240AB4CA15D48461B7006CCF70E4C79238A09A4A (intptr_t ___0_features, intptr_t ___1_params, int32_t ___2_distType, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_Index_new)(___0_features, ___1_params, ___2_distType);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_features, ___1_params, ___2_distType);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_Index_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_delete_m5A897315BA444F35BF28FD353FB36B7C417A2BAF (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_knnSearch1(System.IntPtr,System.Single[],System.Int32,System.Int32[],System.Single[],System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_knnSearch1_m0685004441516B77FF9C15ACA7F8AAD00066FB5E (intptr_t ___0_obj, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___1_queries, int32_t ___2_queriesLength, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_indices, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___4_dists, int32_t ___5_knn, intptr_t ___6_params, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float*, int32_t, int32_t*, float*, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_knnSearch1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_queries' to native representation
	float* ____1_queries_marshaled = NULL;
	if (___1_queries != NULL)
	{
		____1_queries_marshaled = reinterpret_cast<float*>((___1_queries)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_indices' to native representation
	int32_t* ____3_indices_marshaled = NULL;
	if (___3_indices != NULL)
	{
		il2cpp_array_size_t ____3_indices_Length = (___3_indices)->max_length;
		____3_indices_marshaled = il2cpp_codegen_marshal_allocate_array<int32_t>(____3_indices_Length);
		memset(____3_indices_marshaled, 0, ____3_indices_Length * sizeof(int32_t));
	}

	// Marshaling of parameter '___4_dists' to native representation
	float* ____4_dists_marshaled = NULL;
	if (___4_dists != NULL)
	{
		il2cpp_array_size_t ____4_dists_Length = (___4_dists)->max_length;
		____4_dists_marshaled = il2cpp_codegen_marshal_allocate_array<float>(____4_dists_Length);
		memset(____4_dists_marshaled, 0, ____4_dists_Length * sizeof(float));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_knnSearch1)(___0_obj, ____1_queries_marshaled, ___2_queriesLength, ____3_indices_marshaled, ____4_dists_marshaled, ___5_knn, ___6_params);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_queries_marshaled, ___2_queriesLength, ____3_indices_marshaled, ____4_dists_marshaled, ___5_knn, ___6_params);
	#endif

	// Marshaling of parameter '___3_indices' back from native representation
	if (____3_indices_marshaled != NULL)
	{
		il2cpp_array_size_t ____3_indices_Length = (___3_indices)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____3_indices_Length); i++)
		{
			(___3_indices)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____3_indices_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___3_indices' native representation
	il2cpp_codegen_marshal_free(____3_indices_marshaled);
	____3_indices_marshaled = NULL;

	// Marshaling of parameter '___4_dists' back from native representation
	if (____4_dists_marshaled != NULL)
	{
		il2cpp_array_size_t ____4_dists_Length = (___4_dists)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____4_dists_Length); i++)
		{
			(___4_dists)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____4_dists_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___4_dists' native representation
	il2cpp_codegen_marshal_free(____4_dists_marshaled);
	____4_dists_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_knnSearch2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_knnSearch2_mEA49629B886E3D9A6A724B43F0D1E7345A628C3C (intptr_t ___0_obj, intptr_t ___1_queries, intptr_t ___2_indices, intptr_t ___3_dists, int32_t ___4_knn, intptr_t ___5_params, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_knnSearch2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_knnSearch2)(___0_obj, ___1_queries, ___2_indices, ___3_dists, ___4_knn, ___5_params);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_queries, ___2_indices, ___3_dists, ___4_knn, ___5_params);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_knnSearch3(System.IntPtr,System.IntPtr,System.Int32[],System.Single[],System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_knnSearch3_m6E61FBE9073EE8750F04C01BEA81FAC091C27E3E (intptr_t ___0_obj, intptr_t ___1_queries, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_indices, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___3_dists, int32_t ___4_knn, intptr_t ___5_params, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t*, float*, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_knnSearch3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_indices' to native representation
	int32_t* ____2_indices_marshaled = NULL;
	if (___2_indices != NULL)
	{
		il2cpp_array_size_t ____2_indices_Length = (___2_indices)->max_length;
		____2_indices_marshaled = il2cpp_codegen_marshal_allocate_array<int32_t>(____2_indices_Length);
		memset(____2_indices_marshaled, 0, ____2_indices_Length * sizeof(int32_t));
	}

	// Marshaling of parameter '___3_dists' to native representation
	float* ____3_dists_marshaled = NULL;
	if (___3_dists != NULL)
	{
		il2cpp_array_size_t ____3_dists_Length = (___3_dists)->max_length;
		____3_dists_marshaled = il2cpp_codegen_marshal_allocate_array<float>(____3_dists_Length);
		memset(____3_dists_marshaled, 0, ____3_dists_Length * sizeof(float));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_knnSearch3)(___0_obj, ___1_queries, ____2_indices_marshaled, ____3_dists_marshaled, ___4_knn, ___5_params);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_queries, ____2_indices_marshaled, ____3_dists_marshaled, ___4_knn, ___5_params);
	#endif

	// Marshaling of parameter '___2_indices' back from native representation
	if (____2_indices_marshaled != NULL)
	{
		il2cpp_array_size_t ____2_indices_Length = (___2_indices)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____2_indices_Length); i++)
		{
			(___2_indices)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____2_indices_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___2_indices' native representation
	il2cpp_codegen_marshal_free(____2_indices_marshaled);
	____2_indices_marshaled = NULL;

	// Marshaling of parameter '___3_dists' back from native representation
	if (____3_dists_marshaled != NULL)
	{
		il2cpp_array_size_t ____3_dists_Length = (___3_dists)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____3_dists_Length); i++)
		{
			(___3_dists)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____3_dists_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___3_dists' native representation
	il2cpp_codegen_marshal_free(____3_dists_marshaled);
	____3_dists_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_radiusSearch1(System.IntPtr,System.Single[],System.Int32,System.Int32[],System.Int32,System.Single[],System.Int32,System.Single,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_radiusSearch1_m664791ADFA0A3394EF8C077CCE3858846B1EE99F (intptr_t ___0_obj, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___1_queries, int32_t ___2_queriesLength, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_indices, int32_t ___4_indicesLength, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___5_dists, int32_t ___6_dists_length, float ___7_radius, int32_t ___8_maxResults, intptr_t ___9_params, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float*, int32_t, int32_t*, int32_t, float*, int32_t, float, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_radiusSearch1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_queries' to native representation
	float* ____1_queries_marshaled = NULL;
	if (___1_queries != NULL)
	{
		____1_queries_marshaled = reinterpret_cast<float*>((___1_queries)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_indices' to native representation
	int32_t* ____3_indices_marshaled = NULL;
	if (___3_indices != NULL)
	{
		il2cpp_array_size_t ____3_indices_Length = (___3_indices)->max_length;
		____3_indices_marshaled = il2cpp_codegen_marshal_allocate_array<int32_t>(____3_indices_Length);
		memset(____3_indices_marshaled, 0, ____3_indices_Length * sizeof(int32_t));
	}

	// Marshaling of parameter '___5_dists' to native representation
	float* ____5_dists_marshaled = NULL;
	if (___5_dists != NULL)
	{
		il2cpp_array_size_t ____5_dists_Length = (___5_dists)->max_length;
		____5_dists_marshaled = il2cpp_codegen_marshal_allocate_array<float>(____5_dists_Length);
		memset(____5_dists_marshaled, 0, ____5_dists_Length * sizeof(float));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_radiusSearch1)(___0_obj, ____1_queries_marshaled, ___2_queriesLength, ____3_indices_marshaled, ___4_indicesLength, ____5_dists_marshaled, ___6_dists_length, ___7_radius, ___8_maxResults, ___9_params);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_queries_marshaled, ___2_queriesLength, ____3_indices_marshaled, ___4_indicesLength, ____5_dists_marshaled, ___6_dists_length, ___7_radius, ___8_maxResults, ___9_params);
	#endif

	// Marshaling of parameter '___3_indices' back from native representation
	if (____3_indices_marshaled != NULL)
	{
		il2cpp_array_size_t ____3_indices_Length = (___3_indices)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____3_indices_Length); i++)
		{
			(___3_indices)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____3_indices_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___3_indices' native representation
	il2cpp_codegen_marshal_free(____3_indices_marshaled);
	____3_indices_marshaled = NULL;

	// Marshaling of parameter '___5_dists' back from native representation
	if (____5_dists_marshaled != NULL)
	{
		il2cpp_array_size_t ____5_dists_Length = (___5_dists)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____5_dists_Length); i++)
		{
			(___5_dists)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____5_dists_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___5_dists' native representation
	il2cpp_codegen_marshal_free(____5_dists_marshaled);
	____5_dists_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_radiusSearch2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_radiusSearch2_mD46F40BEF1C8161236F1CB69531B4D809F21BCBD (intptr_t ___0_obj, intptr_t ___1_queries, intptr_t ___2_indices, intptr_t ___3_dists, float ___4_radius, int32_t ___5_maxResults, intptr_t ___6_params, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, float, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_radiusSearch2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_radiusSearch2)(___0_obj, ___1_queries, ___2_indices, ___3_dists, ___4_radius, ___5_maxResults, ___6_params);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_queries, ___2_indices, ___3_dists, ___4_radius, ___5_maxResults, ___6_params);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_radiusSearch3(System.IntPtr,System.IntPtr,System.Int32[],System.Int32,System.Single[],System.Int32,System.Single,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_radiusSearch3_m069A6F106BB15AE7F63A2A039569DBD001086A81 (intptr_t ___0_obj, intptr_t ___1_queries, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_indices, int32_t ___3_indicesLength, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___4_dists, int32_t ___5_distsLength, float ___6_radius, int32_t ___7_maxResults, intptr_t ___8_params, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t*, int32_t, float*, int32_t, float, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_radiusSearch3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_indices' to native representation
	int32_t* ____2_indices_marshaled = NULL;
	if (___2_indices != NULL)
	{
		il2cpp_array_size_t ____2_indices_Length = (___2_indices)->max_length;
		____2_indices_marshaled = il2cpp_codegen_marshal_allocate_array<int32_t>(____2_indices_Length);
		memset(____2_indices_marshaled, 0, ____2_indices_Length * sizeof(int32_t));
	}

	// Marshaling of parameter '___4_dists' to native representation
	float* ____4_dists_marshaled = NULL;
	if (___4_dists != NULL)
	{
		il2cpp_array_size_t ____4_dists_Length = (___4_dists)->max_length;
		____4_dists_marshaled = il2cpp_codegen_marshal_allocate_array<float>(____4_dists_Length);
		memset(____4_dists_marshaled, 0, ____4_dists_Length * sizeof(float));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_radiusSearch3)(___0_obj, ___1_queries, ____2_indices_marshaled, ___3_indicesLength, ____4_dists_marshaled, ___5_distsLength, ___6_radius, ___7_maxResults, ___8_params);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_queries, ____2_indices_marshaled, ___3_indicesLength, ____4_dists_marshaled, ___5_distsLength, ___6_radius, ___7_maxResults, ___8_params);
	#endif

	// Marshaling of parameter '___2_indices' back from native representation
	if (____2_indices_marshaled != NULL)
	{
		il2cpp_array_size_t ____2_indices_Length = (___2_indices)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____2_indices_Length); i++)
		{
			(___2_indices)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____2_indices_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___2_indices' native representation
	il2cpp_codegen_marshal_free(____2_indices_marshaled);
	____2_indices_marshaled = NULL;

	// Marshaling of parameter '___4_dists' back from native representation
	if (____4_dists_marshaled != NULL)
	{
		il2cpp_array_size_t ____4_dists_Length = (___4_dists)->max_length;
		for (int32_t i = 0; i < ARRAY_LENGTH_AS_INT32(____4_dists_Length); i++)
		{
			(___4_dists)->SetAtUnchecked(static_cast<il2cpp_array_size_t>(i), (____4_dists_marshaled)[i]);
		}
	}

	// Marshaling cleanup of parameter '___4_dists' native representation
	il2cpp_codegen_marshal_free(____4_dists_marshaled);
	____4_dists_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_Index_save(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_Index_save_mE08FA1E095F9B79EC58D620FB8EB084BFE90FAA6 (intptr_t ___0_obj, String_t* ___1_filename, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_Index_save", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_filename' to native representation
	char* ____1_filename_marshaled = NULL;
	____1_filename_marshaled = il2cpp_codegen_marshal_string(___1_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_Index_save)(___0_obj, ____1_filename_marshaled);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_filename_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_filename' native representation
	il2cpp_codegen_marshal_free(____1_filename_marshaled);
	____1_filename_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_IndexParams_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_IndexParams_new_m75C6CCBBE034348ED92DD562A1CBA54B009CAC78 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_IndexParams_new)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_delete_mB27E404B14167F87266AE4700AD90A778B9C22F5 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_getString(System.IntPtr,System.String,System.String,System.Text.StringBuilder)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_getString_mB0D4A9DD44E8B523E79EE09DA648F6339A801C04 (intptr_t ___0_obj, String_t* ___1_key, String_t* ___2_defaultVal, StringBuilder_t* ___3_result, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(char*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_getString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_key' to native representation
	char* ____1_key_marshaled = NULL;
	____1_key_marshaled = il2cpp_codegen_marshal_string(___1_key);

	// Marshaling of parameter '___2_defaultVal' to native representation
	char* ____2_defaultVal_marshaled = NULL;
	____2_defaultVal_marshaled = il2cpp_codegen_marshal_string(___2_defaultVal);

	// Marshaling of parameter '___3_result' to native representation
	char* ____3_result_marshaled = NULL;
	____3_result_marshaled = il2cpp_codegen_marshal_string_builder(___3_result);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_getString)(___0_obj, ____1_key_marshaled, ____2_defaultVal_marshaled, ____3_result_marshaled);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_key_marshaled, ____2_defaultVal_marshaled, ____3_result_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_key' native representation
	il2cpp_codegen_marshal_free(____1_key_marshaled);
	____1_key_marshaled = NULL;

	// Marshaling cleanup of parameter '___2_defaultVal' native representation
	il2cpp_codegen_marshal_free(____2_defaultVal_marshaled);
	____2_defaultVal_marshaled = NULL;

	// Marshaling of parameter '___3_result' back from native representation
	il2cpp_codegen_marshal_string_builder_result(___3_result, ____3_result_marshaled);

	// Marshaling cleanup of parameter '___3_result' native representation
	il2cpp_codegen_marshal_free(____3_result_marshaled);
	____3_result_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::flann_IndexParams_getInt(System.IntPtr,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_flann_IndexParams_getInt_mD8B10FE93F60B1906800E1392D393188ED1C6EA4 (intptr_t ___0_obj, String_t* ___1_key, int32_t ___2_defaultVal, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_getInt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_key' to native representation
	char* ____1_key_marshaled = NULL;
	____1_key_marshaled = il2cpp_codegen_marshal_string(___1_key);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(flann_IndexParams_getInt)(___0_obj, ____1_key_marshaled, ___2_defaultVal);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_key_marshaled, ___2_defaultVal);
	#endif

	// Marshaling cleanup of parameter '___1_key' native representation
	il2cpp_codegen_marshal_free(____1_key_marshaled);
	____1_key_marshaled = NULL;

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::flann_IndexParams_getDouble(System.IntPtr,System.String,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_flann_IndexParams_getDouble_mB1C28B7E676EC5F0531DBEC5591E2F4829E3318C (intptr_t ___0_obj, String_t* ___1_key, double ___2_defaultVal, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, char*, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_getDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_key' to native representation
	char* ____1_key_marshaled = NULL;
	____1_key_marshaled = il2cpp_codegen_marshal_string(___1_key);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(flann_IndexParams_getDouble)(___0_obj, ____1_key_marshaled, ___2_defaultVal);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj, ____1_key_marshaled, ___2_defaultVal);
	#endif

	// Marshaling cleanup of parameter '___1_key' native representation
	il2cpp_codegen_marshal_free(____1_key_marshaled);
	____1_key_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setString(System.IntPtr,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setString_m769BF583663298617EE20C5E1904A32D25590198 (intptr_t ___0_obj, String_t* ___1_key, String_t* ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setString", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_key' to native representation
	char* ____1_key_marshaled = NULL;
	____1_key_marshaled = il2cpp_codegen_marshal_string(___1_key);

	// Marshaling of parameter '___2_value' to native representation
	char* ____2_value_marshaled = NULL;
	____2_value_marshaled = il2cpp_codegen_marshal_string(___2_value);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setString)(___0_obj, ____1_key_marshaled, ____2_value_marshaled);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_key_marshaled, ____2_value_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_key' native representation
	il2cpp_codegen_marshal_free(____1_key_marshaled);
	____1_key_marshaled = NULL;

	// Marshaling cleanup of parameter '___2_value' native representation
	il2cpp_codegen_marshal_free(____2_value_marshaled);
	____2_value_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setInt(System.IntPtr,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setInt_mC450983DA5D88AD1B434595842FC6F3EEDA58FB0 (intptr_t ___0_obj, String_t* ___1_key, int32_t ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setInt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_key' to native representation
	char* ____1_key_marshaled = NULL;
	____1_key_marshaled = il2cpp_codegen_marshal_string(___1_key);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setInt)(___0_obj, ____1_key_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_key_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_key' native representation
	il2cpp_codegen_marshal_free(____1_key_marshaled);
	____1_key_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setDouble(System.IntPtr,System.String,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setDouble_mDEC879FDDD72F7A80237E6FB5E6A42ED0BDD444C (intptr_t ___0_obj, String_t* ___1_key, double ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setDouble", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_key' to native representation
	char* ____1_key_marshaled = NULL;
	____1_key_marshaled = il2cpp_codegen_marshal_string(___1_key);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setDouble)(___0_obj, ____1_key_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_key_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_key' native representation
	il2cpp_codegen_marshal_free(____1_key_marshaled);
	____1_key_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setFloat(System.IntPtr,System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setFloat_m5C8A5FD4CF3750645D73C7C3E3E42B1E4127811D (intptr_t ___0_obj, String_t* ___1_key, float ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setFloat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_key' to native representation
	char* ____1_key_marshaled = NULL;
	____1_key_marshaled = il2cpp_codegen_marshal_string(___1_key);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setFloat)(___0_obj, ____1_key_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_key_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_key' native representation
	il2cpp_codegen_marshal_free(____1_key_marshaled);
	____1_key_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setBool(System.IntPtr,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setBool_mABCFB9AEB535BF859DDC02559029D93416CA1951 (intptr_t ___0_obj, String_t* ___1_key, int32_t ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setBool", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_key' to native representation
	char* ____1_key_marshaled = NULL;
	____1_key_marshaled = il2cpp_codegen_marshal_string(___1_key);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setBool)(___0_obj, ____1_key_marshaled, ___2_value);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_key_marshaled, ___2_value);
	#endif

	// Marshaling cleanup of parameter '___1_key' native representation
	il2cpp_codegen_marshal_free(____1_key_marshaled);
	____1_key_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::flann_IndexParams_setAlgorithm(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_IndexParams_setAlgorithm_mD6AD0760A4FEFA8821FFE71160AFB6FAFD361255 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_IndexParams_setAlgorithm", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_IndexParams_setAlgorithm)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_LinearIndexParams_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_LinearIndexParams_new_m0E29D2992D6EE9FF4C3ACE0A2AF6C818C0469558 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_LinearIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_LinearIndexParams_new)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_LinearIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_LinearIndexParams_delete_m7AC008DE0FE74B68C6B4CC9E4952C35B42397AF6 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_LinearIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_LinearIndexParams_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_KDTreeIndexParams_new(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_KDTreeIndexParams_new_m7DE8C2578AE212A0C5F28BD03C89922D59FF3FA2 (int32_t ___0_trees, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_KDTreeIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_KDTreeIndexParams_new)(___0_trees);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_trees);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_KDTreeIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_KDTreeIndexParams_delete_m13C0B2E361261EF4867CCA7DC20754639707AA7B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_KDTreeIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_KDTreeIndexParams_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_KMeansIndexParams_new(System.Int32,System.Int32,OpenCvSharp.Flann.FlannCentersInit,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_KMeansIndexParams_new_m6C578B5FCAE8950878786581B5FC5FEFC87A439B (int32_t ___0_branching, int32_t ___1_iterations, int32_t ___2_centers_init, float ___3_cb_index, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + 4 + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_KMeansIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_KMeansIndexParams_new)(___0_branching, ___1_iterations, ___2_centers_init, ___3_cb_index);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_branching, ___1_iterations, ___2_centers_init, ___3_cb_index);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_KMeansIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_KMeansIndexParams_delete_m0439F960CD898DD7C011348122D8B990E754E5F5 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_KMeansIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_KMeansIndexParams_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_CompositeIndexParams_new(System.Int32,System.Int32,System.Int32,OpenCvSharp.Flann.FlannCentersInit,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_CompositeIndexParams_new_m443DDABBF3D1F520EF3139EBDD90223D1A4F0048 (int32_t ___0_trees, int32_t ___1_branching, int32_t ___2_iterations, int32_t ___3_centers_init, float ___4_cb_index, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_CompositeIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_CompositeIndexParams_new)(___0_trees, ___1_branching, ___2_iterations, ___3_centers_init, ___4_cb_index);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_trees, ___1_branching, ___2_iterations, ___3_centers_init, ___4_cb_index);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_CompositeIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_CompositeIndexParams_delete_m927A275692C9EE5A1D61A6D89335CC4691F054DC (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_CompositeIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_CompositeIndexParams_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_AutotunedIndexParams_new(System.Single,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_AutotunedIndexParams_new_m4F99ABF7D38E75A5A5915EFB2633077BF2C65570 (float ___0_targetPrecision, float ___1_build_weight, float ___2_memory_weight, float ___3_sample_fraction, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (float, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(float) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_AutotunedIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_AutotunedIndexParams_new)(___0_targetPrecision, ___1_build_weight, ___2_memory_weight, ___3_sample_fraction);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_targetPrecision, ___1_build_weight, ___2_memory_weight, ___3_sample_fraction);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_AutotunedIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_AutotunedIndexParams_delete_mBF3AB381610A1A3CF1C32DD9B24042AFCBE5120C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_AutotunedIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_AutotunedIndexParams_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_SavedIndexParams_new(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_SavedIndexParams_new_mEC2F2267DE62710AD8FFC170A0C3554D1FB3D585 (String_t* ___0_filename, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_SavedIndexParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_filename' to native representation
	char* ____0_filename_marshaled = NULL;
	____0_filename_marshaled = il2cpp_codegen_marshal_string(___0_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_SavedIndexParams_new)(____0_filename_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_filename_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_filename' native representation
	il2cpp_codegen_marshal_free(____0_filename_marshaled);
	____0_filename_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_SavedIndexParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_SavedIndexParams_delete_mA1F747EC1F563FA35A23E17B033511B77968F095 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_SavedIndexParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_SavedIndexParams_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::flann_SearchParams_new(System.Int32,System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_flann_SearchParams_new_m0C6CC892BFE79D1B8EE84AF54DE8F59B2FEBDD98 (int32_t ___0_checks, float ___1_eps, int32_t ___2_sorted, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, float, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(float) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_SearchParams_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(flann_SearchParams_new)(___0_checks, ___1_eps, ___2_sorted);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_checks, ___1_eps, ___2_sorted);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::flann_SearchParams_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_flann_SearchParams_delete_m3FE3636A3F439C0F23D0F9342C9DCCBBA48DA703 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "flann_SearchParams_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(flann_SearchParams_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::highgui_namedWindow(System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_namedWindow_m6AB7098E1BFC704780B1E55190FAF52059CCD425 (String_t* ___0_winname, int32_t ___1_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_namedWindow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_winname' to native representation
	char* ____0_winname_marshaled = NULL;
	____0_winname_marshaled = il2cpp_codegen_marshal_string(___0_winname);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_namedWindow)(____0_winname_marshaled, ___1_flags);
	#else
	il2cppPInvokeFunc(____0_winname_marshaled, ___1_flags);
	#endif

	// Marshaling cleanup of parameter '___0_winname' native representation
	il2cpp_codegen_marshal_free(____0_winname_marshaled);
	____0_winname_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::highgui_destroyWindow(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_destroyWindow_mC8230C99190BE4046AD548FD5B6C544DDF75469A (String_t* ___0_winName, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_destroyWindow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_winName' to native representation
	char* ____0_winName_marshaled = NULL;
	____0_winName_marshaled = il2cpp_codegen_marshal_string(___0_winName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_destroyWindow)(____0_winName_marshaled);
	#else
	il2cppPInvokeFunc(____0_winName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_winName' native representation
	il2cpp_codegen_marshal_free(____0_winName_marshaled);
	____0_winName_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::highgui_destroyAllWindows()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_destroyAllWindows_m5CD80B1EBDB7D59F941DD6A9D4E6AC08F15C6A4F (const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_destroyAllWindows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_destroyAllWindows)();
	#else
	il2cppPInvokeFunc();
	#endif

}
// System.Void OpenCvSharp.NativeMethods::highgui_imshow(System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_imshow_m0FFEA2C310F2B888CD4D4B163ECDA9BA36DB1D42 (String_t* ___0_winname, intptr_t ___1_mat, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_imshow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_winname' to native representation
	char* ____0_winname_marshaled = NULL;
	____0_winname_marshaled = il2cpp_codegen_marshal_string(___0_winname);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_imshow)(____0_winname_marshaled, ___1_mat);
	#else
	il2cppPInvokeFunc(____0_winname_marshaled, ___1_mat);
	#endif

	// Marshaling cleanup of parameter '___0_winname' native representation
	il2cpp_codegen_marshal_free(____0_winname_marshaled);
	____0_winname_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::highgui_startWindowThread()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_highgui_startWindowThread_m8299A12BA8EA00214A0CA605D1BF61CA3C9CCD9E (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_startWindowThread", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(highgui_startWindowThread)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::highgui_waitKey(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_highgui_waitKey_mDFC8599894B9AAFE93A9D688CDB26278B7EB02DF (int32_t ___0_delay, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_waitKey", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(highgui_waitKey)(___0_delay);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_delay);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::highgui_resizeWindow(System.String,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_resizeWindow_mC4DB2E1238FA49AFA4119A5D2713276457CC82FD (String_t* ___0_winName, int32_t ___1_width, int32_t ___2_height, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_resizeWindow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_winName' to native representation
	char* ____0_winName_marshaled = NULL;
	____0_winName_marshaled = il2cpp_codegen_marshal_string(___0_winName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_resizeWindow)(____0_winName_marshaled, ___1_width, ___2_height);
	#else
	il2cppPInvokeFunc(____0_winName_marshaled, ___1_width, ___2_height);
	#endif

	// Marshaling cleanup of parameter '___0_winName' native representation
	il2cpp_codegen_marshal_free(____0_winName_marshaled);
	____0_winName_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::highgui_moveWindow(System.String,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_moveWindow_m238416FB67B746AE77FB8396E66ADA9AFD51BDF1 (String_t* ___0_winName, int32_t ___1_x, int32_t ___2_y, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_moveWindow", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_winName' to native representation
	char* ____0_winName_marshaled = NULL;
	____0_winName_marshaled = il2cpp_codegen_marshal_string(___0_winName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_moveWindow)(____0_winName_marshaled, ___1_x, ___2_y);
	#else
	il2cppPInvokeFunc(____0_winName_marshaled, ___1_x, ___2_y);
	#endif

	// Marshaling cleanup of parameter '___0_winName' native representation
	il2cpp_codegen_marshal_free(____0_winName_marshaled);
	____0_winName_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::highgui_setWindowProperty(System.String,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_setWindowProperty_m7CA2230A59949CAA2901D3E74C5A08FEE435B1E2 (String_t* ___0_winName, int32_t ___1_propId, double ___2_propValue, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_setWindowProperty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_winName' to native representation
	char* ____0_winName_marshaled = NULL;
	____0_winName_marshaled = il2cpp_codegen_marshal_string(___0_winName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_setWindowProperty)(____0_winName_marshaled, ___1_propId, ___2_propValue);
	#else
	il2cppPInvokeFunc(____0_winName_marshaled, ___1_propId, ___2_propValue);
	#endif

	// Marshaling cleanup of parameter '___0_winName' native representation
	il2cpp_codegen_marshal_free(____0_winName_marshaled);
	____0_winName_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::highgui_setWindowTitle(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_setWindowTitle_mF2E8958CDDB0B57B3B53EA09DD4B0CED1CEA24C8 (String_t* ___0_winname, String_t* ___1_title, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_setWindowTitle", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_winname' to native representation
	char* ____0_winname_marshaled = NULL;
	____0_winname_marshaled = il2cpp_codegen_marshal_string(___0_winname);

	// Marshaling of parameter '___1_title' to native representation
	char* ____1_title_marshaled = NULL;
	____1_title_marshaled = il2cpp_codegen_marshal_string(___1_title);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_setWindowTitle)(____0_winname_marshaled, ____1_title_marshaled);
	#else
	il2cppPInvokeFunc(____0_winname_marshaled, ____1_title_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_winname' native representation
	il2cpp_codegen_marshal_free(____0_winname_marshaled);
	____0_winname_marshaled = NULL;

	// Marshaling cleanup of parameter '___1_title' native representation
	il2cpp_codegen_marshal_free(____1_title_marshaled);
	____1_title_marshaled = NULL;

}
// System.Double OpenCvSharp.NativeMethods::highgui_getWindowProperty(System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_highgui_getWindowProperty_m1FA94F29C2C3A4DA86D6F3F374FF346DA9B50BA4 (String_t* ___0_winName, int32_t ___1_propId, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_getWindowProperty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_winName' to native representation
	char* ____0_winName_marshaled = NULL;
	____0_winName_marshaled = il2cpp_codegen_marshal_string(___0_winName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(highgui_getWindowProperty)(____0_winName_marshaled, ___1_propId);
	#else
	double returnValue = il2cppPInvokeFunc(____0_winName_marshaled, ___1_propId);
	#endif

	// Marshaling cleanup of parameter '___0_winName' native representation
	il2cpp_codegen_marshal_free(____0_winName_marshaled);
	____0_winName_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::highgui_setMouseCallback(System.String,OpenCvSharp.CvMouseCallback,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_setMouseCallback_m37B33DEA3CCEB76D5B55E628925CF4C52D772832 (String_t* ___0_winName, CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* ___1_onMouse, intptr_t ___2_userData, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, Il2CppMethodPointer, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_setMouseCallback", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_winName' to native representation
	char* ____0_winName_marshaled = NULL;
	____0_winName_marshaled = il2cpp_codegen_marshal_string(___0_winName);

	// Marshaling of parameter '___1_onMouse' to native representation
	Il2CppMethodPointer ____1_onMouse_marshaled = NULL;
	____1_onMouse_marshaled = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(___1_onMouse));

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_setMouseCallback)(____0_winName_marshaled, ____1_onMouse_marshaled, ___2_userData);
	#else
	il2cppPInvokeFunc(____0_winName_marshaled, ____1_onMouse_marshaled, ___2_userData);
	#endif

	// Marshaling cleanup of parameter '___0_winName' native representation
	il2cpp_codegen_marshal_free(____0_winName_marshaled);
	____0_winName_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::highgui_createTrackbar(System.String,System.String,System.Int32&,System.Int32,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_highgui_createTrackbar_m3E5261BC3A11ABF5F9A6D60268FE4D39DC7AF968 (String_t* ___0_trackbarName, String_t* ___1_winName, int32_t* ___2_value, int32_t ___3_count, intptr_t ___4_onChange, intptr_t ___5_userData, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, char*, int32_t*, int32_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(char*) + sizeof(int32_t*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_createTrackbar", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_trackbarName' to native representation
	char* ____0_trackbarName_marshaled = NULL;
	____0_trackbarName_marshaled = il2cpp_codegen_marshal_string(___0_trackbarName);

	// Marshaling of parameter '___1_winName' to native representation
	char* ____1_winName_marshaled = NULL;
	____1_winName_marshaled = il2cpp_codegen_marshal_string(___1_winName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(highgui_createTrackbar)(____0_trackbarName_marshaled, ____1_winName_marshaled, ___2_value, ___3_count, ___4_onChange, ___5_userData);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_trackbarName_marshaled, ____1_winName_marshaled, ___2_value, ___3_count, ___4_onChange, ___5_userData);
	#endif

	// Marshaling cleanup of parameter '___0_trackbarName' native representation
	il2cpp_codegen_marshal_free(____0_trackbarName_marshaled);
	____0_trackbarName_marshaled = NULL;

	// Marshaling cleanup of parameter '___1_winName' native representation
	il2cpp_codegen_marshal_free(____1_winName_marshaled);
	____1_winName_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::highgui_getTrackbarPos(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_highgui_getTrackbarPos_m39AE2BC62E217C22C9063C9FF6C76BA52301C1CE (String_t* ___0_trackbarName, String_t* ___1_winName, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_getTrackbarPos", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_trackbarName' to native representation
	char* ____0_trackbarName_marshaled = NULL;
	____0_trackbarName_marshaled = il2cpp_codegen_marshal_string(___0_trackbarName);

	// Marshaling of parameter '___1_winName' to native representation
	char* ____1_winName_marshaled = NULL;
	____1_winName_marshaled = il2cpp_codegen_marshal_string(___1_winName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(highgui_getTrackbarPos)(____0_trackbarName_marshaled, ____1_winName_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_trackbarName_marshaled, ____1_winName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_trackbarName' native representation
	il2cpp_codegen_marshal_free(____0_trackbarName_marshaled);
	____0_trackbarName_marshaled = NULL;

	// Marshaling cleanup of parameter '___1_winName' native representation
	il2cpp_codegen_marshal_free(____1_winName_marshaled);
	____1_winName_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::highgui_setTrackbarPos(System.String,System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_highgui_setTrackbarPos_mCC8A61B8297BE8BAD534B8B463E814E18E8074CF (String_t* ___0_trackbarName, String_t* ___1_winName, int32_t ___2_pos, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_setTrackbarPos", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_trackbarName' to native representation
	char* ____0_trackbarName_marshaled = NULL;
	____0_trackbarName_marshaled = il2cpp_codegen_marshal_string(___0_trackbarName);

	// Marshaling of parameter '___1_winName' to native representation
	char* ____1_winName_marshaled = NULL;
	____1_winName_marshaled = il2cpp_codegen_marshal_string(___1_winName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(highgui_setTrackbarPos)(____0_trackbarName_marshaled, ____1_winName_marshaled, ___2_pos);
	#else
	il2cppPInvokeFunc(____0_trackbarName_marshaled, ____1_winName_marshaled, ___2_pos);
	#endif

	// Marshaling cleanup of parameter '___0_trackbarName' native representation
	il2cpp_codegen_marshal_free(____0_trackbarName_marshaled);
	____0_trackbarName_marshaled = NULL;

	// Marshaling cleanup of parameter '___1_winName' native representation
	il2cpp_codegen_marshal_free(____1_winName_marshaled);
	____1_winName_marshaled = NULL;

}
// System.Int32 OpenCvSharp.NativeMethods::highgui_createButton(System.String,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_highgui_createButton_mA8DC83C054FFD3F301C1C83C1E28B4B13EFDDB2A (String_t* ___0_barName, intptr_t ___1_onChange, intptr_t ___2_userdata, int32_t ___3_type, int32_t ___4_initialButtonState, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "highgui_createButton", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_barName' to native representation
	char* ____0_barName_marshaled = NULL;
	____0_barName_marshaled = il2cpp_codegen_marshal_string(___0_barName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(highgui_createButton)(____0_barName_marshaled, ___1_onChange, ___2_userdata, ___3_type, ___4_initialButtonState);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_barName_marshaled, ___1_onChange, ___2_userdata, ___3_type, ___4_initialButtonState);
	#endif

	// Marshaling cleanup of parameter '___0_barName' native representation
	il2cpp_codegen_marshal_free(____0_barName_marshaled);
	____0_barName_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgcodecs_imread(System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgcodecs_imread_mCE6B38FD8943C61D77092786240BAADE2BC2E7BD (String_t* ___0_filename, int32_t ___1_flags, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imread", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_filename' to native representation
	char* ____0_filename_marshaled = NULL;
	____0_filename_marshaled = il2cpp_codegen_marshal_string(___0_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imread)(____0_filename_marshaled, ___1_flags);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_filename_marshaled, ___1_flags);
	#endif

	// Marshaling cleanup of parameter '___0_filename' native representation
	il2cpp_codegen_marshal_free(____0_filename_marshaled);
	____0_filename_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgcodecs_imreadmulti(System.String,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgcodecs_imreadmulti_mE4945F5EFB1159400D28B092F1711512736E43EF (String_t* ___0_filename, intptr_t ___1_mats, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imreadmulti", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_filename' to native representation
	char* ____0_filename_marshaled = NULL;
	____0_filename_marshaled = il2cpp_codegen_marshal_string(___0_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imreadmulti)(____0_filename_marshaled, ___1_mats, ___2_flags);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_filename_marshaled, ___1_mats, ___2_flags);
	#endif

	// Marshaling cleanup of parameter '___0_filename' native representation
	il2cpp_codegen_marshal_free(____0_filename_marshaled);
	____0_filename_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgcodecs_imwrite(System.String,System.IntPtr,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgcodecs_imwrite_m17DC680FFEAB4139964E02E6C38DE9A84A4DCB62 (String_t* ___0_filename, intptr_t ___1_img, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_params, int32_t ___3_paramsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, intptr_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imwrite", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_filename' to native representation
	char* ____0_filename_marshaled = NULL;
	____0_filename_marshaled = il2cpp_codegen_marshal_string(___0_filename);

	// Marshaling of parameter '___2_params' to native representation
	int32_t* ____2_params_marshaled = NULL;
	if (___2_params != NULL)
	{
		____2_params_marshaled = reinterpret_cast<int32_t*>((___2_params)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imwrite)(____0_filename_marshaled, ___1_img, ____2_params_marshaled, ___3_paramsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_filename_marshaled, ___1_img, ____2_params_marshaled, ___3_paramsLength);
	#endif

	// Marshaling cleanup of parameter '___0_filename' native representation
	il2cpp_codegen_marshal_free(____0_filename_marshaled);
	____0_filename_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgcodecs_imdecode_Mat(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgcodecs_imdecode_Mat_m7EFE9093FEAD60E6840CDF1B8F54805C59B1109A (intptr_t ___0_buf, int32_t ___1_flags, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imdecode_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imdecode_Mat)(___0_buf, ___1_flags);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_buf, ___1_flags);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgcodecs_imdecode_vector(System.Byte[],System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgcodecs_imdecode_vector_mCF0C8F5EC14D552F11E677573528E20B021F93CB (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_buf, intptr_t ___1_bufLength, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (uint8_t*, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imdecode_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_buf' to native representation
	uint8_t* ____0_buf_marshaled = NULL;
	if (___0_buf != NULL)
	{
		____0_buf_marshaled = reinterpret_cast<uint8_t*>((___0_buf)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imdecode_vector)(____0_buf_marshaled, ___1_bufLength, ___2_flags);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_buf_marshaled, ___1_bufLength, ___2_flags);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::imgcodecs_imdecode_InputArray(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_imgcodecs_imdecode_InputArray_m01C637DE4034605D69E8BB4E149235E83ACAA49C (intptr_t ___0_buf, int32_t ___1_flags, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imdecode_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imdecode_InputArray)(___0_buf, ___1_flags);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_buf, ___1_flags);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgcodecs_imencode_vector(System.String,System.IntPtr,System.IntPtr,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgcodecs_imencode_vector_mF9E5471AF2D2F1CEE02730FAE27D0FEF28F6BF4F (String_t* ___0_ext, intptr_t ___1_img, intptr_t ___2_buf, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___3_params, int32_t ___4_paramsLength, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*, intptr_t, intptr_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_imencode_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_ext' to native representation
	char* ____0_ext_marshaled = NULL;
	____0_ext_marshaled = il2cpp_codegen_marshal_string(___0_ext);

	// Marshaling of parameter '___3_params' to native representation
	int32_t* ____3_params_marshaled = NULL;
	if (___3_params != NULL)
	{
		____3_params_marshaled = reinterpret_cast<int32_t*>((___3_params)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_imencode_vector)(____0_ext_marshaled, ___1_img, ___2_buf, ____3_params_marshaled, ___4_paramsLength);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_ext_marshaled, ___1_img, ___2_buf, ____3_params_marshaled, ___4_paramsLength);
	#endif

	// Marshaling cleanup of parameter '___0_ext' native representation
	il2cpp_codegen_marshal_free(____0_ext_marshaled);
	____0_ext_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::imgcodecs_cvConvertImage_CvArr(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgcodecs_cvConvertImage_CvArr_m79F2FC18654A38DF4B5C4AA5FDFD784E6F2D873F (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_cvConvertImage_CvArr", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgcodecs_cvConvertImage_CvArr)(___0_src, ___1_dst, ___2_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::imgcodecs_cvConvertImage_Mat(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_imgcodecs_cvConvertImage_Mat_m677AA782A1A09220CB3182E80A35E93512307079 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_cvConvertImage_Mat", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(imgcodecs_cvConvertImage_Mat)(___0_src, ___1_dst, ___2_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flags);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::imgcodecs_cvHaveImageReader(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgcodecs_cvHaveImageReader_m1ED2E526054A7B6773C4ECF7A324B3542B461B03 (String_t* ___0_fileName, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_cvHaveImageReader", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_fileName' to native representation
	char* ____0_fileName_marshaled = NULL;
	____0_fileName_marshaled = il2cpp_codegen_marshal_string(___0_fileName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_cvHaveImageReader)(____0_fileName_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_fileName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_fileName' native representation
	il2cpp_codegen_marshal_free(____0_fileName_marshaled);
	____0_fileName_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::imgcodecs_cvHaveImageWriter(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_imgcodecs_cvHaveImageWriter_m0422B7A5C597868652B6E73DD73577C112B95DDE (String_t* ___0_fileName, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "imgcodecs_cvHaveImageWriter", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_fileName' to native representation
	char* ____0_fileName_marshaled = NULL;
	____0_fileName_marshaled = il2cpp_codegen_marshal_string(___0_fileName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(imgcodecs_cvHaveImageWriter)(____0_fileName_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(____0_fileName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_fileName' native representation
	il2cpp_codegen_marshal_free(____0_fileName_marshaled);
	____0_fileName_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_new()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_CascadeClassifier_new_m98B076CCD1C379F2D5D146070299C3374C5A1CB8 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_new", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_new)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_newFromFile(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_CascadeClassifier_newFromFile_mF673778936B0A39DA251AC1A1E0809099C3B0FE1 (String_t* ___0_fileName, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_newFromFile", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_fileName' to native representation
	char* ____0_fileName_marshaled = NULL;
	____0_fileName_marshaled = il2cpp_codegen_marshal_string(___0_fileName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_newFromFile)(____0_fileName_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_fileName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_fileName' native representation
	il2cpp_codegen_marshal_free(____0_fileName_marshaled);
	____0_fileName_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_CascadeClassifier_delete_mA61FF426DA10BF7345545E28FB3D23141C83AA1D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_empty(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_CascadeClassifier_empty_mDACADC0CD17D96A13DB51AA4AAE4791501F77355 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_empty)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_load(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_CascadeClassifier_load_m000A0BF1196F041776A46348F5A42AB61884F239 (intptr_t ___0_obj, String_t* ___1_fileName, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_load", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_fileName' to native representation
	char* ____1_fileName_marshaled = NULL;
	____1_fileName_marshaled = il2cpp_codegen_marshal_string(___1_fileName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_load)(___0_obj, ____1_fileName_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_fileName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_fileName' native representation
	il2cpp_codegen_marshal_free(____1_fileName_marshaled);
	____1_fileName_marshaled = NULL;

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_read(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_CascadeClassifier_read_m6D4D96A6D49B136DBF3EEC433F1FAD50A33E7218 (intptr_t ___0_obj, intptr_t ___1_node, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_read", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_read)(___0_obj, ___1_node);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_node);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_detectMultiScale1(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32,System.Int32,OpenCvSharp.Size,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_CascadeClassifier_detectMultiScale1_m29C59B5EF4163E71E24E665A38D7F4004993123F (intptr_t ___0_obj, intptr_t ___1_image, intptr_t ___2_objects, double ___3_scaleFactor, int32_t ___4_minNeighbors, int32_t ___5_flags, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___6_minSize, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___7_maxSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_detectMultiScale1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_detectMultiScale1)(___0_obj, ___1_image, ___2_objects, ___3_scaleFactor, ___4_minNeighbors, ___5_flags, ___6_minSize, ___7_maxSize);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image, ___2_objects, ___3_scaleFactor, ___4_minNeighbors, ___5_flags, ___6_minSize, ___7_maxSize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_detectMultiScale2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32,System.Int32,OpenCvSharp.Size,OpenCvSharp.Size,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_CascadeClassifier_detectMultiScale2_m90ECD41F6B695D91621A3D4ED0324754B51808E8 (intptr_t ___0_obj, intptr_t ___1_image, intptr_t ___2_objects, intptr_t ___3_rejectLevels, intptr_t ___4_levelWeights, double ___5_scaleFactor, int32_t ___6_minNeighbors, int32_t ___7_flags, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___8_minSize, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___9_maxSize, int32_t ___10_outputRejectLevels, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_detectMultiScale2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_detectMultiScale2)(___0_obj, ___1_image, ___2_objects, ___3_rejectLevels, ___4_levelWeights, ___5_scaleFactor, ___6_minNeighbors, ___7_flags, ___8_minSize, ___9_maxSize, ___10_outputRejectLevels);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image, ___2_objects, ___3_rejectLevels, ___4_levelWeights, ___5_scaleFactor, ___6_minNeighbors, ___7_flags, ___8_minSize, ___9_maxSize, ___10_outputRejectLevels);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_isOldFormatCascade(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_CascadeClassifier_isOldFormatCascade_m86C2386303CFAC7E5D58181FE4F17382B0903A4D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_isOldFormatCascade", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_isOldFormatCascade)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_getOriginalWindowSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_objdetect_CascadeClassifier_getOriginalWindowSize_mCBA2AC4F69CD256F91FA020794AFD7C42FD2F02D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_getOriginalWindowSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_getOriginalWindowSize)(___0_obj);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_CascadeClassifier_getFeatureType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_CascadeClassifier_getFeatureType_mE8BD2BBDA24FA9315FF32A488DDFF8BD3748C28E (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_CascadeClassifier_getFeatureType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_CascadeClassifier_getFeatureType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_sizeof()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_sizeof_mC5A8667BB80FABCD33FB2FD5BAFE3AE97DD0DA33 (const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_sizeof", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_sizeof)();
	#else
	int32_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_HOGDescriptor_new1_mCC93EEFE13B7889BF436609E786350A3A18322CE (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_new2(OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.Size,System.Int32,System.Int32,System.Double,OpenCvSharp.HistogramNormType,System.Double,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_HOGDescriptor_new2_m4C339E2808762010EF2AD83376D02F296BED6AB2 (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___0_winSize, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_blockSize, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_blockStride, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___3_cellSize, int32_t ___4_nbins, int32_t ___5_derivAperture, double ___6_winSigma, int32_t ___7_histogramNormType, double ___8_l2HysThreshold, int32_t ___9_gammaCorrection, int32_t ___10_nlevels, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, double, int32_t, double, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + 4 + sizeof(double) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_new2)(___0_winSize, ___1_blockSize, ___2_blockStride, ___3_cellSize, ___4_nbins, ___5_derivAperture, ___6_winSigma, ___7_histogramNormType, ___8_l2HysThreshold, ___9_gammaCorrection, ___10_nlevels);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_winSize, ___1_blockSize, ___2_blockStride, ___3_cellSize, ___4_nbins, ___5_derivAperture, ___6_winSigma, ___7_histogramNormType, ___8_l2HysThreshold, ___9_gammaCorrection, ___10_nlevels);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_new3(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_HOGDescriptor_new3_m3F1CC5425FA27456BA74038FD0FF07D3A302E716 (String_t* ___0_fileName, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_fileName' to native representation
	char* ____0_fileName_marshaled = NULL;
	____0_fileName_marshaled = il2cpp_codegen_marshal_string(___0_fileName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_new3)(____0_fileName_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_fileName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_fileName' native representation
	il2cpp_codegen_marshal_free(____0_fileName_marshaled);
	____0_fileName_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_delete_mBAA5548A45E5CA03E6CF37218652FB5BD95A8622 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_delete)(___0_self);
	#else
	il2cppPInvokeFunc(___0_self);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_getDescriptorSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_objdetect_HOGDescriptor_getDescriptorSize_mF1F2EFA48F59FE372908C7B88D30FE5558D5961A (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_getDescriptorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_getDescriptorSize)(___0_self);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_checkDetectorSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_checkDetectorSize_m301B82992871C5F6326B9DF8FC22BBC979D05717 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_checkDetectorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_checkDetectorSize)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_getWinSigma(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_objdetect_HOGDescriptor_getWinSigma_mD43A5ADE70F184A5B127B806F268698E3B56FEC2 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_getWinSigma", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_getWinSigma)(___0_self);
	#else
	double returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_setSVMDetector(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_setSVMDetector_m46E2457F634A46483446D55517734865B0491B00 (intptr_t ___0_self, intptr_t ___1_svmdetector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_setSVMDetector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_setSVMDetector)(___0_self, ___1_svmdetector);
	#else
	il2cppPInvokeFunc(___0_self, ___1_svmdetector);
	#endif

}
// System.Boolean OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_load(System.IntPtr,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_objdetect_HOGDescriptor_load_m52CA6B0828B5854647775C609C414FD2FD1C9558 (intptr_t ___0_self, String_t* ___1_filename, String_t* ___2_objname, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_load", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_filename' to native representation
	char* ____1_filename_marshaled = NULL;
	____1_filename_marshaled = il2cpp_codegen_marshal_string(___1_filename);

	// Marshaling of parameter '___2_objname' to native representation
	char* ____2_objname_marshaled = NULL;
	____2_objname_marshaled = il2cpp_codegen_marshal_string(___2_objname);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_load)(___0_self, ____1_filename_marshaled, ____2_objname_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self, ____1_filename_marshaled, ____2_objname_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_filename' native representation
	il2cpp_codegen_marshal_free(____1_filename_marshaled);
	____1_filename_marshaled = NULL;

	// Marshaling cleanup of parameter '___2_objname' native representation
	il2cpp_codegen_marshal_free(____2_objname_marshaled);
	____2_objname_marshaled = NULL;

	return static_cast<bool>(returnValue);
}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_save(System.IntPtr,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_save_mFA665757C30F9496F6EB0FB8D90EB9C0C3D96DB1 (intptr_t ___0_self, String_t* ___1_filename, String_t* ___2_objname, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_save", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_filename' to native representation
	char* ____1_filename_marshaled = NULL;
	____1_filename_marshaled = il2cpp_codegen_marshal_string(___1_filename);

	// Marshaling of parameter '___2_objname' to native representation
	char* ____2_objname_marshaled = NULL;
	____2_objname_marshaled = il2cpp_codegen_marshal_string(___2_objname);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_save)(___0_self, ____1_filename_marshaled, ____2_objname_marshaled);
	#else
	il2cppPInvokeFunc(___0_self, ____1_filename_marshaled, ____2_objname_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_filename' native representation
	il2cpp_codegen_marshal_free(____1_filename_marshaled);
	____1_filename_marshaled = NULL;

	// Marshaling cleanup of parameter '___2_objname' native representation
	il2cpp_codegen_marshal_free(____2_objname_marshaled);
	____2_objname_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_compute(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_compute_m63D4C0BBAEDC380C0CB51DB949ABE18D043EA7A8 (intptr_t ___0_self, intptr_t ___1_img, intptr_t ___2_descriptors, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___3_winStride, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___4_padding, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___5_locations, int32_t ___6_locationsLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_compute", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___5_locations' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____5_locations_marshaled = NULL;
	if (___5_locations != NULL)
	{
		____5_locations_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___5_locations)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_compute)(___0_self, ___1_img, ___2_descriptors, ___3_winStride, ___4_padding, ____5_locations_marshaled, ___6_locationsLength);
	#else
	il2cppPInvokeFunc(___0_self, ___1_img, ___2_descriptors, ___3_winStride, ___4_padding, ____5_locations_marshaled, ___6_locationsLength);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detect(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detect_m3BD0BDE0B6636993F03B7FEDEF489A76D5574D6E (intptr_t ___0_self, intptr_t ___1_img, intptr_t ___2_foundLocations, double ___3_hitThreshold, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___4_winStride, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___5_padding, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___6_searchLocations, int32_t ___7_searchLocationsLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detect1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___6_searchLocations' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____6_searchLocations_marshaled = NULL;
	if (___6_searchLocations != NULL)
	{
		____6_searchLocations_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___6_searchLocations)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detect1)(___0_self, ___1_img, ___2_foundLocations, ___3_hitThreshold, ___4_winStride, ___5_padding, ____6_searchLocations_marshaled, ___7_searchLocationsLength);
	#else
	il2cppPInvokeFunc(___0_self, ___1_img, ___2_foundLocations, ___3_hitThreshold, ___4_winStride, ___5_padding, ____6_searchLocations_marshaled, ___7_searchLocationsLength);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detect(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Size,OpenCvSharp.Point[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detect_m8BAD57261800695AD56975A6E554E00608A18864 (intptr_t ___0_self, intptr_t ___1_img, intptr_t ___2_foundLocations, intptr_t ___3_weights, double ___4_hitThreshold, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___5_winStride, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___6_padding, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___7_searchLocations, int32_t ___8_searchLocationsLength, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detect2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___7_searchLocations' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____7_searchLocations_marshaled = NULL;
	if (___7_searchLocations != NULL)
	{
		____7_searchLocations_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___7_searchLocations)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detect2)(___0_self, ___1_img, ___2_foundLocations, ___3_weights, ___4_hitThreshold, ___5_winStride, ___6_padding, ____7_searchLocations_marshaled, ___8_searchLocationsLength);
	#else
	il2cppPInvokeFunc(___0_self, ___1_img, ___2_foundLocations, ___3_weights, ___4_hitThreshold, ___5_winStride, ___6_padding, ____7_searchLocations_marshaled, ___8_searchLocationsLength);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detectMultiScale(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Size,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detectMultiScale_m753CC761807262977EAE8B731340BF12587F3644 (intptr_t ___0_self, intptr_t ___1_img, intptr_t ___2_foundLocations, double ___3_hitThreshold, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___4_winStride, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___5_padding, double ___6_scale, int32_t ___7_groupThreshold, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detectMultiScale1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detectMultiScale1)(___0_self, ___1_img, ___2_foundLocations, ___3_hitThreshold, ___4_winStride, ___5_padding, ___6_scale, ___7_groupThreshold);
	#else
	il2cppPInvokeFunc(___0_self, ___1_img, ___2_foundLocations, ___3_hitThreshold, ___4_winStride, ___5_padding, ___6_scale, ___7_groupThreshold);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detectMultiScale(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Size,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detectMultiScale_mCF9E3F891BEA2444214151EBD3C3EA90E0A3BC75 (intptr_t ___0_self, intptr_t ___1_img, intptr_t ___2_foundLocations, intptr_t ___3_foundWeights, double ___4_hitThreshold, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___5_winStride, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___6_padding, double ___7_scale, int32_t ___8_groupThreshold, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detectMultiScale2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detectMultiScale2)(___0_self, ___1_img, ___2_foundLocations, ___3_foundWeights, ___4_hitThreshold, ___5_winStride, ___6_padding, ___7_scale, ___8_groupThreshold);
	#else
	il2cppPInvokeFunc(___0_self, ___1_img, ___2_foundLocations, ___3_foundWeights, ___4_hitThreshold, ___5_winStride, ___6_padding, ___7_scale, ___8_groupThreshold);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_computeGradient(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_computeGradient_m9DF0F377BD923D8CF6AB79D36EFC8E1C90DC6C9B (intptr_t ___0_self, intptr_t ___1_img, intptr_t ___2_grad, intptr_t ___3_angleOfs, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___4_paddingTL, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___5_paddingBR, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_computeGradient", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_computeGradient)(___0_self, ___1_img, ___2_grad, ___3_angleOfs, ___4_paddingTL, ___5_paddingBR);
	#else
	il2cppPInvokeFunc(___0_self, ___1_img, ___2_grad, ___3_angleOfs, ___4_paddingTL, ___5_paddingBR);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detectROI(System.IntPtr,System.IntPtr,OpenCvSharp.Point[],System.Int32,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detectROI_mE34FA6560CB720F30EAB6A93DFF1031558AE052F (intptr_t ___0_obj, intptr_t ___1_img, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___2_locations, int32_t ___3_locationsLength, intptr_t ___4_foundLocations, intptr_t ___5_confidences, double ___6_hitThreshold, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___7_winStride, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___8_padding, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, int32_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detectROI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_locations' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____2_locations_marshaled = NULL;
	if (___2_locations != NULL)
	{
		____2_locations_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___2_locations)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detectROI)(___0_obj, ___1_img, ____2_locations_marshaled, ___3_locationsLength, ___4_foundLocations, ___5_confidences, ___6_hitThreshold, ___7_winStride, ___8_padding);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_img, ____2_locations_marshaled, ___3_locationsLength, ___4_foundLocations, ___5_confidences, ___6_hitThreshold, ___7_winStride, ___8_padding);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_detectMultiScaleROI(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_detectMultiScaleROI_mB76400210662B53D07AA75F9E999BD6013D31EA2 (intptr_t ___0_obj, intptr_t ___1_img, intptr_t ___2_foundLocations, intptr_t ___3_roiScales, intptr_t ___4_roiLocations, intptr_t ___5_roiConfidences, double ___6_hitThreshold, int32_t ___7_groupThreshold, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_detectMultiScaleROI", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_detectMultiScaleROI)(___0_obj, ___1_img, ___2_foundLocations, ___3_roiScales, ___4_roiLocations, ___5_roiConfidences, ___6_hitThreshold, ___7_groupThreshold);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_img, ___2_foundLocations, ___3_roiScales, ___4_roiLocations, ___5_roiConfidences, ___6_hitThreshold, ___7_groupThreshold);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_readALTModel(System.IntPtr,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_readALTModel_m28CBA481B6917A8EBD762C1A39495D5D52CC1611 (intptr_t ___0_obj, String_t* ___1_modelfile, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_readALTModel", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_modelfile' to native representation
	char* ____1_modelfile_marshaled = NULL;
	____1_modelfile_marshaled = il2cpp_codegen_marshal_string(___1_modelfile);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_readALTModel)(___0_obj, ____1_modelfile_marshaled);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_modelfile_marshaled);
	#endif

	// Marshaling cleanup of parameter '___1_modelfile' native representation
	il2cpp_codegen_marshal_free(____1_modelfile_marshaled);
	____1_modelfile_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_groupRectangles(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_groupRectangles_m937C9164EC8DFB7A669ED3617736E834303C4E99 (intptr_t ___0_obj, intptr_t ___1_rectList, intptr_t ___2_weights, int32_t ___3_groupThreshold, double ___4_eps, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_groupRectangles", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_groupRectangles)(___0_obj, ___1_rectList, ___2_weights, ___3_groupThreshold, ___4_eps);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_rectList, ___2_weights, ___3_groupThreshold, ___4_eps);
	#endif

}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_winSize_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_objdetect_HOGDescriptor_winSize_get_m2BF159DEE8E411CB02B5618A0003342569C38A3C (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_winSize_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_winSize_get)(___0_self);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_blockSize_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_objdetect_HOGDescriptor_blockSize_get_mEF01DED332876CC75064EF61CAE52231CB176BE0 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_blockSize_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_blockSize_get)(___0_self);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_blockStride_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_objdetect_HOGDescriptor_blockStride_get_m14510AB22D9117D21F5568D42EB224F37F047617 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_blockStride_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_blockStride_get)(___0_self);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// OpenCvSharp.Size OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_cellSize_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 NativeMethods_objdetect_HOGDescriptor_cellSize_get_m8158FAE5F5C1709052BDE296AB9D0AC2853DABEC (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_cellSize_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_cellSize_get)(___0_self);
	#else
	Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_nbins_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_nbins_get_mC766CC89A6187FB09284A6DF3898E6E8F99040AE (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_nbins_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_nbins_get)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_derivAperture_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_derivAperture_get_m73090964E82F0FFBC354043FA1C7A31436FFD078 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_derivAperture_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_derivAperture_get)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_winSigma_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_objdetect_HOGDescriptor_winSigma_get_m02C9C4936E37A0979B3067D0F191A04083DD7292 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_winSigma_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_winSigma_get)(___0_self);
	#else
	double returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_histogramNormType_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_histogramNormType_get_m956424A9BB56A22807F1BAF1915479A94DA2CA40 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_histogramNormType_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_histogramNormType_get)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_L2HysThreshold_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_objdetect_HOGDescriptor_L2HysThreshold_get_m16762FC0278F629ADFF9F34986F5EC6309FD8477 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_L2HysThreshold_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_L2HysThreshold_get)(___0_self);
	#else
	double returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_gammaCorrection_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_gammaCorrection_get_m8FE04CF155197007FE928A56200B161761AD2750 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_gammaCorrection_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_gammaCorrection_get)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_nlevels_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_objdetect_HOGDescriptor_nlevels_get_m6B9795B29F782EBBED678FABA92818C16930B822 (intptr_t ___0_self, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_nlevels_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_nlevels_get)(___0_self);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_self);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_winSize_set(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_winSize_set_m094831B04A8438F38276719ABCF8CE82BA099887 (intptr_t ___0_self, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_winSize_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_winSize_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_blockSize_set(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_blockSize_set_m06585760E3412A6D9CE17B9985928F90776DD113 (intptr_t ___0_self, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_blockSize_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_blockSize_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_blockStride_set(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_blockStride_set_m5BC838F041CEC6BAD9DBBCD56EA294737A278221 (intptr_t ___0_self, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_blockStride_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_blockStride_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_cellSize_set(System.IntPtr,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_cellSize_set_m58F7340C3385C7B62D235F32C0C318A36B046FA9 (intptr_t ___0_self, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_cellSize_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_cellSize_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_nbins_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_nbins_set_m243A887DA02434204C2420771B138C3CC0DD6917 (intptr_t ___0_self, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_nbins_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_nbins_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_derivAperture_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_derivAperture_set_m6299AE3E7DE80E386C2B6DC65CDCF6E8C3AF8DAE (intptr_t ___0_self, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_derivAperture_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_derivAperture_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_winSigma_set(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_winSigma_set_m8571FEB34F1A9B2E50703378C721DE27F7628ABB (intptr_t ___0_self, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_winSigma_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_winSigma_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_histogramNormType_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_histogramNormType_set_m1F7AE46B29C872DEFF82973398D54211B69EDD46 (intptr_t ___0_self, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_histogramNormType_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_histogramNormType_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_L2HysThreshold_set(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_L2HysThreshold_set_mF0559835BFF3C1CBE90FE6E08DFA001977200D3E (intptr_t ___0_self, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_L2HysThreshold_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_L2HysThreshold_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_gammaCorrection_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_gammaCorrection_set_m4B9F2103B5DC7987B0E8B4145B937928B2C8040F (intptr_t ___0_self, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_gammaCorrection_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_gammaCorrection_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_HOGDescriptor_nlevels_set(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_HOGDescriptor_nlevels_set_mDA1179866FAFA3886E7B222797379667FA1387C5 (intptr_t ___0_self, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_HOGDescriptor_nlevels_set", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_HOGDescriptor_nlevels_set)(___0_self, ___1_value);
	#else
	il2cppPInvokeFunc(___0_self, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_groupRectangles1(System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_groupRectangles1_m8367C09B4E6E08277AD7E9015C3FC537799143F1 (intptr_t ___0_rectList, int32_t ___1_groupThreshold, double ___2_eps, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_groupRectangles1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_groupRectangles1)(___0_rectList, ___1_groupThreshold, ___2_eps);
	#else
	il2cppPInvokeFunc(___0_rectList, ___1_groupThreshold, ___2_eps);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_groupRectangles2(System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_groupRectangles2_m102B7AE76B80EE4AA6CDBEC7364D70B30BDC2D82 (intptr_t ___0_rectList, intptr_t ___1_weights, int32_t ___2_groupThreshold, double ___3_eps, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_groupRectangles2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_groupRectangles2)(___0_rectList, ___1_weights, ___2_groupThreshold, ___3_eps);
	#else
	il2cppPInvokeFunc(___0_rectList, ___1_weights, ___2_groupThreshold, ___3_eps);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_groupRectangles3(System.IntPtr,System.Int32,System.Double,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_groupRectangles3_mEE05CD08CAF8690B57FF2137EE7C8E851B30EF7A (intptr_t ___0_rectList, int32_t ___1_groupThreshold, double ___2_eps, intptr_t ___3_weights, intptr_t ___4_levelWeights, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, double, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(double) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_groupRectangles3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_groupRectangles3)(___0_rectList, ___1_groupThreshold, ___2_eps, ___3_weights, ___4_levelWeights);
	#else
	il2cppPInvokeFunc(___0_rectList, ___1_groupThreshold, ___2_eps, ___3_weights, ___4_levelWeights);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_groupRectangles4(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_groupRectangles4_mC588F1FF5E1546D1831217A7AE33D01CFB7CB983 (intptr_t ___0_rectList, intptr_t ___1_rejectLevels, intptr_t ___2_levelWeights, int32_t ___3_groupThreshold, double ___4_eps, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_groupRectangles4", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_groupRectangles4)(___0_rectList, ___1_rejectLevels, ___2_levelWeights, ___3_groupThreshold, ___4_eps);
	#else
	il2cppPInvokeFunc(___0_rectList, ___1_rejectLevels, ___2_levelWeights, ___3_groupThreshold, ___4_eps);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::objdetect_groupRectangles_meanshift(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,OpenCvSharp.Size)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_objdetect_groupRectangles_meanshift_mCC87F7781D6A69BEAB2DA8FF98FF2A32C46B7AD0 (intptr_t ___0_rectList, intptr_t ___1_foundWeights, intptr_t ___2_foundScales, double ___3_detectThreshold, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___4_winDetSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "objdetect_groupRectangles_meanshift", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(objdetect_groupRectangles_meanshift)(___0_rectList, ___1_foundWeights, ___2_foundScales, ___3_detectThreshold, ___4_winDetSize);
	#else
	il2cppPInvokeFunc(___0_rectList, ___1_foundWeights, ___2_foundScales, ___3_detectThreshold, ___4_winDetSize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::optflow_motempl_updateMotionHistory(System.IntPtr,System.IntPtr,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_optflow_motempl_updateMotionHistory_m5A507589AD79A682A8FC8E087ED9F47393AD8CDC (intptr_t ___0_silhouette, intptr_t ___1_mhi, double ___2_timestamp, double ___3_duration, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_motempl_updateMotionHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(optflow_motempl_updateMotionHistory)(___0_silhouette, ___1_mhi, ___2_timestamp, ___3_duration);
	#else
	il2cppPInvokeFunc(___0_silhouette, ___1_mhi, ___2_timestamp, ___3_duration);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::optflow_motempl_calcMotionGradient(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_optflow_motempl_calcMotionGradient_m30DFD81509815E55A895D22AC1A48231803677AA (intptr_t ___0_mhi, intptr_t ___1_mask, intptr_t ___2_orientation, double ___3_delta1, double ___4_delta2, int32_t ___5_apertureSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_motempl_calcMotionGradient", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(optflow_motempl_calcMotionGradient)(___0_mhi, ___1_mask, ___2_orientation, ___3_delta1, ___4_delta2, ___5_apertureSize);
	#else
	il2cppPInvokeFunc(___0_mhi, ___1_mask, ___2_orientation, ___3_delta1, ___4_delta2, ___5_apertureSize);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::optflow_motempl_calcGlobalOrientation(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_optflow_motempl_calcGlobalOrientation_mF6F2157469AF1E91E4DB83F1B56D2BFDD8052385 (intptr_t ___0_orientation, intptr_t ___1_mask, intptr_t ___2_mhi, double ___3_timestamp, double ___4_duration, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_motempl_calcGlobalOrientation", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(optflow_motempl_calcGlobalOrientation)(___0_orientation, ___1_mask, ___2_mhi, ___3_timestamp, ___4_duration);
	#else
	double returnValue = il2cppPInvokeFunc(___0_orientation, ___1_mask, ___2_mhi, ___3_timestamp, ___4_duration);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::optflow_motempl_segmentMotion(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_optflow_motempl_segmentMotion_mA3FE9CF7DFCEE5C6D0E6DB40F3256303A2E85978 (intptr_t ___0_mhi, intptr_t ___1_segmask, intptr_t ___2_boundingRects, double ___3_timestamp, double ___4_segThresh, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_motempl_segmentMotion", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(optflow_motempl_segmentMotion)(___0_mhi, ___1_segmask, ___2_boundingRects, ___3_timestamp, ___4_segThresh);
	#else
	il2cppPInvokeFunc(___0_mhi, ___1_segmask, ___2_boundingRects, ___3_timestamp, ___4_segThresh);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::optflow_calcOpticalFlowSF1(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_optflow_calcOpticalFlowSF1_m8B88BFF3AA3B2F034307B7758054B05B43B544DC (intptr_t ___0_from, intptr_t ___1_to, intptr_t ___2_flow, int32_t ___3_layers, int32_t ___4_averagingBlockSize, int32_t ___5_maxFlow, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_calcOpticalFlowSF1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(optflow_calcOpticalFlowSF1)(___0_from, ___1_to, ___2_flow, ___3_layers, ___4_averagingBlockSize, ___5_maxFlow);
	#else
	il2cppPInvokeFunc(___0_from, ___1_to, ___2_flow, ___3_layers, ___4_averagingBlockSize, ___5_maxFlow);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::optflow_calcOpticalFlowSF2(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_optflow_calcOpticalFlowSF2_m01FD48B50DE6CB0127A741F432BE3B65A37349FC (intptr_t ___0_from, intptr_t ___1_to, intptr_t ___2_flow, int32_t ___3_layers, int32_t ___4_averagingBlockSize, int32_t ___5_maxFlow, double ___6_sigmaDist, double ___7_sigmaColor, int32_t ___8_postprocessWindow, double ___9_sigmaDistFix, double ___10_sigmaColorFix, double ___11_occThr, int32_t ___12_upscaleAveragingRadius, double ___13_upscaleSigmaDist, double ___14_upscaleSigmaColor, double ___15_speedUpThr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, int32_t, int32_t, int32_t, double, double, int32_t, double, double, double, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "optflow_calcOpticalFlowSF2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(optflow_calcOpticalFlowSF2)(___0_from, ___1_to, ___2_flow, ___3_layers, ___4_averagingBlockSize, ___5_maxFlow, ___6_sigmaDist, ___7_sigmaColor, ___8_postprocessWindow, ___9_sigmaDistFix, ___10_sigmaColorFix, ___11_occThr, ___12_upscaleAveragingRadius, ___13_upscaleSigmaDist, ___14_upscaleSigmaColor, ___15_speedUpThr);
	#else
	il2cppPInvokeFunc(___0_from, ___1_to, ___2_flow, ___3_layers, ___4_averagingBlockSize, ___5_maxFlow, ___6_sigmaDist, ___7_sigmaColor, ___8_postprocessWindow, ___9_sigmaDistFix, ___10_sigmaColorFix, ___11_occThr, ___12_upscaleAveragingRadius, ___13_upscaleSigmaDist, ___14_upscaleSigmaColor, ___15_speedUpThr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_uchar_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_uchar_new1_mD9F0A1C4AFBD9105642DF08AF946786CA8C7342D (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_uchar_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_uchar_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_uchar_new2_m69EF00BF98E011CEC1D06255AD8DBBF24DED989B (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_uchar_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_uchar_new3(System.Byte[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_uchar_new3_m1B0036D01EBD2CE848A628E6C843B81EA85E6693 (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (uint8_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	uint8_t* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<uint8_t*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_uchar_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_uchar_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_uchar_getSize_m9E51CCAA4DEC52D5CE08AC755C7CED2714AE8F84 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_uchar_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_uchar_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_uchar_getPointer_mC7D818EF0C42EDC73B5927B4E13F296D08DC8A74 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_uchar_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_uchar_copy(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_uchar_copy_m9A0AB303414F9A42D83F3180BD406B57CB946F6C (intptr_t ___0_vector, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_uchar_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_uchar_copy)(___0_vector, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_vector, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_uchar_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_uchar_delete_m7B67055568144D4567BFEC5B5E5DA796CC273518 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_uchar_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_uchar_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_int32_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_int32_new1_mA2E6CD1E9202BEC38B65BF45C72CAC9D1CA93BA8 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_int32_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_int32_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_int32_new2_m700B21D4B95ECD9DCB58EDCA905934ED5D2C2E0B (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_int32_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_int32_new3(System.Int32[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_int32_new3_m9E288FE2F28E5ACCAC00EBCB55A23048402B9349 (Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	int32_t* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<int32_t*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_int32_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_int32_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_int32_getSize_mB1BB940D622588F36F8A705EEC677FC585DA49AC (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_int32_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_int32_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_int32_getPointer_m6022D4F26A5F527A252F2928564A41397528482E (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_int32_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_int32_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_int32_delete_mA70FE5C27B4345E37CB6A1597CDF448D980891CF (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_int32_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_int32_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_float_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_float_new1_m36F9A9BD151E9D1439F37BF572F3FFC8CD608685 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_float_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_float_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_float_new2_mBDAECC7D75E41B84D14A461864242583A153F56A (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_float_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_float_new3(System.Single[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_float_new3_m77077AD764B0BDFB114C4A895A76EC7B83A09D17 (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (float*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	float* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<float*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_float_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_float_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_float_getSize_m02AECDB916B7D09495864F006576AAE943DEA79C (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_float_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_float_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_float_getPointer_m3306B7F1D2DC3E5406FB086E903E982BD3145B1B (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_float_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_float_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_float_delete_mFF9A75E6572CFAD8B9321FFB8BFEF5D359AD0711 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_float_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_float_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_double_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_double_new1_m41D183923966F057A4A9A0BAC1F9A31D927CF3C0 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_double_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_double_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_double_new2_mD09F2A178CBE9A07B1BA277B8FEA1CDC06EDC97E (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_double_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_double_new3(System.Double[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_double_new3_m64FC8BB148085E299DB77398D1B0EE204F54FA99 (DoubleU5BU5D_tCC308475BD3B8229DB2582938669EF2F9ECC1FEE* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	double* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<double*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_double_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_double_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_double_getSize_mDEC76DC7237AAA8803B055DB95BEF48817C4A18E (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_double_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_double_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_double_getPointer_mBC14E4247975C73932584729FC508668F8D80911 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_double_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_double_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_double_delete_m1B1E72F70A82F875E87393B03D367E05316BF23A (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_double_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_double_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec2f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec2f_new1_mD7572BFF893767BD562E2E99D4A7AA09636CC1E6 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec2f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec2f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec2f_new2_m0749B6A024D7C3F8F6F842A4BFCC1A9729E57311 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec2f_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec2f_new3(OpenCvSharp.Vec2f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec2f_new3_m16BFE5D7DEB7CDCF6E8F5F63A0066229B1D18D6F (Vec2fU5BU5D_t605FE443F498ED80B628FC0E98240C847D9C22FF* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec2f_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec2f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec2f_getSize_m0649BBEC0ADDACD490EFCB87C0C5456C48996D0C (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec2f_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec2f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec2f_getPointer_mAD0D422BBB366D0578A45D2EF32B1A1EC0253B97 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec2f_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec2f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec2f_delete_mFE2EEA894433DB28E628355315947EA10A709884 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec2f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec2f_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec3f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec3f_new1_mCC302E0EAE54804F3D20C8993B05C470042007A9 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec3f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec3f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec3f_new2_mBADC549DA1AFDA2FA20315B17FF0DFF6DEFC3FB6 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec3f_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec3f_new3(OpenCvSharp.Vec3f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec3f_new3_m397D3F2FD7C670CEB1BA8C964A39690B3EC03AFF (Vec3fU5BU5D_tED5C8EB686AD5A75ACA66EC986897DE59ABF6C4D* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec3f_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec3f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec3f_getSize_mE9600FBF35526E4E17727F7D5E8473E4AFB51D27 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec3f_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec3f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec3f_getPointer_m1B4690E8CB46FE3175F801FE20890C4CA95053F8 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec3f_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec3f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec3f_delete_m83EC2D569C52C8A5E93AFFFE105C3E4788D98740 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec3f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec3f_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4f_new1_m10AB85C31054351A80DF462E496645A78F710E51 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4f_new2_mA7A971C0F5AAB2DD4305C30AC9004FFEBBD8F501 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4f_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4f_new3(OpenCvSharp.Vec4f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4f_new3_m575CE2D87D1E78F3304DD9CBAB9EE05D8E8FB32A (Vec4fU5BU5D_t3B2FBCD7291E3C966FB625B86393DC5CDB180A64* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4f_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4f_getSize_m48B5B895EF87B8EE40B67794EC8F83FBC42F53EC (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4f_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4f_getPointer_m70C07E23A5F52FFEF94EDC1C750ACE6875EAB4EF (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4f_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec4f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec4f_delete_mFF6CB1A6B662E9566DFF783B536F40C5BECE0AF1 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec4f_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4i_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4i_new1_mE07C1BA3282CBCE2586103B14DFE0D0B46798C0C (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4i_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4i_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4i_new2_mEA08B7E1954C58B491C89262C8A2CF2B582B6EBF (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4i_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4i_new3(OpenCvSharp.Vec4i[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4i_new3_m59569EAD509A23D0D542D1829924D5257A782432 (Vec4iU5BU5D_tA592A0B55AB1329BD078300CADFC474499AA7157* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4i_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4i_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4i_getSize_mC056111BEAAD951AB69C679365B215F1D1FEDEA5 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4i_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec4i_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec4i_getPointer_m936B20BCAC9F0AE2592362D347E86EC4493B0F25 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec4i_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec4i_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec4i_delete_m7C26B5B6F30C58807342CD3D5F3AE3BC930066E2 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec4i_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec4i_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6f_new1_mB34305552365B580E2125C178D6734505BCF7852 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6f_new2_mCE911DF926C0D1D3F0AD02B64A3009A240D830CB (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6f_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6f_new3(OpenCvSharp.Vec6f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6f_new3_m7BF5989309A83CE00522969C73C630200447026D (Vec6fU5BU5D_t592D4E62D13229DBA0A9CD133ADE98A5E27449C3* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6f_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6f_getSize_m74A347AF07D46590577469B8A70D1BF8FFAF15C9 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6f_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6f_getPointer_m91651EA90E11E7934DD001E574DCEE5279649B37 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6f_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec6f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec6f_delete_m5E166660B657C2BC15127B6572CD6EED74221A52 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec6f_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6d_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6d_new1_m9424B99F2D012D18DA1916C4713447A86B95F4E0 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6d_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6d_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6d_new2_m1A942014A5650235072F38FF0C5D4C8E0D93CF5B (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6d_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6d_new3(OpenCvSharp.Vec6d[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6d_new3_m7A99548F0E2E221ECB22026BE24BA2E2CF6F5DEE (Vec6dU5BU5D_tD00B137B3DBEF1DB6F17CA62572E730E9D27FE42* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6d_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6d_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6d_getSize_mA02E957376152C89ABCBAF68833B942FC2766C93 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6d_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Vec6d_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Vec6d_getPointer_mB0393BE0CB37ED9013CE37DDE8437EBFD3776D1D (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Vec6d_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Vec6d_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Vec6d_delete_mB4A16ECB235B0F0DEEF91E2FCB57474ECAE65227 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Vec6d_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Vec6d_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2i_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2i_new1_m90AEAF51CB9FB6F4859EE0C93906DD35AB649E97 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2i_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2i_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2i_new2_m1249A5552B4118BFC678FE49E7A243367FC756F8 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2i_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2i_new3(OpenCvSharp.Point[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2i_new3_m233753829655A368A1FEDFE9E066003E1469F820 (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2i_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2i_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2i_getSize_mEDB7E85160C7D79B5A39DC01A617C60F35ADB066 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2i_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2i_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2i_getPointer_m42B1CCA46B25C7922C9B602D86F517C72BFC62B6 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2i_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Point2i_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Point2i_delete_m1860A182A46F35BA8E0A983FD069ACFB6295707D (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2i_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Point2i_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2f_new1_mE6A0CFC0B2723EA6DE156943D8034668CDF33FD3 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2f_new2_mAE768BC479A5FF395ACCA5F4609F1FA922281812 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2f_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2f_new3(OpenCvSharp.Point2f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2f_new3_m3AC11DC30F6AA917B2A320206E3584C60FFAC7CD (Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2f_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2f_getSize_m514D44FBE2B5E2BC528840D8B30BC4AC2EBD1C2E (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2f_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point2f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point2f_getPointer_mB0DDC2C8C1057239CDCEC943B1F49541E7352C4E (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point2f_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Point2f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Point2f_delete_mDA04415974FC4FFA83F83692C46BBD8D988F2CE0 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point2f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Point2f_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point3f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point3f_new1_m70C0F29DD87993EF61D0BE5DEEED09D03B059F50 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point3f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point3f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point3f_new2_m0298C1593730D02EBF4D7CC8E97A5E44F04D60AB (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point3f_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point3f_new3(OpenCvSharp.Point3f[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point3f_new3_m7186CA8E8438B80E318E1B17ECB5FC28243083E3 (Point3fU5BU5D_t20D511332208C2F2A3A211618B4449D3654C31C2* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<Point3f_tD41E7D08B7A42FB6C99D024DDB8DF469289847B4*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point3f_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point3f_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point3f_getSize_mAFCBDBCE289011A72C3AC2A58E65EE5F92E42C00 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point3f_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Point3f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Point3f_getPointer_m014B07549A0CD1189745112923B2E7BDD526E0A7 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Point3f_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Point3f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Point3f_delete_m592368D3C7F146EE510BC27ED57F1EECDAD62563 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Point3f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Point3f_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Rect_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Rect_new1_m9A6EE8FA2AB9A8DE0DFE07E69A835FBA4B660FB6 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Rect_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Rect_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Rect_new2_mBB0F174A0F9F960C8B3A6B99600AE003A1DEC036 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Rect_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Rect_new3(OpenCvSharp.Rect[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Rect_new3_m3F8D52F4A17A171516AB4AA443F60BF72E25CE97 (RectU5BU5D_t8D707798510E7E6C5EDA64E457B86964B724B96A* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Rect_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Rect_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Rect_getSize_m3EEE26582D33D05D99D7EDC5611BF8DDFEF056EA (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Rect_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Rect_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Rect_getPointer_mBD33A2DF99845C2A17BA1177EDE68E1FBF44A070 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Rect_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Rect_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Rect_delete_m42F5411DA5F912506E3CC260F496A9C8B3AEFD4D (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Rect_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Rect_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_ERStat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_ERStat_new1_mB98F64F66EB3C734299F0A654C2C3DA0864E55E6 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_ERStat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_ERStat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_ERStat_new2(System.IntPtr[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_ERStat_new2_m7CA67439FB04345745C73E1074D7F9100A91214D (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_ERStat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	intptr_t* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<intptr_t*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_ERStat_new2)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_ERStat_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_ERStat_getSize_m07D4EB6666F39FBC7795BD0E22A3E67E006C6CBB (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_ERStat_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_ERStat_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_ERStat_getElement(System.IntPtr,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_ERStat_getElement_m817370E345CD99ABD48FB72A0A4C3C9E5C218AFC (intptr_t ___0_vector, int32_t ___1_index, intptr_t ___2_output, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_ERStat_getElement", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_ERStat_getElement)(___0_vector, ___1_index, ___2_output);
	#else
	il2cppPInvokeFunc(___0_vector, ___1_index, ___2_output);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_ERStat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_ERStat_delete_mB1964F518C058C146B3EC65A4C20F905E32342D6 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_ERStat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_ERStat_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_KeyPoint_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_KeyPoint_new1_m752D45A2F0E19E0BA1B1D1F90BDD00B7329B9FBB (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_KeyPoint_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_KeyPoint_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_KeyPoint_new2_mBCDE0CA38C0E0111E503D64FD75AD325C6B7BAD1 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_KeyPoint_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_KeyPoint_new3(OpenCvSharp.KeyPoint[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_KeyPoint_new3_mED700D1FD28280C7536E43F2CEA9D57A2887B72A (KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<KeyPoint_t0D3AA7B134F39422BF915C208E359AA17D6893DA*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_KeyPoint_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_KeyPoint_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_KeyPoint_getSize_m50D02E97C1A946FBE9B68F3258744C8372D84C2C (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_KeyPoint_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_KeyPoint_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_KeyPoint_getPointer_m39DECF125CC769C73689D340EA9EB751F733B5CE (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_KeyPoint_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_KeyPoint_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_KeyPoint_delete_m88DEDF2A2E3348A10363E9035E5788292D7A9633 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_KeyPoint_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_KeyPoint_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_DMatch_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_DMatch_new1_m39044A0D68D40EE731860005BF3EE54591E4806D (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_DMatch_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_DMatch_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_DMatch_new2_mAEF3AE21AB83331268AA7ED313F58998A65E7BD3 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_DMatch_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_DMatch_new3(OpenCvSharp.DMatch[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_DMatch_new3_m5938128813118AD1D3DA2DFDED219853D8A47D98 (DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<DMatch_t2AC2DB4387A96ED9EF13EA194731C957C621C23A*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_DMatch_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_DMatch_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_DMatch_getSize_mAE791196A636E897394BE6ADCC7E904DFC734EB0 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_DMatch_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_DMatch_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_DMatch_getPointer_m45B4721EE4B47B4718251A99066C2D2DDA0EDCA3 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_DMatch_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_DMatch_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_DMatch_delete_m936B80412B84F140F13E2EC4239BD6B2FA7FE31A (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_DMatch_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_DMatch_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_int_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_int_new1_mBE90586B64BE0C61AD3C43734A71639FAFD3FDD5 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_int_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_int_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_int_new2_m2D73DFED6A90987BD8B3B95C6C163C0DA5A476CE (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_int_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_int_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_int_getSize1_m9A764B0CEDA6CBB17E41655596D7AC11A8E4FDFF (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_int_getSize1)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_int_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_int_getSize2_m899ED91012A2534F746208884669B95BA1DE833D (intptr_t ___0_vector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_size, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_size' to native representation
	intptr_t* ____1_size_marshaled = NULL;
	if (___1_size != NULL)
	{
		____1_size_marshaled = reinterpret_cast<intptr_t*>((___1_size)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_int_getSize2)(___0_vector, ____1_size_marshaled);
	#else
	il2cppPInvokeFunc(___0_vector, ____1_size_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_int_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_int_getPointer_m76411762B3E862CD7CC807A75B8720D95D709BE5 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_int_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_int_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_int_copy_mDFA88E20FB5A712D9A8D06541C05CF5ECBAF2141 (intptr_t ___0_vec, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_dst' to native representation
	intptr_t* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<intptr_t*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_int_copy)(___0_vec, ____1_dst_marshaled);
	#else
	il2cppPInvokeFunc(___0_vec, ____1_dst_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_int_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_int_delete_m57DAC459AB8DC20688A17780476E073855A172A4 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_int_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_int_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_float_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_float_new1_m241371D74946E77BDC1D80387736C67B1B62A6BC (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_float_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_float_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_float_new2_mF105101C22F313F8BC479221384F694C18F4210A (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_float_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_float_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_float_getSize1_m74BA1CC1D84EE0DB4A298243629DFF9D0D490CE9 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_float_getSize1)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_float_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_float_getSize2_mBEC062A9FD54AC86B0A3153E6AD8371445324D2A (intptr_t ___0_vector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_size, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_size' to native representation
	intptr_t* ____1_size_marshaled = NULL;
	if (___1_size != NULL)
	{
		____1_size_marshaled = reinterpret_cast<intptr_t*>((___1_size)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_float_getSize2)(___0_vector, ____1_size_marshaled);
	#else
	il2cppPInvokeFunc(___0_vector, ____1_size_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_float_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_float_getPointer_mE90A5E3D262680CEDBB1BD828A1E4D5AF11A40CA (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_float_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_float_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_float_copy_mCBD7F77A6642439D1CC90F9EA16C990996A44996 (intptr_t ___0_vec, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_dst' to native representation
	intptr_t* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<intptr_t*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_float_copy)(___0_vec, ____1_dst_marshaled);
	#else
	il2cppPInvokeFunc(___0_vec, ____1_dst_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_float_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_float_delete_m30C9F2EFACEA882C8D426BD1E7E30B6EB60B0C7E (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_float_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_float_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_double_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_double_new1_m8A2246D2056D724F3E07F848258434874BFB176B (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_double_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_double_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_double_new2_mB86A5140ADCC1A8E90E53BFF1BB1BC3D9A6313D5 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_double_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_double_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_double_getSize1_m0A4F682970B0C909B1D9A9985EDEC2160BF232C8 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_double_getSize1)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_double_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_double_getSize2_mB70E20893BCBA65249BDF3A199C8DFF665DE284A (intptr_t ___0_vector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_size, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_size' to native representation
	intptr_t* ____1_size_marshaled = NULL;
	if (___1_size != NULL)
	{
		____1_size_marshaled = reinterpret_cast<intptr_t*>((___1_size)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_double_getSize2)(___0_vector, ____1_size_marshaled);
	#else
	il2cppPInvokeFunc(___0_vector, ____1_size_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_double_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_double_getPointer_m02A91BD57AACADB26414FFC9586885630CA18F6D (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_double_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_double_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_double_copy_m15713036EDE63B2154A798F41D5B910D284798D5 (intptr_t ___0_vec, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_dst' to native representation
	intptr_t* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<intptr_t*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_double_copy)(___0_vec, ____1_dst_marshaled);
	#else
	il2cppPInvokeFunc(___0_vec, ____1_dst_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_double_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_double_delete_mB22E47A0FE954BA529ED0C60EBD1A3DEB51E44B6 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_double_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_double_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_KeyPoint_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_KeyPoint_new1_m143B4945880036EA277D33724EF07155EBDDCD7C (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_KeyPoint_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_KeyPoint_new2_mC21623986266C52339E892BC1486D06B243679B6 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_KeyPoint_new3(System.IntPtr[],System.Int32,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_KeyPoint_new3_mF800229DE9E8A353090044BA310C7702040D0E97 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_values, int32_t ___1_size1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___2_size2, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t*, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_values' to native representation
	intptr_t* ____0_values_marshaled = NULL;
	if (___0_values != NULL)
	{
		____0_values_marshaled = reinterpret_cast<intptr_t*>((___0_values)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_size2' to native representation
	int32_t* ____2_size2_marshaled = NULL;
	if (___2_size2 != NULL)
	{
		____2_size2_marshaled = reinterpret_cast<int32_t*>((___2_size2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_new3)(____0_values_marshaled, ___1_size1, ____2_size2_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_values_marshaled, ___1_size1, ____2_size2_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_KeyPoint_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_KeyPoint_getSize1_mFFE356261EE4592EA48BF573A2928ED04C73B89A (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_getSize1)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_KeyPoint_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_KeyPoint_getSize2_mBAAFE09050F9290A91808BA011FA3FAE590DFF1B (intptr_t ___0_vector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_size, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_size' to native representation
	intptr_t* ____1_size_marshaled = NULL;
	if (___1_size != NULL)
	{
		____1_size_marshaled = reinterpret_cast<intptr_t*>((___1_size)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_getSize2)(___0_vector, ____1_size_marshaled);
	#else
	il2cppPInvokeFunc(___0_vector, ____1_size_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_KeyPoint_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_KeyPoint_getPointer_mC7A88CC8CAFFFF84EEE2EE2ABBA96D02E09CCF18 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_KeyPoint_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_KeyPoint_copy_m0229F1EA662A507E2DE9CB59ED05056A9BC74F06 (intptr_t ___0_vec, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_dst' to native representation
	intptr_t* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<intptr_t*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_copy)(___0_vec, ____1_dst_marshaled);
	#else
	il2cppPInvokeFunc(___0_vec, ____1_dst_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_KeyPoint_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_KeyPoint_delete_mE8BCC1882A53A79F4BEEBFEF9A5594ACC2B783F4 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_KeyPoint_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_KeyPoint_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_DMatch_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_DMatch_new1_m02C6F177675A49C4B855511270630C5C468F2339 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_DMatch_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_DMatch_new2_m9776B6124C9F57AAB3EE95D7E9DA1E5ED6D6AA98 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_DMatch_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_DMatch_getSize1_m27A25C776E7AF0BF764A16CEFD8C54B666E23FC7 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_getSize1)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_DMatch_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_DMatch_getSize2_m24E18830CE8AC1EEB0AF313D949DF134F421B303 (intptr_t ___0_vector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_size, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_size' to native representation
	intptr_t* ____1_size_marshaled = NULL;
	if (___1_size != NULL)
	{
		____1_size_marshaled = reinterpret_cast<intptr_t*>((___1_size)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_getSize2)(___0_vector, ____1_size_marshaled);
	#else
	il2cppPInvokeFunc(___0_vector, ____1_size_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_DMatch_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_DMatch_getPointer_m21BF9B27E929EF8E8B215273032337C0BA93D6BA (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_DMatch_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_DMatch_copy_m9EBE04B9F8DB138B441FDC83EA6601AAB9A49331 (intptr_t ___0_vec, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_dst' to native representation
	intptr_t* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<intptr_t*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_copy)(___0_vec, ____1_dst_marshaled);
	#else
	il2cppPInvokeFunc(___0_vec, ____1_dst_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_DMatch_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_DMatch_delete_m79DEC1327CDCED9070ACA8141F23D47D32879EDA (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_DMatch_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_DMatch_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point_new1_mD59B007EDE7445E85A76609BD8432A3E1B28168B (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point_new2_m96473D3A1F1ADC7E9595C765CEE6BCCF21753741 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point_new3(System.IntPtr,System.IntPtr[],System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point_new3_m10E67AB901753D44CC6787371327CEC877FC161A (intptr_t ___0_size1, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_size2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___2_source, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_size2' to native representation
	intptr_t* ____1_size2_marshaled = NULL;
	if (___1_size2 != NULL)
	{
		____1_size2_marshaled = reinterpret_cast<intptr_t*>((___1_size2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_source' to native representation
	intptr_t* ____2_source_marshaled = NULL;
	if (___2_source != NULL)
	{
		____2_source_marshaled = reinterpret_cast<intptr_t*>((___2_source)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point_new3)(___0_size1, ____1_size2_marshaled, ____2_source_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size1, ____1_size2_marshaled, ____2_source_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point_getSize1_m0AC16F56D8E6E603CFF65A3F0D2F5423445C4868 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point_getSize1)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point_getSize2_m2AF0E8DE7F5170B395925D87883EF005AD69B7C5 (intptr_t ___0_vector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_size, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_size' to native representation
	intptr_t* ____1_size_marshaled = NULL;
	if (___1_size != NULL)
	{
		____1_size_marshaled = reinterpret_cast<intptr_t*>((___1_size)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point_getSize2)(___0_vector, ____1_size_marshaled);
	#else
	il2cppPInvokeFunc(___0_vector, ____1_size_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point_getPointer_m8F143AE9097EE8BC2F6ED51A19BDB147C00F0012 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point_copy_mC517F497449B5A60903B4C8636E6A018A90D4390 (intptr_t ___0_vec, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_dst' to native representation
	intptr_t* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<intptr_t*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point_copy)(___0_vec, ____1_dst_marshaled);
	#else
	il2cppPInvokeFunc(___0_vec, ____1_dst_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point_delete_m102DE606DFA04314516DF744658318757EC601E6 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Vec2i_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Vec2i_new1_mADAC9B84D7985EAF63D713EE25187484A91BB3AD (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Vec2i_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Vec2i_new2_mBAA40D89ADD0AC7089AE111889E33258D488C955 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Vec2i_new3(System.IntPtr,System.IntPtr[],System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Vec2i_new3_m78AD2B2ACB34EBA28E10BF11A17C6BD293D08D82 (intptr_t ___0_size1, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_size2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___2_source, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_size2' to native representation
	intptr_t* ____1_size2_marshaled = NULL;
	if (___1_size2 != NULL)
	{
		____1_size2_marshaled = reinterpret_cast<intptr_t*>((___1_size2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_source' to native representation
	intptr_t* ____2_source_marshaled = NULL;
	if (___2_source != NULL)
	{
		____2_source_marshaled = reinterpret_cast<intptr_t*>((___2_source)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_new3)(___0_size1, ____1_size2_marshaled, ____2_source_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size1, ____1_size2_marshaled, ____2_source_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Vec2i_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Vec2i_getSize1_m7F93D4E2B866B1BAC2A85120263EE9707FC025EF (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_getSize1)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Vec2i_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Vec2i_getSize2_m5CEEE4093E6B08A058A97E120D2EE1268A7645EC (intptr_t ___0_vector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_size, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_size' to native representation
	intptr_t* ____1_size_marshaled = NULL;
	if (___1_size != NULL)
	{
		____1_size_marshaled = reinterpret_cast<intptr_t*>((___1_size)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_getSize2)(___0_vector, ____1_size_marshaled);
	#else
	il2cppPInvokeFunc(___0_vector, ____1_size_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Vec2i_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Vec2i_getPointer_mD760E66D574E36BB0928EA56A7145CB8E6E543C2 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Vec2i_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Vec2i_copy_m2D7F78DDE0109379BEA828AB728C8F4BEABAC6A1 (intptr_t ___0_vec, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_dst' to native representation
	intptr_t* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<intptr_t*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_copy)(___0_vec, ____1_dst_marshaled);
	#else
	il2cppPInvokeFunc(___0_vec, ____1_dst_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Vec2i_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Vec2i_delete_mFB47B5B1A5A994BE77F33DE9B3DAEA769A48F387 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Vec2i_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Vec2i_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point2f_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point2f_new1_mC1197D78425122EC9AAD9AF185EFBA374F522254 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point2f_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point2f_new2_m6E13A57BFF49EAD6FAB6983D223700100F8B55F8 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point2f_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point2f_getSize1_mD16EA34A98E59842DAE366270A1593A823C38B08 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_getSize1)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point2f_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point2f_getSize2_mF548508B61F72D1F78BC5C2B31AA88961D50C520 (intptr_t ___0_vector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_size, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_size' to native representation
	intptr_t* ____1_size_marshaled = NULL;
	if (___1_size != NULL)
	{
		____1_size_marshaled = reinterpret_cast<intptr_t*>((___1_size)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_getSize2)(___0_vector, ____1_size_marshaled);
	#else
	il2cppPInvokeFunc(___0_vector, ____1_size_marshaled);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_Point2f_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_Point2f_getPointer_m8F0737C72DDEDE068C6ABCA951C1CF146CFFC8FD (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point2f_copy(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point2f_copy_mCA0C946213F66FA62A190D9201A773BF83B4D511 (intptr_t ___0_vec, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_copy", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_dst' to native representation
	intptr_t* ____1_dst_marshaled = NULL;
	if (___1_dst != NULL)
	{
		____1_dst_marshaled = reinterpret_cast<intptr_t*>((___1_dst)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_copy)(___0_vec, ____1_dst_marshaled);
	#else
	il2cppPInvokeFunc(___0_vec, ____1_dst_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_Point2f_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_Point2f_delete_mB46A3289AF8BBABF6F07FC8EA7E78C84F854B74B (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_Point2f_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_Point2f_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_string_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_string_new1_m572D448F9722562AF603BBF4219F77B9F27EBCDA (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_string_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_string_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_string_new2_m1EB7576D8280A9F7ECB7CBE048DCE974EFAF8366 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_string_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_string_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_string_getSize_mE203443C1A77253F963C2CB8E52D1A312B75A67B (intptr_t ___0_vec, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_string_getSize)(___0_vec);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vec);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_string_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_string_getPointer_mC85DC54A1AF186D2F850342A687762E015DD63BC (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_string_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.SByte* OpenCvSharp.NativeMethods::vector_string_elemAt(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int8_t* NativeMethods_vector_string_elemAt_mF40CC08A931C2CF07CE14E448A2F3E8A15B3B6D0 (intptr_t ___0_vector, int32_t ___1_i, const RuntimeMethod* method) 
{
	typedef int8_t* (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_elemAt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int8_t* returnValue = reinterpret_cast<PInvokeFunc>(vector_string_elemAt)(___0_vector, ___1_i);
	#else
	int8_t* returnValue = il2cppPInvokeFunc(___0_vector, ___1_i);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_string_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_string_delete_m47BBE9D4A530E1E6868228322602C73C78627BF3 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_string_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_string_setAt(System.IntPtr,System.Int32,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_string_setAt_m1120220E6A1E357FCB4379BDA6DE0C9A14E8E262 (intptr_t ___0_vector, int32_t ___1_i, String_t* ___2_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_string_setAt", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_value' to native representation
	char* ____2_value_marshaled = NULL;
	____2_value_marshaled = il2cpp_codegen_marshal_string(___2_value);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_string_setAt)(___0_vector, ___1_i, ____2_value_marshaled);
	#else
	il2cppPInvokeFunc(___0_vector, ___1_i, ____2_value_marshaled);
	#endif

	// Marshaling cleanup of parameter '___2_value' native representation
	il2cpp_codegen_marshal_free(____2_value_marshaled);
	____2_value_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_ERStat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_ERStat_new1_m3305D113B98A6EA7C9AE3089F38A566E08A201E2 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_ERStat_new2(System.IntPtr,System.IntPtr[],System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_ERStat_new2_mF2162B4703F1BB44C909C3AFDCC60F3BF01B4EC7 (intptr_t ___0_size1, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_sizes2, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___2_src, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_sizes2' to native representation
	intptr_t* ____1_sizes2_marshaled = NULL;
	if (___1_sizes2 != NULL)
	{
		____1_sizes2_marshaled = reinterpret_cast<intptr_t*>((___1_sizes2)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___2_src' to native representation
	intptr_t* ____2_src_marshaled = NULL;
	if (___2_src != NULL)
	{
		____2_src_marshaled = reinterpret_cast<intptr_t*>((___2_src)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_new2)(___0_size1, ____1_sizes2_marshaled, ____2_src_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size1, ____1_sizes2_marshaled, ____2_src_marshaled);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_vector_ERStat_getSize1(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_vector_ERStat_getSize1_mD4BFAD65F4DC3BBCAD5C6FFC8C5C92EBA052500E (intptr_t ___0_vec, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_getSize1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_getSize1)(___0_vec);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vec);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_vector_ERStat_getSize2(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_ERStat_getSize2_m84FC159E731ACCD8255B84BCBC1364B4A9C2AAE6 (intptr_t ___0_vec, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_sizes, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_getSize2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_sizes' to native representation
	intptr_t* ____1_sizes_marshaled = NULL;
	if (___1_sizes != NULL)
	{
		____1_sizes_marshaled = reinterpret_cast<intptr_t*>((___1_sizes)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_getSize2)(___0_vec, ____1_sizes_marshaled);
	#else
	il2cppPInvokeFunc(___0_vec, ____1_sizes_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_ERStat_getElement(System.IntPtr,System.Int32,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_ERStat_getElement_mBFF5B922AF3ADB424445E6FDF3926B83FF66098D (intptr_t ___0_vector, int32_t ___1_i, int32_t ___2_j, intptr_t ___3_output, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_getElement", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_getElement)(___0_vector, ___1_i, ___2_j, ___3_output);
	#else
	il2cppPInvokeFunc(___0_vector, ___1_i, ___2_j, ___3_output);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_vector_ERStat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_vector_ERStat_delete_m242E1813B25ABA48D44FD08C174F8DAE48572EC9 (intptr_t ___0_vec, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_vector_ERStat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_vector_ERStat_delete)(___0_vec);
	#else
	il2cppPInvokeFunc(___0_vec);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Mat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Mat_new1_m26ACB513AD1BB00997BD84696FF90CD223727A7B (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Mat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Mat_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Mat_new2_m66C85265719F5C607520DF414A1D33DDD855FB99 (intptr_t ___0_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Mat_new2)(___0_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_size);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Mat_new3(System.IntPtr[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Mat_new3_mABA5FC5881BAE883225A892E8B7620DF3BC9ADAC (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_data, intptr_t ___1_dataLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_new3", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_data' to native representation
	intptr_t* ____0_data_marshaled = NULL;
	if (___0_data != NULL)
	{
		____0_data_marshaled = reinterpret_cast<intptr_t*>((___0_data)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Mat_new3)(____0_data_marshaled, ___1_dataLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_data_marshaled, ___1_dataLength);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Mat_getSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Mat_getSize_m1824E5D4AAE75E42E15F1180308BF56E29877051 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_getSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Mat_getSize)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::vector_Mat_getPointer(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_vector_Mat_getPointer_mF5AC750524C9511A0CF3B5189B923284645AEE27 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_getPointer", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(vector_Mat_getPointer)(___0_vector);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_vector);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::vector_Mat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Mat_delete_mE26415917A1670E18B5EC6EE1E1A555F0B456368 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Mat_delete)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_Mat_assignToArray(System.IntPtr,System.IntPtr[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Mat_assignToArray_m6DE219F9758DB254F0D7A4509071A817DB52DF19 (intptr_t ___0_vector, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_arr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_assignToArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_arr' to native representation
	intptr_t* ____1_arr_marshaled = NULL;
	if (___1_arr != NULL)
	{
		____1_arr_marshaled = reinterpret_cast<intptr_t*>((___1_arr)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Mat_assignToArray)(___0_vector, ____1_arr_marshaled);
	#else
	il2cppPInvokeFunc(___0_vector, ____1_arr_marshaled);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::vector_Mat_addref(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_vector_Mat_addref_m76BE58FAE3652452E1A56B8B19FA0711AA2DF5F3 (intptr_t ___0_vector, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "vector_Mat_addref", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(vector_Mat_addref)(___0_vector);
	#else
	il2cppPInvokeFunc(___0_vector);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::stitching_createStitcher(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_stitching_createStitcher_m1BACDE26B3AA7BF1FE57DC5D945E9CA1D912E8A9 (int32_t ___0_try_use_cpu, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_createStitcher", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_createStitcher)(___0_try_use_cpu);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_try_use_cpu);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Ptr_Stitcher_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Ptr_Stitcher_delete_mA415D7E0FFE2405323D7C28633BB510BF1AF8C04 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Ptr_Stitcher_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Ptr_Stitcher_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::stitching_Ptr_Stitcher_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_stitching_Ptr_Stitcher_get_mA649A1536D8446841448986BA295D4FC81AB2850 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Ptr_Stitcher_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Ptr_Stitcher_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::stitching_Stitcher_registrationResol(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_stitching_Stitcher_registrationResol_m18850CC943D7F474502D2F77D04C2BD2A00CD008 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_registrationResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_registrationResol)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setRegistrationResol(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setRegistrationResol_mA76E4712F385CABDD131EC587CEBBEC0D122C208 (intptr_t ___0_obj, double ___1_resolMpx, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setRegistrationResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setRegistrationResol)(___0_obj, ___1_resolMpx);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_resolMpx);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::stitching_Stitcher_seamEstimationResol(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_stitching_Stitcher_seamEstimationResol_mAC4CC89DE06124130E8FD3D7CFA34ACAF64906A6 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_seamEstimationResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_seamEstimationResol)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setSeamEstimationResol(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setSeamEstimationResol_m5335B235B26ECC71D3222C16B6E4AB791F7E9D55 (intptr_t ___0_obj, double ___1_resolMpx, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setSeamEstimationResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setSeamEstimationResol)(___0_obj, ___1_resolMpx);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_resolMpx);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::stitching_Stitcher_compositingResol(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_stitching_Stitcher_compositingResol_mA3D66C8051FEF1DEF51D15E38DAB2811E89A248D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_compositingResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_compositingResol)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setCompositingResol(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setCompositingResol_m4BFB0303E75F9B7FB3BEF046C5776AE5E2FD18DA (intptr_t ___0_obj, double ___1_resolMpx, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setCompositingResol", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setCompositingResol)(___0_obj, ___1_resolMpx);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_resolMpx);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::stitching_Stitcher_panoConfidenceThresh(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_stitching_Stitcher_panoConfidenceThresh_mC3F7FB6495DAF24F79A7FF28E51B7838686C15DC (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_panoConfidenceThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_panoConfidenceThresh)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setPanoConfidenceThresh(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setPanoConfidenceThresh_m010F3C16B70F168E7B385186409CF87F0616C2FE (intptr_t ___0_obj, double ___1_confThresh, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setPanoConfidenceThresh", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setPanoConfidenceThresh)(___0_obj, ___1_confThresh);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_confThresh);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_waveCorrection(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_waveCorrection_m3A50AD6D3E3C1E4465672F7BEDC4E80C1D2B12DB (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_waveCorrection", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_waveCorrection)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setWaveCorrection(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setWaveCorrection_m785909EC308918D8B514972FBAED136A63D77491 (intptr_t ___0_obj, int32_t ___1_flag, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setWaveCorrection", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setWaveCorrection)(___0_obj, ___1_flag);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_flag);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_waveCorrectKind(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_waveCorrectKind_mA31C8CDF2A143DA93F8F9284C907CCC6C30FFE02 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_waveCorrectKind", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_waveCorrectKind)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_setWaveCorrectKind(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_setWaveCorrectKind_mB982A4925076523C29F2C9EF12304B0D62A60E8E (intptr_t ___0_obj, int32_t ___1_kind, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_setWaveCorrectKind", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_setWaveCorrectKind)(___0_obj, ___1_kind);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_kind);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_estimateTransform_InputArray1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_estimateTransform_InputArray1_mA7592D35AAD7A4356643032BD1255BAB6E42C8D9 (intptr_t ___0_obj, intptr_t ___1_images, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_estimateTransform_InputArray1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_estimateTransform_InputArray1)(___0_obj, ___1_images);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_images);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_estimateTransform_InputArray2(System.IntPtr,System.IntPtr,System.IntPtr[],System.Int32,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_estimateTransform_InputArray2_m7289F533D60E0C5256A2C1969838AFA776846A7D (intptr_t ___0_obj, intptr_t ___1_images, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___2_rois, int32_t ___3_roisSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___4_roisSize2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t*, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_estimateTransform_InputArray2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_rois' to native representation
	intptr_t* ____2_rois_marshaled = NULL;
	if (___2_rois != NULL)
	{
		____2_rois_marshaled = reinterpret_cast<intptr_t*>((___2_rois)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_roisSize2' to native representation
	int32_t* ____4_roisSize2_marshaled = NULL;
	if (___4_roisSize2 != NULL)
	{
		____4_roisSize2_marshaled = reinterpret_cast<int32_t*>((___4_roisSize2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_estimateTransform_InputArray2)(___0_obj, ___1_images, ____2_rois_marshaled, ___3_roisSize1, ____4_roisSize2_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_images, ____2_rois_marshaled, ___3_roisSize1, ____4_roisSize2_marshaled);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_estimateTransform_MatArray1(System.IntPtr,System.IntPtr[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_estimateTransform_MatArray1_m38A187762F9E054436FE63E92D86694FC6F656B0 (intptr_t ___0_obj, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_images, int32_t ___2_imagesSize, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_estimateTransform_MatArray1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_images' to native representation
	intptr_t* ____1_images_marshaled = NULL;
	if (___1_images != NULL)
	{
		____1_images_marshaled = reinterpret_cast<intptr_t*>((___1_images)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_estimateTransform_MatArray1)(___0_obj, ____1_images_marshaled, ___2_imagesSize);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_images_marshaled, ___2_imagesSize);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_estimateTransform_MatArray2(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,System.Int32[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_estimateTransform_MatArray2_m9B3088E90B6B0F2B7F66AF84AE71E863C009F2AB (intptr_t ___0_obj, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_images, int32_t ___2_imagesSize, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___3_rois, int32_t ___4_roisSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___5_roisSize2, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_estimateTransform_MatArray2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_images' to native representation
	intptr_t* ____1_images_marshaled = NULL;
	if (___1_images != NULL)
	{
		____1_images_marshaled = reinterpret_cast<intptr_t*>((___1_images)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_rois' to native representation
	intptr_t* ____3_rois_marshaled = NULL;
	if (___3_rois != NULL)
	{
		____3_rois_marshaled = reinterpret_cast<intptr_t*>((___3_rois)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___5_roisSize2' to native representation
	int32_t* ____5_roisSize2_marshaled = NULL;
	if (___5_roisSize2 != NULL)
	{
		____5_roisSize2_marshaled = reinterpret_cast<int32_t*>((___5_roisSize2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_estimateTransform_MatArray2)(___0_obj, ____1_images_marshaled, ___2_imagesSize, ____3_rois_marshaled, ___4_roisSize1, ____5_roisSize2_marshaled);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_images_marshaled, ___2_imagesSize, ____3_rois_marshaled, ___4_roisSize1, ____5_roisSize2_marshaled);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_composePanorama1(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_composePanorama1_m566DABFF7B15B21D99A6B9B0C9B3C90F5C781987 (intptr_t ___0_obj, intptr_t ___1_pano, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_composePanorama1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_composePanorama1)(___0_obj, ___1_pano);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_pano);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_composePanorama2_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_composePanorama2_InputArray_m5E594A951FA0FEFC2D3393D26103964A1482417C (intptr_t ___0_obj, intptr_t ___1_images, intptr_t ___2_pano, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_composePanorama2_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_composePanorama2_InputArray)(___0_obj, ___1_images, ___2_pano);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_images, ___2_pano);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_composePanorama2_MatArray(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_composePanorama2_MatArray_mE9CAA7075DD6F5E254C6DC90D1AED0D332B2557B (intptr_t ___0_obj, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_images, int32_t ___2_imagesSize, intptr_t ___3_pano, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_composePanorama2_MatArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_images' to native representation
	intptr_t* ____1_images_marshaled = NULL;
	if (___1_images != NULL)
	{
		____1_images_marshaled = reinterpret_cast<intptr_t*>((___1_images)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_composePanorama2_MatArray)(___0_obj, ____1_images_marshaled, ___2_imagesSize, ___3_pano);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_images_marshaled, ___2_imagesSize, ___3_pano);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_stitch1_InputArray(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_stitch1_InputArray_m9EADEB7CDA99CCD2DC8477BEB781678C84F4F435 (intptr_t ___0_obj, intptr_t ___1_images, intptr_t ___2_pano, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_stitch1_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_stitch1_InputArray)(___0_obj, ___1_images, ___2_pano);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_images, ___2_pano);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_stitch1_MatArray(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_stitch1_MatArray_m1E6B419F27BC9941FDC40264725AF92A89E6CF3F (intptr_t ___0_obj, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_images, int32_t ___2_imagesSize, intptr_t ___3_pano, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_stitch1_MatArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_images' to native representation
	intptr_t* ____1_images_marshaled = NULL;
	if (___1_images != NULL)
	{
		____1_images_marshaled = reinterpret_cast<intptr_t*>((___1_images)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_stitch1_MatArray)(___0_obj, ____1_images_marshaled, ___2_imagesSize, ___3_pano);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_images_marshaled, ___2_imagesSize, ___3_pano);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_stitch2_InputArray(System.IntPtr,System.IntPtr,System.IntPtr[],System.Int32,System.Int32[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_stitch2_InputArray_mE4B1034EFEEB00583AAF90310770EFF31BC65E1C (intptr_t ___0_obj, intptr_t ___1_images, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___2_rois, int32_t ___3_roisSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___4_roisSize2, intptr_t ___5_pano, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t*, int32_t, int32_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_stitch2_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_rois' to native representation
	intptr_t* ____2_rois_marshaled = NULL;
	if (___2_rois != NULL)
	{
		____2_rois_marshaled = reinterpret_cast<intptr_t*>((___2_rois)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_roisSize2' to native representation
	int32_t* ____4_roisSize2_marshaled = NULL;
	if (___4_roisSize2 != NULL)
	{
		____4_roisSize2_marshaled = reinterpret_cast<int32_t*>((___4_roisSize2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_stitch2_InputArray)(___0_obj, ___1_images, ____2_rois_marshaled, ___3_roisSize1, ____4_roisSize2_marshaled, ___5_pano);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_images, ____2_rois_marshaled, ___3_roisSize1, ____4_roisSize2_marshaled, ___5_pano);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::stitching_Stitcher_stitch2_MatArray(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr[],System.Int32,System.Int32[],System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_stitching_Stitcher_stitch2_MatArray_m81C70A3BDB7A8FFB9DCEBA99AF43C94131139F29 (intptr_t ___0_obj, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_images, int32_t ___2_imagesSize, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___3_rois, int32_t ___4_roisSize1, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___5_roisSize2, intptr_t ___6_pano, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t*, int32_t, int32_t*, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t) + sizeof(void*) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_stitch2_MatArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_images' to native representation
	intptr_t* ____1_images_marshaled = NULL;
	if (___1_images != NULL)
	{
		____1_images_marshaled = reinterpret_cast<intptr_t*>((___1_images)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___3_rois' to native representation
	intptr_t* ____3_rois_marshaled = NULL;
	if (___3_rois != NULL)
	{
		____3_rois_marshaled = reinterpret_cast<intptr_t*>((___3_rois)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___5_roisSize2' to native representation
	int32_t* ____5_roisSize2_marshaled = NULL;
	if (___5_roisSize2 != NULL)
	{
		____5_roisSize2_marshaled = reinterpret_cast<int32_t*>((___5_roisSize2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_stitch2_MatArray)(___0_obj, ____1_images_marshaled, ___2_imagesSize, ____3_rois_marshaled, ___4_roisSize1, ____5_roisSize2_marshaled, ___6_pano);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ____1_images_marshaled, ___2_imagesSize, ____3_rois_marshaled, ___4_roisSize1, ____5_roisSize2_marshaled, ___6_pano);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::stitching_Stitcher_component(System.IntPtr,System.IntPtr&,System.Int32&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_stitching_Stitcher_component_m621FED56441BE31F98F61A17AFAEE9CBE0217107 (intptr_t ___0_obj, intptr_t* ___1_pointer, int32_t* ___2_length, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_component", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(stitching_Stitcher_component)(___0_obj, ___1_pointer, ___2_length);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_pointer, ___2_length);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::stitching_Stitcher_workScale(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_stitching_Stitcher_workScale_mDEDBC94CC407E8ECFA3C8E117D6212F1322BECEB (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "stitching_Stitcher_workScale", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(stitching_Stitcher_workScale)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::superres_FrameSource_nextFrame(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_FrameSource_nextFrame_m40929605156D3628685CE748570FFA5FCD7EEFA8 (intptr_t ___0_obj, intptr_t ___1_frame, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_FrameSource_nextFrame", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_FrameSource_nextFrame)(___0_obj, ___1_frame);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_frame);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_FrameSource_reset(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_FrameSource_reset_m5A6E4DBD0FCC45E1DE5B259AEECBEF7C09974F9B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_FrameSource_reset", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_FrameSource_reset)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createFrameSource_Empty()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createFrameSource_Empty_m4C18DEE57EA26AE1426D5E9302C663A6B3CD8937 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createFrameSource_Empty", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createFrameSource_Empty)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createFrameSource_Video(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createFrameSource_Video_mC0BB7C26D5028A5C41F9FCB58F3063F69D17F0EE (String_t* ___0_fileName, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createFrameSource_Video", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_fileName' to native representation
	char* ____0_fileName_marshaled = NULL;
	____0_fileName_marshaled = il2cpp_codegen_marshal_string(___0_fileName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createFrameSource_Video)(____0_fileName_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_fileName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_fileName' native representation
	il2cpp_codegen_marshal_free(____0_fileName_marshaled);
	____0_fileName_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createFrameSource_Video_CUDA(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createFrameSource_Video_CUDA_m18B584605B6EB282385ED9DA9E5FF5553C077403 (String_t* ___0_fileName, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createFrameSource_Video_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_fileName' to native representation
	char* ____0_fileName_marshaled = NULL;
	____0_fileName_marshaled = il2cpp_codegen_marshal_string(___0_fileName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createFrameSource_Video_CUDA)(____0_fileName_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_fileName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_fileName' native representation
	il2cpp_codegen_marshal_free(____0_fileName_marshaled);
	____0_fileName_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createFrameSource_Camera(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createFrameSource_Camera_mD39C2F67285E7F71A58BADCC04F8744157179999 (int32_t ___0_deviceId, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createFrameSource_Camera", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createFrameSource_Camera)(___0_deviceId);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_deviceId);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_Ptr_FrameSource_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_Ptr_FrameSource_get_mB0AA57D573F4B7E696CE0F58942433CEC270CDE8 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_FrameSource_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_Ptr_FrameSource_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::superres_Ptr_FrameSource_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_Ptr_FrameSource_delete_m495ABEFA1CD10BF64C3918FF1F302D4BAFAAE9FB (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_FrameSource_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_Ptr_FrameSource_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_SuperResolution_setInput(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_SuperResolution_setInput_m4E3D95C8621864E65FD0BBFBDBC132535173EFF2 (intptr_t ___0_obj, intptr_t ___1_frameSource, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_SuperResolution_setInput", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_SuperResolution_setInput)(___0_obj, ___1_frameSource);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_frameSource);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_SuperResolution_nextFrame(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_SuperResolution_nextFrame_m8E3B39C609D481B275D0348816A5354F1EC4C976 (intptr_t ___0_obj, intptr_t ___1_frame, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_SuperResolution_nextFrame", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_SuperResolution_nextFrame)(___0_obj, ___1_frame);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_frame);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_SuperResolution_reset(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_SuperResolution_reset_mB837D4FD6E605AE08E6271077E3AD7847958F441 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_SuperResolution_reset", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_SuperResolution_reset)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_SuperResolution_collectGarbage(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_SuperResolution_collectGarbage_m2F045A1D81EE85AA0E6FC2A15BD85105F979E401 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_SuperResolution_collectGarbage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_SuperResolution_collectGarbage)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createSuperResolution_BTVL1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createSuperResolution_BTVL1_m7F95C4321AFBCD6EDF792EF4414EBE8BB76A7963 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createSuperResolution_BTVL1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createSuperResolution_BTVL1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createSuperResolution_BTVL1_CUDA()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createSuperResolution_BTVL1_CUDA_m1095D6D79E5906D53034F24476C0FC38682BF4BD (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createSuperResolution_BTVL1_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createSuperResolution_BTVL1_CUDA)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_Ptr_SuperResolution_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_Ptr_SuperResolution_get_m86489FA8B0ED3E4E9D38C92F5F05A909784436BD (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_SuperResolution_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_Ptr_SuperResolution_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::superres_Ptr_SuperResolution_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_Ptr_SuperResolution_delete_mC24CA72C8F1B30CD4B4382E29EE81514481AD91B (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_SuperResolution_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_Ptr_SuperResolution_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_DenseOpticalFlowExt_calc(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_DenseOpticalFlowExt_calc_mDB5490B172C8CECF67B5C6EEBAED7FAC7BB90C6F (intptr_t ___0_obj, intptr_t ___1_frame0, intptr_t ___2_frame1, intptr_t ___3_flow1, intptr_t ___4_flow2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_DenseOpticalFlowExt_calc", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_DenseOpticalFlowExt_calc)(___0_obj, ___1_frame0, ___2_frame1, ___3_flow1, ___4_flow2);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_frame0, ___2_frame1, ___3_flow1, ___4_flow2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::superres_DenseOpticalFlowExt_collectGarbage(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_DenseOpticalFlowExt_collectGarbage_m4BA69C14381A2571C267410D9EB2BBDA87FBDF66 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_DenseOpticalFlowExt_collectGarbage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_DenseOpticalFlowExt_collectGarbage)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::superres_Ptr_DenseOpticalFlowExt_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_Ptr_DenseOpticalFlowExt_get_mCDD06DE6F6E0DEF23AF86894A1C8FA5461FAF64C (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_DenseOpticalFlowExt_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_Ptr_DenseOpticalFlowExt_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::superres_Ptr_DenseOpticalFlowExt_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_superres_Ptr_DenseOpticalFlowExt_delete_m8DB8A9B439DD32A30C8FD8FA77D0C0DD6F5E6D56 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_Ptr_DenseOpticalFlowExt_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(superres_Ptr_DenseOpticalFlowExt_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_Farneback()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_Farneback_mB62D0A345AC7680479D0EE99C8155F8102CEE554 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_Farneback", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_Farneback)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_Farneback_CUDA()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_Farneback_CUDA_m3C9D503B705FD2FD170FBD880BBE5AC8ADC8F9E6 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_Farneback_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_Farneback_CUDA)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_DualTVL1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_DualTVL1_m766678ADB1A763DE000BF41AB045E6D69019C29F (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_DualTVL1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_DualTVL1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_DualTVL1_CUDA()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_DualTVL1_CUDA_m6B4C9A9F1619D5F36159270889D958269040CA96 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_DualTVL1_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_DualTVL1_CUDA)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_Brox_CUDA()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_Brox_CUDA_m1919C6DC7F29FFFFF73F785FBAA1FC9F219AB5AB (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_Brox_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_Brox_CUDA)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::superres_createOptFlow_PyrLK_CUDA()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_superres_createOptFlow_PyrLK_CUDA_mABD27E87642C16118BCE959673945A7605BCB713 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "superres_createOptFlow_PyrLK_CUDA", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(superres_createOptFlow_PyrLK_CUDA)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_computeNMChannels(System.IntPtr,System.IntPtr&,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_computeNMChannels_m14BEE1BF43AFB9E577AB3F317079A89ACCD48466 (intptr_t ___0_img, intptr_t* ___1_channels, int32_t ___2_mode, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_computeNMChannels", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_computeNMChannels)(___0_img, ___1_channels, ___2_mode);
	#else
	il2cppPInvokeFunc(___0_img, ___1_channels, ___2_mode);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_MSERsToERStats(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_MSERsToERStats_mA947001218F2A33FFF7D302BBB7EA05AA3870FEA (intptr_t ___0_image, intptr_t ___1_contours, intptr_t ___2_region, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_MSERsToERStats", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_MSERsToERStats)(___0_image, ___1_contours, ___2_region);
	#else
	il2cppPInvokeFunc(___0_image, ___1_contours, ___2_region);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_createOCRHMMTransitionsTable(System.String,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_createOCRHMMTransitionsTable_m261AD5A70D0345759A4EFC220BD8D37FC74B5C24 (String_t* ___0_vocabulary, intptr_t ___1_lexicon, intptr_t ___2_transition_probabilities_table, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (char*, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_createOCRHMMTransitionsTable", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_vocabulary' to native representation
	char* ____0_vocabulary_marshaled = NULL;
	____0_vocabulary_marshaled = il2cpp_codegen_marshal_string(___0_vocabulary);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_createOCRHMMTransitionsTable)(____0_vocabulary_marshaled, ___1_lexicon, ___2_transition_probabilities_table);
	#else
	il2cppPInvokeFunc(____0_vocabulary_marshaled, ___1_lexicon, ___2_transition_probabilities_table);
	#endif

	// Marshaling cleanup of parameter '___0_vocabulary' native representation
	il2cpp_codegen_marshal_free(____0_vocabulary_marshaled);
	____0_vocabulary_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::text_detectRegions(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_detectRegions_m481DE136763E81B51EB05368B6AC73447EE947E1 (intptr_t ___0_image, intptr_t ___1_er_filter1, intptr_t ___2_er_filter2, intptr_t ___3_regions, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_detectRegions", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_detectRegions)(___0_image, ___1_er_filter1, ___2_er_filter2, ___3_regions);
	#else
	il2cppPInvokeFunc(___0_image, ___1_er_filter1, ___2_er_filter2, ___3_regions);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_erGrouping1(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_erGrouping1_m5ADE9AFC35D20B888B69DF17D4214FFA744CC849 (intptr_t ___0_img, intptr_t ___1_channels, intptr_t ___2_regions, intptr_t ___3_groups, intptr_t ___4_groups_rects, int32_t ___5_method, String_t* ___6_filename, float ___7_minProbablity, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t, char*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(char*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_erGrouping1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___6_filename' to native representation
	char* ____6_filename_marshaled = NULL;
	____6_filename_marshaled = il2cpp_codegen_marshal_string(___6_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_erGrouping1)(___0_img, ___1_channels, ___2_regions, ___3_groups, ___4_groups_rects, ___5_method, ____6_filename_marshaled, ___7_minProbablity);
	#else
	il2cppPInvokeFunc(___0_img, ___1_channels, ___2_regions, ___3_groups, ___4_groups_rects, ___5_method, ____6_filename_marshaled, ___7_minProbablity);
	#endif

	// Marshaling cleanup of parameter '___6_filename' native representation
	il2cpp_codegen_marshal_free(____6_filename_marshaled);
	____6_filename_marshaled = NULL;

}
// System.Void OpenCvSharp.NativeMethods::text_erGrouping2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32,System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_erGrouping2_m4F276A90CB8775F35C58D358F10F617F16003E3D (intptr_t ___0_image, intptr_t ___1_channel, intptr_t ___2_regions, intptr_t ___3_groups_rects, int32_t ___4_method, String_t* ___5_filename, float ___6_minProbablity, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, int32_t, char*, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(char*) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_erGrouping2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___5_filename' to native representation
	char* ____5_filename_marshaled = NULL;
	____5_filename_marshaled = il2cpp_codegen_marshal_string(___5_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_erGrouping2)(___0_image, ___1_channel, ___2_regions, ___3_groups_rects, ___4_method, ____5_filename_marshaled, ___6_minProbablity);
	#else
	il2cppPInvokeFunc(___0_image, ___1_channel, ___2_regions, ___3_groups_rects, ___4_method, ____5_filename_marshaled, ___6_minProbablity);
	#endif

	// Marshaling cleanup of parameter '___5_filename' native representation
	il2cpp_codegen_marshal_free(____5_filename_marshaled);
	____5_filename_marshaled = NULL;

}
// System.IntPtr OpenCvSharp.NativeMethods::text_ERStat_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_ERStat_new1_m03F83D960D198E79FBDC817EE876BD9970EB68BC (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERStat_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_ERStat_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::text_ERStat_new2(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_ERStat_new2_mEBFBC0801336420F29307188D8896DD97A8B3E28 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERStat_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_ERStat_new2)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_ERStat_getRect(System.IntPtr,OpenCvSharp.Rect&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERStat_getRect_m2E2E2E0C0553AADA3DFF4B85377F5A1DBC8DEECD (intptr_t ___0_obj, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___1_output, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERStat_getRect", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERStat_getRect)(___0_obj, ___1_output);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_output);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::text_ERStat_getProbability(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_text_ERStat_getProbability_m8313239792D54D1BF2AA3D1F3371AEC85CD0E06E (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERStat_getProbability", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(text_ERStat_getProbability)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_ERStat_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERStat_delete_m9050A364FA4B690A1A90599CD452D934A36C088F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERStat_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERStat_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::text_loadOCRHMMClassifierCNN(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_loadOCRHMMClassifierCNN_m368795630B1D9359505CF83856793DCE4CE55882 (String_t* ___0_filename, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_loadOCRHMMClassifierCNN", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_filename' to native representation
	char* ____0_filename_marshaled = NULL;
	____0_filename_marshaled = il2cpp_codegen_marshal_string(___0_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_loadOCRHMMClassifierCNN)(____0_filename_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_filename_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_filename' native representation
	il2cpp_codegen_marshal_free(____0_filename_marshaled);
	____0_filename_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::text_loadOCRHMMClassifierNM(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_loadOCRHMMClassifierNM_mB9DC3FDD1A54AB2C199F75E5554BA8B31163BCC7 (String_t* ___0_filename, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_loadOCRHMMClassifierNM", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_filename' to native representation
	char* ____0_filename_marshaled = NULL;
	____0_filename_marshaled = il2cpp_codegen_marshal_string(___0_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_loadOCRHMMClassifierNM)(____0_filename_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_filename_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_filename' native representation
	il2cpp_codegen_marshal_free(____0_filename_marshaled);
	____0_filename_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_OCRHMMDecoder_ClassifierCallback_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRHMMDecoder_ClassifierCallback_delete_m1162BA1CF6E69EC43B318DC7431661092D04BB5E (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRHMMDecoder_ClassifierCallback_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRHMMDecoder_ClassifierCallback_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_OCRHMMDecoder_ClassifierCallback_eval(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRHMMDecoder_ClassifierCallback_eval_mE020F79F67C690FAD6C25F44AD6BEC993A297D1D (intptr_t ___0_obj, intptr_t ___1_image, intptr_t ___2_vecIntClass, intptr_t ___3_vecDoubleConfidence, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRHMMDecoder_ClassifierCallback_eval", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRHMMDecoder_ClassifierCallback_eval)(___0_obj, ___1_image, ___2_vecIntClass, ___3_vecDoubleConfidence);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image, ___2_vecIntClass, ___3_vecDoubleConfidence);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::text_OCRHMMDecoder_create(System.IntPtr,System.String,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_OCRHMMDecoder_create_m0DDB1D8A314323586F7F3E08595C0C859FA69A4B (intptr_t ___0_classifier, String_t* ___1_vocabulary, intptr_t ___2_transition_probabilities, intptr_t ___3_emission_probabilities, int32_t ___4_mode, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRHMMDecoder_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_vocabulary' to native representation
	char* ____1_vocabulary_marshaled = NULL;
	____1_vocabulary_marshaled = il2cpp_codegen_marshal_string(___1_vocabulary);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_OCRHMMDecoder_create)(___0_classifier, ____1_vocabulary_marshaled, ___2_transition_probabilities, ___3_emission_probabilities, ___4_mode);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_classifier, ____1_vocabulary_marshaled, ___2_transition_probabilities, ___3_emission_probabilities, ___4_mode);
	#endif

	// Marshaling cleanup of parameter '___1_vocabulary' native representation
	il2cpp_codegen_marshal_free(____1_vocabulary_marshaled);
	____1_vocabulary_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_OCRHMMDecoder_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRHMMDecoder_delete_mB3C8C03F320126DA2505C742A0B87B35DD6B2A9F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRHMMDecoder_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRHMMDecoder_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_OCRHMMDecoder_run(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRHMMDecoder_run_m3F00B8C7348EFE5E5AC29180560B11440621127C (intptr_t ___0_decoder, intptr_t ___1_image, intptr_t ___2_rects, intptr_t ___3_texts, intptr_t ___4_confidences, int32_t ___5_component_level, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRHMMDecoder_run", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRHMMDecoder_run)(___0_decoder, ___1_image, ___2_rects, ___3_texts, ___4_confidences, ___5_component_level);
	#else
	il2cppPInvokeFunc(___0_decoder, ___1_image, ___2_rects, ___3_texts, ___4_confidences, ___5_component_level);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::text_loadOCRBeamSearchClassifierCNN(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_loadOCRBeamSearchClassifierCNN_m4F65160DFB6A8972F12E7279B50CBA0977665235 (String_t* ___0_fileName, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_loadOCRBeamSearchClassifierCNN", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_fileName' to native representation
	char* ____0_fileName_marshaled = NULL;
	____0_fileName_marshaled = il2cpp_codegen_marshal_string(___0_fileName);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_loadOCRBeamSearchClassifierCNN)(____0_fileName_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_fileName_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_fileName' native representation
	il2cpp_codegen_marshal_free(____0_fileName_marshaled);
	____0_fileName_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_ClassifierCallback_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRBeamSearchDecoder_ClassifierCallback_delete_m80A859976AF23B02F9E079F0E71B0B4A883D6AFD (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_ClassifierCallback_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_ClassifierCallback_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_ClassifierCallback_eval(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRBeamSearchDecoder_ClassifierCallback_eval_m201B4362FE8035D321A04B84ECB9825780EA354D (intptr_t ___0_obj, intptr_t ___1_input, intptr_t ___2_recognition_probabilities, intptr_t ___3_oversegmentation, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_ClassifierCallback_eval", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_ClassifierCallback_eval)(___0_obj, ___1_input, ___2_recognition_probabilities, ___3_oversegmentation);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_input, ___2_recognition_probabilities, ___3_oversegmentation);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_create(System.IntPtr,System.String,System.IntPtr,System.IntPtr,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_OCRBeamSearchDecoder_create_mA07D250AF1AFC1251F1FB19E89B4887A8F71D4F6 (intptr_t ___0_classifier, String_t* ___1_vocabulary, intptr_t ___2_transition_probabilities_table, intptr_t ___3_emission_probabilities_table, int32_t ___4_mode, int32_t ___5_beam_size, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, char*, intptr_t, intptr_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(char*) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_vocabulary' to native representation
	char* ____1_vocabulary_marshaled = NULL;
	____1_vocabulary_marshaled = il2cpp_codegen_marshal_string(___1_vocabulary);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_create)(___0_classifier, ____1_vocabulary_marshaled, ___2_transition_probabilities_table, ___3_emission_probabilities_table, ___4_mode, ___5_beam_size);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_classifier, ____1_vocabulary_marshaled, ___2_transition_probabilities_table, ___3_emission_probabilities_table, ___4_mode, ___5_beam_size);
	#endif

	// Marshaling cleanup of parameter '___1_vocabulary' native representation
	il2cpp_codegen_marshal_free(____1_vocabulary_marshaled);
	____1_vocabulary_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRBeamSearchDecoder_delete_mB58359EE702837D90EAB3D23E8A4E04B6DD9A308 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_run(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRBeamSearchDecoder_run_m2642F96A72B6755BA828A32B63655BA2DE92AAD3 (intptr_t ___0_decoder, intptr_t ___1_image, intptr_t ___2_rects, intptr_t ___3_texts, intptr_t ___4_confidences, int32_t ___5_component_level, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_run", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_run)(___0_decoder, ___1_image, ___2_rects, ___3_texts, ___4_confidences, ___5_component_level);
	#else
	il2cppPInvokeFunc(___0_decoder, ___1_image, ___2_rects, ___3_texts, ___4_confidences, ___5_component_level);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_OCRBeamSearchDecoder_run2(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_OCRBeamSearchDecoder_run2_mF0313D39393807C6AE5C8DE3B5D0A02BD82296BD (intptr_t ___0_decoder, intptr_t ___1_image, intptr_t ___2_mask, intptr_t ___3_rects, intptr_t ___4_texts, intptr_t ___5_confidences, int32_t ___6_component_level, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_OCRBeamSearchDecoder_run2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_OCRBeamSearchDecoder_run2)(___0_decoder, ___1_image, ___2_mask, ___3_rects, ___4_texts, ___5_confidences, ___6_component_level);
	#else
	il2cppPInvokeFunc(___0_decoder, ___1_image, ___2_mask, ___3_rects, ___4_texts, ___5_confidences, ___6_component_level);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::text_ERFilter_Callback_eval(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_text_ERFilter_Callback_eval_m21966BC73B458A4056DDA7818DB6D27DA441B5E4 (intptr_t ___0_obj, intptr_t ___1_stat, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_Callback_eval", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(text_ERFilter_Callback_eval)(___0_obj, ___1_stat);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj, ___1_stat);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_Callback_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_Callback_delete_m51C11C54E7548463F7A992D2A2FC6AB30BF78F9C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_Callback_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_Callback_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::text_loadClassifierNM1(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_loadClassifierNM1_m7E4A01CC7AE4B850E5DF1FD4639D742979F75AFF (String_t* ___0_filename, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_loadClassifierNM1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_filename' to native representation
	char* ____0_filename_marshaled = NULL;
	____0_filename_marshaled = il2cpp_codegen_marshal_string(___0_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_loadClassifierNM1)(____0_filename_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_filename_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_filename' native representation
	il2cpp_codegen_marshal_free(____0_filename_marshaled);
	____0_filename_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::text_loadClassifierNM2(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_loadClassifierNM2_mDC67640D8A4A3D6D51294528646092F33B04D3E9 (String_t* ___0_filename, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_loadClassifierNM2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_filename' to native representation
	char* ____0_filename_marshaled = NULL;
	____0_filename_marshaled = il2cpp_codegen_marshal_string(___0_filename);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_loadClassifierNM2)(____0_filename_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_filename_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_filename' native representation
	il2cpp_codegen_marshal_free(____0_filename_marshaled);
	____0_filename_marshaled = NULL;

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::text_createERFilterNM1(System.IntPtr,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_createERFilterNM1_m1028527071DF1FEC0BBB3EB436675FDE5CA53468 (intptr_t ___0_cb, int32_t ___1_thresholdDelta, float ___2_minArea, float ___3_maxArea, float ___4_minProbability, bool ___5_nonMaxSuppression, float ___6_minProbabilityDiff, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, int32_t, float, float, float, uint8_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(float) + sizeof(float) + sizeof(float) + 1 + 3 + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_createERFilterNM1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_createERFilterNM1)(___0_cb, ___1_thresholdDelta, ___2_minArea, ___3_maxArea, ___4_minProbability, static_cast<uint8_t>(___5_nonMaxSuppression), ___6_minProbabilityDiff);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_cb, ___1_thresholdDelta, ___2_minArea, ___3_maxArea, ___4_minProbability, static_cast<uint8_t>(___5_nonMaxSuppression), ___6_minProbabilityDiff);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::text_createERFilterNM2(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_text_createERFilterNM2_mFE0F3B9C19D0C9FE803E327A41AE36E61936F1FC (intptr_t ___0_cb, float ___1_minProbability, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_createERFilterNM2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(text_createERFilterNM2)(___0_cb, ___1_minProbability);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_cb, ___1_minProbability);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_run(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_run_m3EB2F969BF76092765F8A2F780F919FFEB0765D1 (intptr_t ___0_obj, intptr_t ___1_image, intptr_t ___2_regions, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_run", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_run)(___0_obj, ___1_image, ___2_regions);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image, ___2_regions);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setCallback(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setCallback_mA8085D8A0D7395F053EC694A695AC5ADD324A7AF (intptr_t ___0_obj, intptr_t ___1_cb, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setCallback", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setCallback)(___0_obj, ___1_cb);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_cb);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setThresholdDelta(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setThresholdDelta_mDF897DA1677C939942BB343B9D7C9D7EDE492280 (intptr_t ___0_obj, int32_t ___1_thresholdDelta, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setThresholdDelta", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setThresholdDelta)(___0_obj, ___1_thresholdDelta);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_thresholdDelta);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setMinArea(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setMinArea_m31F512510AA0392AAD73C621D3022A2BE6EF3F14 (intptr_t ___0_obj, float ___1_minArea, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setMinArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setMinArea)(___0_obj, ___1_minArea);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_minArea);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setMaxArea(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setMaxArea_mC6AB524AF28B081129086F80FC83A4E3BC10F23F (intptr_t ___0_obj, float ___1_maxArea, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setMaxArea", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setMaxArea)(___0_obj, ___1_maxArea);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_maxArea);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setMinProbability(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setMinProbability_mAF36F25B0CD5590E573B7F0B79FDDB165F428FD4 (intptr_t ___0_obj, float ___1_minProbability, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setMinProbability", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setMinProbability)(___0_obj, ___1_minProbability);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_minProbability);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setMinProbabilityDiff(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setMinProbabilityDiff_m78CA7FD2AFD732E9634F6D6F899FE9CEE9832E91 (intptr_t ___0_obj, float ___1_minProbabilityDiff, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setMinProbabilityDiff", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setMinProbabilityDiff)(___0_obj, ___1_minProbabilityDiff);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_minProbabilityDiff);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::text_ERFilter_setNonMaxSuppression(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_text_ERFilter_setNonMaxSuppression_mBE201C82E5F1C1BB3D1043C266EFAEF231C76BC7 (intptr_t ___0_obj, bool ___1_nonMaxSuppression, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + 4;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_setNonMaxSuppression", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(text_ERFilter_setNonMaxSuppression)(___0_obj, static_cast<int32_t>(___1_nonMaxSuppression));
	#else
	il2cppPInvokeFunc(___0_obj, static_cast<int32_t>(___1_nonMaxSuppression));
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::text_ERFilter_getNumRejected(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_text_ERFilter_getNumRejected_mF2591C791003A576F6B707AA7B6AC7D1DF223B4C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "text_ERFilter_getNumRejected", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(text_ERFilter_getNumRejected)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::tracking_Tracker_create(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_tracking_Tracker_create_mA1A7EB637E05C737B3A2ABBA58DE0C8E1F313F5A (String_t* ___0_trackerType, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (char*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(char*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "tracking_Tracker_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_trackerType' to native representation
	char* ____0_trackerType_marshaled = NULL;
	____0_trackerType_marshaled = il2cpp_codegen_marshal_string(___0_trackerType);

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(tracking_Tracker_create)(____0_trackerType_marshaled);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(____0_trackerType_marshaled);
	#endif

	// Marshaling cleanup of parameter '___0_trackerType' native representation
	il2cpp_codegen_marshal_free(____0_trackerType_marshaled);
	____0_trackerType_marshaled = NULL;

	return returnValue;
}
// System.Boolean OpenCvSharp.NativeMethods::tracking_Tracker_init(System.IntPtr,System.IntPtr,OpenCvSharp.Rect2d)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_tracking_Tracker_init_m04717CAC6DA53573CE3365F16044CFD8F8D5B11F (intptr_t ___0_obj, intptr_t ___1_image, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133 ___2_boundingBox, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "tracking_Tracker_init", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(tracking_Tracker_init)(___0_obj, ___1_image, ___2_boundingBox);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_image, ___2_boundingBox);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Boolean OpenCvSharp.NativeMethods::tracking_Tracker_update(System.IntPtr,System.IntPtr,OpenCvSharp.Rect2d&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool NativeMethods_tracking_Tracker_update_mBEDD6C2FDB20FC69E778CEA9F70AD772169127D7 (intptr_t ___0_obj, intptr_t ___1_image, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133* ___2_boundingBox, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Rect2d_t60C5C76460861465B7DFAC970A02D626302D4133*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "tracking_Tracker_update", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(tracking_Tracker_update)(___0_obj, ___1_image, ___2_boundingBox);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_image, ___2_boundingBox);
	#endif

	return static_cast<bool>(returnValue);
}
// System.Void OpenCvSharp.NativeMethods::tracking_Ptr_Tracker_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_tracking_Ptr_Tracker_delete_m8D31910D26E46DCF57E11B0B75DF95B6A19EF04C (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "tracking_Ptr_Tracker_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(tracking_Ptr_Tracker_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::tracking_Ptr_Tracker_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_tracking_Ptr_Tracker_get_mE985A923CD254191E8B9FFB46C2468CEE7EBD30D (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "tracking_Ptr_Tracker_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, true);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(tracking_Ptr_Tracker_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_BriefDescriptorExtractor_create(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_BriefDescriptorExtractor_create_m6779B0828F97B2BE9F6860BDBB851020FAFC4260 (int32_t ___0_bytes, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_BriefDescriptorExtractor_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_BriefDescriptorExtractor_create)(___0_bytes);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_bytes);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_Ptr_BriefDescriptorExtractor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_Ptr_BriefDescriptorExtractor_delete_m846861BEA21498A4E22418B82EE9FAA07B698FB2 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_BriefDescriptorExtractor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_BriefDescriptorExtractor_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_BriefDescriptorExtractor_read(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_BriefDescriptorExtractor_read_mD6EA5845BFB9924E634030357563D935326C4263 (intptr_t ___0_obj, intptr_t ___1_fn, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_BriefDescriptorExtractor_read", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_BriefDescriptorExtractor_read)(___0_obj, ___1_fn);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_fn);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_BriefDescriptorExtractor_write(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_BriefDescriptorExtractor_write_mC4E42DCB6937FD915B4C0C539125B05D6F5A0C88 (intptr_t ___0_obj, intptr_t ___1_fs, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_BriefDescriptorExtractor_write", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_BriefDescriptorExtractor_write)(___0_obj, ___1_fs);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_fs);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_BriefDescriptorExtractor_descriptorSize(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_BriefDescriptorExtractor_descriptorSize_m4F08A8932A3E886F1BFC01DE1D813E7256DA08D7 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_BriefDescriptorExtractor_descriptorSize", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_BriefDescriptorExtractor_descriptorSize)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_BriefDescriptorExtractor_descriptorType(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_BriefDescriptorExtractor_descriptorType_m20DD3058A0058185B11DBCFF157F253A6745A814 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_BriefDescriptorExtractor_descriptorType", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_BriefDescriptorExtractor_descriptorType)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_Ptr_BriefDescriptorExtractor_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_Ptr_BriefDescriptorExtractor_get_m239CFAC62CC1F1BE740A16E63352599AA428D2E4 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_BriefDescriptorExtractor_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_BriefDescriptorExtractor_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_FREAK_create(System.Int32,System.Int32,System.Single,System.Int32,System.Int32[],System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_FREAK_create_m1B7AA861ACB0A4E292070E0BCB55C1158EEF4EBA (int32_t ___0_orientationNormalized, int32_t ___1_scaleNormalized, float ___2_patternScale, int32_t ___3_nOctaves, Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C* ___4_selectedPairs, int32_t ___5_selectedPairsLength, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, float, int32_t, int32_t*, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(void*) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_FREAK_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___4_selectedPairs' to native representation
	int32_t* ____4_selectedPairs_marshaled = NULL;
	if (___4_selectedPairs != NULL)
	{
		____4_selectedPairs_marshaled = reinterpret_cast<int32_t*>((___4_selectedPairs)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_FREAK_create)(___0_orientationNormalized, ___1_scaleNormalized, ___2_patternScale, ___3_nOctaves, ____4_selectedPairs_marshaled, ___5_selectedPairsLength);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_orientationNormalized, ___1_scaleNormalized, ___2_patternScale, ___3_nOctaves, ____4_selectedPairs_marshaled, ___5_selectedPairsLength);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_Ptr_FREAK_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_Ptr_FREAK_delete_m729A02EBAD90A8039E5AFC625E045007D5B3C5A4 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_FREAK_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_FREAK_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_Ptr_FREAK_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_Ptr_FREAK_get_mBC56381CFABBD1B0ACAA959B2BAF1C5F91C7AC3F (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_FREAK_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_FREAK_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_StarDetector_create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_StarDetector_create_m0246E41CDADD8AF9AE3651D398285F2899630256 (int32_t ___0_maxSize, int32_t ___1_responseThreshold, int32_t ___2_lineThresholdProjected, int32_t ___3_lineThresholdBinarized, int32_t ___4_suppressNonmaxSize, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_StarDetector_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_StarDetector_create)(___0_maxSize, ___1_responseThreshold, ___2_lineThresholdProjected, ___3_lineThresholdBinarized, ___4_suppressNonmaxSize);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_maxSize, ___1_responseThreshold, ___2_lineThresholdProjected, ___3_lineThresholdBinarized, ___4_suppressNonmaxSize);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_Ptr_StarDetector_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_Ptr_StarDetector_delete_m4D296DD66E2C49733D427D2458B070AF97C05F5A (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_StarDetector_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_StarDetector_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_Ptr_StarDetector_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_Ptr_StarDetector_get_m55524E1011B2AB4613F5A4396235A4399B1BA3AB (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_StarDetector_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_StarDetector_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_SURF_create(System.Double,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_SURF_create_mE2C4D340CC68628E073135689FD594450E041027 (double ___0_hessianThreshold, int32_t ___1_nOctaves, int32_t ___2_nOctaveLayers, int32_t ___3_extended, int32_t ___4_upright, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (double, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_create)(___0_hessianThreshold, ___1_nOctaves, ___2_nOctaveLayers, ___3_extended, ___4_upright);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_hessianThreshold, ___1_nOctaves, ___2_nOctaveLayers, ___3_extended, ___4_upright);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_Ptr_SURF_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_Ptr_SURF_delete_m6349BFC6A6283AD201F13FB17DA4AF244EA46E81 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_SURF_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_SURF_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_Ptr_SURF_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_Ptr_SURF_get_m65DC12BC640ACB88286887E434B0F945C0026B19 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_SURF_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_SURF_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Double OpenCvSharp.NativeMethods::xfeatures2d_SURF_getHessianThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_xfeatures2d_SURF_getHessianThreshold_m4A0A66D7B0266C7063D0ED96923CE2376138DEDE (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_getHessianThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_getHessianThreshold)(___0_obj);
	#else
	double returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_SURF_getNOctaves(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_SURF_getNOctaves_mE7F9FF847D8B2CC45954114B7306631FB61D2F23 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_getNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_getNOctaves)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_SURF_getNOctaveLayers(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_SURF_getNOctaveLayers_m3A176711497B5FAFFED9F6864CB9224C3AE03CB6 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_getNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_getNOctaveLayers)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_SURF_getExtended(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_SURF_getExtended_mA67061DB7E7354243B09393BB5EC704469E59847 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_getExtended", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_getExtended)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::xfeatures2d_SURF_getUpright(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_xfeatures2d_SURF_getUpright_m54F2D63FD3823D60AC543EFA103ACCB2AC6D969D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_getUpright", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_getUpright)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_SURF_setHessianThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_SURF_setHessianThreshold_m04D4C84A4E0F1650FD7FFB51C6C240D74541F66E (intptr_t ___0_obj, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_setHessianThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_setHessianThreshold)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_SURF_setNOctaves(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_SURF_setNOctaves_m0003927742775371042A6877B82B8661E40EB4FE (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_setNOctaves", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_setNOctaves)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_SURF_setNOctaveLayers(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_SURF_setNOctaveLayers_m9A46864E9DDF211871D225FCF3685CA872CD1C70 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_setNOctaveLayers", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_setNOctaveLayers)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_SURF_setExtended(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_SURF_setExtended_mE9CDD711E88A3F8BF497B4B93DE9C7D619093CF4 (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_setExtended", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_setExtended)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_SURF_setUpright(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_SURF_setUpright_mC1E258AEDDC775A0147538C04CFD90F5C5B328DE (intptr_t ___0_obj, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SURF_setUpright", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_SURF_setUpright)(___0_obj, ___1_value);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_value);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_SIFT_create(System.Int32,System.Int32,System.Double,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_SIFT_create_mDD3E6B08BB9BC0A68CC516729AC1696F1759A9E7 (int32_t ___0_nfeatures, int32_t ___1_nOctaveLayers, double ___2_contrastThreshold, double ___3_edgeThreshold, double ___4_sigma, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, double, double, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(double) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_SIFT_create", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_SIFT_create)(___0_nfeatures, ___1_nOctaveLayers, ___2_contrastThreshold, ___3_edgeThreshold, ___4_sigma);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_nfeatures, ___1_nOctaveLayers, ___2_contrastThreshold, ___3_edgeThreshold, ___4_sigma);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xfeatures2d_Ptr_SIFT_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xfeatures2d_Ptr_SIFT_delete_m0745C393E56CE4AAA55C53AC904F6540E88ED458 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_SIFT_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_SIFT_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::xfeatures2d_Ptr_SIFT_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_xfeatures2d_Ptr_SIFT_get_m9701246E8E0679EF2EDF862E5B90E750567E5343 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xfeatures2d_Ptr_SIFT_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(xfeatures2d_Ptr_SIFT_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::xphoto_balanceWhite(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_xphoto_balanceWhite_m660EF93D91A36C98ECA0A1134A85D7F0A6629CD7 (intptr_t ___0_src, intptr_t ___1_dst, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "xphoto_balanceWhite", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(xphoto_balanceWhite)(___0_src, ___1_dst);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_inpaint(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_inpaint_mE2057B06D2B91B69AE448D1143A104A4FEAC8FA4 (intptr_t ___0_src, intptr_t ___1_inpaintMask, intptr_t ___2_dst, double ___3_inpaintRadius, int32_t ___4_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_inpaint", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_inpaint)(___0_src, ___1_inpaintMask, ___2_dst, ___3_inpaintRadius, ___4_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_inpaintMask, ___2_dst, ___3_inpaintRadius, ___4_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_fastNlMeansDenoising(System.IntPtr,System.IntPtr,System.Single,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_fastNlMeansDenoising_m15334BA3A045815C7530924B6133BE3986CCD3B1 (intptr_t ___0_src, intptr_t ___1_dst, float ___2_h, int32_t ___3_templateWindowSize, int32_t ___4_searchWindowSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, float, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_fastNlMeansDenoising", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_fastNlMeansDenoising)(___0_src, ___1_dst, ___2_h, ___3_templateWindowSize, ___4_searchWindowSize);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_h, ___3_templateWindowSize, ___4_searchWindowSize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_fastNlMeansDenoisingColored(System.IntPtr,System.IntPtr,System.Single,System.Single,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_fastNlMeansDenoisingColored_mF3C651D7CA2BE8217F4D27D24171370D9253E6C6 (intptr_t ___0_src, intptr_t ___1_dst, float ___2_h, float ___3_hColor, int32_t ___4_templateWindowSize, int32_t ___5_searchWindowSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, float, float, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_fastNlMeansDenoisingColored", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_fastNlMeansDenoisingColored)(___0_src, ___1_dst, ___2_h, ___3_hColor, ___4_templateWindowSize, ___5_searchWindowSize);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_h, ___3_hColor, ___4_templateWindowSize, ___5_searchWindowSize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_fastNlMeansDenoisingMulti(System.IntPtr[],System.Int32,System.IntPtr,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_fastNlMeansDenoisingMulti_m432CF765E22EF35D221AFB57086D71B3CD8D4EA5 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_srcImgs, int32_t ___1_srcImgsLength, intptr_t ___2_dst, int32_t ___3_imgToDenoiseIndex, int32_t ___4_temporalWindowSize, float ___5_h, int32_t ___6_templateWindowSize, int32_t ___7_searchWindowSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t, int32_t, int32_t, float, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_fastNlMeansDenoisingMulti", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_srcImgs' to native representation
	intptr_t* ____0_srcImgs_marshaled = NULL;
	if (___0_srcImgs != NULL)
	{
		____0_srcImgs_marshaled = reinterpret_cast<intptr_t*>((___0_srcImgs)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_fastNlMeansDenoisingMulti)(____0_srcImgs_marshaled, ___1_srcImgsLength, ___2_dst, ___3_imgToDenoiseIndex, ___4_temporalWindowSize, ___5_h, ___6_templateWindowSize, ___7_searchWindowSize);
	#else
	il2cppPInvokeFunc(____0_srcImgs_marshaled, ___1_srcImgsLength, ___2_dst, ___3_imgToDenoiseIndex, ___4_temporalWindowSize, ___5_h, ___6_templateWindowSize, ___7_searchWindowSize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_fastNlMeansDenoisingColoredMulti(System.IntPtr[],System.Int32,System.IntPtr,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_fastNlMeansDenoisingColoredMulti_mA526A67414FA3F0251BF402CCB4D7A4D574BB68D (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_srcImgs, int32_t ___1_srcImgsLength, intptr_t ___2_dst, int32_t ___3_imgToDenoiseIndex, int32_t ___4_temporalWindowSize, float ___5_h, float ___6_hColor, int32_t ___7_templateWindowSize, int32_t ___8_searchWindowSize, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t, int32_t, int32_t, float, float, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(float) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_fastNlMeansDenoisingColoredMulti", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_srcImgs' to native representation
	intptr_t* ____0_srcImgs_marshaled = NULL;
	if (___0_srcImgs != NULL)
	{
		____0_srcImgs_marshaled = reinterpret_cast<intptr_t*>((___0_srcImgs)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_fastNlMeansDenoisingColoredMulti)(____0_srcImgs_marshaled, ___1_srcImgsLength, ___2_dst, ___3_imgToDenoiseIndex, ___4_temporalWindowSize, ___5_h, ___6_hColor, ___7_templateWindowSize, ___8_searchWindowSize);
	#else
	il2cppPInvokeFunc(____0_srcImgs_marshaled, ___1_srcImgsLength, ___2_dst, ___3_imgToDenoiseIndex, ___4_temporalWindowSize, ___5_h, ___6_hColor, ___7_templateWindowSize, ___8_searchWindowSize);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_denoise_TVL1(System.IntPtr[],System.Int32,System.IntPtr,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_denoise_TVL1_m3C30203D8D0F9FE2C8ACD0DD4E9056640E382F88 (IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___0_observations, int32_t ___1_observationsSize, intptr_t ___2_result, double ___3_lambda, int32_t ___4_niters, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t*, int32_t, intptr_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_denoise_TVL1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___0_observations' to native representation
	intptr_t* ____0_observations_marshaled = NULL;
	if (___0_observations != NULL)
	{
		____0_observations_marshaled = reinterpret_cast<intptr_t*>((___0_observations)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_denoise_TVL1)(____0_observations_marshaled, ___1_observationsSize, ___2_result, ___3_lambda, ___4_niters);
	#else
	il2cppPInvokeFunc(____0_observations_marshaled, ___1_observationsSize, ___2_result, ___3_lambda, ___4_niters);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_decolor(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_decolor_mBFEE88F5355EFAD9171C179E1AF58C9414DB9ABE (intptr_t ___0_src, intptr_t ___1_grayscale, intptr_t ___2_color_boost, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_decolor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_decolor)(___0_src, ___1_grayscale, ___2_color_boost);
	#else
	il2cppPInvokeFunc(___0_src, ___1_grayscale, ___2_color_boost);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_seamlessClone(System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Point,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_seamlessClone_m29E2832DD8B9DFEC102706F0F6D838577D4F9FEC (intptr_t ___0_src, intptr_t ___1_dst, intptr_t ___2_mask, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC ___3_p, intptr_t ___4_blend, int32_t ___5_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Point_t040A0F435BFD5430C0BB89C5D23569A96E71F4FC) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_seamlessClone", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_seamlessClone)(___0_src, ___1_dst, ___2_mask, ___3_p, ___4_blend, ___5_flags);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_mask, ___3_p, ___4_blend, ___5_flags);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_colorChange(System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_colorChange_m9308D53CAEF50DB3714D4881003041EE315FE77E (intptr_t ___0_src, intptr_t ___1_mask, intptr_t ___2_dst, float ___3_red_mul, float ___4_green_mul, float ___5_blue_mul, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_colorChange", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_colorChange)(___0_src, ___1_mask, ___2_dst, ___3_red_mul, ___4_green_mul, ___5_blue_mul);
	#else
	il2cppPInvokeFunc(___0_src, ___1_mask, ___2_dst, ___3_red_mul, ___4_green_mul, ___5_blue_mul);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_illuminationChange(System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_illuminationChange_mD51BD2AAAAA20636E6B5147620B872FBBF4C660D (intptr_t ___0_src, intptr_t ___1_mask, intptr_t ___2_dst, float ___3_alpha, float ___4_beta, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_illuminationChange", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_illuminationChange)(___0_src, ___1_mask, ___2_dst, ___3_alpha, ___4_beta);
	#else
	il2cppPInvokeFunc(___0_src, ___1_mask, ___2_dst, ___3_alpha, ___4_beta);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_textureFlattening(System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_textureFlattening_m83500E2C53AE33BC9B4E58129A1611A7C23025C7 (intptr_t ___0_src, intptr_t ___1_mask, intptr_t ___2_dst, float ___3_low_threshold, float ___4_high_threshold, int32_t ___5_kernel_size, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, float, float, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_textureFlattening", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_textureFlattening)(___0_src, ___1_mask, ___2_dst, ___3_low_threshold, ___4_high_threshold, ___5_kernel_size);
	#else
	il2cppPInvokeFunc(___0_src, ___1_mask, ___2_dst, ___3_low_threshold, ___4_high_threshold, ___5_kernel_size);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_edgePreservingFilter(System.IntPtr,System.IntPtr,System.Int32,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_edgePreservingFilter_mE1B3257544B16E87674BA2273A2750BF81A930F0 (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_flags, float ___3_sigma_s, float ___4_sigma_r, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_edgePreservingFilter", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_edgePreservingFilter)(___0_src, ___1_dst, ___2_flags, ___3_sigma_s, ___4_sigma_r);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_flags, ___3_sigma_s, ___4_sigma_r);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_detailEnhance(System.IntPtr,System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_detailEnhance_m11BBBE4DB4E3CAFA06F6A764CE7AAEDD7741321B (intptr_t ___0_src, intptr_t ___1_dst, float ___2_sigma_s, float ___3_sigma_r, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_detailEnhance", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_detailEnhance)(___0_src, ___1_dst, ___2_sigma_s, ___3_sigma_r);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_sigma_s, ___3_sigma_r);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_pencilSketch(System.IntPtr,System.IntPtr,System.IntPtr,System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_pencilSketch_mEBBEB1311EBB76A650DB6198A410436A73B91CBE (intptr_t ___0_src, intptr_t ___1_dst1, intptr_t ___2_dst2, float ___3_sigma_s, float ___4_sigma_r, float ___5_shade_factor, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, float, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_pencilSketch", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_pencilSketch)(___0_src, ___1_dst1, ___2_dst2, ___3_sigma_s, ___4_sigma_r, ___5_shade_factor);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst1, ___2_dst2, ___3_sigma_s, ___4_sigma_r, ___5_shade_factor);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_stylization(System.IntPtr,System.IntPtr,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_stylization_mCA9C8C1245B9BAB41D6169D199F9A4413C5686EE (intptr_t ___0_src, intptr_t ___1_dst, float ___2_sigma_s, float ___3_sigma_r, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, float, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(float) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_stylization", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_stylization)(___0_src, ___1_dst, ___2_sigma_s, ___3_sigma_r);
	#else
	il2cppPInvokeFunc(___0_src, ___1_dst, ___2_sigma_s, ___3_sigma_r);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::photo_createCalibrateDebevec(System.Int32,System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_photo_createCalibrateDebevec_m7C943D7BA22DAB81A04E30B6B5930D99E6DD3766 (int32_t ___0_samples, float ___1_lambda, int32_t ___2_random, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, float, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(float) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_createCalibrateDebevec", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(photo_createCalibrateDebevec)(___0_samples, ___1_lambda, ___2_random);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_samples, ___1_lambda, ___2_random);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::photo_createCalibrateRobertson(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_photo_createCalibrateRobertson_m815E38E36813444E238AA8B4D52E928B9EB56290 (int32_t ___0_maxIter, float ___1_threshold, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_createCalibrateRobertson", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(photo_createCalibrateRobertson)(___0_maxIter, ___1_threshold);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_maxIter, ___1_threshold);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::photo_Ptr_CalibrateDebevec_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_Ptr_CalibrateDebevec_delete_m3AF7FBDDB1FA92BD2663B170E775858C4A979225 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_Ptr_CalibrateDebevec_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_Ptr_CalibrateDebevec_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::photo_Ptr_CalibrateRobertson_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_Ptr_CalibrateRobertson_delete_mF779BDF9CD022C0FF9D1D03AA9874F613F7244EC (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_Ptr_CalibrateRobertson_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_Ptr_CalibrateRobertson_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::photo_Ptr_CalibrateDebevec_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_photo_Ptr_CalibrateDebevec_get_m6124E353434FC5BCFF932D97E3837E8B534641F0 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_Ptr_CalibrateDebevec_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(photo_Ptr_CalibrateDebevec_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::photo_Ptr_CalibrateRobertson_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_photo_Ptr_CalibrateRobertson_get_m2D3418CB17D4B42D38D40C77AC356ECBDBFA637B (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_Ptr_CalibrateRobertson_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(photo_Ptr_CalibrateRobertson_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::photo_CalibrateCRF_process(System.IntPtr,System.IntPtr[],System.Int32,System.IntPtr,System.Single[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_photo_CalibrateCRF_process_m3F2BE9E0E578E19EA894732774EA225B87E5B92D (intptr_t ___0_obj, IntPtrU5BU5D_tFD177F8C806A6921AD7150264CCC62FA00CAD832* ___1_srcImgs, int32_t ___2_srcImgsLength, intptr_t ___3_dst, SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* ___4_times, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t*, int32_t, intptr_t, float*);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(void*);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "photo_CalibrateCRF_process", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___1_srcImgs' to native representation
	intptr_t* ____1_srcImgs_marshaled = NULL;
	if (___1_srcImgs != NULL)
	{
		____1_srcImgs_marshaled = reinterpret_cast<intptr_t*>((___1_srcImgs)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter '___4_times' to native representation
	float* ____4_times_marshaled = NULL;
	if (___4_times != NULL)
	{
		____4_times_marshaled = reinterpret_cast<float*>((___4_times)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(photo_CalibrateCRF_process)(___0_obj, ____1_srcImgs_marshaled, ___2_srcImgsLength, ___3_dst, ____4_times_marshaled);
	#else
	il2cppPInvokeFunc(___0_obj, ____1_srcImgs_marshaled, ___2_srcImgsLength, ___3_dst, ____4_times_marshaled);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeDistanceExtractor_computeDistance(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeDistanceExtractor_computeDistance_m9DD72517E37F22BAFDCB9318B7271C94D24539BD (intptr_t ___0_obj, intptr_t ___1_contour1, intptr_t ___2_contour2, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeDistanceExtractor_computeDistance", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeDistanceExtractor_computeDistance)(___0_obj, ___1_contour1, ___2_contour2);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj, ___1_contour1, ___2_contour2);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_Ptr_ShapeContextDistanceExtractor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_Ptr_ShapeContextDistanceExtractor_delete_mBF873E32F7A45763E44861DD82DB125876805677 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_Ptr_ShapeContextDistanceExtractor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_Ptr_ShapeContextDistanceExtractor_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::shape_Ptr_ShapeContextDistanceExtractor_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_shape_Ptr_ShapeContextDistanceExtractor_get_mF7BBBA120308D1393965BC5F011D2BFBF65A770C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_Ptr_ShapeContextDistanceExtractor_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(shape_Ptr_ShapeContextDistanceExtractor_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setAngularBins(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setAngularBins_mA2A536C6E6013309AA40DD384131F01D4E98140C (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setAngularBins", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setAngularBins)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getAngularBins(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_shape_ShapeContextDistanceExtractor_getAngularBins_m5D1CCEEE969C4CBB85767B7C273647BF7CC2A53A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getAngularBins", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getAngularBins)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setRadialBins(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setRadialBins_m2F8719E926A27D69C2C6FDDA5F4448E299D7983D (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setRadialBins", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setRadialBins)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getRadialBins(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_shape_ShapeContextDistanceExtractor_getRadialBins_m9D959950550581D08147B44647A23167895F3269 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getRadialBins", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getRadialBins)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setInnerRadius(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setInnerRadius_mB383EDE8E9FAF0F1B7F9062D68372BB35310C03F (intptr_t ___0_obj, float ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setInnerRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setInnerRadius)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getInnerRadius(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getInnerRadius_m28B8CEFBD43B8DAE33DDFA90F14C1B3DAA3C63F5 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getInnerRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getInnerRadius)(___0_obj);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setOuterRadius(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setOuterRadius_mE2E93BC7FEA92698CDC1C43FB46195FBD1C72A08 (intptr_t ___0_obj, float ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setOuterRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setOuterRadius)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getOuterRadius(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getOuterRadius_mDFC738A250310C414B57F5A1EAAE5E276E4EEFFA (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getOuterRadius", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getOuterRadius)(___0_obj);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setRotationInvariant(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setRotationInvariant_mD0BE43FC17A7743D34C49AA0718C7F10E58E81B7 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setRotationInvariant", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setRotationInvariant)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getRotationInvariant(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_shape_ShapeContextDistanceExtractor_getRotationInvariant_mB9FD26947AA0056F3A4DC7BDB985E9DE69D85EF3 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getRotationInvariant", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getRotationInvariant)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setShapeContextWeight(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setShapeContextWeight_m4074BED2F69E6F9817A5A87938EEACA854817DB9 (intptr_t ___0_obj, float ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setShapeContextWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setShapeContextWeight)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getShapeContextWeight(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getShapeContextWeight_m6F10F59B366830E84B2963540B645C1191A011FD (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getShapeContextWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getShapeContextWeight)(___0_obj);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setImageAppearanceWeight(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setImageAppearanceWeight_mA09194C3A42BC06AA18BB47A37D069F3653878DA (intptr_t ___0_obj, float ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setImageAppearanceWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setImageAppearanceWeight)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getImageAppearanceWeight(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getImageAppearanceWeight_mE944C90F7FA6A8A7AC0B9F5472A02CE8CE555B05 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getImageAppearanceWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getImageAppearanceWeight)(___0_obj);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setBendingEnergyWeight(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setBendingEnergyWeight_m2BDE74CC6E850D5F6EC1780F3ED976079851B22F (intptr_t ___0_obj, float ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setBendingEnergyWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setBendingEnergyWeight)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getBendingEnergyWeight(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getBendingEnergyWeight_m3F92D972B6D5C720E07CF8F4115555E206076B86 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getBendingEnergyWeight", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getBendingEnergyWeight)(___0_obj);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setImages(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setImages_m5AFD784CD536F16213A5D11AC745BEAB9571E31A (intptr_t ___0_obj, intptr_t ___1_image1, intptr_t ___2_image2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setImages", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setImages)(___0_obj, ___1_image1, ___2_image2);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image1, ___2_image2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getImages(System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_getImages_mACD2288BD0CA66569D5A3B23E547F6E45A47CE52 (intptr_t ___0_obj, intptr_t ___1_image1, intptr_t ___2_image2, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getImages", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getImages)(___0_obj, ___1_image1, ___2_image2);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_image1, ___2_image2);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setIterations(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setIterations_mBB3EF154230AF6D1016768E9D0D81648251BDCC1 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setIterations)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getIterations(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_shape_ShapeContextDistanceExtractor_getIterations_m7864FF19F105BFE7D6651F221F81EDAA3402374C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getIterations", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getIterations)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_setStdDev(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_ShapeContextDistanceExtractor_setStdDev_m421916285F5F40CBDE57CA17177108615C9B79D9 (intptr_t ___0_obj, float ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_setStdDev", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_setStdDev)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_ShapeContextDistanceExtractor_getStdDev(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_ShapeContextDistanceExtractor_getStdDev_m4B19FD776B5EAA0C93F3B4F355F0629DF5A2FE0D (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_ShapeContextDistanceExtractor_getStdDev", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_ShapeContextDistanceExtractor_getStdDev)(___0_obj);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::shape_createShapeContextDistanceExtractor(System.Int32,System.Int32,System.Single,System.Single,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_shape_createShapeContextDistanceExtractor_m237D68B7964038B90A49DA4D7F7F097BD6E323E4 (int32_t ___0_nAngularBins, int32_t ___1_nRadialBins, float ___2_innerRadius, float ___3_outerRadius, int32_t ___4_iterations, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, float, float, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(float) + sizeof(float) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_createShapeContextDistanceExtractor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(shape_createShapeContextDistanceExtractor)(___0_nAngularBins, ___1_nRadialBins, ___2_innerRadius, ___3_outerRadius, ___4_iterations);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_nAngularBins, ___1_nRadialBins, ___2_innerRadius, ___3_outerRadius, ___4_iterations);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_Ptr_HausdorffDistanceExtractor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_Ptr_HausdorffDistanceExtractor_delete_mDED811E5DAB25AA427BC717830AA871955D93E71 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_Ptr_HausdorffDistanceExtractor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_Ptr_HausdorffDistanceExtractor_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::shape_Ptr_HausdorffDistanceExtractor_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_shape_Ptr_HausdorffDistanceExtractor_get_m6596F44B92950D5AA919792D3EA973C3C61AB9B2 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_Ptr_HausdorffDistanceExtractor_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(shape_Ptr_HausdorffDistanceExtractor_get)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_HausdorffDistanceExtractor_setDistanceFlag(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_HausdorffDistanceExtractor_setDistanceFlag_m4DA9C2AA2F628C4E74B0B91854197FAA3CDEEB65 (intptr_t ___0_obj, int32_t ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_HausdorffDistanceExtractor_setDistanceFlag", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_HausdorffDistanceExtractor_setDistanceFlag)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::shape_HausdorffDistanceExtractor_getDistanceFlag(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_shape_HausdorffDistanceExtractor_getDistanceFlag_mD633C2A41ABB8EB15330FFA2B2A4F5349211BE20 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_HausdorffDistanceExtractor_getDistanceFlag", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(shape_HausdorffDistanceExtractor_getDistanceFlag)(___0_obj);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::shape_HausdorffDistanceExtractor_setRankProportion(System.IntPtr,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_shape_HausdorffDistanceExtractor_setRankProportion_mED231B2FEE8F1C1B71C98DFAC0AD773C39C8864D (intptr_t ___0_obj, float ___1_val, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_HausdorffDistanceExtractor_setRankProportion", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(shape_HausdorffDistanceExtractor_setRankProportion)(___0_obj, ___1_val);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_val);
	#endif

}
// System.Single OpenCvSharp.NativeMethods::shape_HausdorffDistanceExtractor_getRankProportion(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float NativeMethods_shape_HausdorffDistanceExtractor_getRankProportion_mCD33B1F5AD2F5ECF698A44D1D3FB064DC0FDFED0 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef float (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_HausdorffDistanceExtractor_getRankProportion", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	float returnValue = reinterpret_cast<PInvokeFunc>(shape_HausdorffDistanceExtractor_getRankProportion)(___0_obj);
	#else
	float returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::shape_createHausdorffDistanceExtractor(System.Int32,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_shape_createHausdorffDistanceExtractor_m8B64EF96D35F5E4EF8D67B0CFBB6720545AF3306 (int32_t ___0_distanceFlag, float ___1_rankProp, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, float);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(float);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "shape_createHausdorffDistanceExtractor", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(shape_createHausdorffDistanceExtractor)(___0_distanceFlag, ___1_rankProp);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_distanceFlag, ___1_rankProp);
	#endif

	return returnValue;
}
// OpenCvSharp.RotatedRect OpenCvSharp.NativeMethods::video_CamShift(System.IntPtr,OpenCvSharp.Rect&,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 NativeMethods_video_CamShift_m127E8FB05E9A33DA12F21E1FD232E518004A713F (intptr_t ___0_probImage, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___1_window, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___2_criteria, const RuntimeMethod* method) 
{
	typedef RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_CamShift", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = reinterpret_cast<PInvokeFunc>(video_CamShift)(___0_probImage, ___1_window, ___2_criteria);
	#else
	RotatedRect_t7FBEBE1EAF07C9D6613D820B3FDAD5FB372E1967 returnValue = il2cppPInvokeFunc(___0_probImage, ___1_window, ___2_criteria);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::video_meanShift(System.IntPtr,OpenCvSharp.Rect&,OpenCvSharp.TermCriteria)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_meanShift_mB3DDDF79FD726BF9BBE277B7E83002E3A5B4FF9D (intptr_t ___0_probImage, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A* ___1_window, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___2_criteria, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A*) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_meanShift", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_meanShift)(___0_probImage, ___1_window, ___2_criteria);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_probImage, ___1_window, ___2_criteria);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_new1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_new1_mECED0219B3DBD7930E4BA369D56F6F78D0017195 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_new1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_new1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_new2(System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_new2_m5D93A6248F02ABAE4DA24FBE0DDF4059BC274BD7 (int32_t ___0_dynamParams, int32_t ___1_measureParams, int32_t ___2_controlParams, int32_t ___3_type, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_new2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_new2)(___0_dynamParams, ___1_measureParams, ___2_controlParams, ___3_type);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_dynamParams, ___1_measureParams, ___2_controlParams, ___3_type);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_KalmanFilter_init(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_KalmanFilter_init_m44687D63355AF29F2C46FF7E800050AD951884AC (intptr_t ___0_obj, int32_t ___1_dynamParams, int32_t ___2_measureParams, int32_t ___3_controlParams, int32_t ___4_type, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_init", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_KalmanFilter_init)(___0_obj, ___1_dynamParams, ___2_measureParams, ___3_controlParams, ___4_type);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_dynamParams, ___2_measureParams, ___3_controlParams, ___4_type);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_KalmanFilter_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_KalmanFilter_delete_m7E501783A147C091D24D8CBA0B10B91A9494D69A (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_KalmanFilter_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_predict(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_predict_mA324E91A983BCEB7DE209385923230844316D97F (intptr_t ___0_obj, intptr_t ___1_control, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_predict", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_predict)(___0_obj, ___1_control);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_control);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_correct(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_correct_mE2D568116B7EF0291D0D8738CA7D57D67AB3B7B8 (intptr_t ___0_obj, intptr_t ___1_measurement, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_correct", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_correct)(___0_obj, ___1_measurement);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj, ___1_measurement);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_statePre(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_statePre_mD27C8FE7CD4EB0F54FD744F447A7C64A8AB8647C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_statePre", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_statePre)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_statePost(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_statePost_m95EB62453BC0AEA29ECE919DE9771680BEAB6FF8 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_statePost", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_statePost)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_transitionMatrix(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_transitionMatrix_m8B7D54B6496E0D3B21A8066F4591608DD9BF00FA (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_transitionMatrix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_transitionMatrix)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_controlMatrix(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_controlMatrix_m8218F5111FEB1E4867DFF80EA4D58A5687066D65 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_controlMatrix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_controlMatrix)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_measurementMatrix(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_measurementMatrix_m027709DC4BD792D6BAF544AA6B274AF030F7D2A9 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_measurementMatrix", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_measurementMatrix)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_processNoiseCov(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_processNoiseCov_m5C41AF8FD791067F4A1C47FC91648D4B16D472E6 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_processNoiseCov", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_processNoiseCov)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_measurementNoiseCov(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_measurementNoiseCov_m0EE3C42CB93959769E538C25581040A9463B5B24 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_measurementNoiseCov", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_measurementNoiseCov)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_errorCovPre(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_errorCovPre_m1172A2E716C9F0303D41BA248F071C4D4F8DB7E2 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_errorCovPre", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_errorCovPre)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_gain(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_gain_m0BC01CD6AD26A8BA67665F80BAC1170DB6F0FF89 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_gain", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_gain)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_KalmanFilter_errorCovPost(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_KalmanFilter_errorCovPost_m716B020E33BA7462FD2E02EF3CA845F9FDD67F2F (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_KalmanFilter_errorCovPost", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_KalmanFilter_errorCovPost)(___0_obj);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_obj);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::video_buildOpticalFlowPyramid1(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_buildOpticalFlowPyramid1_mBACADBB46D3EB6DBAA1BF50E618AAEAE431263FD (intptr_t ___0_img, intptr_t ___1_pyramid, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_winSize, int32_t ___3_maxLevel, int32_t ___4_withDerivatives, int32_t ___5_pyrBorder, int32_t ___6_derivBorder, int32_t ___7_tryReuseInputImage, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_buildOpticalFlowPyramid1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_buildOpticalFlowPyramid1)(___0_img, ___1_pyramid, ___2_winSize, ___3_maxLevel, ___4_withDerivatives, ___5_pyrBorder, ___6_derivBorder, ___7_tryReuseInputImage);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_img, ___1_pyramid, ___2_winSize, ___3_maxLevel, ___4_withDerivatives, ___5_pyrBorder, ___6_derivBorder, ___7_tryReuseInputImage);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::video_buildOpticalFlowPyramid2(System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_buildOpticalFlowPyramid2_mDE42DEC9CFBBDE5C3E054832FF733BB9252B042A (intptr_t ___0_img, intptr_t ___1_pyramidVec, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___2_winSize, int32_t ___3_maxLevel, int32_t ___4_withDerivatives, int32_t ___5_pyrBorder, int32_t ___6_derivBorder, int32_t ___7_tryReuseInputImage, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, int32_t, int32_t, int32_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_buildOpticalFlowPyramid2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_buildOpticalFlowPyramid2)(___0_img, ___1_pyramidVec, ___2_winSize, ___3_maxLevel, ___4_withDerivatives, ___5_pyrBorder, ___6_derivBorder, ___7_tryReuseInputImage);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_img, ___1_pyramidVec, ___2_winSize, ___3_maxLevel, ___4_withDerivatives, ___5_pyrBorder, ___6_derivBorder, ___7_tryReuseInputImage);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_calcOpticalFlowPyrLK_InputArray(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,OpenCvSharp.TermCriteria,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_calcOpticalFlowPyrLK_InputArray_m68BBA627571956BDE9DEF69AED3E2BA7D87C81B3 (intptr_t ___0_prevImg, intptr_t ___1_nextImg, intptr_t ___2_prevPts, intptr_t ___3_nextPts, intptr_t ___4_status, intptr_t ___5_err, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___6_winSize, int32_t ___7_maxLevel, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___8_criteria, int32_t ___9_flags, double ___10_minEigThreshold, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_calcOpticalFlowPyrLK_InputArray", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_calcOpticalFlowPyrLK_InputArray)(___0_prevImg, ___1_nextImg, ___2_prevPts, ___3_nextPts, ___4_status, ___5_err, ___6_winSize, ___7_maxLevel, ___8_criteria, ___9_flags, ___10_minEigThreshold);
	#else
	il2cppPInvokeFunc(___0_prevImg, ___1_nextImg, ___2_prevPts, ___3_nextPts, ___4_status, ___5_err, ___6_winSize, ___7_maxLevel, ___8_criteria, ___9_flags, ___10_minEigThreshold);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_calcOpticalFlowPyrLK_vector(System.IntPtr,System.IntPtr,OpenCvSharp.Point2f[],System.Int32,System.IntPtr,System.IntPtr,System.IntPtr,OpenCvSharp.Size,System.Int32,OpenCvSharp.TermCriteria,System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_calcOpticalFlowPyrLK_vector_m73D6D7BCDFDBDDF47401E381AE417FA2B737D236 (intptr_t ___0_prevImg, intptr_t ___1_nextImg, Point2fU5BU5D_t82D917E4E803587BB86E5EBA4D29DD0154EBD953* ___2_prevPts, int32_t ___3_prevPtsSize, intptr_t ___4_nextPts, intptr_t ___5_status, intptr_t ___6_err, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31 ___7_winSize, int32_t ___8_maxLevel, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4 ___9_criteria, int32_t ___10_flags, double ___11_minEigThreshold, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*, int32_t, intptr_t, intptr_t, intptr_t, Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31, int32_t, TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4, int32_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(void*) + sizeof(int32_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(Size_t7539A110E52BBC3E9C03186D380DC55EFBDD2B31) + sizeof(int32_t) + sizeof(TermCriteria_t223AC85A65A895C95BC800AB36A073D30613CBF4) + sizeof(int32_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_calcOpticalFlowPyrLK_vector", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Marshaling of parameter '___2_prevPts' to native representation
	Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8* ____2_prevPts_marshaled = NULL;
	if (___2_prevPts != NULL)
	{
		____2_prevPts_marshaled = reinterpret_cast<Point2f_t20774A4D21D036A832C60F971B4C27CF22C32ED8*>((___2_prevPts)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_calcOpticalFlowPyrLK_vector)(___0_prevImg, ___1_nextImg, ____2_prevPts_marshaled, ___3_prevPtsSize, ___4_nextPts, ___5_status, ___6_err, ___7_winSize, ___8_maxLevel, ___9_criteria, ___10_flags, ___11_minEigThreshold);
	#else
	il2cppPInvokeFunc(___0_prevImg, ___1_nextImg, ____2_prevPts_marshaled, ___3_prevPtsSize, ___4_nextPts, ___5_status, ___6_err, ___7_winSize, ___8_maxLevel, ___9_criteria, ___10_flags, ___11_minEigThreshold);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_calcOpticalFlowFarneback(System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_calcOpticalFlowFarneback_m8089FA327258F98010F624F93635FEACC0944A61 (intptr_t ___0_prev, intptr_t ___1_next, intptr_t ___2_flow, double ___3_pyrScale, int32_t ___4_levels, int32_t ___5_winSize, int32_t ___6_iterations, int32_t ___7_polyN, double ___8_polySigma, int32_t ___9_flags, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double, int32_t, int32_t, int32_t, int32_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(int32_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_calcOpticalFlowFarneback", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_calcOpticalFlowFarneback)(___0_prev, ___1_next, ___2_flow, ___3_pyrScale, ___4_levels, ___5_winSize, ___6_iterations, ___7_polyN, ___8_polySigma, ___9_flags);
	#else
	il2cppPInvokeFunc(___0_prev, ___1_next, ___2_flow, ___3_pyrScale, ___4_levels, ___5_winSize, ___6_iterations, ___7_polyN, ___8_polySigma, ___9_flags);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_estimateRigidTransform(System.IntPtr,System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_estimateRigidTransform_m0DC76EEF8768777DD5B9E5907FE1EF0E00D1812D (intptr_t ___0_src, intptr_t ___1_dst, int32_t ___2_fullAffine, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t, intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_estimateRigidTransform", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_estimateRigidTransform)(___0_src, ___1_dst, ___2_fullAffine);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_src, ___1_dst, ___2_fullAffine);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_DenseOpticalFlow_calc(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_DenseOpticalFlow_calc_m9A34930E90F52D7AB8BBC9B162881288B8A3644B (intptr_t ___0_obj, intptr_t ___1_i0, intptr_t ___2_i1, intptr_t ___3_flow, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_DenseOpticalFlow_calc", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_DenseOpticalFlow_calc)(___0_obj, ___1_i0, ___2_i1, ___3_flow);
	#else
	il2cppPInvokeFunc(___0_obj, ___1_i0, ___2_i1, ___3_flow);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_DenseOpticalFlow_collectGarbage(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_DenseOpticalFlow_collectGarbage_mB0E66F17333E9E81471141F1ED82D3D47574EE4C (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_DenseOpticalFlow_collectGarbage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_DenseOpticalFlow_collectGarbage)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_createOptFlow_DualTVL1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_createOptFlow_DualTVL1_m7B7C621AC9CDB2FFD23D798F0BADD03E98241A32 (const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) ();
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = 0;
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_createOptFlow_DualTVL1", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_createOptFlow_DualTVL1)();
	#else
	intptr_t returnValue = il2cppPInvokeFunc();
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_Ptr_DenseOpticalFlow_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_Ptr_DenseOpticalFlow_get_mF20743B63AC33B52B4648552BBC1795E3B86BAC0 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_DenseOpticalFlow_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_Ptr_DenseOpticalFlow_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_Ptr_DenseOpticalFlow_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_Ptr_DenseOpticalFlow_delete_m47D11D22DEC9C7E8BE92919709CFFAB76FC9DC72 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_DenseOpticalFlow_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_Ptr_DenseOpticalFlow_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractor_getBackgroundImage(System.IntPtr,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractor_getBackgroundImage_m3DACDF04C32AEDDC1450B16058BDB733BC8062B1 (intptr_t ___0_self, intptr_t ___1_backgroundImage, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractor_getBackgroundImage", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractor_getBackgroundImage)(___0_self, ___1_backgroundImage);
	#else
	il2cppPInvokeFunc(___0_self, ___1_backgroundImage);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractor_apply(System.IntPtr,System.IntPtr,System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractor_apply_m82B40D1D09E63D9F3560C86F9E99A8D21EA02B9D (intptr_t ___0_self, intptr_t ___1_image, intptr_t ___2_fgmask, double ___3_learningRate, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, intptr_t, intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(intptr_t) + sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractor_apply", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractor_apply)(___0_self, ___1_image, ___2_fgmask, ___3_learningRate);
	#else
	il2cppPInvokeFunc(___0_self, ___1_image, ___2_fgmask, ___3_learningRate);
	#endif

}
// System.Void OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractor_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_Ptr_BackgroundSubtractor_delete_mAA96BB6271F84A0C975EACD1AC49A7CB4068F2D7 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractor_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractor_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractor_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_Ptr_BackgroundSubtractor_get_mBBD51BCE308A9240EFDBEFB26FDAF38C8E0B52B8 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractor_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractor_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.IntPtr OpenCvSharp.NativeMethods::video_createBackgroundSubtractorMOG2(System.Int32,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_createBackgroundSubtractorMOG2_mB3F39628C1D039404A2CFF42435534725FE7862E (int32_t ___0_history, double ___1_varThreshold, int32_t ___2_detectShadows, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_createBackgroundSubtractorMOG2", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_createBackgroundSubtractorMOG2)(___0_history, ___1_varThreshold, ___2_detectShadows);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_history, ___1_varThreshold, ___2_detectShadows);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractorMOG2_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_Ptr_BackgroundSubtractorMOG2_delete_m548A0F50CA7B9BBF23F870A3E05F4A92D96D16F3 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractorMOG2_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractorMOG2_delete)(___0_ptr);
	#else
	il2cppPInvokeFunc(___0_ptr);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractorMOG2_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_Ptr_BackgroundSubtractorMOG2_get_mAB4DF24340DA8A5E0870F8B465929F74FDB42C58 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractorMOG2_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractorMOG2_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getHistory(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorMOG2_getHistory_mBA87535E1574D8C039AB4ACD9CE81FA5F91B784B (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getHistory)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setHistory(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setHistory_m0CB69C6012DECCD8AE335BE4BD0DCA72F189E072 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setHistory)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getNMixtures(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorMOG2_getNMixtures_m8CCB970254E3261B0000C5786405D4003BD43690 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getNMixtures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getNMixtures)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setNMixtures(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setNMixtures_m52D5C2DC8CB84D55CB0EC7B3310E2EFB0C55BE2B (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setNMixtures", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setNMixtures)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getBackgroundRatio(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getBackgroundRatio_m9D6C795E4C6FDFC9CB43286385EF9DCC26C69423 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getBackgroundRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getBackgroundRatio)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setBackgroundRatio(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setBackgroundRatio_m8FF02606549CE9633254600F6F318709B5219437 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setBackgroundRatio", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setBackgroundRatio)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getVarThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getVarThreshold_m95CB09DBEB941CCB7A20155BC699EAF2A755FFF7 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getVarThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getVarThreshold)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setVarThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setVarThreshold_m7A93E2658ED85A59D768E6170F23F733F0D23462 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setVarThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setVarThreshold)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getVarThresholdGen(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getVarThresholdGen_m8058F30F4740A460D202B0E99D80DE433E25DEFA (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getVarThresholdGen", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getVarThresholdGen)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setVarThresholdGen(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setVarThresholdGen_m28FCBD98297FAAD5E59DF90E54694E85AE5B3241 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setVarThresholdGen", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setVarThresholdGen)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getVarInit(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getVarInit_m9CD9CCC3927048D266A8779DA60F47A718C62D3E (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getVarInit", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getVarInit)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setVarInit(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setVarInit_mC898C6DC2550A0D7781A8B25BC5B42C414BB6393 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setVarInit", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setVarInit)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getVarMin(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getVarMin_mDC9E4333820A50D804F1A6DB5D05DCC67404B187 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getVarMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getVarMin)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setVarMin(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setVarMin_mB62F629BECEA5DA78D90A82C1DA9FA50F65E1E31 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setVarMin", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setVarMin)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getVarMax(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getVarMax_m5230124686DBF8E8C03EB1613BF68C84EAE12C2C (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getVarMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getVarMax)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setVarMax(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setVarMax_m562827358E41326CC1B47A4A17DE000EFD931B80 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setVarMax", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setVarMax)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getComplexityReductionThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getComplexityReductionThreshold_m731B4D3FB9CF394D8C3D39469584271D86CBD6B0 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getComplexityReductionThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getComplexityReductionThreshold)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setComplexityReductionThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setComplexityReductionThreshold_m5B6A2C5AF102F9C5BA35AAB3D41F7C126D16B1A4 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setComplexityReductionThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setComplexityReductionThreshold)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getDetectShadows(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorMOG2_getDetectShadows_m736B54A14D8E175B3A2997BE6B883469D1A96181 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getDetectShadows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getDetectShadows)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setDetectShadows(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setDetectShadows_mC60135C931E31372CAD6CA67C82A18131FF049F7 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setDetectShadows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setDetectShadows)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getShadowValue(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorMOG2_getShadowValue_m5233529DC8B9C7994BAF4EBB064A79ED645075A0 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getShadowValue", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getShadowValue)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setShadowValue(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setShadowValue_m3EFF667103A30EF4924467C67DE97DBFA9D45756 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setShadowValue", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setShadowValue)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_getShadowThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorMOG2_getShadowThreshold_m2AFC509AC20D30C8EC8BD9097A7A58F7CA0DCB4A (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_getShadowThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_getShadowThreshold)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorMOG2_setShadowThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorMOG2_setShadowThreshold_mD6393958B6564B1CE528A951B958A0D64ACDCF02 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorMOG2_setShadowThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorMOG2_setShadowThreshold)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_createBackgroundSubtractorKNN(System.Int32,System.Double,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_createBackgroundSubtractorKNN_m21450CD41EA605F31CA34614F40066B2E1EA0FE2 (int32_t ___0_history, double ___1_dist2Threshold, int32_t ___2_detectShadows, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (int32_t, double, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(int32_t) + sizeof(double) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_createBackgroundSubtractorKNN", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_createBackgroundSubtractorKNN)(___0_history, ___1_dist2Threshold, ___2_detectShadows);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_history, ___1_dist2Threshold, ___2_detectShadows);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractorKNN_delete(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_Ptr_BackgroundSubtractorKNN_delete_mFCC416915B2F3D8BF8925820751723320C043BF3 (intptr_t ___0_obj, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractorKNN_delete", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractorKNN_delete)(___0_obj);
	#else
	il2cppPInvokeFunc(___0_obj);
	#endif

}
// System.IntPtr OpenCvSharp.NativeMethods::video_Ptr_BackgroundSubtractorKNN_get(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t NativeMethods_video_Ptr_BackgroundSubtractorKNN_get_m7B4662B99E362C2F6AA1B3E0035F8D37AD47AD33 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef intptr_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_Ptr_BackgroundSubtractorKNN_get", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	intptr_t returnValue = reinterpret_cast<PInvokeFunc>(video_Ptr_BackgroundSubtractorKNN_get)(___0_ptr);
	#else
	intptr_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getHistory(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getHistory_mCA7EB1721A4C773F3F986B6ECC6F507214EE17D1 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getHistory)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setHistory(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setHistory_m921522EE6A001E556117CCAAFCA007A9F68C2C3C (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setHistory", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setHistory)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getNSamples(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getNSamples_mDAF70DA0D5D3190D53D34F5A2F9CA51034666ACC (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getNSamples", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getNSamples)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setNSamples(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setNSamples_m9846DE222E25BC263EE359D34AAF30260DFD40BD (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setNSamples", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setNSamples)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getDist2Threshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getDist2Threshold_mFAD2DF3190AFC2FEC50D9EB2605FE9B632085107 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getDist2Threshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getDist2Threshold)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setDist2Threshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setDist2Threshold_mB83DD5EDDAC36177127D8B91A9AC28DBCC623F71 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setDist2Threshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setDist2Threshold)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getkNNSamples(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getkNNSamples_m7ABC4F51CB230333D151AC5C84B07242BF3C4998 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getkNNSamples", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getkNNSamples)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setkNNSamples(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setkNNSamples_m1C01558F63E3F94E7B1CB984E8E76BD60DB6DB49 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setkNNSamples", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setkNNSamples)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getDetectShadows(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getDetectShadows_m4B28CDA1D27022C4D126F063069A1A012A411AC5 (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getDetectShadows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getDetectShadows)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setDetectShadows(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setDetectShadows_mB704C80EBE123D8871245D2EE30BEB51BBCCE208 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setDetectShadows", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setDetectShadows)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Int32 OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getShadowValue(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t NativeMethods_video_BackgroundSubtractorKNN_getShadowValue_m34254036B0DCBBF378802A88322CA7820681169D (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef int32_t (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getShadowValue", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	int32_t returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getShadowValue)(___0_ptr);
	#else
	int32_t returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setShadowValue(System.IntPtr,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setShadowValue_m52B9DFFE4BEF8366C63A3B10E1BEFF99FA339BC2 (intptr_t ___0_ptr, int32_t ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, int32_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(int32_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setShadowValue", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setShadowValue)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
// System.Double OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_getShadowThreshold(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double NativeMethods_video_BackgroundSubtractorKNN_getShadowThreshold_m0908FEC90057ED1639F3301C7E6E7C21D14515BC (intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	typedef double (CDECL *PInvokeFunc) (intptr_t);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_getShadowThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	double returnValue = reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_getShadowThreshold)(___0_ptr);
	#else
	double returnValue = il2cppPInvokeFunc(___0_ptr);
	#endif

	return returnValue;
}
// System.Void OpenCvSharp.NativeMethods::video_BackgroundSubtractorKNN_setShadowThreshold(System.IntPtr,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void NativeMethods_video_BackgroundSubtractorKNN_setShadowThreshold_m4055E809C7C2CC0DBAA5DFEACD72039A29B81283 (intptr_t ___0_ptr, double ___1_value, const RuntimeMethod* method) 
{
	typedef void (CDECL *PInvokeFunc) (intptr_t, double);
	#if !FORCE_PINVOKE_INTERNAL && !FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	static PInvokeFunc il2cppPInvokeFunc;
	if (il2cppPInvokeFunc == NULL)
	{
		int parameterSize = sizeof(intptr_t) + sizeof(double);
		il2cppPInvokeFunc = il2cpp_codegen_resolve_pinvoke<PInvokeFunc>(IL2CPP_NATIVE_STRING("OpenCvSharpExtern"), "video_BackgroundSubtractorKNN_setShadowThreshold", IL2CPP_CALL_C, CHARSET_NOT_SPECIFIED, parameterSize, false);
		IL2CPP_ASSERT(il2cppPInvokeFunc != NULL);
	}
	#endif

	// Native function invocation
	#if FORCE_PINVOKE_INTERNAL || FORCE_PINVOKE_OpenCvSharpExtern_INTERNAL
	reinterpret_cast<PInvokeFunc>(video_BackgroundSubtractorKNN_setShadowThreshold)(___0_ptr, ___1_value);
	#else
	il2cppPInvokeFunc(___0_ptr, ___1_value);
	#endif

}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.NativeMethods/<>c::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CU3Ec__cctor_mBF25F1409610A636A8A29124C11ED735353E9785 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* L_0 = (U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7*)il2cpp_codegen_object_new(U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CU3Ec__ctor_m08282DEC2D5496A0AC2F427D08A5A5E4A5A4E265(L_0, NULL);
		((U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var))->___U3CU3E9_0 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7_il2cpp_TypeInfo_var))->___U3CU3E9_0), (void*)L_0);
		return;
	}
}
// System.Void OpenCvSharp.NativeMethods/<>c::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CU3Ec__ctor_m08282DEC2D5496A0AC2F427D08A5A5E4A5A4E265 (U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* __this, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		return;
	}
}
// System.Int32 OpenCvSharp.NativeMethods/<>c::<.cctor>b__1286_0(OpenCvSharp.ErrorCode,System.String,System.String,System.String,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t U3CU3Ec_U3C_cctorU3Eb__1286_0_m3CEB893697AD4AF356D15350AAE6136FB0D0A49B (U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, intptr_t ___5_userdata, const RuntimeMethod* method) 
{
	int32_t V_0 = 0;
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0004:
			{// begin finally (depth: 1)
				// throw new OpenCVException(status, funcName, errMsg, fileName, line);
				int32_t L_0 = ___0_status;
				String_t* L_1 = ___1_funcName;
				String_t* L_2 = ___2_errMsg;
				String_t* L_3 = ___3_fileName;
				int32_t L_4 = ___4_line;
				OpenCVException_tE58DF4848C655F3CB2CFE810F36B55EDC7A8B01A* L_5 = (OpenCVException_tE58DF4848C655F3CB2CFE810F36B55EDC7A8B01A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&OpenCVException_tE58DF4848C655F3CB2CFE810F36B55EDC7A8B01A_il2cpp_TypeInfo_var)));
				NullCheck(L_5);
				OpenCVException__ctor_m1B56B7220EA2702D2C3A4C72EDEF87652D591E24(L_5, L_0, L_1, L_2, L_3, L_4, NULL);
				IL2CPP_RAISE_MANAGED_EXCEPTION(L_5, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&U3CU3Ec_U3C_cctorU3Eb__1286_0_m3CEB893697AD4AF356D15350AAE6136FB0D0A49B_RuntimeMethod_var)));
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			// return 0;
			V_0 = 0;
			goto IL_0011;
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0011:
	{
		goto IL_0011;
	}
}
// System.Int32 OpenCvSharp.NativeMethods/<>c::<.cctor>b__1286_1(OpenCvSharp.ErrorCode,System.String,System.String,System.String,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t U3CU3Ec_U3C_cctorU3Eb__1286_1_m71C25B4F275F33A4FF39BFEC18D7EBBA195B06BC (U3CU3Ec_t95F5D9BB27D435053523B1ECB2E8AB1D34D0F4C7* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, intptr_t ___5_userdata, const RuntimeMethod* method) 
{
	{
		// return 0;
		return 0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.ShapePredictor::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ShapePredictor__ctor_m81EE94A09F7E8CF1436B976D9AC164D75C116A37 (ShapePredictor_tCD381ACDA05D89BAE24A7D0887BDA064C5C385BD* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// : base()
		DisposableCvObject__ctor_m05A31FCADC967DF10B188DE00FFF3694F95C995F(__this, NULL);
		// ptr = NativeMethods.dlib_shapePredictor_new();
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_0;
		L_0 = NativeMethods_dlib_shapePredictor_new_mC96102500A262780D91C905CEB389E60CDABE102(NULL);
		((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_0;
		// }
		return;
	}
}
// System.Void OpenCvSharp.ShapePredictor::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ShapePredictor_Dispose_mE4A85218D5E6E8B4A27F5A40DF8D04D879BA9B60 (ShapePredictor_tCD381ACDA05D89BAE24A7D0887BDA064C5C385BD* __this, bool ___0_disposing, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!disposed)
		bool L_0 = __this->___disposed_7;
		if (L_0)
		{
			goto IL_0044;
		}
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_003c:
			{// begin finally (depth: 1)
				// base.Dispose(disposing);
				bool L_1 = ___0_disposing;
				DisposableCvObject_Dispose_mCA9D565F6EDDDFAAFEA0D38A92CEE3F7BD207A30(__this, L_1, NULL);
				// }
				return;
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			{
				// if (disposing)
				bool L_2 = ___0_disposing;
				if (!L_2)
				{
					goto IL_0033_1;
				}
			}
			{
				// if (ptr != IntPtr.Zero)
				intptr_t L_3 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
				intptr_t L_4 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
				bool L_5;
				L_5 = IntPtr_op_Inequality_m90EFC9C4CAD9A33E309F2DDF98EE4E1DD253637B(L_3, L_4, NULL);
				if (!L_5)
				{
					goto IL_0033_1;
				}
			}
			{
				// NativeMethods.dlib_shapePredictor_delete(ptr);
				intptr_t L_6 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
				il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
				NativeMethods_dlib_shapePredictor_delete_m656579F232C5FB0BFD6E1DD670A1E9908DFD23DC(L_6, NULL);
				// ptr = IntPtr.Zero;
				intptr_t L_7 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
				((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_7;
			}

IL_0033_1:
			{
				// disposed = true;
				__this->___disposed_7 = (bool)1;
				// }
				goto IL_0044;
			}
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0044:
	{
		// }
		return;
	}
}
// System.Void OpenCvSharp.ShapePredictor::LoadData(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ShapePredictor_LoadData_m750F7DC67C6291FCD5758C61DC698F70CDEFD574 (ShapePredictor_tCD381ACDA05D89BAE24A7D0887BDA064C5C385BD* __this, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_data, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NativeMethods.dlib_shapePredictor_loadData(ptr, data, data.Length);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_1 = ___0_data;
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_2 = ___0_data;
		NullCheck(L_2);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_dlib_shapePredictor_loadData_m77AD192A1F5680E519ED565788EFB3D4A10E9370(L_0, L_1, ((int32_t)(((RuntimeArray*)L_2)->max_length)), NULL);
		// }
		return;
	}
}
// OpenCvSharp.Point[] OpenCvSharp.ShapePredictor::DetectLandmarks(OpenCvSharp.Mat,OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ShapePredictor_DetectLandmarks_mF95994774F82214A5EEE6404275C078403E0A6B4 (ShapePredictor_tCD381ACDA05D89BAE24A7D0887BDA064C5C385BD* __this, Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___0_image, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___1_roi, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636* V_1 = NULL;
	PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* V_2 = NULL;
	{
		// IntPtr stdvec = IntPtr.Zero;
		intptr_t L_0 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		V_0 = L_0;
		// if (NativeMethods.dlib_shapePredictor_detectLandmarks(ptr, image.CvPtr, roi, ref stdvec))
		intptr_t L_1 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_2 = ___0_image;
		NullCheck(L_2);
		intptr_t L_3;
		L_3 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_2, NULL);
		Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A L_4 = ___1_roi;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		bool L_5;
		L_5 = NativeMethods_dlib_shapePredictor_detectLandmarks_mC09E86EADDEDC8D5450A93B6A3842E842E281463(L_1, L_3, L_4, (&V_0), NULL);
		if (!L_5)
		{
			goto IL_0036;
		}
	}
	{
		// using (VectorOfPoint vec = new VectorOfPoint(stdvec))
		intptr_t L_6 = V_0;
		VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636* L_7 = (VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636*)il2cpp_codegen_object_new(VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636_il2cpp_TypeInfo_var);
		NullCheck(L_7);
		VectorOfPoint__ctor_mEB8FAB6E418A1037F2D59A233DF44A386DDD56F9(L_7, L_6, NULL);
		V_1 = L_7;
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_002c:
			{// begin finally (depth: 1)
				{
					VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636* L_8 = V_1;
					if (!L_8)
					{
						goto IL_0035;
					}
				}
				{
					VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636* L_9 = V_1;
					NullCheck(L_9);
					InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var, L_9);
				}

IL_0035:
				{
					return;
				}
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			// return vec.ToArray();
			VectorOfPoint_t4256390F09DF8113CC5B1582165F021BECB45636* L_10 = V_1;
			NullCheck(L_10);
			PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* L_11;
			L_11 = VectorOfPoint_ToArray_mEC4FF6862D7A078D3FBD666544A2C2172F408CB7(L_10, NULL);
			V_2 = L_11;
			goto IL_003d;
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0036:
	{
		// return new Point[0];
		PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* L_12 = (PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B*)(PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B*)SZArrayNew(PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B_il2cpp_TypeInfo_var, (uint32_t)0);
		return L_12;
	}

IL_003d:
	{
		// }
		PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* L_13 = V_2;
		return L_13;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.Constants::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Constants__ctor_mCD0B15B860E28273393CAD5925EC9BFD14B25A1F (Constants_t23876486BA2EB76C9B8017BD26AA893550D303A3* __this, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.Cv2/<>c::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CU3Ec__cctor_m00950461DD0F1C9E14315A263261C6D74DF588E3 (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* L_0 = (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D*)il2cpp_codegen_object_new(U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		U3CU3Ec__ctor_mB62F99C73962FFD773E386D65C3FD94D65C4F693(L_0, NULL);
		((U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D_il2cpp_TypeInfo_var))->___U3CU3E9_0 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&((U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D_StaticFields*)il2cpp_codegen_static_fields_for(U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D_il2cpp_TypeInfo_var))->___U3CU3E9_0), (void*)L_0);
		return;
	}
}
// System.Void OpenCvSharp.Cv2/<>c::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void U3CU3Ec__ctor_mB62F99C73962FFD773E386D65C3FD94D65C4F693 (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, const RuntimeMethod* method) 
{
	{
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		return;
	}
}
// OpenCvSharp.Vec3d OpenCvSharp.Cv2/<>c::<CalibrateCamera>b__38_0(OpenCvSharp.Mat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD U3CU3Ec_U3CCalibrateCameraU3Eb__38_0_m94DC3F7C20ADE6B6A4238A55C466DB3FA2741D73 (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___0_m, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Mat_Get_TisVec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD_m3C678AC2069EB01F91569DA353351F87B75CC523_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// rvecs = EnumerableEx.SelectToArray(rvecsM, m => m.Get<Vec3d>(0));
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_0 = ___0_m;
		NullCheck(L_0);
		Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD L_1;
		L_1 = Mat_Get_TisVec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD_m3C678AC2069EB01F91569DA353351F87B75CC523(L_0, 0, Mat_Get_TisVec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD_m3C678AC2069EB01F91569DA353351F87B75CC523_RuntimeMethod_var);
		return L_1;
	}
}
// OpenCvSharp.Vec3d OpenCvSharp.Cv2/<>c::<CalibrateCamera>b__38_1(OpenCvSharp.Mat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD U3CU3Ec_U3CCalibrateCameraU3Eb__38_1_mBE5E844A3F98FFBC48E3833C97BAC60F0485135F (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___0_m, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Mat_Get_TisVec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD_m3C678AC2069EB01F91569DA353351F87B75CC523_RuntimeMethod_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// tvecs = EnumerableEx.SelectToArray(tvecsM, m => m.Get<Vec3d>(0));
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_0 = ___0_m;
		NullCheck(L_0);
		Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD L_1;
		L_1 = Mat_Get_TisVec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD_m3C678AC2069EB01F91569DA353351F87B75CC523(L_0, 0, Mat_Get_TisVec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD_m3C678AC2069EB01F91569DA353351F87B75CC523_RuntimeMethod_var);
		return L_1;
	}
}
// System.Int32 OpenCvSharp.Cv2/<>c::<DrawMatches>b__227_0(OpenCvSharp.DMatch[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t U3CU3Ec_U3CDrawMatchesU3Eb__227_0_m36D75BE01D41D04D89D5A3D68A2461F5894708CB (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* ___0_dm, const RuntimeMethod* method) 
{
	{
		// int[] matches1To2Size2 = EnumerableEx.SelectToArray(matches1To2Array, dm => dm.Length);
		DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* L_0 = ___0_dm;
		NullCheck(L_0);
		return ((int32_t)(((RuntimeArray*)L_0)->max_length));
	}
}
// System.Int32 OpenCvSharp.Cv2/<>c::<DrawMatches>b__227_1(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t U3CU3Ec_U3CDrawMatchesU3Eb__227_1_mB23CE12F892F65E1C2B49A23CF6ED5100958DB60 (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_dm, const RuntimeMethod* method) 
{
	{
		// int[] matchesMaskSize2 = EnumerableEx.SelectToArray(matchesMaskArray, dm => dm.Length);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = ___0_dm;
		NullCheck(L_0);
		return ((int32_t)(((RuntimeArray*)L_0)->max_length));
	}
}
// System.Single[] OpenCvSharp.Cv2/<>c::<CalcHist>b__321_0(OpenCvSharp.Rangef)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* U3CU3Ec_U3CCalcHistU3Eb__321_0_m43C7B188BECFBAB8CFC4BB5EC774E527006471B3 (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, Rangef_t901609B3177ED2D50EEC5B3F261D283AE72DB280 ___0_r, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// ranges, r => new [] {r.Start, r.End});
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_0 = (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)(SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)SZArrayNew(SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C_il2cpp_TypeInfo_var, (uint32_t)2);
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_1 = L_0;
		Rangef_t901609B3177ED2D50EEC5B3F261D283AE72DB280 L_2 = ___0_r;
		float L_3 = L_2.___Start_0;
		NullCheck(L_1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (float)L_3);
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_4 = L_1;
		Rangef_t901609B3177ED2D50EEC5B3F261D283AE72DB280 L_5 = ___0_r;
		float L_6 = L_5.___End_1;
		NullCheck(L_4);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(1), (float)L_6);
		return L_4;
	}
}
// System.Single[] OpenCvSharp.Cv2/<>c::<CalcBackProject>b__323_0(OpenCvSharp.Rangef)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* U3CU3Ec_U3CCalcBackProjectU3Eb__323_0_m51D8E0ECD40BA8F88898480C53E64921DA8B1E8B (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, Rangef_t901609B3177ED2D50EEC5B3F261D283AE72DB280 ___0_r, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// ranges, r => new [] {r.Start, r.End});
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_0 = (SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)(SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C*)SZArrayNew(SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C_il2cpp_TypeInfo_var, (uint32_t)2);
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_1 = L_0;
		Rangef_t901609B3177ED2D50EEC5B3F261D283AE72DB280 L_2 = ___0_r;
		float L_3 = L_2.___Start_0;
		NullCheck(L_1);
		(L_1)->SetAt(static_cast<il2cpp_array_size_t>(0), (float)L_3);
		SingleU5BU5D_t89DEFE97BCEDB5857010E79ECE0F52CF6E93B87C* L_4 = L_1;
		Rangef_t901609B3177ED2D50EEC5B3F261D283AE72DB280 L_5 = ___0_r;
		float L_6 = L_5.___End_1;
		NullCheck(L_4);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(1), (float)L_6);
		return L_4;
	}
}
// System.Int32 OpenCvSharp.Cv2/<>c::<DrawContours>b__423_0(OpenCvSharp.Point[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t U3CU3Ec_U3CDrawContoursU3Eb__423_0_m03F16F2AC7673BBB59FB8B1367A1F4AD8657195E (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* ___0_pts, const RuntimeMethod* method) 
{
	{
		// int[] contourSize2 = EnumerableEx.SelectToArray(contoursArray, pts => pts.Length);
		PointU5BU5D_tD1B605F665D0BA5E68F8DE6F844A41DE8CC4868B* L_0 = ___0_pts;
		NullCheck(L_0);
		return ((int32_t)(((RuntimeArray*)L_0)->max_length));
	}
}
// OpenCvSharp.Vec4i OpenCvSharp.Cv2/<>c::<DrawContours>b__423_1(OpenCvSharp.HierarchyIndex)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB U3CU3Ec_U3CDrawContoursU3Eb__423_1_m658607B4F9050C0E3DBFC36DA4D5EA17D98BC30B (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, HierarchyIndex_t9900FD90BA1ECED471DD979EE00CB097A9BA49D0* ___0_hi, const RuntimeMethod* method) 
{
	{
		// Vec4i[] hiearchyVecs = EnumerableEx.SelectToArray(hierarchy, hi => hi.ToVec4i());
		HierarchyIndex_t9900FD90BA1ECED471DD979EE00CB097A9BA49D0* L_0 = ___0_hi;
		NullCheck(L_0);
		Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB L_1;
		L_1 = HierarchyIndex_ToVec4i_m752BCBE366C9535DBFB46D31609EF6ACA2EC1A4F(L_0, NULL);
		return L_1;
	}
}
// OpenCvSharp.InputArray OpenCvSharp.Cv2/<>c::<FastNlMeansDenoisingMulti>b__446_0(OpenCvSharp.Mat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F* U3CU3Ec_U3CFastNlMeansDenoisingMultiU3Eb__446_0_mF6DDF7B0A9F098F606962C0E0C30EFEE25ACDC92 (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___0_m, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// IEnumerable<InputArray> srcImgsAsArrays = EnumerableEx.Select(srcImgs, m => new InputArray(m));
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_0 = ___0_m;
		InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F* L_1 = (InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F*)il2cpp_codegen_object_new(InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		InputArray__ctor_m78E7DEED61A6BC284FA755FCCF7F43AC3181D5D0(L_1, L_0, NULL);
		return L_1;
	}
}
// OpenCvSharp.InputArray OpenCvSharp.Cv2/<>c::<FastNlMeansDenoisingColoredMulti>b__448_0(OpenCvSharp.Mat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F* U3CU3Ec_U3CFastNlMeansDenoisingColoredMultiU3Eb__448_0_m1661CEB2DC5D2F74CCEB2500DADF3C63B213009A (U3CU3Ec_t7A8A77EB79DC5582E09792B24C017004BF91950D* __this, Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___0_m, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// IEnumerable<InputArray> srcImgsAsArrays = EnumerableEx.Select(srcImgs, m => new InputArray(m));
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_0 = ___0_m;
		InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F* L_1 = (InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F*)il2cpp_codegen_object_new(InputArray_tBF80599D8D6F59DBD2CFD93BEA3EB004C4FFFF2F_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		InputArray__ctor_m78E7DEED61A6BC284FA755FCCF7F43AC3181D5D0(L_1, L_0, NULL);
		return L_1;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.CvObject::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvObject__ctor_m40806BAFAAC969E5F3D06EA984AD5A28ADD2A404 (CvObject_t470E08FFB594E86FEAB1822321B927074DB887B9* __this, const RuntimeMethod* method) 
{
	{
		// protected CvObject()
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.CvObject::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvObject__ctor_m7C8A5F916E72A64ECA91B52AFECD2B8A14866AD6 (CvObject_t470E08FFB594E86FEAB1822321B927074DB887B9* __this, intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	{
		// protected CvObject(IntPtr ptr)
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		// this.ptr = ptr;
		intptr_t L_0 = ___0_ptr;
		__this->___ptr_0 = L_0;
		// }
		return;
	}
}
// System.IntPtr OpenCvSharp.CvObject::get_CvPtr()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t CvObject_get_CvPtr_m68EB4D21624B60D310B4C2DADF18792CE3A8B866 (CvObject_t470E08FFB594E86FEAB1822321B927074DB887B9* __this, const RuntimeMethod* method) 
{
	{
		// get { return ptr; }
		intptr_t L_0 = __this->___ptr_0;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
int32_t CvErrorCallback_Invoke_m80E49761A9C751F52B58A0C637DA5FE5274A6EFB_Multicast(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, intptr_t ___5_userdata, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	int32_t retVal = 0;
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* currentDelegate = reinterpret_cast<CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D*>(delegatesToInvoke[i]);
		typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, String_t*, String_t*, String_t*, int32_t, intptr_t, const RuntimeMethod*);
		retVal = ((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_status, ___1_funcName, ___2_errMsg, ___3_fileName, ___4_line, ___5_userdata, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
	return retVal;
}
int32_t CvErrorCallback_Invoke_m80E49761A9C751F52B58A0C637DA5FE5274A6EFB_OpenInst(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, intptr_t ___5_userdata, const RuntimeMethod* method)
{
	typedef int32_t (*FunctionPointerType) (int32_t, String_t*, String_t*, String_t*, int32_t, intptr_t, const RuntimeMethod*);
	return ((FunctionPointerType)__this->___method_ptr_0)(___0_status, ___1_funcName, ___2_errMsg, ___3_fileName, ___4_line, ___5_userdata, method);
}
int32_t CvErrorCallback_Invoke_m80E49761A9C751F52B58A0C637DA5FE5274A6EFB_OpenStatic(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, intptr_t ___5_userdata, const RuntimeMethod* method)
{
	typedef int32_t (*FunctionPointerType) (int32_t, String_t*, String_t*, String_t*, int32_t, intptr_t, const RuntimeMethod*);
	return ((FunctionPointerType)__this->___method_ptr_0)(___0_status, ___1_funcName, ___2_errMsg, ___3_fileName, ___4_line, ___5_userdata, method);
}
int32_t CvErrorCallback_Invoke_m80E49761A9C751F52B58A0C637DA5FE5274A6EFB_OpenStaticInvoker(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, intptr_t ___5_userdata, const RuntimeMethod* method)
{
	return InvokerFuncInvoker6< int32_t, int32_t, String_t*, String_t*, String_t*, int32_t, intptr_t >::Invoke(__this->___method_ptr_0, method, NULL, ___0_status, ___1_funcName, ___2_errMsg, ___3_fileName, ___4_line, ___5_userdata);
}
int32_t CvErrorCallback_Invoke_m80E49761A9C751F52B58A0C637DA5FE5274A6EFB_ClosedStaticInvoker(CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, intptr_t ___5_userdata, const RuntimeMethod* method)
{
	return InvokerFuncInvoker7< int32_t, RuntimeObject*, int32_t, String_t*, String_t*, String_t*, int32_t, intptr_t >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_status, ___1_funcName, ___2_errMsg, ___3_fileName, ___4_line, ___5_userdata);
}
IL2CPP_EXTERN_C  int32_t DelegatePInvokeWrapper_CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, intptr_t ___5_userdata, const RuntimeMethod* method)
{
	typedef int32_t (CDECL *PInvokeFunc)(int32_t, char*, char*, char*, int32_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Marshaling of parameter '___1_funcName' to native representation
	char* ____1_funcName_marshaled = NULL;
	____1_funcName_marshaled = il2cpp_codegen_marshal_string(___1_funcName);

	// Marshaling of parameter '___2_errMsg' to native representation
	char* ____2_errMsg_marshaled = NULL;
	____2_errMsg_marshaled = il2cpp_codegen_marshal_string(___2_errMsg);

	// Marshaling of parameter '___3_fileName' to native representation
	char* ____3_fileName_marshaled = NULL;
	____3_fileName_marshaled = il2cpp_codegen_marshal_string(___3_fileName);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___0_status, ____1_funcName_marshaled, ____2_errMsg_marshaled, ____3_fileName_marshaled, ___4_line, ___5_userdata);

	// Marshaling cleanup of parameter '___1_funcName' native representation
	il2cpp_codegen_marshal_free(____1_funcName_marshaled);
	____1_funcName_marshaled = NULL;

	// Marshaling cleanup of parameter '___2_errMsg' native representation
	il2cpp_codegen_marshal_free(____2_errMsg_marshaled);
	____2_errMsg_marshaled = NULL;

	// Marshaling cleanup of parameter '___3_fileName' native representation
	il2cpp_codegen_marshal_free(____3_fileName_marshaled);
	____3_fileName_marshaled = NULL;

	return returnValue;
}
// System.Void OpenCvSharp.CvErrorCallback::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvErrorCallback__ctor_mFAA228DCA256624CAC949BDCEBE1027F94C57D44 (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 6;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&CvErrorCallback_Invoke_m80E49761A9C751F52B58A0C637DA5FE5274A6EFB_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&CvErrorCallback_Invoke_m80E49761A9C751F52B58A0C637DA5FE5274A6EFB_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&CvErrorCallback_Invoke_m80E49761A9C751F52B58A0C637DA5FE5274A6EFB_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		if (___0_object == NULL)
			il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
		__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
		__this->___method_code_6 = (intptr_t)__this->___m_target_2;
	}
	__this->___extra_arg_5 = (intptr_t)&CvErrorCallback_Invoke_m80E49761A9C751F52B58A0C637DA5FE5274A6EFB_Multicast;
}
// System.Int32 OpenCvSharp.CvErrorCallback::Invoke(OpenCvSharp.ErrorCode,System.String,System.String,System.String,System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CvErrorCallback_Invoke_m80E49761A9C751F52B58A0C637DA5FE5274A6EFB (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, intptr_t ___5_userdata, const RuntimeMethod* method) 
{
	typedef int32_t (*FunctionPointerType) (RuntimeObject*, int32_t, String_t*, String_t*, String_t*, int32_t, intptr_t, const RuntimeMethod*);
	return ((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_status, ___1_funcName, ___2_errMsg, ___3_fileName, ___4_line, ___5_userdata, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.CvErrorCallback::BeginInvoke(OpenCvSharp.ErrorCode,System.String,System.String,System.String,System.Int32,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CvErrorCallback_BeginInvoke_mB647E81B4FB81F0EE89D27D53ADE579A70A895AD (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, int32_t ___0_status, String_t* ___1_funcName, String_t* ___2_errMsg, String_t* ___3_fileName, int32_t ___4_line, intptr_t ___5_userdata, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___6_callback, RuntimeObject* ___7_object, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ErrorCode_t03156D693FE7804F428FB11893D1F57FDE3E30A6_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = Box(ErrorCode_t03156D693FE7804F428FB11893D1F57FDE3E30A6_il2cpp_TypeInfo_var, &___0_status);
	__d_args[1] = ___1_funcName;
	__d_args[2] = ___2_errMsg;
	__d_args[3] = ___3_fileName;
	__d_args[4] = Box(Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var, &___4_line);
	__d_args[5] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___5_userdata);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___6_callback, (RuntimeObject*)___7_object);
}
// System.Int32 OpenCvSharp.CvErrorCallback::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CvErrorCallback_EndInvoke_m606C6ED79DBEBA40414C718B398BCA26FAB88BD6 (CvErrorCallback_t2D1C32E82FA04C4BFFEB719CAB7BD85CBA3AA57D* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void CvMouseCallback_Invoke_m4FCF6F78E6DF495C2A7F80BBB70C4008B42FC681_Multicast(CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* __this, int32_t ___0_event, int32_t ___1_x, int32_t ___2_y, int32_t ___3_flags, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* currentDelegate = reinterpret_cast<CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, int32_t, int32_t, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_event, ___1_x, ___2_y, ___3_flags, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void CvMouseCallback_Invoke_m4FCF6F78E6DF495C2A7F80BBB70C4008B42FC681_OpenInst(CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* __this, int32_t ___0_event, int32_t ___1_x, int32_t ___2_y, int32_t ___3_flags, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (int32_t, int32_t, int32_t, int32_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_event, ___1_x, ___2_y, ___3_flags, method);
}
void CvMouseCallback_Invoke_m4FCF6F78E6DF495C2A7F80BBB70C4008B42FC681_OpenStatic(CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* __this, int32_t ___0_event, int32_t ___1_x, int32_t ___2_y, int32_t ___3_flags, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (int32_t, int32_t, int32_t, int32_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_event, ___1_x, ___2_y, ___3_flags, method);
}
void CvMouseCallback_Invoke_m4FCF6F78E6DF495C2A7F80BBB70C4008B42FC681_OpenStaticInvoker(CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* __this, int32_t ___0_event, int32_t ___1_x, int32_t ___2_y, int32_t ___3_flags, const RuntimeMethod* method)
{
	InvokerActionInvoker4< int32_t, int32_t, int32_t, int32_t >::Invoke(__this->___method_ptr_0, method, NULL, ___0_event, ___1_x, ___2_y, ___3_flags);
}
void CvMouseCallback_Invoke_m4FCF6F78E6DF495C2A7F80BBB70C4008B42FC681_ClosedStaticInvoker(CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* __this, int32_t ___0_event, int32_t ___1_x, int32_t ___2_y, int32_t ___3_flags, const RuntimeMethod* method)
{
	InvokerActionInvoker5< RuntimeObject*, int32_t, int32_t, int32_t, int32_t >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_event, ___1_x, ___2_y, ___3_flags);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB (CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* __this, int32_t ___0_event, int32_t ___1_x, int32_t ___2_y, int32_t ___3_flags, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(int32_t, int32_t, int32_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_event, ___1_x, ___2_y, ___3_flags);

}
// System.Void OpenCvSharp.CvMouseCallback::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvMouseCallback__ctor_m379E64B26521143826CD9DDD0409CB16DB092FB5 (CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 4;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&CvMouseCallback_Invoke_m4FCF6F78E6DF495C2A7F80BBB70C4008B42FC681_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&CvMouseCallback_Invoke_m4FCF6F78E6DF495C2A7F80BBB70C4008B42FC681_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&CvMouseCallback_Invoke_m4FCF6F78E6DF495C2A7F80BBB70C4008B42FC681_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		if (___0_object == NULL)
			il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
		__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
		__this->___method_code_6 = (intptr_t)__this->___m_target_2;
	}
	__this->___extra_arg_5 = (intptr_t)&CvMouseCallback_Invoke_m4FCF6F78E6DF495C2A7F80BBB70C4008B42FC681_Multicast;
}
// System.Void OpenCvSharp.CvMouseCallback::Invoke(OpenCvSharp.MouseEvent,System.Int32,System.Int32,OpenCvSharp.MouseEvent)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvMouseCallback_Invoke_m4FCF6F78E6DF495C2A7F80BBB70C4008B42FC681 (CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* __this, int32_t ___0_event, int32_t ___1_x, int32_t ___2_y, int32_t ___3_flags, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, int32_t, int32_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_event, ___1_x, ___2_y, ___3_flags, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.CvMouseCallback::BeginInvoke(OpenCvSharp.MouseEvent,System.Int32,System.Int32,OpenCvSharp.MouseEvent,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CvMouseCallback_BeginInvoke_m7F9F431DA8B8EE7DA76B87EB3AF2EB4D5335C043 (CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* __this, int32_t ___0_event, int32_t ___1_x, int32_t ___2_y, int32_t ___3_flags, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___4_callback, RuntimeObject* ___5_object, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&MouseEvent_t0C9B57DCCAC62FD740BF31C3769C5E262690A588_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(MouseEvent_t0C9B57DCCAC62FD740BF31C3769C5E262690A588_il2cpp_TypeInfo_var, &___0_event);
	__d_args[1] = Box(Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var, &___1_x);
	__d_args[2] = Box(Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var, &___2_y);
	__d_args[3] = Box(MouseEvent_t0C9B57DCCAC62FD740BF31C3769C5E262690A588_il2cpp_TypeInfo_var, &___3_flags);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___4_callback, (RuntimeObject*)___5_object);
}
// System.Void OpenCvSharp.CvMouseCallback::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvMouseCallback_EndInvoke_m000EA8AAF9F15BFAC99A1CD7B3009FC463D86E1B (CvMouseCallback_t22DBBF4F8817261C6B75DDC580CF521ACF39D8FB* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void CvTrackbarCallback_Invoke_mEAF41859B5368379A45FDE4B3DC328C2419BA608_Multicast(CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* __this, int32_t ___0_pos, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* currentDelegate = reinterpret_cast<CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_pos, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void CvTrackbarCallback_Invoke_mEAF41859B5368379A45FDE4B3DC328C2419BA608_OpenInst(CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* __this, int32_t ___0_pos, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (int32_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_pos, method);
}
void CvTrackbarCallback_Invoke_mEAF41859B5368379A45FDE4B3DC328C2419BA608_OpenStatic(CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* __this, int32_t ___0_pos, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (int32_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_pos, method);
}
void CvTrackbarCallback_Invoke_mEAF41859B5368379A45FDE4B3DC328C2419BA608_OpenStaticInvoker(CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* __this, int32_t ___0_pos, const RuntimeMethod* method)
{
	InvokerActionInvoker1< int32_t >::Invoke(__this->___method_ptr_0, method, NULL, ___0_pos);
}
void CvTrackbarCallback_Invoke_mEAF41859B5368379A45FDE4B3DC328C2419BA608_ClosedStaticInvoker(CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* __this, int32_t ___0_pos, const RuntimeMethod* method)
{
	InvokerActionInvoker2< RuntimeObject*, int32_t >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_pos);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3 (CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* __this, int32_t ___0_pos, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_pos);

}
// System.Void OpenCvSharp.CvTrackbarCallback::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvTrackbarCallback__ctor_m2AA7FF90D28B755AE1C27232746C7B1306B4BABB (CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 1;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&CvTrackbarCallback_Invoke_mEAF41859B5368379A45FDE4B3DC328C2419BA608_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&CvTrackbarCallback_Invoke_mEAF41859B5368379A45FDE4B3DC328C2419BA608_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&CvTrackbarCallback_Invoke_mEAF41859B5368379A45FDE4B3DC328C2419BA608_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		if (___0_object == NULL)
			il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
		__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
		__this->___method_code_6 = (intptr_t)__this->___m_target_2;
	}
	__this->___extra_arg_5 = (intptr_t)&CvTrackbarCallback_Invoke_mEAF41859B5368379A45FDE4B3DC328C2419BA608_Multicast;
}
// System.Void OpenCvSharp.CvTrackbarCallback::Invoke(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvTrackbarCallback_Invoke_mEAF41859B5368379A45FDE4B3DC328C2419BA608 (CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* __this, int32_t ___0_pos, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_pos, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.CvTrackbarCallback::BeginInvoke(System.Int32,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CvTrackbarCallback_BeginInvoke_m7CC64AAC4A0E538DFC7D154B14B14A62C9DFA2AF (CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* __this, int32_t ___0_pos, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___1_callback, RuntimeObject* ___2_object, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var, &___0_pos);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___1_callback, (RuntimeObject*)___2_object);
}
// System.Void OpenCvSharp.CvTrackbarCallback::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvTrackbarCallback_EndInvoke_mB5D7932F063DC6FB9D40A2670A87139DD1C96239 (CvTrackbarCallback_t92B8F4AD0DE0E90B335EB04EEDAD7A31A17B96A3* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void CvTrackbarCallback2_Invoke_m187F0B4ABD29E15126A54B354D0FB75F0A5B1A60_Multicast(CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7* __this, int32_t ___0_pos, RuntimeObject* ___1_userdata, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7* currentDelegate = reinterpret_cast<CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, RuntimeObject*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_pos, ___1_userdata, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void CvTrackbarCallback2_Invoke_m187F0B4ABD29E15126A54B354D0FB75F0A5B1A60_OpenInst(CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7* __this, int32_t ___0_pos, RuntimeObject* ___1_userdata, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (int32_t, RuntimeObject*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_pos, ___1_userdata, method);
}
void CvTrackbarCallback2_Invoke_m187F0B4ABD29E15126A54B354D0FB75F0A5B1A60_OpenStatic(CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7* __this, int32_t ___0_pos, RuntimeObject* ___1_userdata, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (int32_t, RuntimeObject*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_pos, ___1_userdata, method);
}
void CvTrackbarCallback2_Invoke_m187F0B4ABD29E15126A54B354D0FB75F0A5B1A60_OpenStaticInvoker(CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7* __this, int32_t ___0_pos, RuntimeObject* ___1_userdata, const RuntimeMethod* method)
{
	InvokerActionInvoker2< int32_t, RuntimeObject* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_pos, ___1_userdata);
}
void CvTrackbarCallback2_Invoke_m187F0B4ABD29E15126A54B354D0FB75F0A5B1A60_ClosedStaticInvoker(CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7* __this, int32_t ___0_pos, RuntimeObject* ___1_userdata, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, int32_t, RuntimeObject* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_pos, ___1_userdata);
}
// System.Void OpenCvSharp.CvTrackbarCallback2::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvTrackbarCallback2__ctor_m602C2298B293C79231ECAFBEA9811F68B6934766 (CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&CvTrackbarCallback2_Invoke_m187F0B4ABD29E15126A54B354D0FB75F0A5B1A60_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&CvTrackbarCallback2_Invoke_m187F0B4ABD29E15126A54B354D0FB75F0A5B1A60_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&CvTrackbarCallback2_Invoke_m187F0B4ABD29E15126A54B354D0FB75F0A5B1A60_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		if (___0_object == NULL)
			il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
		__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
		__this->___method_code_6 = (intptr_t)__this->___m_target_2;
	}
	__this->___extra_arg_5 = (intptr_t)&CvTrackbarCallback2_Invoke_m187F0B4ABD29E15126A54B354D0FB75F0A5B1A60_Multicast;
}
// System.Void OpenCvSharp.CvTrackbarCallback2::Invoke(System.Int32,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvTrackbarCallback2_Invoke_m187F0B4ABD29E15126A54B354D0FB75F0A5B1A60 (CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7* __this, int32_t ___0_pos, RuntimeObject* ___1_userdata, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, RuntimeObject*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_pos, ___1_userdata, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.CvTrackbarCallback2::BeginInvoke(System.Int32,System.Object,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CvTrackbarCallback2_BeginInvoke_m71BE076601D388CD201996DA5F0E9CCCE89F8E4F (CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7* __this, int32_t ___0_pos, RuntimeObject* ___1_userdata, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var, &___0_pos);
	__d_args[1] = ___1_userdata;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.CvTrackbarCallback2::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvTrackbarCallback2_EndInvoke_m4751061E9D13F378BE6FA32F23DCFC79DF22AAB3 (CvTrackbarCallback2_tC2A9703BAA0AAB2562334FB72850E590E55D79D7* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void CvTrackbarCallback2Native_Invoke_mA7E82816BB7FE95472E14B4E769BB77732EA9B7B_Multicast(CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* __this, int32_t ___0_pos, intptr_t ___1_userdata, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* currentDelegate = reinterpret_cast<CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, intptr_t, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_pos, ___1_userdata, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void CvTrackbarCallback2Native_Invoke_mA7E82816BB7FE95472E14B4E769BB77732EA9B7B_OpenInst(CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* __this, int32_t ___0_pos, intptr_t ___1_userdata, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (int32_t, intptr_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_pos, ___1_userdata, method);
}
void CvTrackbarCallback2Native_Invoke_mA7E82816BB7FE95472E14B4E769BB77732EA9B7B_OpenStatic(CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* __this, int32_t ___0_pos, intptr_t ___1_userdata, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (int32_t, intptr_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_pos, ___1_userdata, method);
}
void CvTrackbarCallback2Native_Invoke_mA7E82816BB7FE95472E14B4E769BB77732EA9B7B_OpenStaticInvoker(CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* __this, int32_t ___0_pos, intptr_t ___1_userdata, const RuntimeMethod* method)
{
	InvokerActionInvoker2< int32_t, intptr_t >::Invoke(__this->___method_ptr_0, method, NULL, ___0_pos, ___1_userdata);
}
void CvTrackbarCallback2Native_Invoke_mA7E82816BB7FE95472E14B4E769BB77732EA9B7B_ClosedStaticInvoker(CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* __this, int32_t ___0_pos, intptr_t ___1_userdata, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, int32_t, intptr_t >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_pos, ___1_userdata);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D (CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* __this, int32_t ___0_pos, intptr_t ___1_userdata, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(int32_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_pos, ___1_userdata);

}
// System.Void OpenCvSharp.CvTrackbarCallback2Native::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvTrackbarCallback2Native__ctor_mAB4E0E4C63DFA3A03243AA842C0320D520922A2F (CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&CvTrackbarCallback2Native_Invoke_mA7E82816BB7FE95472E14B4E769BB77732EA9B7B_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&CvTrackbarCallback2Native_Invoke_mA7E82816BB7FE95472E14B4E769BB77732EA9B7B_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&CvTrackbarCallback2Native_Invoke_mA7E82816BB7FE95472E14B4E769BB77732EA9B7B_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		if (___0_object == NULL)
			il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
		__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
		__this->___method_code_6 = (intptr_t)__this->___m_target_2;
	}
	__this->___extra_arg_5 = (intptr_t)&CvTrackbarCallback2Native_Invoke_mA7E82816BB7FE95472E14B4E769BB77732EA9B7B_Multicast;
}
// System.Void OpenCvSharp.CvTrackbarCallback2Native::Invoke(System.Int32,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvTrackbarCallback2Native_Invoke_mA7E82816BB7FE95472E14B4E769BB77732EA9B7B (CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* __this, int32_t ___0_pos, intptr_t ___1_userdata, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, intptr_t, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_pos, ___1_userdata, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.CvTrackbarCallback2Native::BeginInvoke(System.Int32,System.IntPtr,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* CvTrackbarCallback2Native_BeginInvoke_m108EA344834A8E2376BE3518C9B0AF11D924E40E (CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* __this, int32_t ___0_pos, intptr_t ___1_userdata, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Int32_t680FF22E76F6EFAD4375103CBBFFA0421349384C_il2cpp_TypeInfo_var, &___0_pos);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___1_userdata);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.CvTrackbarCallback2Native::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CvTrackbarCallback2Native_EndInvoke_m43136289405E72DA1CA3D0C28F6CBCDBB3A475AD (CvTrackbarCallback2Native_t953F6062059C58D536A86D2B3AD0D808927FBB8D* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C_Multicast(MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* __this, uint8_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* currentDelegate = reinterpret_cast<MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, uint8_t*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C_OpenInst(MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* __this, uint8_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (uint8_t*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C_OpenStatic(MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* __this, uint8_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (uint8_t*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C_OpenStaticInvoker(MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* __this, uint8_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< uint8_t*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C_ClosedStaticInvoker(MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* __this, uint8_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, uint8_t*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3 (MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* __this, uint8_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(uint8_t*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionByte::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionByte__ctor_mD77737C8D57974320EEA7290F958E3C4B26F4216 (MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionByte::Invoke(System.Byte*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionByte_Invoke_m692387F83DD56555D7B3E880AB0D3372A114611C (MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* __this, uint8_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, uint8_t*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionByte::BeginInvoke(System.Byte*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionByte_BeginInvoke_m7C6C82D9EB1A65C8534EA7E94D759EBE1E49594B (MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* __this, uint8_t* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionByte::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionByte_EndInvoke_m2CE80B05B2F04AC28E4A4D25470C2ABBEE63C8E9 (MatForeachFunctionByte_t52C7B3A433F3DF065CEE966CFD028E1464F529E3* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47_Multicast(MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* __this, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* currentDelegate = reinterpret_cast<MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47_OpenInst(MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* __this, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47_OpenStatic(MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* __this, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47_OpenStaticInvoker(MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* __this, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47_ClosedStaticInvoker(MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* __this, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828 (MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* __this, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec2b::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2b__ctor_m4A672D386ED371DD74D051AE4288CF73B6F0AE66 (MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec2b::Invoke(OpenCvSharp.Vec2b*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2b_Invoke_mE805E894D49DC5FF5AAC2B9E61EE3FACE7CDCD47 (MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* __this, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec2b::BeginInvoke(OpenCvSharp.Vec2b*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec2b_BeginInvoke_m2417E2182265B72A4C5946A1E9E09C8EE5B8F9A8 (MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* __this, Vec2b_tB535BBF75CE1C4762BEA81988BEFA5B4B4865F0C* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec2b::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2b_EndInvoke_m40653B9E7EA48A77CE9A146A03FABF4AA012B6CA (MatForeachFunctionVec2b_tCF74100FFE496D5E2545413E6CA03932B0269828* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E_Multicast(MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* __this, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* currentDelegate = reinterpret_cast<MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E_OpenInst(MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* __this, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E_OpenStatic(MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* __this, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E_OpenStaticInvoker(MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* __this, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E_ClosedStaticInvoker(MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* __this, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6 (MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* __this, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec3b::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3b__ctor_m7910CE3828CB35441B9AC7573FA4362C44CB0372 (MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec3b::Invoke(OpenCvSharp.Vec3b*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3b_Invoke_mFFB347088DF2AE0A4B0F52A1CD28542FF8A00B9E (MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* __this, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec3b::BeginInvoke(OpenCvSharp.Vec3b*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec3b_BeginInvoke_m7677554B7D8448F1977442BB36115A181171F5EC (MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* __this, Vec3b_tB0FF8AD2B52E50A4E8A125725BB31FD08CFBC9B9* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec3b::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3b_EndInvoke_m4EE021315B459622F455E37A912F4E4806CAAABD (MatForeachFunctionVec3b_t2031975BC30858291EFC4F7F2C65874DB23FCFE6* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA_Multicast(MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* __this, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* currentDelegate = reinterpret_cast<MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA_OpenInst(MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* __this, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA_OpenStatic(MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* __this, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA_OpenStaticInvoker(MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* __this, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA_ClosedStaticInvoker(MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* __this, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A (MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* __this, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec4b::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4b__ctor_m131D8DD6BB79B5C213515E0961AAFA4E7B82B414 (MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec4b::Invoke(OpenCvSharp.Vec4b*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4b_Invoke_mADEED38E426781423B3831EE2E6C2BE0483B11CA (MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* __this, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec4b::BeginInvoke(OpenCvSharp.Vec4b*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec4b_BeginInvoke_m056299821BBE54C9076CB1A53B531533A51316E4 (MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* __this, Vec4b_tA40DD80479D7250F0007DC273E07E95BAA975C68* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec4b::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4b_EndInvoke_m1637AF5E15FBC6D9D2127417A3E766C8DE1622D3 (MatForeachFunctionVec4b_tC0FE30A53B19679D93C118745DE736E3EC44EC5A* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF_Multicast(MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* __this, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* currentDelegate = reinterpret_cast<MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF_OpenInst(MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* __this, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF_OpenStatic(MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* __this, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF_OpenStaticInvoker(MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* __this, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF_ClosedStaticInvoker(MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* __this, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4 (MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* __this, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec6b::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6b__ctor_m188909DA196B84D3F2E714D84E68AB562C8EED55 (MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec6b::Invoke(OpenCvSharp.Vec6b*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6b_Invoke_m4F7CF4CA232477DEA566506DD918CC7F5D201FCF (MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* __this, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec6b::BeginInvoke(OpenCvSharp.Vec6b*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec6b_BeginInvoke_m6A08037406164ACD912372B5231467ED3332A463 (MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* __this, Vec6b_t1549E925BF0480452D3B97BBB208A569DBD3F76C* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec6b::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6b_EndInvoke_mF175C741E65D22C5C0118DD9C91A1DE1D1EF216C (MatForeachFunctionVec6b_t78482390F33F672897BB7CD1FD2DB5FAE11702F4* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3_Multicast(MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* __this, int16_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* currentDelegate = reinterpret_cast<MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, int16_t*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3_OpenInst(MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* __this, int16_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (int16_t*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3_OpenStatic(MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* __this, int16_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (int16_t*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3_OpenStaticInvoker(MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* __this, int16_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< int16_t*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3_ClosedStaticInvoker(MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* __this, int16_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, int16_t*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1 (MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* __this, int16_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(int16_t*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionInt16::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionInt16__ctor_m7B65CB20FFFC32223288B01075324FA896AB8123 (MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionInt16::Invoke(System.Int16*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionInt16_Invoke_m47E2C04C97CAD57B81C342F2614461BF7F87A1F3 (MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* __this, int16_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, int16_t*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionInt16::BeginInvoke(System.Int16*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionInt16_BeginInvoke_m8401DEDAF58162795E6044191B8125534A452610 (MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* __this, int16_t* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionInt16::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionInt16_EndInvoke_m233E1C10A7CFC46C741673183313FF39042FE651 (MatForeachFunctionInt16_t0374522FDC4CD56E472D78560D8F1FD39A449FE1* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4_Multicast(MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* __this, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* currentDelegate = reinterpret_cast<MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4_OpenInst(MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* __this, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4_OpenStatic(MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* __this, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4_OpenStaticInvoker(MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* __this, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4_ClosedStaticInvoker(MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* __this, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392 (MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* __this, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec2s::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2s__ctor_mD948696CCC15CF324DD7B5B4DB1447602E137A3A (MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec2s::Invoke(OpenCvSharp.Vec2s*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2s_Invoke_m0766445A8466DE9A5EE714BF6E259029310FAEC4 (MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* __this, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec2s::BeginInvoke(OpenCvSharp.Vec2s*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec2s_BeginInvoke_m3DA223C766FE9B1A8325331B9A6BC77B9FCB47F9 (MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* __this, Vec2s_t0148F25DD5C2AA1CF804E8660E2825C03E13FB68* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec2s::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2s_EndInvoke_mB4E82BA09F571218525E1963B06DA1255465433B (MatForeachFunctionVec2s_tBD0DE263650799DB4E89AE906793FA7095033392* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10_Multicast(MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* __this, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* currentDelegate = reinterpret_cast<MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10_OpenInst(MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* __this, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10_OpenStatic(MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* __this, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10_OpenStaticInvoker(MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* __this, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10_ClosedStaticInvoker(MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* __this, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A (MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* __this, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec3s::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3s__ctor_mCD626A5A0D3E23D1915BBE26FF541AD1601E358C (MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec3s::Invoke(OpenCvSharp.Vec3s*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3s_Invoke_mB872EE82BB3B421CFFFF2A54D3A985427F9B9D10 (MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* __this, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec3s::BeginInvoke(OpenCvSharp.Vec3s*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec3s_BeginInvoke_m598B565CBD5C7BF6DB8C482C45677ADAF331509A (MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* __this, Vec3s_t04D93DFC3BBD46EC4243CC8D9334DAD8551A10CA* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec3s::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3s_EndInvoke_mE68C5F2D3DE78A602A56BA07695EA54DB37A40FF (MatForeachFunctionVec3s_t3DB326D6C50ACF576CE95D082A30B15FDE66F42A* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3_Multicast(MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* __this, Vec4s_t36070B932676A14293929ED30FF39D45635126B5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* currentDelegate = reinterpret_cast<MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec4s_t36070B932676A14293929ED30FF39D45635126B5*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3_OpenInst(MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* __this, Vec4s_t36070B932676A14293929ED30FF39D45635126B5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec4s_t36070B932676A14293929ED30FF39D45635126B5*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3_OpenStatic(MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* __this, Vec4s_t36070B932676A14293929ED30FF39D45635126B5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec4s_t36070B932676A14293929ED30FF39D45635126B5*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3_OpenStaticInvoker(MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* __this, Vec4s_t36070B932676A14293929ED30FF39D45635126B5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec4s_t36070B932676A14293929ED30FF39D45635126B5*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3_ClosedStaticInvoker(MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* __this, Vec4s_t36070B932676A14293929ED30FF39D45635126B5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec4s_t36070B932676A14293929ED30FF39D45635126B5*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613 (MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* __this, Vec4s_t36070B932676A14293929ED30FF39D45635126B5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec4s_t36070B932676A14293929ED30FF39D45635126B5*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec4s::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4s__ctor_m8C9823171B7797805D0CC7FDF94C3E7E123B6D8E (MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec4s::Invoke(OpenCvSharp.Vec4s*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4s_Invoke_mAE18E02AC2EACA228A106AF0B3F0512AB7F348D3 (MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* __this, Vec4s_t36070B932676A14293929ED30FF39D45635126B5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec4s_t36070B932676A14293929ED30FF39D45635126B5*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec4s::BeginInvoke(OpenCvSharp.Vec4s*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec4s_BeginInvoke_m481A22FDAE3D726F0E9EC281D36606A0FED89E17 (MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* __this, Vec4s_t36070B932676A14293929ED30FF39D45635126B5* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec4s::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4s_EndInvoke_m0D678F2EFEBF9814F0CB16BB10CEFCD3E3DB9D12 (MatForeachFunctionVec4s_tD7215B7DB75D388FF85DE10F1C93A5E1312FA613* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A_Multicast(MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* __this, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* currentDelegate = reinterpret_cast<MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A_OpenInst(MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* __this, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A_OpenStatic(MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* __this, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A_OpenStaticInvoker(MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* __this, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A_ClosedStaticInvoker(MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* __this, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89 (MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* __this, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec6s::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6s__ctor_mB469D141C034D8B07D0A9D05DD3CB1D9A04D7B27 (MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec6s::Invoke(OpenCvSharp.Vec6s*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6s_Invoke_m5D3D90588D9B1AF23AB25018CA56FDD50759543A (MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* __this, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec6s::BeginInvoke(OpenCvSharp.Vec6s*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec6s_BeginInvoke_mBFA7F46D20AB073980CA8C10B1A6F2A22422BE86 (MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* __this, Vec6s_t66F574648BE630C86E29BA71226BD33B66C782CB* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec6s::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6s_EndInvoke_mA4AB9F311A8B335A8B152B7EB2324A6D8A490501 (MatForeachFunctionVec6s_tE4986F3BA0F08AF223FCBEE33726A82C739DCD89* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC_Multicast(MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* __this, int32_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* currentDelegate = reinterpret_cast<MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, int32_t*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC_OpenInst(MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* __this, int32_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (int32_t*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC_OpenStatic(MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* __this, int32_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (int32_t*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC_OpenStaticInvoker(MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* __this, int32_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< int32_t*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC_ClosedStaticInvoker(MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* __this, int32_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, int32_t*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA (MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* __this, int32_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(int32_t*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionInt32::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionInt32__ctor_mE3870983460D6E8FB5D36C5E912C385203A4FBF7 (MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionInt32::Invoke(System.Int32*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionInt32_Invoke_mB28FD81A4FBB02422B4323537EBA970CE4F13ABC (MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* __this, int32_t* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, int32_t*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionInt32::BeginInvoke(System.Int32*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionInt32_BeginInvoke_mA812AE6299EBB6E82D61E76913265CF1CE693BAA (MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* __this, int32_t* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionInt32::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionInt32_EndInvoke_m67EFBF8A916C2F9B67A2E79E3B1BFF191B1D5D04 (MatForeachFunctionInt32_tA11F413E4816D4EFA4C297DD08A7F76F9D1707DA* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE_Multicast(MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* __this, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* currentDelegate = reinterpret_cast<MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE_OpenInst(MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* __this, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE_OpenStatic(MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* __this, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE_OpenStaticInvoker(MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* __this, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE_ClosedStaticInvoker(MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* __this, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131 (MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* __this, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec2i::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2i__ctor_m945523749DB9ABA32DC823FE1EC3091214E9C9F4 (MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec2i::Invoke(OpenCvSharp.Vec2i*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2i_Invoke_m206321C398056C3861506D6BB954C5E833F69AEE (MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* __this, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec2i::BeginInvoke(OpenCvSharp.Vec2i*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec2i_BeginInvoke_m089737A9F352852BAD184F12C12DD9E97CFFBA67 (MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* __this, Vec2i_tB36492BAEEEE62AC79A81CF118B752A092968F37* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec2i::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2i_EndInvoke_mFA488FD11984FD5A7E75C586C1B1A4DA39BBC981 (MatForeachFunctionVec2i_t7565625E15043384966DC1F8D1FC9E30C517B131* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB_Multicast(MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* __this, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* currentDelegate = reinterpret_cast<MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB_OpenInst(MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* __this, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB_OpenStatic(MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* __this, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB_OpenStaticInvoker(MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* __this, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB_ClosedStaticInvoker(MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* __this, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593 (MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* __this, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec3i::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3i__ctor_m5C37219F0E97D13F6FAAF3AE75F9FA3347E482E5 (MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec3i::Invoke(OpenCvSharp.Vec3i*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3i_Invoke_m57228CBE4CED393178067B4FBCBB8B7773A74BFB (MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* __this, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec3i::BeginInvoke(OpenCvSharp.Vec3i*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec3i_BeginInvoke_mABA6E6E01A5F29E91A750E64664EDBF55D34397E (MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* __this, Vec3i_tC40EA6A97E4D0FD38E853AB795B6D6B9F76345D5* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec3i::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3i_EndInvoke_mDCAB1E14A041207D7EAD211D900DBC8156FB9CEF (MatForeachFunctionVec3i_tB9D7085FC547C65EFCA6B1497E5BF9CA22C9A593* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A_Multicast(MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* __this, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* currentDelegate = reinterpret_cast<MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A_OpenInst(MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* __this, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A_OpenStatic(MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* __this, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A_OpenStaticInvoker(MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* __this, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A_ClosedStaticInvoker(MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* __this, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3 (MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* __this, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec4i::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4i__ctor_m98E218E784F9126B0F779518DA7BB1322C2961C2 (MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec4i::Invoke(OpenCvSharp.Vec4i*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4i_Invoke_m80E57423473F1A402E8B521868D408D911B64E3A (MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* __this, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec4i::BeginInvoke(OpenCvSharp.Vec4i*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec4i_BeginInvoke_mCEDC22FD609FB3CFE55BBD88F8C57643CB860A95 (MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* __this, Vec4i_tF2C2B516328D40E5323B30022BD5340107E8BBCB* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec4i::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4i_EndInvoke_m0D0F90BAF545DA7170994609AC8183133276924C (MatForeachFunctionVec4i_t5C0E76789E10044BA3866336D8758D103889DBF3* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3_Multicast(MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* __this, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* currentDelegate = reinterpret_cast<MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3_OpenInst(MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* __this, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3_OpenStatic(MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* __this, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3_OpenStaticInvoker(MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* __this, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3_ClosedStaticInvoker(MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* __this, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C (MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* __this, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec6i::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6i__ctor_mF5FC7E8D6FD174EE187C423B4A21F455324740D4 (MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec6i::Invoke(OpenCvSharp.Vec6i*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6i_Invoke_m41C69D816BDCEA8F3563289D36616BA47E44CBE3 (MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* __this, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec6i::BeginInvoke(OpenCvSharp.Vec6i*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec6i_BeginInvoke_m0BA2D1559ED3DAA6D14A79D9F0C2ACA8BD978018 (MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* __this, Vec6i_t431D8F60D2DD1A74E60CFF33C295061B74FF18C4* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec6i::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6i_EndInvoke_m84E92EAD75B0CFD010BFF89A62D0B0EA1B3429C6 (MatForeachFunctionVec6i_t19BEECEE67385C47EB2A204AB29CE3182A496D6C* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A_Multicast(MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* __this, float* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* currentDelegate = reinterpret_cast<MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, float*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A_OpenInst(MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* __this, float* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (float*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A_OpenStatic(MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* __this, float* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (float*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A_OpenStaticInvoker(MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* __this, float* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< float*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A_ClosedStaticInvoker(MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* __this, float* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, float*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A (MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* __this, float* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(float*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionFloat::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionFloat__ctor_m90FB86E3214E206E4B57B377A45ED273339BB8A6 (MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionFloat::Invoke(System.Single*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionFloat_Invoke_m047A07CC81849949A09524741E017267AFDAE39A (MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* __this, float* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, float*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionFloat::BeginInvoke(System.Single*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionFloat_BeginInvoke_mF5A4DCE44B35C7D581F0DFFE7DAFD7F38AB2A484 (MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* __this, float* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionFloat::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionFloat_EndInvoke_mB900B436CEA5447BBEDFEED03DD5A644AD570BCB (MatForeachFunctionFloat_t38C2418BF9FC6D10EC034037EEDAC2BBB0C4AF6A* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598_Multicast(MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* __this, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* currentDelegate = reinterpret_cast<MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598_OpenInst(MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* __this, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598_OpenStatic(MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* __this, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598_OpenStaticInvoker(MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* __this, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598_ClosedStaticInvoker(MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* __this, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2 (MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* __this, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec2f::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2f__ctor_mC2BD1CBC145CE4A9BB0A53856F577D0050AF591E (MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec2f::Invoke(OpenCvSharp.Vec2f*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2f_Invoke_m82FF4D84DBCC6B2AA123CB1D81847A5F3B428598 (MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* __this, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec2f::BeginInvoke(OpenCvSharp.Vec2f*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec2f_BeginInvoke_mF1B73EC364315BB111397A77D0C6C1BA3B02E397 (MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* __this, Vec2f_t3D941DE7D0BBE9606EF9DB63038FDC2B1F6BB20E* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec2f::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2f_EndInvoke_m640BE49BB412D16237F78F4A017F6C3A76E3AA07 (MatForeachFunctionVec2f_tB9D8C2EFCC61319FFF721E85B231D2D4B55565E2* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693_Multicast(MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* __this, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* currentDelegate = reinterpret_cast<MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693_OpenInst(MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* __this, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693_OpenStatic(MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* __this, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693_OpenStaticInvoker(MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* __this, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693_ClosedStaticInvoker(MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* __this, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2 (MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* __this, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec3f::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3f__ctor_mB7043BECA9F6A136759C38564E404F3764E4FA56 (MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec3f::Invoke(OpenCvSharp.Vec3f*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3f_Invoke_m0FA0ED09A4DBEF1E159260D2EA250ED5B98B2693 (MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* __this, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec3f::BeginInvoke(OpenCvSharp.Vec3f*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec3f_BeginInvoke_m09245FAE4F0A115FEC242D2746373F557C959CAA (MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* __this, Vec3f_t17AF11AD4ED97B6007270CD52A59E18FCC8823E4* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec3f::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3f_EndInvoke_mB80D7A2B91A4BD99C4ABB72DF5A858237995A31F (MatForeachFunctionVec3f_t11B96B79774D7E26DE67C65013BDE101110233F2* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932_Multicast(MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* __this, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* currentDelegate = reinterpret_cast<MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932_OpenInst(MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* __this, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932_OpenStatic(MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* __this, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932_OpenStaticInvoker(MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* __this, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932_ClosedStaticInvoker(MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* __this, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29 (MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* __this, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec4f::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4f__ctor_m4DA37B1A5EFD882A998B52D7961E3B2700FD9898 (MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec4f::Invoke(OpenCvSharp.Vec4f*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4f_Invoke_mDBBFDC17CF577CA30DA0444683A89F526D1FC932 (MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* __this, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec4f::BeginInvoke(OpenCvSharp.Vec4f*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec4f_BeginInvoke_m37D04E8C4B0B5EF28267E816A83145F506D7F671 (MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* __this, Vec4f_t6AA6FA2A3FCA7A7A49BB6EAAD2E2B6E4CEB2EF03* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec4f::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4f_EndInvoke_mDFF86F54CB0FD6EB634269EE1384AFF647E179C3 (MatForeachFunctionVec4f_t40CF1C2E1E36DFA715D1FC6AC1DF722C6DB3CD29* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614_Multicast(MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* __this, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* currentDelegate = reinterpret_cast<MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614_OpenInst(MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* __this, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614_OpenStatic(MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* __this, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614_OpenStaticInvoker(MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* __this, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614_ClosedStaticInvoker(MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* __this, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52 (MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* __this, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec6f::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6f__ctor_m158E4D626C7BEBE7B71ED476EF8C77954B05802A (MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec6f::Invoke(OpenCvSharp.Vec6f*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6f_Invoke_m903014E97E8ADF2EE4DA8A73BF201539E6639614 (MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* __this, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec6f::BeginInvoke(OpenCvSharp.Vec6f*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec6f_BeginInvoke_m4313CFB9DE63CB35171F2F9547DA784EC85EBBF2 (MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* __this, Vec6f_t7F82C1C4E22299DC2098EF3C40DDD0EB1222407E* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec6f::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6f_EndInvoke_m9A0890730264E0575AD4E9FD7FD11A5B1BBD94C7 (MatForeachFunctionVec6f_t2B2D96C4B8BDB138726237FF466911814ADE7E52* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2_Multicast(MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* __this, double* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* currentDelegate = reinterpret_cast<MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, double*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2_OpenInst(MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* __this, double* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (double*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2_OpenStatic(MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* __this, double* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (double*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2_OpenStaticInvoker(MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* __this, double* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< double*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2_ClosedStaticInvoker(MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* __this, double* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, double*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A (MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* __this, double* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(double*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionDouble::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionDouble__ctor_m721344389EDE7531DFAD70CC22751E88A01D3084 (MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionDouble::Invoke(System.Double*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionDouble_Invoke_m209CA06BBF973D3740449E3963C6F73E1F860DE2 (MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* __this, double* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, double*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionDouble::BeginInvoke(System.Double*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionDouble_BeginInvoke_m6B340D45BC12B89FF37E213D5D14458622E5E163 (MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* __this, double* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionDouble::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionDouble_EndInvoke_m818B9F7A757B44C975A47B4B970B08D79B2C60B2 (MatForeachFunctionDouble_tCB6307339EB3912EDCF067F2028EED37BA32CC8A* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F_Multicast(MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* __this, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* currentDelegate = reinterpret_cast<MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F_OpenInst(MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* __this, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F_OpenStatic(MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* __this, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F_OpenStaticInvoker(MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* __this, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F_ClosedStaticInvoker(MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* __this, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10 (MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* __this, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec2d::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2d__ctor_m2406964DF4C7CF5438BF34237B1FA4B7EF3740AA (MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec2d::Invoke(OpenCvSharp.Vec2d*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2d_Invoke_m2EA993212AFB8E044F2291B3BCCEC7101A8FFF4F (MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* __this, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec2d::BeginInvoke(OpenCvSharp.Vec2d*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec2d_BeginInvoke_m80304185CE95D465C23E04D91D4828C17E33AA47 (MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* __this, Vec2d_t500732817BD51C8278E9FAAF7CF86645A3341A23* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec2d::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec2d_EndInvoke_m76608B44AD4956F38945FE415F499F0415104368 (MatForeachFunctionVec2d_t6D8706FAC992DA48312959CD2531779CC37A3F10* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932_Multicast(MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* __this, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* currentDelegate = reinterpret_cast<MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932_OpenInst(MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* __this, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932_OpenStatic(MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* __this, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932_OpenStaticInvoker(MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* __this, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932_ClosedStaticInvoker(MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* __this, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5 (MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* __this, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec3d::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3d__ctor_m74F0B6DA2E87D62F7994EB0B8A8B08597F290CED (MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec3d::Invoke(OpenCvSharp.Vec3d*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3d_Invoke_m9DFA0A83DFEFD455E51B5E91C6D5AE9CDEF8A932 (MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* __this, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec3d::BeginInvoke(OpenCvSharp.Vec3d*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec3d_BeginInvoke_m0C4EE1D42F83E99D8E9B98A4BFE3E89FBB011FEF (MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* __this, Vec3d_tDB231D689D72A91D64A65412FE59C07B6E0487FD* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec3d::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec3d_EndInvoke_m946D6C7C10E283820D664DF590CC90AF385BE26B (MatForeachFunctionVec3d_tFE706CFA749551FE931D7640ADA60D79651814D5* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF_Multicast(MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* __this, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* currentDelegate = reinterpret_cast<MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF_OpenInst(MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* __this, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF_OpenStatic(MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* __this, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF_OpenStaticInvoker(MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* __this, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF_ClosedStaticInvoker(MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* __this, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466 (MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* __this, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec4d::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4d__ctor_m5537E9BD8D5BE5EC42181C3D96695895A0353CA5 (MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec4d::Invoke(OpenCvSharp.Vec4d*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4d_Invoke_mBEA55971A20BF45A745428BB023AF1F75514FEEF (MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* __this, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec4d::BeginInvoke(OpenCvSharp.Vec4d*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec4d_BeginInvoke_mE4A80E3611D2622F079CFDF8039B8AC6BC67E86F (MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* __this, Vec4d_tF32A7EF4E29DD307EBCADE3F8D6AB9DC0894B83D* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec4d::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec4d_EndInvoke_mA5B6702D456722FC56CE567A9291C715227DB06C (MatForeachFunctionVec4d_tD463FA199BE73911A54402FAC92ABD91E8CE2466* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
void MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031_Multicast(MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* __this, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	il2cpp_array_size_t length = __this->___delegates_13->max_length;
	Delegate_t** delegatesToInvoke = reinterpret_cast<Delegate_t**>(__this->___delegates_13->GetAddressAtUnchecked(0));
	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* currentDelegate = reinterpret_cast<MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46*>(delegatesToInvoke[i]);
		typedef void (*FunctionPointerType) (RuntimeObject*, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, int32_t*, const RuntimeMethod*);
		((FunctionPointerType)currentDelegate->___invoke_impl_1)((Il2CppObject*)currentDelegate->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(currentDelegate->___method_3));
	}
}
void MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031_OpenInst(MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* __this, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	NullCheck(___0_value);
	typedef void (*FunctionPointerType) (Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031_OpenStatic(MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* __this, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (*FunctionPointerType) (Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___method_ptr_0)(___0_value, ___1_position, method);
}
void MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031_OpenStaticInvoker(MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* __this, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker2< Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, ___0_value, ___1_position);
}
void MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031_ClosedStaticInvoker(MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* __this, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	InvokerActionInvoker3< RuntimeObject*, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, int32_t* >::Invoke(__this->___method_ptr_0, method, NULL, __this->___m_target_2, ___0_value, ___1_position);
}
IL2CPP_EXTERN_C  void DelegatePInvokeWrapper_MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46 (MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* __this, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* ___0_value, int32_t* ___1_position, const RuntimeMethod* method)
{
	typedef void (CDECL *PInvokeFunc)(Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_reverse_pinvoke_function_ptr(__this));
	// Native function invocation
	il2cppPInvokeFunc(___0_value, ___1_position);

}
// System.Void OpenCvSharp.MatForeachFunctionVec6d::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6d__ctor_m98B39A39CDC43790F9A04F0F8D635000B47710D4 (MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* __this, RuntimeObject* ___0_object, intptr_t ___1_method, const RuntimeMethod* method) 
{
	__this->___method_ptr_0 = il2cpp_codegen_get_virtual_call_method_pointer((RuntimeMethod*)___1_method);
	__this->___method_3 = ___1_method;
	__this->___m_target_2 = ___0_object;
	Il2CppCodeGenWriteBarrier((void**)(&__this->___m_target_2), (void*)___0_object);
	int parameterCount = il2cpp_codegen_method_parameter_count((RuntimeMethod*)___1_method);
	__this->___method_code_6 = (intptr_t)__this;
	if (MethodIsStatic((RuntimeMethod*)___1_method))
	{
		bool isOpen = parameterCount == 2;
		if (il2cpp_codegen_call_method_via_invoker((RuntimeMethod*)___1_method))
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031_OpenStaticInvoker;
			else
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031_ClosedStaticInvoker;
		else
			if (isOpen)
				__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031_OpenStatic;
			else
				{
					__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
					__this->___method_code_6 = (intptr_t)__this->___m_target_2;
				}
	}
	else
	{
		bool isOpen = parameterCount == 1;
		if (isOpen)
		{
			__this->___invoke_impl_1 = (intptr_t)&MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031_OpenInst;
		}
		else
		{
			if (___0_object == NULL)
				il2cpp_codegen_raise_exception(il2cpp_codegen_get_argument_exception(NULL, "Delegate to an instance method cannot have null 'this'."), NULL);
			__this->___invoke_impl_1 = (intptr_t)__this->___method_ptr_0;
			__this->___method_code_6 = (intptr_t)__this->___m_target_2;
		}
	}
	__this->___extra_arg_5 = (intptr_t)&MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031_Multicast;
}
// System.Void OpenCvSharp.MatForeachFunctionVec6d::Invoke(OpenCvSharp.Vec6d*,System.Int32*)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6d_Invoke_m109CA0ADB0DD42342EE5EB304BD211EBB3392031 (MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* __this, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* ___0_value, int32_t* ___1_position, const RuntimeMethod* method) 
{
	typedef void (*FunctionPointerType) (RuntimeObject*, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6*, int32_t*, const RuntimeMethod*);
	((FunctionPointerType)__this->___invoke_impl_1)((Il2CppObject*)__this->___method_code_6, ___0_value, ___1_position, reinterpret_cast<RuntimeMethod*>(__this->___method_3));
}
// System.IAsyncResult OpenCvSharp.MatForeachFunctionVec6d::BeginInvoke(OpenCvSharp.Vec6d*,System.Int32*,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* MatForeachFunctionVec6d_BeginInvoke_m3C51FB4E3AE1C3F735D12C78BD512F69F95F5D16 (MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* __this, Vec6d_t940099690D4D0EB072B0F7A940F33C6FE0EDFCD6* ___0_value, int32_t* ___1_position, AsyncCallback_t7FEF460CBDCFB9C5FA2EF776984778B9A4145F4C* ___2_callback, RuntimeObject* ___3_object, const RuntimeMethod* method) 
{
	void *__d_args[3] = {0};
	__d_args[0] = ___0_value;
	__d_args[1] = ___1_position;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___2_callback, (RuntimeObject*)___3_object);
}
// System.Void OpenCvSharp.MatForeachFunctionVec6d::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatForeachFunctionVec6d_EndInvoke_m48C62FE2DD18524056E1B99DECED349B478F407C (MatForeachFunctionVec6d_tA03EFFDD425E1A67808E7DACBBD496DEB341BB46* __this, RuntimeObject* ___0_result, const RuntimeMethod* method) 
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___0_result, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.DisposableCvObject::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableCvObject__ctor_m05A31FCADC967DF10B188DE00FFF3694F95C995F (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, const RuntimeMethod* method) 
{
	{
		// : this(true)
		DisposableCvObject__ctor_m41887DAB638C665CF365855F8C3D82E9336DC9E1(__this, (bool)1, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.DisposableCvObject::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableCvObject__ctor_m3CDC98287C8AEFC860B1EE4886C68581BF660EF9 (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	{
		// : this(ptr, true)
		intptr_t L_0 = ___0_ptr;
		DisposableCvObject__ctor_mC31F76092B568A6963897A966AEF1DAF527CE716(__this, L_0, (bool)1, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.DisposableCvObject::.ctor(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableCvObject__ctor_m41887DAB638C665CF365855F8C3D82E9336DC9E1 (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, bool ___0_isEnabledDispose, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// : this(IntPtr.Zero, isEnabledDispose)
		intptr_t L_0 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_1 = ___0_isEnabledDispose;
		DisposableCvObject__ctor_mC31F76092B568A6963897A966AEF1DAF527CE716(__this, L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.DisposableCvObject::.ctor(System.IntPtr,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableCvObject__ctor_mC31F76092B568A6963897A966AEF1DAF527CE716 (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, intptr_t ___0_ptr, bool ___1_isEnabledDispose, const RuntimeMethod* method) 
{
	{
		// : base(isEnabledDispose)
		bool L_0 = ___1_isEnabledDispose;
		DisposableObject__ctor_m36FD2664A3D1B6AA9663FC911CCC25FC01792138(__this, L_0, NULL);
		// this.ptr = ptr;
		intptr_t L_1 = ___0_ptr;
		__this->___ptr_5 = L_1;
		// }
		return;
	}
}
// System.Void OpenCvSharp.DisposableCvObject::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableCvObject_Dispose_mCA9D565F6EDDDFAAFEA0D38A92CEE3F7BD207A30 (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, bool ___0_disposing, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!disposed)
		bool L_0 = __this->___disposed_6;
		if (L_0)
		{
			goto IL_002a;
		}
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0022:
			{// begin finally (depth: 1)
				// base.Dispose(disposing);
				bool L_1 = ___0_disposing;
				DisposableObject_Dispose_m6D7DA763F8714523AA45C02F531467F1CCE1C224(__this, L_1, NULL);
				// }
				return;
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			// DisposeUnmanaged();
			VirtualActionInvoker0::Invoke(7 /* System.Void OpenCvSharp.DisposableCvObject::DisposeUnmanaged() */, __this);
			// ptr = IntPtr.Zero;
			intptr_t L_2 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
			__this->___ptr_5 = L_2;
			// disposed = true;
			__this->___disposed_6 = (bool)1;
			// }
			goto IL_002a;
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_002a:
	{
		// }
		return;
	}
}
// System.Void OpenCvSharp.DisposableCvObject::DisposeUnmanaged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableCvObject_DisposeUnmanaged_mD8DCCE9360776001EEE03A3E4D9BBF86AE45630E (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, const RuntimeMethod* method) 
{
	{
		// {}
		return;
	}
}
// System.IntPtr OpenCvSharp.DisposableCvObject::get_CvPtr()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02 (DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184* __this, const RuntimeMethod* method) 
{
	{
		// ThrowIfDisposed();
		DisposableObject_ThrowIfDisposed_mA5F51D2CAF32F7920CB1138EC3EC17B47BF25E7A(__this, NULL);
		// return ptr;
		intptr_t L_0 = __this->___ptr_5;
		return L_0;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.DisposableObject::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject__ctor_m0245E2F95FB30266C437C5268E973D1996977903 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		// : this(true)
		DisposableObject__ctor_m36FD2664A3D1B6AA9663FC911CCC25FC01792138(__this, (bool)1, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.DisposableObject::.ctor(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject__ctor_m36FD2664A3D1B6AA9663FC911CCC25FC01792138 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, bool ___0_isEnabledDispose, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected DisposableObject(bool isEnabledDispose)
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		// IsDisposed = false;
		DisposableObject_set_IsDisposed_mA0005D0FD1A0BB5E8DA844657B2E152A8ECE3ADC_inline(__this, (bool)0, NULL);
		// IsEnabledDispose = isEnabledDispose;
		bool L_0 = ___0_isEnabledDispose;
		DisposableObject_set_IsEnabledDispose_mB886867456A19E213A63A8707821F084F869C9DF_inline(__this, L_0, NULL);
		// AllocatedMemory = IntPtr.Zero;
		intptr_t L_1 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		DisposableObject_set_AllocatedMemory_mC4FA83EBA3AC845682C433724E5BE2BE7F99204F_inline(__this, L_1, NULL);
		// AllocatedMemorySize = 0;
		DisposableObject_set_AllocatedMemorySize_m7C716591244CD0B57AD7ACF322F30628E0C3736B_inline(__this, ((int64_t)0), NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.DisposableObject::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_Dispose_m623521DB9F2CD39AE5FE628B6117275CDB50E549 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// Dispose(true);
		VirtualActionInvoker1< bool >::Invoke(5 /* System.Void OpenCvSharp.DisposableObject::Dispose(System.Boolean) */, __this, (bool)1);
		// GC.SuppressFinalize(this);
		il2cpp_codegen_runtime_class_init_inline(GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		GC_SuppressFinalize_m71815DBD5A0CD2EA1BE43317B08B7A14949EDC65(__this, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.DisposableObject::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_Dispose_m6D7DA763F8714523AA45C02F531467F1CCE1C224 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, bool ___0_disposing, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!IsDisposed)
		bool L_0;
		L_0 = DisposableObject_get_IsDisposed_mF81D363015F20AD14CEE607DC64317A7FDCB3C5E_inline(__this, NULL);
		if (L_0)
		{
			goto IL_006e;
		}
	}
	{
		// if (disposing)
		bool L_1 = ___0_disposing;
		// if (dataHandle.IsAllocated)
		GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC* L_2 = (&__this->___dataHandle_2);
		bool L_3;
		L_3 = GCHandle_get_IsAllocated_m241908103D8D867E11CCAB73C918729825E86843(L_2, NULL);
		if (!L_3)
		{
			goto IL_0022;
		}
	}
	{
		// dataHandle.Free();
		GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC* L_4 = (&__this->___dataHandle_2);
		GCHandle_Free_m1320A260E487EB1EA6D95F9E54BFFCB5A4EF83A3(L_4, NULL);
	}

IL_0022:
	{
		// if (AllocatedMemorySize > 0)
		int64_t L_5;
		L_5 = DisposableObject_get_AllocatedMemorySize_m89AE6049FB8157D330B952DCED0D83015BDF2784_inline(__this, NULL);
		if ((((int64_t)L_5) <= ((int64_t)((int64_t)0))))
		{
			goto IL_003f;
		}
	}
	{
		// GC.RemoveMemoryPressure(AllocatedMemorySize);
		int64_t L_6;
		L_6 = DisposableObject_get_AllocatedMemorySize_m89AE6049FB8157D330B952DCED0D83015BDF2784_inline(__this, NULL);
		il2cpp_codegen_runtime_class_init_inline(GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		GC_RemoveMemoryPressure_m3EE41BF97E0111CE4A622AD1405D80AB2A13E9C9(L_6, NULL);
		// AllocatedMemorySize = 0;
		DisposableObject_set_AllocatedMemorySize_m7C716591244CD0B57AD7ACF322F30628E0C3736B_inline(__this, ((int64_t)0), NULL);
	}

IL_003f:
	{
		// if (AllocatedMemory != IntPtr.Zero)
		intptr_t L_7;
		L_7 = DisposableObject_get_AllocatedMemory_m3EB0D007AFC7D603BD7EB8047B3722AD3F5AFCB5_inline(__this, NULL);
		intptr_t L_8 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_9;
		L_9 = IntPtr_op_Inequality_m90EFC9C4CAD9A33E309F2DDF98EE4E1DD253637B(L_7, L_8, NULL);
		if (!L_9)
		{
			goto IL_0067;
		}
	}
	{
		// Marshal.FreeHGlobal(AllocatedMemory);
		intptr_t L_10;
		L_10 = DisposableObject_get_AllocatedMemory_m3EB0D007AFC7D603BD7EB8047B3722AD3F5AFCB5_inline(__this, NULL);
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		Marshal_FreeHGlobal_m298EF0650E82E326EDA8048488DC384BB9171EB9(L_10, NULL);
		// AllocatedMemory = IntPtr.Zero;
		intptr_t L_11 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		DisposableObject_set_AllocatedMemory_mC4FA83EBA3AC845682C433724E5BE2BE7F99204F_inline(__this, L_11, NULL);
	}

IL_0067:
	{
		// IsDisposed = true;
		DisposableObject_set_IsDisposed_mA0005D0FD1A0BB5E8DA844657B2E152A8ECE3ADC_inline(__this, (bool)1, NULL);
	}

IL_006e:
	{
		// }
		return;
	}
}
// System.Void OpenCvSharp.DisposableObject::Finalize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_Finalize_m4DE35297482CF13EECE4185E8735EA781C428238 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0009:
			{// begin finally (depth: 1)
				// }
				Object_Finalize_mC98C96301CCABFE00F1A7EF8E15DF507CACD42B2(__this, NULL);
				return;
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			// Dispose(false);
			VirtualActionInvoker1< bool >::Invoke(5 /* System.Void OpenCvSharp.DisposableObject::Dispose(System.Boolean) */, __this, (bool)0);
			goto IL_0010;
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0010:
	{
		// }
		return;
	}
}
// System.Boolean OpenCvSharp.DisposableObject::get_IsDisposed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool DisposableObject_get_IsDisposed_mF81D363015F20AD14CEE607DC64317A7FDCB3C5E (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		// public bool IsDisposed { get; protected set; }
		bool L_0 = __this->___U3CIsDisposedU3Ek__BackingField_0;
		return L_0;
	}
}
// System.Void OpenCvSharp.DisposableObject::set_IsDisposed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_set_IsDisposed_mA0005D0FD1A0BB5E8DA844657B2E152A8ECE3ADC (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, bool ___0_value, const RuntimeMethod* method) 
{
	{
		// public bool IsDisposed { get; protected set; }
		bool L_0 = ___0_value;
		__this->___U3CIsDisposedU3Ek__BackingField_0 = L_0;
		return;
	}
}
// System.Boolean OpenCvSharp.DisposableObject::get_IsEnabledDispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool DisposableObject_get_IsEnabledDispose_mFCE8D52E214E0DB33641495A16EB7A1131EA3CF4 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		// public bool IsEnabledDispose { get; set; }
		bool L_0 = __this->___U3CIsEnabledDisposeU3Ek__BackingField_1;
		return L_0;
	}
}
// System.Void OpenCvSharp.DisposableObject::set_IsEnabledDispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_set_IsEnabledDispose_mB886867456A19E213A63A8707821F084F869C9DF (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, bool ___0_value, const RuntimeMethod* method) 
{
	{
		// public bool IsEnabledDispose { get; set; }
		bool L_0 = ___0_value;
		__this->___U3CIsEnabledDisposeU3Ek__BackingField_1 = L_0;
		return;
	}
}
// System.IntPtr OpenCvSharp.DisposableObject::get_AllocatedMemory()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t DisposableObject_get_AllocatedMemory_m3EB0D007AFC7D603BD7EB8047B3722AD3F5AFCB5 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		// protected IntPtr AllocatedMemory { get; set; }
		intptr_t L_0 = __this->___U3CAllocatedMemoryU3Ek__BackingField_3;
		return L_0;
	}
}
// System.Void OpenCvSharp.DisposableObject::set_AllocatedMemory(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_set_AllocatedMemory_mC4FA83EBA3AC845682C433724E5BE2BE7F99204F (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, intptr_t ___0_value, const RuntimeMethod* method) 
{
	{
		// protected IntPtr AllocatedMemory { get; set; }
		intptr_t L_0 = ___0_value;
		__this->___U3CAllocatedMemoryU3Ek__BackingField_3 = L_0;
		return;
	}
}
// System.Int64 OpenCvSharp.DisposableObject::get_AllocatedMemorySize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t DisposableObject_get_AllocatedMemorySize_m89AE6049FB8157D330B952DCED0D83015BDF2784 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		// protected long AllocatedMemorySize { get; set; }
		int64_t L_0 = __this->___U3CAllocatedMemorySizeU3Ek__BackingField_4;
		return L_0;
	}
}
// System.Void OpenCvSharp.DisposableObject::set_AllocatedMemorySize(System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_set_AllocatedMemorySize_m7C716591244CD0B57AD7ACF322F30628E0C3736B (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, int64_t ___0_value, const RuntimeMethod* method) 
{
	{
		// protected long AllocatedMemorySize { get; set; }
		int64_t L_0 = ___0_value;
		__this->___U3CAllocatedMemorySizeU3Ek__BackingField_4 = L_0;
		return;
	}
}
// System.Runtime.InteropServices.GCHandle OpenCvSharp.DisposableObject::AllocGCHandle(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC DisposableObject_AllocGCHandle_mE7F2A120B64B01E711AEC06AD8A16222C95F38B0 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, RuntimeObject* ___0_obj, const RuntimeMethod* method) 
{
	{
		// if (obj == null)
		RuntimeObject* L_0 = ___0_obj;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(obj)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral79AD99A8F867BAA9972639D17AA53B3047D3C3C2)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&DisposableObject_AllocGCHandle_mE7F2A120B64B01E711AEC06AD8A16222C95F38B0_RuntimeMethod_var)));
	}

IL_000e:
	{
		// if (dataHandle.IsAllocated)
		GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC* L_2 = (&__this->___dataHandle_2);
		bool L_3;
		L_3 = GCHandle_get_IsAllocated_m241908103D8D867E11CCAB73C918729825E86843(L_2, NULL);
		if (!L_3)
		{
			goto IL_0026;
		}
	}
	{
		// dataHandle.Free();
		GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC* L_4 = (&__this->___dataHandle_2);
		GCHandle_Free_m1320A260E487EB1EA6D95F9E54BFFCB5A4EF83A3(L_4, NULL);
	}

IL_0026:
	{
		// dataHandle = GCHandle.Alloc(obj, GCHandleType.Pinned);
		RuntimeObject* L_5 = ___0_obj;
		GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC L_6;
		L_6 = GCHandle_Alloc_m3BFD398427352FC756FFE078F01A504B681352EC(L_5, 3, NULL);
		__this->___dataHandle_2 = L_6;
		// return dataHandle;
		GCHandle_tC44F6F72EE68BD4CFABA24309DA7A179D41127DC L_7 = __this->___dataHandle_2;
		return L_7;
	}
}
// System.IntPtr OpenCvSharp.DisposableObject::AllocMemory(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t DisposableObject_AllocMemory_mDFD32B464D5B6FC99468C1D09301075C70B19EED (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, int32_t ___0_size, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (size <= 0)
		int32_t L_0 = ___0_size;
		if ((((int32_t)L_0) > ((int32_t)0)))
		{
			goto IL_000f;
		}
	}
	{
		// throw new ArgumentOutOfRangeException("nameof(size)");
		ArgumentOutOfRangeException_tEA2822DAF62B10EEED00E0E3A341D4BAF78CF85F* L_1 = (ArgumentOutOfRangeException_tEA2822DAF62B10EEED00E0E3A341D4BAF78CF85F*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentOutOfRangeException_tEA2822DAF62B10EEED00E0E3A341D4BAF78CF85F_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentOutOfRangeException__ctor_mBC1D5DEEA1BA41DE77228CB27D6BAFEB6DCCBF4A(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral8528CDFE4AAF036976077F3DD300CA7AC2A580FE)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&DisposableObject_AllocMemory_mDFD32B464D5B6FC99468C1D09301075C70B19EED_RuntimeMethod_var)));
	}

IL_000f:
	{
		// if (AllocatedMemory != IntPtr.Zero)
		intptr_t L_2;
		L_2 = DisposableObject_get_AllocatedMemory_m3EB0D007AFC7D603BD7EB8047B3722AD3F5AFCB5_inline(__this, NULL);
		intptr_t L_3 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_4;
		L_4 = IntPtr_op_Inequality_m90EFC9C4CAD9A33E309F2DDF98EE4E1DD253637B(L_2, L_3, NULL);
		if (!L_4)
		{
			goto IL_002c;
		}
	}
	{
		// Marshal.FreeHGlobal(AllocatedMemory);
		intptr_t L_5;
		L_5 = DisposableObject_get_AllocatedMemory_m3EB0D007AFC7D603BD7EB8047B3722AD3F5AFCB5_inline(__this, NULL);
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		Marshal_FreeHGlobal_m298EF0650E82E326EDA8048488DC384BB9171EB9(L_5, NULL);
	}

IL_002c:
	{
		// AllocatedMemory = Marshal.AllocHGlobal(size);
		int32_t L_6 = ___0_size;
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		intptr_t L_7;
		L_7 = Marshal_AllocHGlobal_mE1D700DF967E28BE8AB3E0D67C81A96B4FCC8F4F(L_6, NULL);
		DisposableObject_set_AllocatedMemory_mC4FA83EBA3AC845682C433724E5BE2BE7F99204F_inline(__this, L_7, NULL);
		// NotifyMemoryPressure(size);
		int32_t L_8 = ___0_size;
		DisposableObject_NotifyMemoryPressure_mC00A1BF0C19CA5A3F25C036C04FF993CDBF23692(__this, ((int64_t)L_8), NULL);
		// return AllocatedMemory;
		intptr_t L_9;
		L_9 = DisposableObject_get_AllocatedMemory_m3EB0D007AFC7D603BD7EB8047B3722AD3F5AFCB5_inline(__this, NULL);
		return L_9;
	}
}
// System.Void OpenCvSharp.DisposableObject::NotifyMemoryPressure(System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_NotifyMemoryPressure_mC00A1BF0C19CA5A3F25C036C04FF993CDBF23692 (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, int64_t ___0_size, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!IsEnabledDispose)
		bool L_0;
		L_0 = DisposableObject_get_IsEnabledDispose_mFCE8D52E214E0DB33641495A16EB7A1131EA3CF4_inline(__this, NULL);
		if (L_0)
		{
			goto IL_0009;
		}
	}
	{
		// return;
		return;
	}

IL_0009:
	{
		// if (size == 0)
		int64_t L_1 = ___0_size;
		if (L_1)
		{
			goto IL_000d;
		}
	}
	{
		// return;
		return;
	}

IL_000d:
	{
		// if (size <= 0)
		int64_t L_2 = ___0_size;
		if ((((int64_t)L_2) > ((int64_t)((int64_t)0))))
		{
			goto IL_001d;
		}
	}
	{
		// throw new ArgumentOutOfRangeException("nameof(size)");
		ArgumentOutOfRangeException_tEA2822DAF62B10EEED00E0E3A341D4BAF78CF85F* L_3 = (ArgumentOutOfRangeException_tEA2822DAF62B10EEED00E0E3A341D4BAF78CF85F*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentOutOfRangeException_tEA2822DAF62B10EEED00E0E3A341D4BAF78CF85F_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentOutOfRangeException__ctor_mBC1D5DEEA1BA41DE77228CB27D6BAFEB6DCCBF4A(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral8528CDFE4AAF036976077F3DD300CA7AC2A580FE)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&DisposableObject_NotifyMemoryPressure_mC00A1BF0C19CA5A3F25C036C04FF993CDBF23692_RuntimeMethod_var)));
	}

IL_001d:
	{
		// if (AllocatedMemorySize > 0)
		int64_t L_4;
		L_4 = DisposableObject_get_AllocatedMemorySize_m89AE6049FB8157D330B952DCED0D83015BDF2784_inline(__this, NULL);
		if ((((int64_t)L_4) <= ((int64_t)((int64_t)0))))
		{
			goto IL_0032;
		}
	}
	{
		// GC.RemoveMemoryPressure(AllocatedMemorySize);
		int64_t L_5;
		L_5 = DisposableObject_get_AllocatedMemorySize_m89AE6049FB8157D330B952DCED0D83015BDF2784_inline(__this, NULL);
		il2cpp_codegen_runtime_class_init_inline(GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		GC_RemoveMemoryPressure_m3EE41BF97E0111CE4A622AD1405D80AB2A13E9C9(L_5, NULL);
	}

IL_0032:
	{
		// AllocatedMemorySize = size;
		int64_t L_6 = ___0_size;
		DisposableObject_set_AllocatedMemorySize_m7C716591244CD0B57AD7ACF322F30628E0C3736B_inline(__this, L_6, NULL);
		// GC.AddMemoryPressure(size);
		int64_t L_7 = ___0_size;
		il2cpp_codegen_runtime_class_init_inline(GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		GC_AddMemoryPressure_m6B1B48F81C8FB61E1E5E838BCAC7B91DFBAA690F(L_7, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.DisposableObject::ThrowIfDisposed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DisposableObject_ThrowIfDisposed_mA5F51D2CAF32F7920CB1138EC3EC17B47BF25E7A (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		// if (IsDisposed)
		bool L_0;
		L_0 = DisposableObject_get_IsDisposed_mF81D363015F20AD14CEE607DC64317A7FDCB3C5E_inline(__this, NULL);
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().FullName);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(25 /* System.String System.Type::get_FullName() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&DisposableObject_ThrowIfDisposed_mA5F51D2CAF32F7920CB1138EC3EC17B47BF25E7A_RuntimeMethod_var)));
	}

IL_0019:
	{
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Byte[] OpenCvSharp.MatProxy::get_ImageData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* MatProxy_get_ImageData_m6CEDD6EEA6CA151909D5849120B047B3462CC049 (MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8* __this, const RuntimeMethod* method) 
{
	{
		// public byte[] ImageData { get; private set; }
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = __this->___U3CImageDataU3Ek__BackingField_0;
		return L_0;
	}
}
// System.Void OpenCvSharp.MatProxy::set_ImageData(System.Byte[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatProxy_set_ImageData_m5EC27313F53BC18F0CA955F5E1852304963D700F (MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8* __this, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_value, const RuntimeMethod* method) 
{
	{
		// public byte[] ImageData { get; private set; }
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = ___0_value;
		__this->___U3CImageDataU3Ek__BackingField_0 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CImageDataU3Ek__BackingField_0), (void*)L_0);
		return;
	}
}
// System.Void OpenCvSharp.MatProxy::.ctor(OpenCvSharp.Mat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatProxy__ctor_mC965E4E698269F47248CA67F5574DBCF8CFCEBAA (MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8* __this, Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___0_image, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&_stringLiteralA15C898F015A9B0BC3268E8883CD03008A56DE26);
		s_Il2CppMethodInitialized = true;
	}
	Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* V_0 = NULL;
	{
		// public MatProxy(Mat image)
		Object__ctor_mE837C6B9FA8C6D5D109F4B2EC885D79919AC0EA2(__this, NULL);
		// using (var converted = new Mat())
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_0 = (Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE*)il2cpp_codegen_object_new(Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		Mat__ctor_m0A8F1AFED1627CE035E6F7239B618819CEDFDA2A(L_0, NULL);
		V_0 = L_0;
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0028:
			{// begin finally (depth: 1)
				{
					Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_1 = V_0;
					if (!L_1)
					{
						goto IL_0031;
					}
				}
				{
					Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_2 = V_0;
					NullCheck(L_2);
					InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var, L_2);
				}

IL_0031:
				{
					return;
				}
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			// Cv2.ConvertImage(image, converted);
			Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_3 = ___0_image;
			Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_4 = V_0;
			Cv2_ConvertImage_mBF93C206A75E82A888A031E4D32884DDABD1F7B4(L_3, L_4, 0, NULL);
			// ImageData = converted.ToBytes(".png");
			Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_5 = V_0;
			NullCheck(L_5);
			ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_6;
			L_6 = Mat_ToBytes_m840E137FAC14517B4E1358AD173FAD2B152B591B(L_5, _stringLiteralA15C898F015A9B0BC3268E8883CD03008A56DE26, (Int32U5BU5D_t19C97395396A72ECAF310612F0760F165060314C*)NULL, NULL);
			MatProxy_set_ImageData_m5EC27313F53BC18F0CA955F5E1852304963D700F_inline(__this, L_6, NULL);
			// }
			goto IL_0032;
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0032:
	{
		// }
		return;
	}
}
// System.Void OpenCvSharp.MatProxy::Dispose()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void MatProxy_Dispose_mA29F4B87AFB6B2A172A6A462C57854FFC4BF2DA9 (MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8* __this, const RuntimeMethod* method) 
{
	{
		// ImageData = null;
		MatProxy_set_ImageData_m5EC27313F53BC18F0CA955F5E1852304963D700F_inline(__this, (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)NULL, NULL);
		// }
		return;
	}
}
// System.IO.Stream OpenCvSharp.MatProxy::CreateBitmapStream()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Stream_tF844051B786E8F7F4244DBD218D74E8617B9A2DE* MatProxy_CreateBitmapStream_m48BB40C82BC3454B80BC454A58B7C077BBC29C86 (MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&MemoryStream_tAAED1B42172E3390584E4194308AB878E786AAC2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (ImageData == null)
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0;
		L_0 = MatProxy_get_ImageData_m6CEDD6EEA6CA151909D5849120B047B3462CC049_inline(__this, NULL);
		if (L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new Exception("ImageData == null");
		Exception_t* L_1 = (Exception_t*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Exception_t_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		Exception__ctor_m9B2BD92CD68916245A75109105D9071C9D430E7F(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralEB6EF8C308F5C67887945DB057157A820EDB1DDF)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&MatProxy_CreateBitmapStream_m48BB40C82BC3454B80BC454A58B7C077BBC29C86_RuntimeMethod_var)));
	}

IL_0013:
	{
		// return new MemoryStream(ImageData);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_2;
		L_2 = MatProxy_get_ImageData_m6CEDD6EEA6CA151909D5849120B047B3462CC049_inline(__this, NULL);
		MemoryStream_tAAED1B42172E3390584E4194308AB878E786AAC2* L_3 = (MemoryStream_tAAED1B42172E3390584E4194308AB878E786AAC2*)il2cpp_codegen_object_new(MemoryStream_tAAED1B42172E3390584E4194308AB878E786AAC2_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		MemoryStream__ctor_m662CA0D5A0004A2E3B475FE8DCD687B654870AA2(L_3, L_2, NULL);
		return L_3;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// OpenCvSharp.BackgroundSubtractorGMG OpenCvSharp.BackgroundSubtractorGMG::Create(System.Int32,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* BackgroundSubtractorGMG_Create_m45FDE188F36B105EDA785AEA60C2512D79DEB3F0 (int32_t ___0_initializationFrames, double ___1_decisionThreshold, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// IntPtr ptr = NativeMethods.bgsegm_createBackgroundSubtractorGMG(
		//     initializationFrames, decisionThreshold);
		int32_t L_0 = ___0_initializationFrames;
		double L_1 = ___1_decisionThreshold;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_2;
		L_2 = NativeMethods_bgsegm_createBackgroundSubtractorGMG_mF432F351B79FE09B1258E2104B8ABD13D3D026A4(L_0, L_1, NULL);
		// return new BackgroundSubtractorGMG(ptr);
		BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* L_3 = (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D*)il2cpp_codegen_object_new(BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		BackgroundSubtractorGMG__ctor_m2E977A400EA93798FDBC07DBB44B14A65EC7A715(L_3, L_2, NULL);
		return L_3;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG__ctor_m2E977A400EA93798FDBC07DBB44B14A65EC7A715 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Ptr_1__ctor_m94746AB5A3C199F0AE82A73D9E5F88086A5CB590_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Ptr_1_tD22569946308A3D2387E04238F3B86016A293509_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// internal BackgroundSubtractorGMG(IntPtr ptr)
		BackgroundSubtractor__ctor_m20DDAC97675BA2270B2167508E2FCF87971D8FC6(__this, NULL);
		// this.objectPtr = new Ptr<BackgroundSubtractorGMG>(ptr);
		intptr_t L_0 = ___0_ptr;
		Ptr_1_tD22569946308A3D2387E04238F3B86016A293509* L_1 = (Ptr_1_tD22569946308A3D2387E04238F3B86016A293509*)il2cpp_codegen_object_new(Ptr_1_tD22569946308A3D2387E04238F3B86016A293509_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Ptr_1__ctor_m94746AB5A3C199F0AE82A73D9E5F88086A5CB590(L_1, L_0, Ptr_1__ctor_m94746AB5A3C199F0AE82A73D9E5F88086A5CB590_RuntimeMethod_var);
		__this->___objectPtr_7 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___objectPtr_7), (void*)L_1);
		// this.ptr = objectPtr.Get();
		Ptr_1_tD22569946308A3D2387E04238F3B86016A293509* L_2 = __this->___objectPtr_7;
		NullCheck(L_2);
		intptr_t L_3;
		L_3 = VirtualFuncInvoker0< intptr_t >::Invoke(8 /* System.IntPtr OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorGMG>::Get() */, L_2);
		((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_3;
		// }
		return;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_Dispose_m9D9BB6D472251E65EF96451E542F4205378FA328 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, bool ___0_disposing, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!disposed)
		bool L_0 = __this->___disposed_8;
		if (L_0)
		{
			goto IL_0048;
		}
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0040:
			{// begin finally (depth: 1)
				// base.Dispose(disposing);
				bool L_1 = ___0_disposing;
				DisposableCvObject_Dispose_mCA9D565F6EDDDFAAFEA0D38A92CEE3F7BD207A30(__this, L_1, NULL);
				// }
				return;
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			{
				// if (disposing)
				bool L_2 = ___0_disposing;
				// if (IsEnabledDispose)
				bool L_3;
				L_3 = DisposableObject_get_IsEnabledDispose_mFCE8D52E214E0DB33641495A16EB7A1131EA3CF4_inline(__this, NULL);
				if (!L_3)
				{
					goto IL_0037_1;
				}
			}
			{
				// if (objectPtr != null)
				Ptr_1_tD22569946308A3D2387E04238F3B86016A293509* L_4 = __this->___objectPtr_7;
				if (!L_4)
				{
					goto IL_0025_1;
				}
			}
			{
				// objectPtr.Dispose();
				Ptr_1_tD22569946308A3D2387E04238F3B86016A293509* L_5 = __this->___objectPtr_7;
				NullCheck(L_5);
				DisposableObject_Dispose_m623521DB9F2CD39AE5FE628B6117275CDB50E549(L_5, NULL);
			}

IL_0025_1:
			{
				// objectPtr = null;
				__this->___objectPtr_7 = (Ptr_1_tD22569946308A3D2387E04238F3B86016A293509*)NULL;
				Il2CppCodeGenWriteBarrier((void**)(&__this->___objectPtr_7), (void*)(Ptr_1_tD22569946308A3D2387E04238F3B86016A293509*)NULL);
				// ptr = IntPtr.Zero;
				intptr_t L_6 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
				((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_6;
			}

IL_0037_1:
			{
				// disposed = true;
				__this->___disposed_8 = (bool)1;
				// }
				goto IL_0048;
			}
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0048:
	{
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.BackgroundSubtractorGMG::get_MaxFeatures()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BackgroundSubtractorGMG_get_MaxFeatures_m15AB12BBB16426E8C5F9363CF29387872C430088 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_get_MaxFeatures_m15AB12BBB16426E8C5F9363CF29387872C430088_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorGMG_getMaxFeatures(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorGMG_getMaxFeatures_m63031B6F8BFF6B336D818C73E91AF7C82389CA10(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::set_MaxFeatures(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_set_MaxFeatures_m421598D9F99F8E5C560F438EC09B632B2E18B721 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_set_MaxFeatures_m421598D9F99F8E5C560F438EC09B632B2E18B721_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorGMG_setMaxFeatures(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorGMG_setMaxFeatures_mE92697EB6FA5437261686004FC463560219051AD(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Double OpenCvSharp.BackgroundSubtractorGMG::get_DefaultLearningRate()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double BackgroundSubtractorGMG_get_DefaultLearningRate_m5C131C9EFF93FF8FACA2C43144B2462BC2BE92AB (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_get_DefaultLearningRate_m5C131C9EFF93FF8FACA2C43144B2462BC2BE92AB_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		double L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorGMG_getDefaultLearningRate_m95F77F961FE0AE58489245DEC13B1C3C728EF291(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::set_DefaultLearningRate(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_set_DefaultLearningRate_m699432B03AD8861E35C34E8BA4F4C547E1C1F7E5 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, double ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_set_DefaultLearningRate_m699432B03AD8861E35C34E8BA4F4C547E1C1F7E5_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		double L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorGMG_setDefaultLearningRate_mB6E704F9952A759E8E638CC0AD3075FA2EAEB9EA(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.BackgroundSubtractorGMG::get_NumFrames()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BackgroundSubtractorGMG_get_NumFrames_m1B40953BA2B0AAE61806C22531B0346D6E623CC6 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_get_NumFrames_m1B40953BA2B0AAE61806C22531B0346D6E623CC6_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorGMG_getNumFrames(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorGMG_getNumFrames_mB9A3DA5E136B56B8EFB003011E7063A60DCE182B(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::set_NumFrames(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_set_NumFrames_mBA3D14071268242B5134CFA8EAE270525467756B (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_set_NumFrames_mBA3D14071268242B5134CFA8EAE270525467756B_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorGMG_setNumFrames(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorGMG_setNumFrames_mBAD4A9731C20B815A4C86C665E06970EF89A0ED5(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.BackgroundSubtractorGMG::get_QuantizationLevels()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BackgroundSubtractorGMG_get_QuantizationLevels_mE88F1A5D933D4487D9C544459C82B6EE67F37053 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_get_QuantizationLevels_mE88F1A5D933D4487D9C544459C82B6EE67F37053_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorGMG_getQuantizationLevels(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorGMG_getQuantizationLevels_m0823D53B6EF140AE877F3ECCCB554C8EE276E19B(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::set_QuantizationLevels(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_set_QuantizationLevels_mCC91D60A26B0726030376BCCCA793D1C05D5A383 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_set_QuantizationLevels_mCC91D60A26B0726030376BCCCA793D1C05D5A383_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorGMG_setQuantizationLevels(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorGMG_setQuantizationLevels_m4A58F3E6E9E8FB71C4E85C8DB1EF32FBB8C03FAC(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Double OpenCvSharp.BackgroundSubtractorGMG::get_BackgroundPrior()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double BackgroundSubtractorGMG_get_BackgroundPrior_m6274E0B0DAD21FC7438E5093FC1CBAA5A067B910 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_get_BackgroundPrior_m6274E0B0DAD21FC7438E5093FC1CBAA5A067B910_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorGMG_getBackgroundPrior(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		double L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorGMG_getBackgroundPrior_m6FE9207319E4987D2A53E8DBA43352C6A4E00113(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::set_BackgroundPrior(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_set_BackgroundPrior_m51FDA85992BDC85CF0C1422CD62D6FBF376D7F11 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, double ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_set_BackgroundPrior_m51FDA85992BDC85CF0C1422CD62D6FBF376D7F11_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorGMG_setBackgroundPrior(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		double L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorGMG_setBackgroundPrior_mC73830E4C6E8F313D1FF1F081218130152D60DD7(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.BackgroundSubtractorGMG::get_SmoothingRadius()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BackgroundSubtractorGMG_get_SmoothingRadius_mB9A91FBF0BED1D039C4A140E159F9DCCA7D2C23A (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_get_SmoothingRadius_mB9A91FBF0BED1D039C4A140E159F9DCCA7D2C23A_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorGMG_getSmoothingRadius(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorGMG_getSmoothingRadius_m16EC6C8B1A3ABE4C04D5F12A710657C576B23EC6(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::set_SmoothingRadius(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_set_SmoothingRadius_mCF50217823CFB7DEE2CD6E997476FE1219E8E5AE (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_set_SmoothingRadius_mCF50217823CFB7DEE2CD6E997476FE1219E8E5AE_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorGMG_setSmoothingRadius(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorGMG_setSmoothingRadius_m7B8FABC59AE7D0AC74BB3918A88416D9830AEB23(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Double OpenCvSharp.BackgroundSubtractorGMG::get_DecisionThreshold()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double BackgroundSubtractorGMG_get_DecisionThreshold_m90BEBB38DE0F9007EC25BCDA834268222EC3A64A (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_get_DecisionThreshold_m90BEBB38DE0F9007EC25BCDA834268222EC3A64A_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorGMG_getDecisionThreshold(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		double L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorGMG_getDecisionThreshold_m1B96DA81D16DF56BA910794082292B6BD58C0046(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::set_DecisionThreshold(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_set_DecisionThreshold_mBC3FB758C097EB1A0C536BBA44A953A1BC2926F9 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, double ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_set_DecisionThreshold_mBC3FB758C097EB1A0C536BBA44A953A1BC2926F9_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorGMG_setDecisionThreshold(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		double L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorGMG_setDecisionThreshold_m366B56BF98AF9D1CD4388B2FBF4CA5CC16785EC8(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Boolean OpenCvSharp.BackgroundSubtractorGMG::get_UpdateBackgroundModel()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool BackgroundSubtractorGMG_get_UpdateBackgroundModel_mFF2730C5CA5E8DD47938B2BCD1CB12C9C638644C (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_get_UpdateBackgroundModel_mFF2730C5CA5E8DD47938B2BCD1CB12C9C638644C_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel(ptr) != 0;
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorGMG_getUpdateBackgroundModel_mEBAA9845C8708FA80C2F49E25A0CA5E0BACA68B4(L_4, NULL);
		return (bool)((!(((uint32_t)L_5) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::set_UpdateBackgroundModel(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_set_UpdateBackgroundModel_mBC1E4EF813CC67DBB49AE82E2B701BBAA2F5E1C4 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, bool ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t G_B4_0;
	memset((&G_B4_0), 0, sizeof(G_B4_0));
	intptr_t G_B3_0;
	memset((&G_B3_0), 0, sizeof(G_B3_0));
	int32_t G_B5_0 = 0;
	intptr_t G_B5_1;
	memset((&G_B5_1), 0, sizeof(G_B5_1));
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_set_UpdateBackgroundModel_mBC1E4EF813CC67DBB49AE82E2B701BBAA2F5E1C4_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel(ptr, value ? 1 : 0);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		bool L_5 = ___0_value;
		G_B3_0 = L_4;
		if (L_5)
		{
			G_B4_0 = L_4;
			goto IL_0025;
		}
	}
	{
		G_B5_0 = 0;
		G_B5_1 = G_B3_0;
		goto IL_0026;
	}

IL_0025:
	{
		G_B5_0 = 1;
		G_B5_1 = G_B4_0;
	}

IL_0026:
	{
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorGMG_setUpdateBackgroundModel_mE56C5210272F81D26F816669693CEE4E9CCC78FD(G_B5_1, G_B5_0, NULL);
		// }
		return;
	}
}
// System.Double OpenCvSharp.BackgroundSubtractorGMG::get_MinVal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double BackgroundSubtractorGMG_get_MinVal_m82DBCA5018753C82D952BF38AB54EC14EC8ABC8D (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_get_MinVal_m82DBCA5018753C82D952BF38AB54EC14EC8ABC8D_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorGMG_getMinVal(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		double L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorGMG_getMinVal_m9195EF9CFA1FC0F810AF57496BFB926FF0C4D2EF(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::set_MinVal(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_set_MinVal_m39046350862F13425269FA015F31B3DBF8B49144 (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, double ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_set_MinVal_m39046350862F13425269FA015F31B3DBF8B49144_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorGMG_setMinVal(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		double L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorGMG_setMinVal_m3A2E7BE1F2FE252A0FE9975AEB0BC1369359258A(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Double OpenCvSharp.BackgroundSubtractorGMG::get_MaxVal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double BackgroundSubtractorGMG_get_MaxVal_m670ADA9C0FD3B011DD7A4D3397EEFB7056CDD55A (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_get_MaxVal_m670ADA9C0FD3B011DD7A4D3397EEFB7056CDD55A_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorGMG_getMaxVal(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		double L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorGMG_getMaxVal_m3509211EE923D69AA64CFC52C62AA5AB66B5111F(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorGMG::set_MaxVal(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorGMG_set_MaxVal_m8D521FB6943D3490656259DEE80815878C0B6AED (BackgroundSubtractorGMG_t2C301EFF89A367BF3CD2FD41C49A6D6430B4C98D* __this, double ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorGMG_set_MaxVal_m8D521FB6943D3490656259DEE80815878C0B6AED_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorGMG_setMaxVal(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		double L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorGMG_setMaxVal_m043335F79D117FC4FD6C723B6270318F7138336E(L_4, L_5, NULL);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// OpenCvSharp.BackgroundSubtractorMOG OpenCvSharp.BackgroundSubtractorMOG::Create(System.Int32,System.Int32,System.Double,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* BackgroundSubtractorMOG_Create_mA810230FBB255AE809D10465E22B5899AE5D5711 (int32_t ___0_history, int32_t ___1_nMixtures, double ___2_backgroundRatio, double ___3_noiseSigma, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// IntPtr ptr = NativeMethods.bgsegm_createBackgroundSubtractorMOG(
		//     history, nMixtures, backgroundRatio, noiseSigma);
		int32_t L_0 = ___0_history;
		int32_t L_1 = ___1_nMixtures;
		double L_2 = ___2_backgroundRatio;
		double L_3 = ___3_noiseSigma;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_4;
		L_4 = NativeMethods_bgsegm_createBackgroundSubtractorMOG_mD3553F98D1E5A47B37CD66559B1778B7B3C5BB59(L_0, L_1, L_2, L_3, NULL);
		// return new BackgroundSubtractorMOG(ptr);
		BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* L_5 = (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4*)il2cpp_codegen_object_new(BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4_il2cpp_TypeInfo_var);
		NullCheck(L_5);
		BackgroundSubtractorMOG__ctor_m66BA59EF54638D065F26C6BBD170D3879F6923D8(L_5, L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorMOG::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorMOG__ctor_m66BA59EF54638D065F26C6BBD170D3879F6923D8 (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Ptr_1__ctor_m2AC43EFDA6E3C373C60786FB540BD967B27A7609_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// internal BackgroundSubtractorMOG(IntPtr ptr)
		BackgroundSubtractor__ctor_m20DDAC97675BA2270B2167508E2FCF87971D8FC6(__this, NULL);
		// this.objectPtr = new Ptr<BackgroundSubtractorMOG>(ptr);
		intptr_t L_0 = ___0_ptr;
		Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11* L_1 = (Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11*)il2cpp_codegen_object_new(Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11_il2cpp_TypeInfo_var);
		NullCheck(L_1);
		Ptr_1__ctor_m2AC43EFDA6E3C373C60786FB540BD967B27A7609(L_1, L_0, Ptr_1__ctor_m2AC43EFDA6E3C373C60786FB540BD967B27A7609_RuntimeMethod_var);
		__this->___objectPtr_7 = L_1;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___objectPtr_7), (void*)L_1);
		// this.ptr = objectPtr.Get();
		Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11* L_2 = __this->___objectPtr_7;
		NullCheck(L_2);
		intptr_t L_3;
		L_3 = VirtualFuncInvoker0< intptr_t >::Invoke(8 /* System.IntPtr OpenCvSharp.Ptr`1<OpenCvSharp.BackgroundSubtractorMOG>::Get() */, L_2);
		((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_3;
		// }
		return;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorMOG::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorMOG_Dispose_mD94435968CACA28FA153A6AD44D03E40B4A5B2F7 (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, bool ___0_disposing, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!disposed)
		bool L_0 = __this->___disposed_8;
		if (L_0)
		{
			goto IL_0048;
		}
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0040:
			{// begin finally (depth: 1)
				// base.Dispose(disposing);
				bool L_1 = ___0_disposing;
				DisposableCvObject_Dispose_mCA9D565F6EDDDFAAFEA0D38A92CEE3F7BD207A30(__this, L_1, NULL);
				// }
				return;
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			{
				// if (disposing)
				bool L_2 = ___0_disposing;
				// if (IsEnabledDispose)
				bool L_3;
				L_3 = DisposableObject_get_IsEnabledDispose_mFCE8D52E214E0DB33641495A16EB7A1131EA3CF4_inline(__this, NULL);
				if (!L_3)
				{
					goto IL_0037_1;
				}
			}
			{
				// if (objectPtr != null)
				Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11* L_4 = __this->___objectPtr_7;
				if (!L_4)
				{
					goto IL_0025_1;
				}
			}
			{
				// objectPtr.Dispose();
				Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11* L_5 = __this->___objectPtr_7;
				NullCheck(L_5);
				DisposableObject_Dispose_m623521DB9F2CD39AE5FE628B6117275CDB50E549(L_5, NULL);
			}

IL_0025_1:
			{
				// objectPtr = null;
				__this->___objectPtr_7 = (Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11*)NULL;
				Il2CppCodeGenWriteBarrier((void**)(&__this->___objectPtr_7), (void*)(Ptr_1_t2D3C6E176B676CA417E2CCA8AF2038EFC2EDBB11*)NULL);
				// ptr = IntPtr.Zero;
				intptr_t L_6 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
				((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_6;
			}

IL_0037_1:
			{
				// disposed = true;
				__this->___disposed_8 = (bool)1;
				// }
				goto IL_0048;
			}
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0048:
	{
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.BackgroundSubtractorMOG::get_History()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BackgroundSubtractorMOG_get_History_m702685280203565A899D8F7987A26F7C1CC51C87 (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorMOG_get_History_m702685280203565A899D8F7987A26F7C1CC51C87_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorMOG_getHistory(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorMOG_getHistory_m8AA1E6DB10A83CC0719AA7AC632C4CF8B2543F57(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorMOG::set_History(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorMOG_set_History_m5FCC9CC2ACC25452B44AA7E77850C2420E19F4EA (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorMOG_set_History_m5FCC9CC2ACC25452B44AA7E77850C2420E19F4EA_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorMOG_setHistory(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorMOG_setHistory_m1DA569899B88FCDA4E60F162D6BD06E75DA2AF7B(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.BackgroundSubtractorMOG::get_NMixtures()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t BackgroundSubtractorMOG_get_NMixtures_m4824721550C7311B9BED8AB2CBBABA17D1DC25D9 (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorMOG_get_NMixtures_m4824721550C7311B9BED8AB2CBBABA17D1DC25D9_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorMOG_getNMixtures(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorMOG_getNMixtures_m2CBE8EB0AC47783366B9357DF58E5A35C2470283(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorMOG::set_NMixtures(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorMOG_set_NMixtures_mBD2D772EA614726C76D7FC05B1B029F5908063B1 (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorMOG_set_NMixtures_mBD2D772EA614726C76D7FC05B1B029F5908063B1_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorMOG_setNMixtures(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorMOG_setNMixtures_m78C266C7069D991ED9F971893B50B4F4BF1B4079(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Double OpenCvSharp.BackgroundSubtractorMOG::get_BackgroundRatio()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double BackgroundSubtractorMOG_get_BackgroundRatio_mA581A3D52F2682A65C50D571D00317D874EBA45F (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorMOG_get_BackgroundRatio_mA581A3D52F2682A65C50D571D00317D874EBA45F_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorMOG_getBackgroundRatio(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		double L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorMOG_getBackgroundRatio_m67A9216C0A2B8D8C365D54EB7DD2B342BDF568E5(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorMOG::set_BackgroundRatio(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorMOG_set_BackgroundRatio_mAA95FCE2EB07DF1B47FDDB25E1689C8A7470ADEE (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, double ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorMOG_set_BackgroundRatio_mAA95FCE2EB07DF1B47FDDB25E1689C8A7470ADEE_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorMOG_setBackgroundRatio(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		double L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorMOG_setBackgroundRatio_m1C3811C253AF6CFCE59C524CA4E82EF06A3D9D75(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Double OpenCvSharp.BackgroundSubtractorMOG::get_NoiseSigma()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double BackgroundSubtractorMOG_get_NoiseSigma_mA8472923CE792F549EE2D65B52AADF8E1579E204 (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorMOG_get_NoiseSigma_mA8472923CE792F549EE2D65B52AADF8E1579E204_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.bgsegm_BackgroundSubtractorMOG_getNoiseSigma(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		double L_5;
		L_5 = NativeMethods_bgsegm_BackgroundSubtractorMOG_getNoiseSigma_mABF73CF4BBB4508A17CFC2849F5AFE5AD4094A61(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.BackgroundSubtractorMOG::set_NoiseSigma(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void BackgroundSubtractorMOG_set_NoiseSigma_m2B8E7885EC6321C88F5FE8FF828811AE04E024C7 (BackgroundSubtractorMOG_t8FFFCB80574C5E714A17EFA186C539807A7781B4* __this, double ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_8;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&BackgroundSubtractorMOG_set_NoiseSigma_m2B8E7885EC6321C88F5FE8FF828811AE04E024C7_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.bgsegm_BackgroundSubtractorMOG_setNoiseSigma(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		double L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_bgsegm_BackgroundSubtractorMOG_setNoiseSigma_mC981AD991B0EB1C9B2250AEC88D01914F9CE41BA(L_4, L_5, NULL);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.StereoBM::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM__ctor_m996FEE1AC7B3B02C3BA59AC68BD587209F178360 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Ptr_1__ctor_m915520204369BC56040F82EA9DFE8301242526EE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// : base(ptr)
		intptr_t L_0 = ___0_ptr;
		StereoMatcher__ctor_mD33CF57EDED0608F5245EBFCA32F060BFB16C46B(__this, L_0, NULL);
		// ptrObj = new Ptr<StereoBM>(ptr);
		intptr_t L_1 = ___0_ptr;
		Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC* L_2 = (Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC*)il2cpp_codegen_object_new(Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		Ptr_1__ctor_m915520204369BC56040F82EA9DFE8301242526EE(L_2, L_1, Ptr_1__ctor_m915520204369BC56040F82EA9DFE8301242526EE_RuntimeMethod_var);
		__this->___ptrObj_8 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___ptrObj_8), (void*)L_2);
		// }
		return;
	}
}
// OpenCvSharp.StereoBM OpenCvSharp.StereoBM::Create(System.Int32,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* StereoBM_Create_m3639E4720C6D283DA4A167F96FFC5CFAA057E678 (int32_t ___0_numDisparities, int32_t ___1_blockSize, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// IntPtr ptrObj = NativeMethods.calib3d_StereoBM_create(numDisparities, blockSize);
		int32_t L_0 = ___0_numDisparities;
		int32_t L_1 = ___1_blockSize;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_2;
		L_2 = NativeMethods_calib3d_StereoBM_create_mA21FC1C0E3B079E2310BC6D37F4A194886F38974(L_0, L_1, NULL);
		// return new StereoBM(ptrObj);
		StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* L_3 = (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B*)il2cpp_codegen_object_new(StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		StereoBM__ctor_m996FEE1AC7B3B02C3BA59AC68BD587209F178360(L_3, L_2, NULL);
		return L_3;
	}
}
// System.Void OpenCvSharp.StereoBM::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM_Dispose_m61A8B70EE147A37E9715C658BB3D86C3AE44CFD4 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, bool ___0_disposing, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!disposed)
		bool L_0 = __this->___disposed_7;
		if (L_0)
		{
			goto IL_0048;
		}
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0040:
			{// begin finally (depth: 1)
				// base.Dispose(disposing);
				bool L_1 = ___0_disposing;
				DisposableCvObject_Dispose_mCA9D565F6EDDDFAAFEA0D38A92CEE3F7BD207A30(__this, L_1, NULL);
				// }
				return;
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			{
				// if (disposing)
				bool L_2 = ___0_disposing;
				// if (IsEnabledDispose)
				bool L_3;
				L_3 = DisposableObject_get_IsEnabledDispose_mFCE8D52E214E0DB33641495A16EB7A1131EA3CF4_inline(__this, NULL);
				if (!L_3)
				{
					goto IL_0037_1;
				}
			}
			{
				// if (ptrObj != null)
				Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC* L_4 = __this->___ptrObj_8;
				if (!L_4)
				{
					goto IL_0025_1;
				}
			}
			{
				// ptrObj.Dispose();
				Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC* L_5 = __this->___ptrObj_8;
				NullCheck(L_5);
				DisposableObject_Dispose_m623521DB9F2CD39AE5FE628B6117275CDB50E549(L_5, NULL);
			}

IL_0025_1:
			{
				// ptrObj = null;
				__this->___ptrObj_8 = (Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC*)NULL;
				Il2CppCodeGenWriteBarrier((void**)(&__this->___ptrObj_8), (void*)(Ptr_1_tBA271AE4DF38336CF4B9B58FE4E65D363D825ABC*)NULL);
				// ptr = IntPtr.Zero;
				intptr_t L_6 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
				((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_6;
			}

IL_0037_1:
			{
				// disposed = true;
				__this->___disposed_7 = (bool)1;
				// }
				goto IL_0048;
			}
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0048:
	{
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoBM::get_PreFilterType()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoBM_get_PreFilterType_mACD61A7E96A26A27D541D419CB97A83D02F31E5A (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_get_PreFilterType_mACD61A7E96A26A27D541D419CB97A83D02F31E5A_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoBM_getPreFilterType(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoBM_getPreFilterType_m6F035D48C954AD518DD8403B0E0EF7330B44328A(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoBM::set_PreFilterType(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM_set_PreFilterType_m9A9BE8611F20F56A60FB5A21EA152BAE60FB4D35 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_set_PreFilterType_m9A9BE8611F20F56A60FB5A21EA152BAE60FB4D35_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoBM_setPreFilterType(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoBM_setPreFilterType_m39BCF206E6341C9E88850769708E0F9E9DE10D3D(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoBM::get_PreFilterSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoBM_get_PreFilterSize_m26CAC7655DE07F75C8254BC961CC001EF54F102E (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_get_PreFilterSize_m26CAC7655DE07F75C8254BC961CC001EF54F102E_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoBM_getPreFilterSize(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoBM_getPreFilterSize_m3FFAB7F108CA61F880D16ECBEAC54CE1A7A1CBF8(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoBM::set_PreFilterSize(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM_set_PreFilterSize_mD2A1AB0615D7DFCCED92D1B4D203BA181FFB4FFC (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_set_PreFilterSize_mD2A1AB0615D7DFCCED92D1B4D203BA181FFB4FFC_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoBM_setPreFilterSize(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoBM_setPreFilterSize_m9064C14B27570A256B2E5F631327738BA6BFC123(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoBM::get_PreFilterCap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoBM_get_PreFilterCap_m2F2A1768EBF902405DCEC9ED49E216C87996AA9C (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_get_PreFilterCap_m2F2A1768EBF902405DCEC9ED49E216C87996AA9C_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoBM_getPreFilterCap(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoBM_getPreFilterCap_m3CCFFAE1E1A0C94399F779D087002583BD953059(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoBM::set_PreFilterCap(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM_set_PreFilterCap_m0D66B85EE4BE0F82DFF3E7C05F0DD7C16E6F7E13 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_set_PreFilterCap_m0D66B85EE4BE0F82DFF3E7C05F0DD7C16E6F7E13_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoBM_setPreFilterCap(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoBM_setPreFilterCap_m5C7A907AB6CC04822F70A118E3D80EB862A97E53(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoBM::get_TextureThreshold()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoBM_get_TextureThreshold_mA50534C66AAF7311EDCB3B942A17D3FDFF37D977 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_get_TextureThreshold_mA50534C66AAF7311EDCB3B942A17D3FDFF37D977_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoBM_getTextureThreshold(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoBM_getTextureThreshold_mDA3A702F92AC7CCC280C583D19546F1350E20317(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoBM::set_TextureThreshold(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM_set_TextureThreshold_m0D10632E3504396AB97C3A251195E17BFFBB6BF8 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_set_TextureThreshold_m0D10632E3504396AB97C3A251195E17BFFBB6BF8_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoBM_setTextureThreshold(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoBM_setTextureThreshold_m4DBD53EBCB25E98ED7F60B369C376EF863699B5A(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoBM::get_UniquenessRatio()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoBM_get_UniquenessRatio_m22CB0FEABAE41533B21274EEC4049DC0B22FE281 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_get_UniquenessRatio_m22CB0FEABAE41533B21274EEC4049DC0B22FE281_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoBM_getUniquenessRatio(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoBM_getUniquenessRatio_mF9933E060A8B4C4D4E8580064A85BD2DFF5C94A4(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoBM::set_UniquenessRatio(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM_set_UniquenessRatio_m67752D9C1094ADB70E31682BF29048EB19BBA5A1 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_set_UniquenessRatio_m67752D9C1094ADB70E31682BF29048EB19BBA5A1_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoBM_setUniquenessRatio(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoBM_setUniquenessRatio_mD65502F6E23D4301A117CF947A5EE87B1CEB4512(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoBM::get_SmallerBlockSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoBM_get_SmallerBlockSize_m6045DD88A1D3BF8DDA348A00BF86AD6BEF845B02 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_get_SmallerBlockSize_m6045DD88A1D3BF8DDA348A00BF86AD6BEF845B02_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoBM_getSmallerBlockSize(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoBM_getSmallerBlockSize_m2147578C934ECBBB1C7D796D4BF48BFE9E695630(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoBM::set_SmallerBlockSize(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM_set_SmallerBlockSize_m0075BF71B27D56A7F0F8429FFC88F99AC795B36C (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_set_SmallerBlockSize_m0075BF71B27D56A7F0F8429FFC88F99AC795B36C_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoBM_setSmallerBlockSize(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoBM_setSmallerBlockSize_m578635AE869082E20443688FC7033001B6924EE3(L_4, L_5, NULL);
		// }
		return;
	}
}
// OpenCvSharp.Rect OpenCvSharp.StereoBM::get_ROI1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A StereoBM_get_ROI1_mD484005985115BDC348CB74DFA0D9DE25DD0548B (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_get_ROI1_mD484005985115BDC348CB74DFA0D9DE25DD0548B_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoBM_getROI1(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A L_5;
		L_5 = NativeMethods_calib3d_StereoBM_getROI1_m593F606BDBBA5D2880D6E1C6A8564AEE45D29A55(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoBM::set_ROI1(OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM_set_ROI1_m49FC53BCCC078105AE2B176A47B8400FCBBD02E9 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_set_ROI1_m49FC53BCCC078105AE2B176A47B8400FCBBD02E9_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoBM_setROI1(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoBM_setROI1_m187F90BDC8720F47B7B71A596DC6E2565A19BD89(L_4, L_5, NULL);
		// }
		return;
	}
}
// OpenCvSharp.Rect OpenCvSharp.StereoBM::get_ROI2()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A StereoBM_get_ROI2_m0F5D2D4D2148EF5D65D92124BB3A720662B8D474 (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_get_ROI2_m0F5D2D4D2148EF5D65D92124BB3A720662B8D474_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoBM_getROI2(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A L_5;
		L_5 = NativeMethods_calib3d_StereoBM_getROI2_mA61E7D619B705ECC28A148392623CBB37073D006(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoBM::set_ROI2(OpenCvSharp.Rect)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoBM_set_ROI2_m6295852239D93E7C77FA7CF6237FD925D2E509DC (StereoBM_t4AE35EE3EB74014DEB96C1540316ACB49B72120B* __this, Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoBM_set_ROI2_m6295852239D93E7C77FA7CF6237FD925D2E509DC_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoBM_setROI2(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		Rect_t892849BFCE4B7E3F77E200671AB356E42CD3B83A L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoBM_setROI2_mDD2695090CD4C68F915EC701842745F76B62D5DF(L_4, L_5, NULL);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.StereoMatcher::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoMatcher__ctor_mD33CF57EDED0608F5245EBFCA32F060BFB16C46B (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	{
		// protected StereoMatcher(IntPtr ptr)
		Algorithm__ctor_mB2BEC15E084F478C6AE8F899B4C9AF68D92EE61D(__this, NULL);
		// this.ptr = ptr;
		intptr_t L_0 = ___0_ptr;
		((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_0;
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoMatcher::get_MinDisparity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoMatcher_get_MinDisparity_m377C6C05E191C9D465228AA52D945958B38C68CB (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return NativeMethods.calib3d_StereoMatcher_getMinDisparity(ptr);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_1;
		L_1 = NativeMethods_calib3d_StereoMatcher_getMinDisparity_m3D9B3A29943D2DD16C1176AE244E470419D58B83(L_0, NULL);
		return L_1;
	}
}
// System.Void OpenCvSharp.StereoMatcher::set_MinDisparity(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoMatcher_set_MinDisparity_m9EBD6BED675AF739A39CB94AD9E0AF53CFC18B9F (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NativeMethods.calib3d_StereoMatcher_setMinDisparity(ptr, value);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_1 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoMatcher_setMinDisparity_m1B270733DA7A52E21C570AE694D9D66A5E38DA04(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoMatcher::get_NumDisparities()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoMatcher_get_NumDisparities_m923BC5C11139DDD56FC2305673B919352F05CEC4 (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return NativeMethods.calib3d_StereoMatcher_getNumDisparities(ptr);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_1;
		L_1 = NativeMethods_calib3d_StereoMatcher_getNumDisparities_m7A278A66F020A03F119790C95BF4325BDCEE78A2(L_0, NULL);
		return L_1;
	}
}
// System.Void OpenCvSharp.StereoMatcher::set_NumDisparities(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoMatcher_set_NumDisparities_mC5B121E1A7462FD8F8578C0A29E8E7C14E4A5AB4 (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NativeMethods.calib3d_StereoMatcher_setNumDisparities(ptr, value);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_1 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoMatcher_setNumDisparities_mD83D4873B556100A863AFE4494D556B854F5DB46(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoMatcher::get_BlockSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoMatcher_get_BlockSize_m209377638D513130F0ED1F74FAB60E75FDDBBA26 (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return NativeMethods.calib3d_StereoMatcher_getBlockSize(ptr);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_1;
		L_1 = NativeMethods_calib3d_StereoMatcher_getBlockSize_m6379D63988E808F7B980A54A9B2D72AD5DD70118(L_0, NULL);
		return L_1;
	}
}
// System.Void OpenCvSharp.StereoMatcher::set_BlockSize(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoMatcher_set_BlockSize_mB55C8888A01F0307C12561024C60A0A0665F2393 (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NativeMethods.calib3d_StereoMatcher_setBlockSize(ptr, value);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_1 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoMatcher_setBlockSize_mCAD371CCC475A20DE032D4EE22700B8BDEC55BE4(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoMatcher::get_SpeckleWindowSize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoMatcher_get_SpeckleWindowSize_m07608D3F9267215094BAD72CBBD6757517B60D8B (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return NativeMethods.calib3d_StereoMatcher_getSpeckleWindowSize(ptr);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_1;
		L_1 = NativeMethods_calib3d_StereoMatcher_getSpeckleWindowSize_m72F99D295DD0558EE35DF55FA55A26385E4FC6E1(L_0, NULL);
		return L_1;
	}
}
// System.Void OpenCvSharp.StereoMatcher::set_SpeckleWindowSize(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoMatcher_set_SpeckleWindowSize_m7F5F7432A3BFE89E30400063C5090AEC6B50FE09 (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NativeMethods.calib3d_StereoMatcher_setSpeckleWindowSize(ptr, value);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_1 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoMatcher_setSpeckleWindowSize_m18DBE09DF90C33237CE3B3AFF54ED1C70CEB636B(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoMatcher::get_SpeckleRange()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoMatcher_get_SpeckleRange_m0003763EFD70920C04CBA1647B3E4B8294C14DA5 (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return NativeMethods.calib3d_StereoMatcher_getSpeckleRange(ptr);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_1;
		L_1 = NativeMethods_calib3d_StereoMatcher_getSpeckleRange_mAFE0C4E2814C0DE15A41D02DD6A164B2258879A4(L_0, NULL);
		return L_1;
	}
}
// System.Void OpenCvSharp.StereoMatcher::set_SpeckleRange(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoMatcher_set_SpeckleRange_mA5413AF0F5439A180FBADE538F152B984CFC92A8 (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NativeMethods.calib3d_StereoMatcher_setSpeckleRange(ptr, value);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_1 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoMatcher_setSpeckleRange_m9B4181A532630CE1BA9AF9E2C9668A923CECB4F4(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoMatcher::get_Disp12MaxDiff()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoMatcher_get_Disp12MaxDiff_m336EF71DE3D102A278383E1C78A34FD31FFBAAE4 (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// return NativeMethods.calib3d_StereoMatcher_getDisp12MaxDiff(ptr);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_1;
		L_1 = NativeMethods_calib3d_StereoMatcher_getDisp12MaxDiff_m82817AAF436480F7F296265B17E2F3F4310AE26B(L_0, NULL);
		return L_1;
	}
}
// System.Void OpenCvSharp.StereoMatcher::set_Disp12MaxDiff(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoMatcher_set_Disp12MaxDiff_m4B8F75F8C4FD4B3B8719530C0A4201C2E3DDC2F7 (StereoMatcher_tB05E6489DF3F2F3FEBFBD9271E8614CAD86A1ABA* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NativeMethods.calib3d_StereoMatcher_setDisp12MaxDiff(ptr, value);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_1 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoMatcher_setDisp12MaxDiff_m5A2EBD6559E91E8FCC96C6E200A642BF68CF580D(L_0, L_1, NULL);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.StereoSGBM::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoSGBM__ctor_m73BEF0B6EB02349ED212F720006D68A0C5C66414 (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Ptr_1__ctor_m9EFD8ADA6C06D57D386A6B147E9C28C548EE9CBE_RuntimeMethod_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// protected StereoSGBM(IntPtr ptr) : base(ptr)
		intptr_t L_0 = ___0_ptr;
		StereoMatcher__ctor_mD33CF57EDED0608F5245EBFCA32F060BFB16C46B(__this, L_0, NULL);
		// ptrObj = new Ptr<StereoSGBM>(ptr);
		intptr_t L_1 = ___0_ptr;
		Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38* L_2 = (Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38*)il2cpp_codegen_object_new(Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		Ptr_1__ctor_m9EFD8ADA6C06D57D386A6B147E9C28C548EE9CBE(L_2, L_1, Ptr_1__ctor_m9EFD8ADA6C06D57D386A6B147E9C28C548EE9CBE_RuntimeMethod_var);
		__this->___ptrObj_8 = L_2;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___ptrObj_8), (void*)L_2);
		// }
		return;
	}
}
// OpenCvSharp.StereoSGBM OpenCvSharp.StereoSGBM::Create(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.StereoSGBMMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* StereoSGBM_Create_mFAB8C95B6232D0669A62E2E4C71988F3048AA98B (int32_t ___0_minDisparity, int32_t ___1_numDisparities, int32_t ___2_blockSize, int32_t ___3_p1, int32_t ___4_p2, int32_t ___5_disp12MaxDiff, int32_t ___6_preFilterCap, int32_t ___7_uniquenessRatio, int32_t ___8_speckleWindowSize, int32_t ___9_speckleRange, int32_t ___10_mode, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// IntPtr ptrObj = NativeMethods.calib3d_StereoSGBM_create(
		//     minDisparity, numDisparities, blockSize,
		//     p1, p2, disp12MaxDiff, preFilterCap, uniquenessRatio,
		//     speckleWindowSize, speckleRange, (int) mode);
		int32_t L_0 = ___0_minDisparity;
		int32_t L_1 = ___1_numDisparities;
		int32_t L_2 = ___2_blockSize;
		int32_t L_3 = ___3_p1;
		int32_t L_4 = ___4_p2;
		int32_t L_5 = ___5_disp12MaxDiff;
		int32_t L_6 = ___6_preFilterCap;
		int32_t L_7 = ___7_uniquenessRatio;
		int32_t L_8 = ___8_speckleWindowSize;
		int32_t L_9 = ___9_speckleRange;
		int32_t L_10 = ___10_mode;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_11;
		L_11 = NativeMethods_calib3d_StereoSGBM_create_m1157846505CD16FC8AA3A6C7A4F64C616DB2BE8F(L_0, L_1, L_2, L_3, L_4, L_5, L_6, L_7, L_8, L_9, L_10, NULL);
		// return new StereoSGBM(ptrObj);
		StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* L_12 = (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C*)il2cpp_codegen_object_new(StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C_il2cpp_TypeInfo_var);
		NullCheck(L_12);
		StereoSGBM__ctor_m73BEF0B6EB02349ED212F720006D68A0C5C66414(L_12, L_11, NULL);
		return L_12;
	}
}
// System.Void OpenCvSharp.StereoSGBM::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoSGBM_Dispose_mFD76EEA4E9E0F9CEE0E6C9DBDA4CF5CD085A43B5 (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, bool ___0_disposing, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!disposed)
		bool L_0 = __this->___disposed_7;
		if (L_0)
		{
			goto IL_0048;
		}
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0040:
			{// begin finally (depth: 1)
				// base.Dispose(disposing);
				bool L_1 = ___0_disposing;
				DisposableCvObject_Dispose_mCA9D565F6EDDDFAAFEA0D38A92CEE3F7BD207A30(__this, L_1, NULL);
				// }
				return;
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			{
				// if (disposing)
				bool L_2 = ___0_disposing;
				// if (IsEnabledDispose)
				bool L_3;
				L_3 = DisposableObject_get_IsEnabledDispose_mFCE8D52E214E0DB33641495A16EB7A1131EA3CF4_inline(__this, NULL);
				if (!L_3)
				{
					goto IL_0037_1;
				}
			}
			{
				// if (ptrObj != null)
				Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38* L_4 = __this->___ptrObj_8;
				if (!L_4)
				{
					goto IL_0025_1;
				}
			}
			{
				// ptrObj.Dispose();
				Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38* L_5 = __this->___ptrObj_8;
				NullCheck(L_5);
				DisposableObject_Dispose_m623521DB9F2CD39AE5FE628B6117275CDB50E549(L_5, NULL);
			}

IL_0025_1:
			{
				// ptrObj = null;
				__this->___ptrObj_8 = (Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38*)NULL;
				Il2CppCodeGenWriteBarrier((void**)(&__this->___ptrObj_8), (void*)(Ptr_1_t4F3BB6C7553E65552675DD7C36E44ABE01075D38*)NULL);
				// ptr = IntPtr.Zero;
				intptr_t L_6 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
				((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_6;
			}

IL_0037_1:
			{
				// disposed = true;
				__this->___disposed_7 = (bool)1;
				// }
				goto IL_0048;
			}
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0048:
	{
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoSGBM::get_PreFilterCap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoSGBM_get_PreFilterCap_m72EA29AE3709316EFB23B113DB67290632F5289F (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoSGBM_get_PreFilterCap_m72EA29AE3709316EFB23B113DB67290632F5289F_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoSGBM_getPreFilterCap(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoSGBM_getPreFilterCap_m3B882C835F241D497A601A531FC2762DCB93D914(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoSGBM::set_PreFilterCap(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoSGBM_set_PreFilterCap_m27A652F36B6C49E828BD864D581F86DCA06F0DF0 (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoSGBM_set_PreFilterCap_m27A652F36B6C49E828BD864D581F86DCA06F0DF0_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoSGBM_setPreFilterCap(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoSGBM_setPreFilterCap_mB326B744EDD486C80F63186A2D30D6462896A0D1(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoSGBM::get_UniquenessRatio()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoSGBM_get_UniquenessRatio_m897ED43AA5DB228E861B13D941EDA89C7AC897A4 (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoSGBM_get_UniquenessRatio_m897ED43AA5DB228E861B13D941EDA89C7AC897A4_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoSGBM_getUniquenessRatio(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoSGBM_getUniquenessRatio_m682AC11EC723D6A211B7448C6285B8B17C99AC3D(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoSGBM::set_UniquenessRatio(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoSGBM_set_UniquenessRatio_m43CA7CFA6FB321770651E6E192EC1241266FAF29 (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoSGBM_set_UniquenessRatio_m43CA7CFA6FB321770651E6E192EC1241266FAF29_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoSGBM_setUniquenessRatio(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoSGBM_setUniquenessRatio_m9A5A04C68C08BE5212EC02E8C640E65E2809C336(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoSGBM::get_P1()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoSGBM_get_P1_m42B876B6B950C5E5BD80C6F97EC179EB67F59862 (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoSGBM_get_P1_m42B876B6B950C5E5BD80C6F97EC179EB67F59862_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoSGBM_getP1(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoSGBM_getP1_m0BB6A9DA144DC658331FBDF9FC6B29D28B08ADA5(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoSGBM::set_P1(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoSGBM_set_P1_m3E42C8185EFF3AF01B3E912C00089C4B520CBDBD (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoSGBM_set_P1_m3E42C8185EFF3AF01B3E912C00089C4B520CBDBD_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoSGBM_setP1(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoSGBM_setP1_mEF643EC6CD98E1FFB562959DE44E5A38AC8CDE18(L_4, L_5, NULL);
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.StereoSGBM::get_P2()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoSGBM_get_P2_m7B4133A298F5818BA79F324DC72B4D3A4AE782AD (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoSGBM_get_P2_m7B4133A298F5818BA79F324DC72B4D3A4AE782AD_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return NativeMethods.calib3d_StereoSGBM_getP2(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoSGBM_getP2_mC9C10788E166D436A962328C1629B91F36AB082A(L_4, NULL);
		return L_5;
	}
}
// System.Void OpenCvSharp.StereoSGBM::set_P2(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoSGBM_set_P2_m4616DDA20C68D8F4DF72C50442114BCADE59A76A (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoSGBM_set_P2_m4616DDA20C68D8F4DF72C50442114BCADE59A76A_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoSGBM_setP2(ptr, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoSGBM_setP2_m26253FF348CF1080B991DF25A4EE7930F611C842(L_4, L_5, NULL);
		// }
		return;
	}
}
// OpenCvSharp.StereoSGBMMode OpenCvSharp.StereoSGBM::get_Mode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t StereoSGBM_get_Mode_m268C3C3B1B38799F21991CA771B5F1C0F9B7ADC6 (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoSGBM_get_Mode_m268C3C3B1B38799F21991CA771B5F1C0F9B7ADC6_RuntimeMethod_var)));
	}

IL_0019:
	{
		// return (StereoSGBMMode)NativeMethods.calib3d_StereoSGBM_getMode(ptr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_5;
		L_5 = NativeMethods_calib3d_StereoSGBM_getMode_m2CE34A9955EF80546D45D76E6557C7CDE8C3039B(L_4, NULL);
		return (int32_t)(L_5);
	}
}
// System.Void OpenCvSharp.StereoSGBM::set_Mode(OpenCvSharp.StereoSGBMMode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StereoSGBM_set_Mode_m203320AEE176AF592D8BBE28B2729F0F8E363426 (StereoSGBM_t82F59D7A57EBE7334160ECFC1282E87DEB538E1C* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0019;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_1;
		L_1 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_1);
		String_t* L_2;
		L_2 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_1);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_3 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_3, L_2, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&StereoSGBM_set_Mode_m203320AEE176AF592D8BBE28B2729F0F8E363426_RuntimeMethod_var)));
	}

IL_0019:
	{
		// NativeMethods.calib3d_StereoSGBM_setMode(ptr, (int)value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_5 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_calib3d_StereoSGBM_setMode_m9B42B6EB7BA376EDCC287B7957A1117D52140164(L_4, L_5, NULL);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.Algorithm::Write(OpenCvSharp.FileStorage)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Algorithm_Write_m2C670EF5FD1C382C2344CD05ADB14CCABB81738F (Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111* __this, FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* ___0_fs, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (ptr == IntPtr.Zero)
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		intptr_t L_1 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_2;
		L_2 = IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271(L_0, L_1, NULL);
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_3;
		L_3 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_3);
		String_t* L_4;
		L_4 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_3);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_5 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_5);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_5, L_4, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_5, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Algorithm_Write_m2C670EF5FD1C382C2344CD05ADB14CCABB81738F_RuntimeMethod_var)));
	}

IL_0023:
	{
		// if (fs == null)
		FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* L_6 = ___0_fs;
		if (L_6)
		{
			goto IL_0031;
		}
	}
	{
		// throw new ArgumentNullException("nameof(fs)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_7 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_7);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_7, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral80591287EBB6C3DAE4EAABE7E21796F9EFC25F64)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_7, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Algorithm_Write_m2C670EF5FD1C382C2344CD05ADB14CCABB81738F_RuntimeMethod_var)));
	}

IL_0031:
	{
		// NativeMethods.core_Algorithm_write(ptr, fs.CvPtr);
		intptr_t L_8 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* L_9 = ___0_fs;
		NullCheck(L_9);
		intptr_t L_10;
		L_10 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_9, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_Algorithm_write_mB3E3A03BDC8FD67E2DDF8D78ABAB6253B58E5396(L_8, L_10, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.Algorithm::Read(OpenCvSharp.FileNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Algorithm_Read_m6A6C7CB42278D413FB44A1B76C4802A1B65A0507 (Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111* __this, FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* ___0_fn, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (ptr == IntPtr.Zero)
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		intptr_t L_1 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_2;
		L_2 = IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271(L_0, L_1, NULL);
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_3;
		L_3 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_3);
		String_t* L_4;
		L_4 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_3);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_5 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_5);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_5, L_4, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_5, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Algorithm_Read_m6A6C7CB42278D413FB44A1B76C4802A1B65A0507_RuntimeMethod_var)));
	}

IL_0023:
	{
		// if (fn == null)
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_6 = ___0_fn;
		if (L_6)
		{
			goto IL_0031;
		}
	}
	{
		// throw new ArgumentNullException("nameof(fn)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_7 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_7);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_7, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralF65558919B3B3417B82F7EA45471452B4AACA3E2)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_7, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Algorithm_Read_m6A6C7CB42278D413FB44A1B76C4802A1B65A0507_RuntimeMethod_var)));
	}

IL_0031:
	{
		// NativeMethods.core_Algorithm_read(ptr, fn.CvPtr);
		intptr_t L_8 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_9 = ___0_fn;
		NullCheck(L_9);
		intptr_t L_10;
		L_10 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_9, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_Algorithm_read_mEA85981C881E2078406E9BD37D62F424E68F5C8C(L_8, L_10, NULL);
		// }
		return;
	}
}
// System.Boolean OpenCvSharp.Algorithm::get_Empty()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Algorithm_get_Empty_m8D4308F83C9987CD4D745AF33A7ECEBD027F4444 (Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (ptr == IntPtr.Zero)
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		intptr_t L_1 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_2;
		L_2 = IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271(L_0, L_1, NULL);
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_3;
		L_3 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_3);
		String_t* L_4;
		L_4 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_3);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_5 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_5);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_5, L_4, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_5, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Algorithm_get_Empty_m8D4308F83C9987CD4D745AF33A7ECEBD027F4444_RuntimeMethod_var)));
	}

IL_0023:
	{
		// return NativeMethods.core_Algorithm_empty(ptr) != 0;
		intptr_t L_6 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_7;
		L_7 = NativeMethods_core_Algorithm_empty_m357935738FF86629CA0DD036989E323999B365C8(L_6, NULL);
		return (bool)((!(((uint32_t)L_7) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Void OpenCvSharp.Algorithm::Save(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Algorithm_Save_m3B1CC029043070FD1058BAC9DF6F19765674D08D (Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111* __this, String_t* ___0_filename, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (ptr == IntPtr.Zero)
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		intptr_t L_1 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_2;
		L_2 = IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271(L_0, L_1, NULL);
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_3;
		L_3 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_3);
		String_t* L_4;
		L_4 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_3);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_5 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_5);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_5, L_4, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_5, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Algorithm_Save_m3B1CC029043070FD1058BAC9DF6F19765674D08D_RuntimeMethod_var)));
	}

IL_0023:
	{
		// if (filename == null)
		String_t* L_6 = ___0_filename;
		if (L_6)
		{
			goto IL_0031;
		}
	}
	{
		// throw new ArgumentNullException("nameof(filename)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_7 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_7);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_7, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralD9A17E555A67914614CD3B43372AD80D3E6B943B)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_7, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Algorithm_Save_m3B1CC029043070FD1058BAC9DF6F19765674D08D_RuntimeMethod_var)));
	}

IL_0031:
	{
		// NativeMethods.core_Algorithm_save(ptr, filename);
		intptr_t L_8 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_9 = ___0_filename;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_Algorithm_save_m13B65EFADF4BCB791DB1FBE6012CF2A85223C73B(L_8, L_9, NULL);
		// }
		return;
	}
}
// System.String OpenCvSharp.Algorithm::GetDefaultName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Algorithm_GetDefaultName_mD8D648CD6A6F31A60B9803F0B94692192C59891E (Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringBuilder_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	StringBuilder_t* V_0 = NULL;
	{
		// if (ptr == IntPtr.Zero)
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		intptr_t L_1 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_2;
		L_2 = IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271(L_0, L_1, NULL);
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		// throw new ObjectDisposedException(GetType().Name);
		Type_t* L_3;
		L_3 = Object_GetType_mE10A8FC1E57F3DF29972CCBC026C2DC3942263B3(__this, NULL);
		NullCheck(L_3);
		String_t* L_4;
		L_4 = VirtualFuncInvoker0< String_t* >::Invoke(7 /* System.String System.Reflection.MemberInfo::get_Name() */, L_3);
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_5 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_5);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_5, L_4, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_5, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&Algorithm_GetDefaultName_mD8D648CD6A6F31A60B9803F0B94692192C59891E_RuntimeMethod_var)));
	}

IL_0023:
	{
		// var buf = new StringBuilder(1024);
		StringBuilder_t* L_6 = (StringBuilder_t*)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		NullCheck(L_6);
		StringBuilder__ctor_m2619CA8D2C3476DF1A302D9D941498BB1C6164C5(L_6, ((int32_t)1024), NULL);
		V_0 = L_6;
		// NativeMethods.core_Algorithm_getDefaultName(ptr, buf, buf.Capacity);
		intptr_t L_7 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		StringBuilder_t* L_8 = V_0;
		StringBuilder_t* L_9 = V_0;
		NullCheck(L_9);
		int32_t L_10;
		L_10 = StringBuilder_get_Capacity_m9DBF3B3940BC0BB882CA26F0EDB53896A491AD1E(L_9, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_Algorithm_getDefaultName_mCA4435D968157F330A8BA06BEF7304470C339631(L_7, L_8, L_10, NULL);
		// return buf.ToString();
		StringBuilder_t* L_11 = V_0;
		NullCheck(L_11);
		String_t* L_12;
		L_12 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_11);
		return L_12;
	}
}
// System.Void OpenCvSharp.Algorithm::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Algorithm__ctor_mB2BEC15E084F478C6AE8F899B4C9AF68D92EE61D (Algorithm_tC1ED5F17F0E5A53D5A7A47679D98C0E0B7D8F111* __this, const RuntimeMethod* method) 
{
	{
		DisposableCvObject__ctor_m05A31FCADC967DF10B188DE00FFF3694F95C995F(__this, NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.FileNode::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileNode__ctor_m96A26C015E338A5F328DD17CD6BA8D5A7FD1973F (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public FileNode()
		DisposableCvObject__ctor_m05A31FCADC967DF10B188DE00FFF3694F95C995F(__this, NULL);
		// ptr = NativeMethods.core_FileNode_new1();
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_0;
		L_0 = NativeMethods_core_FileNode_new1_mDBFF2D31090D143C6B64C63DC623AD6FE2C67C1A(NULL);
		((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_0;
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileNode::.ctor(System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileNode__ctor_mCFB99BF6734BB33533E7079EE319D7F89745DC81 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, intptr_t ___0_ptr, const RuntimeMethod* method) 
{
	{
		// public FileNode(IntPtr ptr)
		DisposableCvObject__ctor_m05A31FCADC967DF10B188DE00FFF3694F95C995F(__this, NULL);
		// this.ptr = ptr;
		intptr_t L_0 = ___0_ptr;
		((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_0;
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileNode::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileNode_Dispose_mA0D9369C7D7F016F948CA05C8705FE1AECA09A39 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, bool ___0_disposing, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!disposed)
		bool L_0 = __this->___disposed_7;
		if (L_0)
		{
			goto IL_0043;
		}
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_003b:
			{// begin finally (depth: 1)
				// base.Dispose(disposing);
				bool L_1 = ___0_disposing;
				DisposableCvObject_Dispose_mCA9D565F6EDDDFAAFEA0D38A92CEE3F7BD207A30(__this, L_1, NULL);
				// }
				return;
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			{
				// if (disposing)
				bool L_2 = ___0_disposing;
				// if (ptr != IntPtr.Zero)
				intptr_t L_3 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
				intptr_t L_4 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
				bool L_5;
				L_5 = IntPtr_op_Inequality_m90EFC9C4CAD9A33E309F2DDF98EE4E1DD253637B(L_3, L_4, NULL);
				if (!L_5)
				{
					goto IL_0032_1;
				}
			}
			{
				// NativeMethods.core_FileNode_delete(ptr);
				intptr_t L_6 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
				il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
				NativeMethods_core_FileNode_delete_mC988648394EB2C9FD44C97B409763CEF5D7A32FD(L_6, NULL);
				// ptr = IntPtr.Zero;
				intptr_t L_7 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
				((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_7;
			}

IL_0032_1:
			{
				// disposed = true;
				__this->___disposed_7 = (bool)1;
				// }
				goto IL_0043;
			}
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0043:
	{
		// }
		return;
	}
}
// System.Int32 OpenCvSharp.FileNode::op_Explicit(OpenCvSharp.FileNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t FileNode_op_Explicit_m295570D4D21334293463918042747C714D7D4B54 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* ___0_node, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (node == null)
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_0 = ___0_node;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(node)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral1EED0D5F1E33AA2FFB7DBFEECB26B18409E1CD1B)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_op_Explicit_m295570D4D21334293463918042747C714D7D4B54_RuntimeMethod_var)));
	}

IL_000e:
	{
		// return NativeMethods.core_FileNode_toInt(node.CvPtr);
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_2 = ___0_node;
		NullCheck(L_2);
		intptr_t L_3;
		L_3 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_2, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_4;
		L_4 = NativeMethods_core_FileNode_toInt_m6ECB9A998E6E2FB47B1A13A4B8B436DB3E93A727(L_3, NULL);
		return L_4;
	}
}
// System.Single OpenCvSharp.FileNode::op_Explicit(OpenCvSharp.FileNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float FileNode_op_Explicit_mD926DECB3D151BC4A6BDBC1310A12351FA06A661 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* ___0_node, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (node == null)
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_0 = ___0_node;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(node)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral1EED0D5F1E33AA2FFB7DBFEECB26B18409E1CD1B)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_op_Explicit_mD926DECB3D151BC4A6BDBC1310A12351FA06A661_RuntimeMethod_var)));
	}

IL_000e:
	{
		// return NativeMethods.core_FileNode_toFloat(node.CvPtr);
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_2 = ___0_node;
		NullCheck(L_2);
		intptr_t L_3;
		L_3 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_2, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		float L_4;
		L_4 = NativeMethods_core_FileNode_toFloat_m9C5024776EE2E81703715B67C9E6B196C88ADBEB(L_3, NULL);
		return L_4;
	}
}
// System.Double OpenCvSharp.FileNode::op_Explicit(OpenCvSharp.FileNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double FileNode_op_Explicit_m55769AEA1CFEA9909BAE672917F51B93E222A2EC (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* ___0_node, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (node == null)
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_0 = ___0_node;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(node)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral1EED0D5F1E33AA2FFB7DBFEECB26B18409E1CD1B)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_op_Explicit_m55769AEA1CFEA9909BAE672917F51B93E222A2EC_RuntimeMethod_var)));
	}

IL_000e:
	{
		// return NativeMethods.core_FileNode_toDouble(node.CvPtr);
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_2 = ___0_node;
		NullCheck(L_2);
		intptr_t L_3;
		L_3 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_2, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		double L_4;
		L_4 = NativeMethods_core_FileNode_toDouble_mFC91CC20FCF22A6F4BF5445E7075316A82ABB897(L_3, NULL);
		return L_4;
	}
}
// System.String OpenCvSharp.FileNode::op_Explicit(OpenCvSharp.FileNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* FileNode_op_Explicit_m8CBDEC93CAFC0F2848BFF9F77E96F41348F73B2C (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* ___0_node, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringBuilder_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	StringBuilder_t* V_0 = NULL;
	{
		// if (node == null)
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_0 = ___0_node;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(node)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral1EED0D5F1E33AA2FFB7DBFEECB26B18409E1CD1B)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_op_Explicit_m8CBDEC93CAFC0F2848BFF9F77E96F41348F73B2C_RuntimeMethod_var)));
	}

IL_000e:
	{
		// var buf = new StringBuilder(1 << 16);
		StringBuilder_t* L_2 = (StringBuilder_t*)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		StringBuilder__ctor_m2619CA8D2C3476DF1A302D9D941498BB1C6164C5(L_2, ((int32_t)65536), NULL);
		V_0 = L_2;
		// NativeMethods.core_FileNode_toString(node.CvPtr, buf, buf.Capacity);
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_3 = ___0_node;
		NullCheck(L_3);
		intptr_t L_4;
		L_4 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_3, NULL);
		StringBuilder_t* L_5 = V_0;
		StringBuilder_t* L_6 = V_0;
		NullCheck(L_6);
		int32_t L_7;
		L_7 = StringBuilder_get_Capacity_m9DBF3B3940BC0BB882CA26F0EDB53896A491AD1E(L_6, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileNode_toString_m3B60EDF78944CAB7043783805F982E37869C72F4(L_4, L_5, L_7, NULL);
		// return buf.ToString();
		StringBuilder_t* L_8 = V_0;
		NullCheck(L_8);
		String_t* L_9;
		L_9 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_8);
		return L_9;
	}
}
// OpenCvSharp.Mat OpenCvSharp.FileNode::op_Explicit(OpenCvSharp.FileNode)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* FileNode_op_Explicit_mB66DEB1C1A2B140C48D53FA0C9737BF4EB72504B (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* ___0_node, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* V_0 = NULL;
	{
		// if (node == null)
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_0 = ___0_node;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(node)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral1EED0D5F1E33AA2FFB7DBFEECB26B18409E1CD1B)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_op_Explicit_mB66DEB1C1A2B140C48D53FA0C9737BF4EB72504B_RuntimeMethod_var)));
	}

IL_000e:
	{
		// node.ThrowIfDisposed();
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_2 = ___0_node;
		NullCheck(L_2);
		DisposableObject_ThrowIfDisposed_mA5F51D2CAF32F7920CB1138EC3EC17B47BF25E7A(L_2, NULL);
		// var matrix = new Mat();
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_3 = (Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE*)il2cpp_codegen_object_new(Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE_il2cpp_TypeInfo_var);
		NullCheck(L_3);
		Mat__ctor_m0A8F1AFED1627CE035E6F7239B618819CEDFDA2A(L_3, NULL);
		V_0 = L_3;
		// NativeMethods.core_FileNode_toMat(node.CvPtr, matrix.CvPtr);
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_4 = ___0_node;
		NullCheck(L_4);
		intptr_t L_5;
		L_5 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_4, NULL);
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_6 = V_0;
		NullCheck(L_6);
		intptr_t L_7;
		L_7 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_6, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileNode_toMat_m740A9EC0900B2C3C19DBFF7451084982180B721F(L_5, L_7, NULL);
		// return matrix;
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_8 = V_0;
		return L_8;
	}
}
// OpenCvSharp.FileNode OpenCvSharp.FileNode::get_Item(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* FileNode_get_Item_mD7AD8B5DDAD0DE45A3E36D4CC6D3A3B1D4B8B339 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, String_t* ___0_nodeName, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileNode");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralF0AC132CA38D942F0E4DBF229157DC9396FF7C7E)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_Item_mD7AD8B5DDAD0DE45A3E36D4CC6D3A3B1D4B8B339_RuntimeMethod_var)));
	}

IL_0013:
	{
		// if (nodeName == null)
		String_t* L_2 = ___0_nodeName;
		if (L_2)
		{
			goto IL_0021;
		}
	}
	{
		// throw new ArgumentNullException("nameof(nodeName)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_3 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral6F87F470C5F3D18A1C19D5CC121CB12DC511B7EC)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_Item_mD7AD8B5DDAD0DE45A3E36D4CC6D3A3B1D4B8B339_RuntimeMethod_var)));
	}

IL_0021:
	{
		// IntPtr node = NativeMethods.core_FileNode_operatorThis_byString(ptr, nodeName);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_5 = ___0_nodeName;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_6;
		L_6 = NativeMethods_core_FileNode_operatorThis_byString_m0EF8A4DC23855187C34C432044563BEB276690B3(L_4, L_5, NULL);
		V_0 = L_6;
		// if (node == IntPtr.Zero)
		intptr_t L_7 = V_0;
		intptr_t L_8 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_9;
		L_9 = IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271(L_7, L_8, NULL);
		if (!L_9)
		{
			goto IL_003d;
		}
	}
	{
		// return null;
		return (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5*)NULL;
	}

IL_003d:
	{
		// return new FileNode(node);
		intptr_t L_10 = V_0;
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_11 = (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5*)il2cpp_codegen_object_new(FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var);
		NullCheck(L_11);
		FileNode__ctor_mCFB99BF6734BB33533E7079EE319D7F89745DC81(L_11, L_10, NULL);
		return L_11;
	}
}
// OpenCvSharp.FileNode OpenCvSharp.FileNode::get_Item(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* FileNode_get_Item_m5FA2C96D87B686D2484097832264D774DBBAD1AA (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, int32_t ___0_i, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileNode");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralF0AC132CA38D942F0E4DBF229157DC9396FF7C7E)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_Item_m5FA2C96D87B686D2484097832264D774DBBAD1AA_RuntimeMethod_var)));
	}

IL_0013:
	{
		// IntPtr node = NativeMethods.core_FileNode_operatorThis_byInt(ptr, i);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_3 = ___0_i;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_4;
		L_4 = NativeMethods_core_FileNode_operatorThis_byInt_mF349B3B53F57E9A32645DB4501199B860CF73968(L_2, L_3, NULL);
		V_0 = L_4;
		// if (node == IntPtr.Zero)
		intptr_t L_5 = V_0;
		intptr_t L_6 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_7;
		L_7 = IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271(L_5, L_6, NULL);
		if (!L_7)
		{
			goto IL_002f;
		}
	}
	{
		// return null;
		return (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5*)NULL;
	}

IL_002f:
	{
		// return new FileNode(node);
		intptr_t L_8 = V_0;
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_9 = (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5*)il2cpp_codegen_object_new(FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var);
		NullCheck(L_9);
		FileNode__ctor_mCFB99BF6734BB33533E7079EE319D7F89745DC81(L_9, L_8, NULL);
		return L_9;
	}
}
// System.Boolean OpenCvSharp.FileNode::get_Empty()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FileNode_get_Empty_mA333083EE2DDC5E569883E72E11B21660CC188FF (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_Empty_mA333083EE2DDC5E569883E72E11B21660CC188FF_RuntimeMethod_var)));
	}

IL_0013:
	{
		// int ret = NativeMethods.core_FileNode_empty(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = NativeMethods_core_FileNode_empty_mA1439B9A19757C66630402C28208ACF2EE631252(L_2, NULL);
		// return ret != 0;
		return (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Boolean OpenCvSharp.FileNode::get_IsNone()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FileNode_get_IsNone_mD22D89198D9A0F6D108DD961AC8776992E6E7231 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_IsNone_mD22D89198D9A0F6D108DD961AC8776992E6E7231_RuntimeMethod_var)));
	}

IL_0013:
	{
		// int ret = NativeMethods.core_FileNode_isNone(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = NativeMethods_core_FileNode_isNone_m95398ACC6A12FF22D9FDDD61C9409888ABE3E205(L_2, NULL);
		// return ret != 0;
		return (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Boolean OpenCvSharp.FileNode::get_IsSeq()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FileNode_get_IsSeq_m744B2ED4621A083E188A649762CE44F2B06F3AF0 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_IsSeq_m744B2ED4621A083E188A649762CE44F2B06F3AF0_RuntimeMethod_var)));
	}

IL_0013:
	{
		// int ret = NativeMethods.core_FileNode_isSeq(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = NativeMethods_core_FileNode_isSeq_m835C259D7F241903854D84050D54E26F4EC18B03(L_2, NULL);
		// return ret != 0;
		return (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Boolean OpenCvSharp.FileNode::get_IsMap()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FileNode_get_IsMap_mA709954E1FDC91B8AE61F8C09841935DA0D5BC17 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_IsMap_mA709954E1FDC91B8AE61F8C09841935DA0D5BC17_RuntimeMethod_var)));
	}

IL_0013:
	{
		// int ret = NativeMethods.core_FileNode_isMap(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = NativeMethods_core_FileNode_isMap_m48BCEDC20E70D73DFD8B2BEE9584AF49962CC7E7(L_2, NULL);
		// return ret != 0;
		return (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Boolean OpenCvSharp.FileNode::get_IsInt()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FileNode_get_IsInt_m5050BFFD9DC6AFFEA6C60F43211CAE509DB26B3F (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_IsInt_m5050BFFD9DC6AFFEA6C60F43211CAE509DB26B3F_RuntimeMethod_var)));
	}

IL_0013:
	{
		// int ret = NativeMethods.core_FileNode_isInt(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = NativeMethods_core_FileNode_isInt_mA83D2246B3ED142CC86255DC4F064EF0D364CBBA(L_2, NULL);
		// return ret != 0;
		return (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Boolean OpenCvSharp.FileNode::get_IsReal()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FileNode_get_IsReal_m984892CFC1FB7601F205969A6E6436F1F642B107 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_IsReal_m984892CFC1FB7601F205969A6E6436F1F642B107_RuntimeMethod_var)));
	}

IL_0013:
	{
		// int ret = NativeMethods.core_FileNode_isReal(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = NativeMethods_core_FileNode_isReal_m36024B38CCE2B06134947BC492952860D4A823B4(L_2, NULL);
		// return ret != 0;
		return (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Boolean OpenCvSharp.FileNode::get_IsString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FileNode_get_IsString_mE1181EFB80B8D8A549ADA53646DE8130E494EBCC (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_IsString_mE1181EFB80B8D8A549ADA53646DE8130E494EBCC_RuntimeMethod_var)));
	}

IL_0013:
	{
		// int ret = NativeMethods.core_FileNode_isString(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = NativeMethods_core_FileNode_isString_m496873DB899B061451B20D35D5DCA53623DE2D29(L_2, NULL);
		// return ret != 0;
		return (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Boolean OpenCvSharp.FileNode::get_IsNamed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FileNode_get_IsNamed_m8CBDA3CE447A6542B5A97BE7A2CE5CE5962329EB (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_IsNamed_m8CBDA3CE447A6542B5A97BE7A2CE5CE5962329EB_RuntimeMethod_var)));
	}

IL_0013:
	{
		// int ret = NativeMethods.core_FileNode_isNamed(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = NativeMethods_core_FileNode_isNamed_m885A8F062E0EB7152CBD24B95D1A1455C1AB9207(L_2, NULL);
		// return ret != 0;
		return (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.String OpenCvSharp.FileNode::get_Name()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* FileNode_get_Name_mA3749C126AB71ADAD9ACAB41B13B144175FA2812 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringBuilder_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	StringBuilder_t* V_0 = NULL;
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_Name_mA3749C126AB71ADAD9ACAB41B13B144175FA2812_RuntimeMethod_var)));
	}

IL_0013:
	{
		// var buf = new StringBuilder(1024);
		StringBuilder_t* L_2 = (StringBuilder_t*)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		StringBuilder__ctor_m2619CA8D2C3476DF1A302D9D941498BB1C6164C5(L_2, ((int32_t)1024), NULL);
		V_0 = L_2;
		// NativeMethods.core_FileNode_name(ptr, buf, buf.Capacity);
		intptr_t L_3 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		StringBuilder_t* L_4 = V_0;
		StringBuilder_t* L_5 = V_0;
		NullCheck(L_5);
		int32_t L_6;
		L_6 = StringBuilder_get_Capacity_m9DBF3B3940BC0BB882CA26F0EDB53896A491AD1E(L_5, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileNode_name_m5B42CFC1DC83224BB4B1859EB024EE31228A87E3(L_3, L_4, L_6, NULL);
		// return buf.ToString();
		StringBuilder_t* L_7 = V_0;
		NullCheck(L_7);
		String_t* L_8;
		L_8 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_7);
		return L_8;
	}
}
// System.Int64 OpenCvSharp.FileNode::get_Size()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int64_t FileNode_get_Size_m0A4C247F80F6AE9A5B7B7ED2603EA899BD12AD54 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_get_Size_m0A4C247F80F6AE9A5B7B7ED2603EA899BD12AD54_RuntimeMethod_var)));
	}

IL_0013:
	{
		// return NativeMethods.core_FileNode_size(ptr).ToInt64();
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_3;
		L_3 = NativeMethods_core_FileNode_size_mC1DD883055B7547154EC8034FE55EF6B36B8A660(L_2, NULL);
		V_0 = L_3;
		int64_t L_4;
		L_4 = IntPtr_ToInt64_m0F81FB6FB08014074D4F5B915EDAB06A08552032((&V_0), NULL);
		return L_4;
	}
}
// System.Void OpenCvSharp.FileNode::ReadRaw(System.String,System.IntPtr,System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileNode_ReadRaw_mA1C1BA995B7CD40A396EF315E57879BA06CB1056 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, String_t* ___0_fmt, intptr_t ___1_vec, int64_t ___2_len, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileNode");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralF0AC132CA38D942F0E4DBF229157DC9396FF7C7E)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_ReadRaw_mA1C1BA995B7CD40A396EF315E57879BA06CB1056_RuntimeMethod_var)));
	}

IL_0013:
	{
		// if (fmt == null)
		String_t* L_2 = ___0_fmt;
		if (L_2)
		{
			goto IL_0021;
		}
	}
	{
		// throw new ArgumentNullException("nameof(fmt)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_3 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralF2592D1B795517C40777277CE0CE15E9437CC7DD)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_ReadRaw_mA1C1BA995B7CD40A396EF315E57879BA06CB1056_RuntimeMethod_var)));
	}

IL_0021:
	{
		// NativeMethods.core_FileNode_readRaw(ptr, fmt, vec, new IntPtr(len));
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_5 = ___0_fmt;
		intptr_t L_6 = ___1_vec;
		int64_t L_7 = ___2_len;
		intptr_t L_8;
		memset((&L_8), 0, sizeof(L_8));
		IntPtr__ctor_m2C033540A2F274766CF5C2A120587DD997E3F6DC((&L_8), L_7, /*hidden argument*/NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileNode_readRaw_m3DE9075E94BB195477B31EFF3F24DF35A71FC0CE(L_4, L_5, L_6, L_8, NULL);
		// }
		return;
	}
}
// System.IntPtr OpenCvSharp.FileNode::ReadObj()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR intptr_t FileNode_ReadObj_m2EE011F68833E4ECFF5B8491F8071E46DC81E3B1 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileNode");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralF0AC132CA38D942F0E4DBF229157DC9396FF7C7E)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNode_ReadObj_m2EE011F68833E4ECFF5B8491F8071E46DC81E3B1_RuntimeMethod_var)));
	}

IL_0013:
	{
		// return NativeMethods.core_FileNode_readObj(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_3;
		L_3 = NativeMethods_core_FileNode_readObj_m087983A07A7647D9B910FB275EFB8D262159A1DD(L_2, NULL);
		return L_3;
	}
}
// System.Int32 OpenCvSharp.FileNode::ReadInt(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t FileNode_ReadInt_m1661107ADC7EA1AF02441D9E3D9340FD8D4EE780 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, int32_t ___0_defaultValue, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	{
		// NativeMethods.core_FileNode_read_int(ptr, out value, defaultValue);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_1 = ___0_defaultValue;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileNode_read_int_m93698EDE17EA460CE8014A763B25638246F0DD50(L_0, (&V_0), L_1, NULL);
		// return value;
		int32_t L_2 = V_0;
		return L_2;
	}
}
// System.Single OpenCvSharp.FileNode::ReadFloat(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float FileNode_ReadFloat_mED5A7A366720C0E23B17057B7C1B024140E13BA6 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, float ___0_defaultValue, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	{
		// NativeMethods.core_FileNode_read_float(ptr, out value, defaultValue);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		float L_1 = ___0_defaultValue;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileNode_read_float_m61F29BF4D1BABCE41A2B0BC64C1D11B058FC9755(L_0, (&V_0), L_1, NULL);
		// return value;
		float L_2 = V_0;
		return L_2;
	}
}
// System.Double OpenCvSharp.FileNode::ReadDouble(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR double FileNode_ReadDouble_mC13CE130C2116521A63BA825B406FDEFAB215A11 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, double ___0_defaultValue, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	double V_0 = 0.0;
	{
		// NativeMethods.core_FileNode_read_double(ptr, out value, defaultValue);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		double L_1 = ___0_defaultValue;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileNode_read_double_m561AA80DAB6BCB2F644D0971405638B10E0B8191(L_0, (&V_0), L_1, NULL);
		// return value;
		double L_2 = V_0;
		return L_2;
	}
}
// System.String OpenCvSharp.FileNode::ReadString(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* FileNode_ReadString_m55B23E5D8691DCF220ED62B4FFD99F052467B496 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, String_t* ___0_defaultValue, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringBuilder_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	StringBuilder_t* V_0 = NULL;
	{
		// var value = new StringBuilder(65536);
		StringBuilder_t* L_0 = (StringBuilder_t*)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		StringBuilder__ctor_m2619CA8D2C3476DF1A302D9D941498BB1C6164C5(L_0, ((int32_t)65536), NULL);
		V_0 = L_0;
		// NativeMethods.core_FileNode_read_String(ptr, value, value.Capacity, defaultValue);
		intptr_t L_1 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		StringBuilder_t* L_2 = V_0;
		StringBuilder_t* L_3 = V_0;
		NullCheck(L_3);
		int32_t L_4;
		L_4 = StringBuilder_get_Capacity_m9DBF3B3940BC0BB882CA26F0EDB53896A491AD1E(L_3, NULL);
		String_t* L_5 = ___0_defaultValue;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileNode_read_String_mBD1CF3DD183B182CBCB77570F4057967987A6C31(L_1, L_2, L_4, L_5, NULL);
		// return value.ToString();
		StringBuilder_t* L_6 = V_0;
		NullCheck(L_6);
		String_t* L_7;
		L_7 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_6);
		return L_7;
	}
}
// OpenCvSharp.Mat OpenCvSharp.FileNode::ReadMat(OpenCvSharp.Mat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* FileNode_ReadMat_mD1F54E22C364BDFFE11A0985FFEA2A4EF2F91E39 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___0_defaultMat, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* V_0 = NULL;
	il2cpp::utils::ExceptionSupportStack<RuntimeObject*, 1> __active_exceptions;
	{
		// var value = new Mat();
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_0 = (Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE*)il2cpp_codegen_object_new(Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		Mat__ctor_m0A8F1AFED1627CE035E6F7239B618819CEDFDA2A(L_0, NULL);
		V_0 = L_0;
	}
	try
	{// begin try (depth: 1)
		// NativeMethods.core_FileNode_read_Mat(ptr, value.CvPtr, Cv2.ToPtr(defaultMat));
		intptr_t L_1 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_2 = V_0;
		NullCheck(L_2);
		intptr_t L_3;
		L_3 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_2, NULL);
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_4 = ___0_defaultMat;
		intptr_t L_5;
		L_5 = Cv2_ToPtr_mAAF00ECCEBEA32784F6F018CC026AF84840328C8(L_4, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileNode_read_Mat_m8B0613FAC84A12CDDE37843D2425033D0E8EF9BE(L_1, L_3, L_5, NULL);
		// }
		goto IL_0028;
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_001f;
		}
		throw e;
	}

CATCH_001f:
	{// begin catch(System.Object)
		// catch
		// value.Dispose();
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_6 = V_0;
		NullCheck(L_6);
		DisposableObject_Dispose_m623521DB9F2CD39AE5FE628B6117275CDB50E549(L_6, NULL);
		// throw;
		IL2CPP_RETHROW_MANAGED_EXCEPTION(IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
	}// end catch (depth: 1)

IL_0028:
	{
		// return value;
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_7 = V_0;
		return L_7;
	}
}
// OpenCvSharp.SparseMat OpenCvSharp.FileNode::ReadSparseMat(OpenCvSharp.SparseMat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* FileNode_ReadSparseMat_mC20355621CC34BAEA14ACA627FDDE15DC8B570EC (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* ___0_defaultMat, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* V_0 = NULL;
	il2cpp::utils::ExceptionSupportStack<RuntimeObject*, 1> __active_exceptions;
	{
		// var value = new SparseMat();
		SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* L_0 = (SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB*)il2cpp_codegen_object_new(SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		SparseMat__ctor_mE0B2CE55945EAAA331304699907BF8C8DE732685(L_0, NULL);
		V_0 = L_0;
	}
	try
	{// begin try (depth: 1)
		// NativeMethods.core_FileNode_read_SparseMat(ptr, value.CvPtr, Cv2.ToPtr(defaultMat));
		intptr_t L_1 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* L_2 = V_0;
		NullCheck(L_2);
		intptr_t L_3;
		L_3 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_2, NULL);
		SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* L_4 = ___0_defaultMat;
		intptr_t L_5;
		L_5 = Cv2_ToPtr_mAAF00ECCEBEA32784F6F018CC026AF84840328C8(L_4, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileNode_read_SparseMat_mC8529D9C73B1E918A515C0C8A60D64C682D45C1F(L_1, L_3, L_5, NULL);
		// }
		goto IL_0028;
	}// end try (depth: 1)
	catch(Il2CppExceptionWrapper& e)
	{
		if(il2cpp_codegen_class_is_assignable_from (((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&RuntimeObject_il2cpp_TypeInfo_var)), il2cpp_codegen_object_class(e.ex)))
		{
			IL2CPP_PUSH_ACTIVE_EXCEPTION(e.ex);
			goto CATCH_001f;
		}
		throw e;
	}

CATCH_001f:
	{// begin catch(System.Object)
		// catch
		// value.Dispose();
		SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* L_6 = V_0;
		NullCheck(L_6);
		DisposableObject_Dispose_m623521DB9F2CD39AE5FE628B6117275CDB50E549(L_6, NULL);
		// throw;
		IL2CPP_RETHROW_MANAGED_EXCEPTION(IL2CPP_GET_ACTIVE_EXCEPTION(Exception_t*));
	}// end catch (depth: 1)

IL_0028:
	{
		// return value;
		SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* L_7 = V_0;
		return L_7;
	}
}
// OpenCvSharp.KeyPoint[] OpenCvSharp.FileNode::ReadKeyPoints()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* FileNode_ReadKeyPoints_mF7A665E4E844B266E5EAA1B7E0082B7D2EE56CC0 (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* V_0 = NULL;
	KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* V_1 = NULL;
	{
		// using (var valueVector = new VectorOfKeyPoint())
		VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* L_0 = (VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242*)il2cpp_codegen_object_new(VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		VectorOfKeyPoint__ctor_m8EE8A480691B930ABEBCBADE3E949C892F8AEAF0(L_0, NULL);
		V_0 = L_0;
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0020:
			{// begin finally (depth: 1)
				{
					VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* L_1 = V_0;
					if (!L_1)
					{
						goto IL_0029;
					}
				}
				{
					VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* L_2 = V_0;
					NullCheck(L_2);
					InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var, L_2);
				}

IL_0029:
				{
					return;
				}
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			// NativeMethods.core_FileNode_read_vectorOfKeyPoint(ptr, valueVector.CvPtr);
			intptr_t L_3 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
			VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* L_4 = V_0;
			NullCheck(L_4);
			intptr_t L_5;
			L_5 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_4, NULL);
			il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
			NativeMethods_core_FileNode_read_vectorOfKeyPoint_m48BFF89CB67B778C3716E50B1DC7B324CB9DB1C9(L_3, L_5, NULL);
			// return valueVector.ToArray();
			VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* L_6 = V_0;
			NullCheck(L_6);
			KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* L_7;
			L_7 = VectorOfKeyPoint_ToArray_mCBBFEAC0D509BAA38773F9882B54850F21605067(L_6, NULL);
			V_1 = L_7;
			goto IL_002a;
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_002a:
	{
		// }
		KeyPointU5BU5D_tEB0C7DAED185C6FEF4E6C01844F043F12F857D17* L_8 = V_1;
		return L_8;
	}
}
// OpenCvSharp.DMatch[] OpenCvSharp.FileNode::ReadDMatches()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* FileNode_ReadDMatches_m78F3D9048198A98D9371A5F2B97A339AF25005DA (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* V_0 = NULL;
	DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* V_1 = NULL;
	{
		// using (var valueVector = new VectorOfDMatch())
		VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* L_0 = (VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35*)il2cpp_codegen_object_new(VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35_il2cpp_TypeInfo_var);
		NullCheck(L_0);
		VectorOfDMatch__ctor_m303E6FD12231A9E8A3F21B4DD6F8F199265EA5F1(L_0, NULL);
		V_0 = L_0;
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0020:
			{// begin finally (depth: 1)
				{
					VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* L_1 = V_0;
					if (!L_1)
					{
						goto IL_0029;
					}
				}
				{
					VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* L_2 = V_0;
					NullCheck(L_2);
					InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var, L_2);
				}

IL_0029:
				{
					return;
				}
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			// NativeMethods.core_FileNode_read_vectorOfDMatch(ptr, valueVector.CvPtr);
			intptr_t L_3 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
			VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* L_4 = V_0;
			NullCheck(L_4);
			intptr_t L_5;
			L_5 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_4, NULL);
			il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
			NativeMethods_core_FileNode_read_vectorOfDMatch_m2A0B5F2F20CA95BE0A887CC787CFAA4A1781CE68(L_3, L_5, NULL);
			// return valueVector.ToArray();
			VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* L_6 = V_0;
			NullCheck(L_6);
			DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* L_7;
			L_7 = VectorOfDMatch_ToArray_mB05DEF2B0387832F3ECA3B3E2DB9B48681B78E28(L_6, NULL);
			V_1 = L_7;
			goto IL_002a;
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_002a:
	{
		// }
		DMatchU5BU5D_t5146FE58B7CF480941ED1CBE7375F150A69CBD34* L_8 = V_1;
		return L_8;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void OpenCvSharp.FileStorage::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage__ctor_mFA31848BD0A4DFB7C3E63E40A4F2E8D3AE7ACCE7 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public FileStorage()
		DisposableCvObject__ctor_m05A31FCADC967DF10B188DE00FFF3694F95C995F(__this, NULL);
		// ptr = NativeMethods.core_FileStorage_new1();
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_0;
		L_0 = NativeMethods_core_FileStorage_new1_m02DF158DFFC74524C893A32620DFA41EF1AB18CC(NULL);
		((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_0;
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::.ctor(System.String,OpenCvSharp.FileStorage/Mode,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage__ctor_m454D549E179511FFF412D596CEC8D8AAAA6900CE (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_source, int32_t ___1_flags, String_t* ___2_encoding, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public FileStorage(string source, Mode flags, string encoding = null)
		DisposableCvObject__ctor_m05A31FCADC967DF10B188DE00FFF3694F95C995F(__this, NULL);
		// if (source == null)
		String_t* L_0 = ___0_source;
		if (L_0)
		{
			goto IL_0014;
		}
	}
	{
		// throw new ArgumentNullException("nameof(source)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralD3935EFAE8603CC750F07F1D7D9717F8980D7D2F)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage__ctor_m454D549E179511FFF412D596CEC8D8AAAA6900CE_RuntimeMethod_var)));
	}

IL_0014:
	{
		// ptr = NativeMethods.core_FileStorage_new2(source, (int)flags, encoding);
		String_t* L_2 = ___0_source;
		int32_t L_3 = ___1_flags;
		String_t* L_4 = ___2_encoding;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_5;
		L_5 = NativeMethods_core_FileStorage_new2_mE3B4F9719EBDC26A5359F89C1B6843D885F1179A(L_2, L_3, L_4, NULL);
		((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_5;
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::Dispose(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_Dispose_m37068837299A43B25E4F5C4D8B4C24067969E697 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, bool ___0_disposing, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (!disposed)
		bool L_0 = __this->___disposed_7;
		if (L_0)
		{
			goto IL_0043;
		}
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_003b:
			{// begin finally (depth: 1)
				// base.Dispose(disposing);
				bool L_1 = ___0_disposing;
				DisposableCvObject_Dispose_mCA9D565F6EDDDFAAFEA0D38A92CEE3F7BD207A30(__this, L_1, NULL);
				// }
				return;
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			{
				// if (disposing)
				bool L_2 = ___0_disposing;
				// if (ptr != IntPtr.Zero)
				intptr_t L_3 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
				intptr_t L_4 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
				bool L_5;
				L_5 = IntPtr_op_Inequality_m90EFC9C4CAD9A33E309F2DDF98EE4E1DD253637B(L_3, L_4, NULL);
				if (!L_5)
				{
					goto IL_0032_1;
				}
			}
			{
				// NativeMethods.core_FileStorage_delete(ptr);
				intptr_t L_6 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
				il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
				NativeMethods_core_FileStorage_delete_m1749514F590372A620A34EC91DBDF362E61142A7(L_6, NULL);
				// ptr = IntPtr.Zero;
				intptr_t L_7 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
				((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_7;
			}

IL_0032_1:
			{
				// disposed = true;
				__this->___disposed_7 = (bool)1;
				// }
				goto IL_0043;
			}
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0043:
	{
		// }
		return;
	}
}
// OpenCvSharp.FileNode OpenCvSharp.FileStorage::get_Item(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* FileStorage_get_Item_m14288AA68219584ACCF271294F136E2DEFC7AAE7 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_nodeName, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_get_Item_m14288AA68219584ACCF271294F136E2DEFC7AAE7_RuntimeMethod_var)));
	}

IL_0013:
	{
		// if (nodeName == null)
		String_t* L_2 = ___0_nodeName;
		if (L_2)
		{
			goto IL_0021;
		}
	}
	{
		// throw new ArgumentNullException("nameof(nodeName)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_3 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral6F87F470C5F3D18A1C19D5CC121CB12DC511B7EC)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_get_Item_m14288AA68219584ACCF271294F136E2DEFC7AAE7_RuntimeMethod_var)));
	}

IL_0021:
	{
		// IntPtr node = NativeMethods.core_FileStorage_indexer(ptr, nodeName);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_5 = ___0_nodeName;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_6;
		L_6 = NativeMethods_core_FileStorage_indexer_mF70ECBBB5961D07C37ED5B90730AF764C8663A0D(L_4, L_5, NULL);
		V_0 = L_6;
		// if (node == IntPtr.Zero)
		intptr_t L_7 = V_0;
		intptr_t L_8 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_9;
		L_9 = IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271(L_7, L_8, NULL);
		if (!L_9)
		{
			goto IL_003d;
		}
	}
	{
		// return null;
		return (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5*)NULL;
	}

IL_003d:
	{
		// return new FileNode(node);
		intptr_t L_10 = V_0;
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_11 = (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5*)il2cpp_codegen_object_new(FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var);
		NullCheck(L_11);
		FileNode__ctor_mCFB99BF6734BB33533E7079EE319D7F89745DC81(L_11, L_10, NULL);
		return L_11;
	}
}
// System.String OpenCvSharp.FileStorage::get_ElName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* FileStorage_get_ElName_mDA923984230FE7571BFF172BF8D0C3B1C17B6E91 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	int8_t* V_0 = NULL;
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_get_ElName_mDA923984230FE7571BFF172BF8D0C3B1C17B6E91_RuntimeMethod_var)));
	}

IL_0013:
	{
		// sbyte* buf = NativeMethods.core_FileStorage_elname(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int8_t* L_3;
		L_3 = NativeMethods_core_FileStorage_elname_m521EB95E710D151F0F21CC3E8724A2B85B2A7F7F(L_2, NULL);
		V_0 = L_3;
		// if (buf == null)
		int8_t* L_4 = V_0;
		if ((!(((uintptr_t)L_4) == ((uintptr_t)((uintptr_t)0)))))
		{
			goto IL_0026;
		}
	}
	{
		// return null;
		return (String_t*)NULL;
	}

IL_0026:
	{
		// return new string(buf);
		int8_t* L_5 = V_0;
		String_t* L_6;
		L_6 = String_CreateString_mD70DA9AC0480711E89DC28E753836A824814630C(NULL, L_5, NULL);
		return L_6;
	}
}
// System.Byte[] OpenCvSharp.FileStorage::get_Structs()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* FileStorage_get_Structs_mB2A7755681C702D3681939AEEE87E0CF88644880 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* V_1 = NULL;
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_get_Structs_mB2A7755681C702D3681939AEEE87E0CF88644880_RuntimeMethod_var)));
	}

IL_0013:
	{
		// IntPtr buf = NativeMethods.core_FileStorage_structs(ptr, out length);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_3;
		L_3 = NativeMethods_core_FileStorage_structs_m141D44066E49E8E4BC02B43D8FF03912B31A287F(L_2, (&V_0), NULL);
		// byte[] result = new byte[length.ToInt32()];
		int32_t L_4;
		L_4 = IntPtr_ToInt32_mD53B5D2C73C7E4BE5ADEBC5D187EACC83D5BB292((&V_0), NULL);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_5 = (ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031*)SZArrayNew(ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031_il2cpp_TypeInfo_var, (uint32_t)L_4);
		V_1 = L_5;
		// Marshal.Copy(buf, result, 0, result.Length);
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_6 = V_1;
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_7 = V_1;
		NullCheck(L_7);
		il2cpp_codegen_runtime_class_init_inline(Marshal_tD976A56A90263C3CE2B780D4B1CADADE2E70B4A7_il2cpp_TypeInfo_var);
		Marshal_Copy_mF7402FFDB520EA1B8D1C32B368DBEE4B13F1BE77(L_3, L_6, 0, ((int32_t)(((RuntimeArray*)L_7)->max_length)), NULL);
		// return result;
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_8 = V_1;
		return L_8;
	}
}
// System.Int32 OpenCvSharp.FileStorage::get_State()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t FileStorage_get_State_m2590B0A9D2289BD9A7ED4705AB5FEAEEDB3C512F (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_get_State_m2590B0A9D2289BD9A7ED4705AB5FEAEEDB3C512F_RuntimeMethod_var)));
	}

IL_0013:
	{
		// return NativeMethods.core_FileStorage_state(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = NativeMethods_core_FileStorage_state_m3E394577CBF9AE0CAC6691F974E10B0E498CEF3F(L_2, NULL);
		return L_3;
	}
}
// System.Boolean OpenCvSharp.FileStorage::Open(System.String,OpenCvSharp.FileStorage/Mode,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FileStorage_Open_m05A185EDECB12BE4017DA4CC1EB8AFFC2E978B99 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_fileName, int32_t ___1_flags, String_t* ___2_encoding, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Open_m05A185EDECB12BE4017DA4CC1EB8AFFC2E978B99_RuntimeMethod_var)));
	}

IL_0013:
	{
		// if (fileName == null)
		String_t* L_2 = ___0_fileName;
		if (L_2)
		{
			goto IL_0021;
		}
	}
	{
		// throw new ArgumentNullException("nameof(fileName)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_3 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral72BBD11044FC7AD5727FB44739D1A1DE080DC8A9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Open_m05A185EDECB12BE4017DA4CC1EB8AFFC2E978B99_RuntimeMethod_var)));
	}

IL_0021:
	{
		// int ret = NativeMethods.core_FileStorage_open(ptr, fileName, (int)flags, encoding);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_5 = ___0_fileName;
		int32_t L_6 = ___1_flags;
		String_t* L_7 = ___2_encoding;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_8;
		L_8 = NativeMethods_core_FileStorage_open_m059EB3F28EFC6D83D579AECED2D37CBD73EC8FAA(L_4, L_5, L_6, L_7, NULL);
		// return ret != 0;
		return (bool)((!(((uint32_t)L_8) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Boolean OpenCvSharp.FileStorage::IsOpened()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool FileStorage_IsOpened_m1D024EBF55C2730197F8E93CA1A1B386E6B26FE1 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_IsOpened_m1D024EBF55C2730197F8E93CA1A1B386E6B26FE1_RuntimeMethod_var)));
	}

IL_0013:
	{
		// return NativeMethods.core_FileStorage_isOpened(ptr) != 0;
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		int32_t L_3;
		L_3 = NativeMethods_core_FileStorage_isOpened_m7DFD067F25B9B49516F7141999C0C8B32BD46CDD(L_2, NULL);
		return (bool)((!(((uint32_t)L_3) <= ((uint32_t)0)))? 1 : 0);
	}
}
// System.Void OpenCvSharp.FileStorage::Release()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_Release_m9CFDBE79C07CD2E52A454F2A9279EC9B5698FC31 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, const RuntimeMethod* method) 
{
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Release_m9CFDBE79C07CD2E52A454F2A9279EC9B5698FC31_RuntimeMethod_var)));
	}

IL_0013:
	{
		// Dispose();
		DisposableObject_Dispose_m623521DB9F2CD39AE5FE628B6117275CDB50E549(__this, NULL);
		// }
		return;
	}
}
// System.String OpenCvSharp.FileStorage::ReleaseAndGetString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* FileStorage_ReleaseAndGetString_m0924D21A99238E05773FB9B4D5226E37936E0946 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringBuilder_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	StringBuilder_t* V_0 = NULL;
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_ReleaseAndGetString_m0924D21A99238E05773FB9B4D5226E37936E0946_RuntimeMethod_var)));
	}

IL_0013:
	{
		// var buf = new StringBuilder(1 << 16);
		StringBuilder_t* L_2 = (StringBuilder_t*)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		NullCheck(L_2);
		StringBuilder__ctor_m2619CA8D2C3476DF1A302D9D941498BB1C6164C5(L_2, ((int32_t)65536), NULL);
		V_0 = L_2;
		// NativeMethods.core_FileStorage_releaseAndGetString(ptr, buf, buf.Capacity);
		intptr_t L_3 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		StringBuilder_t* L_4 = V_0;
		StringBuilder_t* L_5 = V_0;
		NullCheck(L_5);
		int32_t L_6;
		L_6 = StringBuilder_get_Capacity_m9DBF3B3940BC0BB882CA26F0EDB53896A491AD1E(L_5, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_releaseAndGetString_m908BAFB26174F170E428D793EA7FA3876B31BA59(L_3, L_4, L_6, NULL);
		// ptr = IntPtr.Zero;
		intptr_t L_7 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5 = L_7;
		// Dispose();
		DisposableObject_Dispose_m623521DB9F2CD39AE5FE628B6117275CDB50E549(__this, NULL);
		// return buf.ToString();
		StringBuilder_t* L_8 = V_0;
		NullCheck(L_8);
		String_t* L_9;
		L_9 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_8);
		return L_9;
	}
}
// OpenCvSharp.FileNode OpenCvSharp.FileStorage::GetFirstTopLevelNode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* FileStorage_GetFirstTopLevelNode_m649A279BFEB464A5AC76E5C352C60F153156D218 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_GetFirstTopLevelNode_m649A279BFEB464A5AC76E5C352C60F153156D218_RuntimeMethod_var)));
	}

IL_0013:
	{
		// IntPtr node = NativeMethods.core_FileStorage_getFirstTopLevelNode(ptr);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_3;
		L_3 = NativeMethods_core_FileStorage_getFirstTopLevelNode_mECA7E58BAD1D3228F9101EE2BACFEDC99E171A64(L_2, NULL);
		V_0 = L_3;
		// if (node == IntPtr.Zero)
		intptr_t L_4 = V_0;
		intptr_t L_5 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_6;
		L_6 = IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271(L_4, L_5, NULL);
		if (!L_6)
		{
			goto IL_002e;
		}
	}
	{
		// return null;
		return (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5*)NULL;
	}

IL_002e:
	{
		// return new FileNode(node);
		intptr_t L_7 = V_0;
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_8 = (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5*)il2cpp_codegen_object_new(FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var);
		NullCheck(L_8);
		FileNode__ctor_mCFB99BF6734BB33533E7079EE319D7F89745DC81(L_8, L_7, NULL);
		return L_8;
	}
}
// OpenCvSharp.FileNode OpenCvSharp.FileStorage::Root(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* FileStorage_Root_mD4B04F245802E22921CBE8DCA83F1194DECDD90F (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, int32_t ___0_streamidx, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IntPtr_t_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	intptr_t V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Root_mD4B04F245802E22921CBE8DCA83F1194DECDD90F_RuntimeMethod_var)));
	}

IL_0013:
	{
		// IntPtr node = NativeMethods.core_FileStorage_root(ptr, streamidx);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_3 = ___0_streamidx;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		intptr_t L_4;
		L_4 = NativeMethods_core_FileStorage_root_m730F403F5E12E66DEB42EE9C452283806F2C2405(L_2, L_3, NULL);
		V_0 = L_4;
		// if (node == IntPtr.Zero)
		intptr_t L_5 = V_0;
		intptr_t L_6 = ((IntPtr_t_StaticFields*)il2cpp_codegen_static_fields_for(IntPtr_t_il2cpp_TypeInfo_var))->___Zero_1;
		bool L_7;
		L_7 = IntPtr_op_Equality_m7D9CDCDE9DC2A0C2C614633F4921E90187FAB271(L_5, L_6, NULL);
		if (!L_7)
		{
			goto IL_002f;
		}
	}
	{
		// return null;
		return (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5*)NULL;
	}

IL_002f:
	{
		// return new FileNode(node);
		intptr_t L_8 = V_0;
		FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5* L_9 = (FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5*)il2cpp_codegen_object_new(FileNode_t72D4B6FE6534A0E8BA1BE4B6E0459B97B897EDD5_il2cpp_TypeInfo_var);
		NullCheck(L_9);
		FileNode__ctor_mCFB99BF6734BB33533E7079EE319D7F89745DC81(L_9, L_8, NULL);
		return L_9;
	}
}
// System.Void OpenCvSharp.FileStorage::WriteRaw(System.String,System.IntPtr,System.Int64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_WriteRaw_m550A9553BBB35DD1FCB48E434C1647DDEAD1DB4B (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_fmt, intptr_t ___1_vec, int64_t ___2_len, const RuntimeMethod* method) 
{
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_WriteRaw_m550A9553BBB35DD1FCB48E434C1647DDEAD1DB4B_RuntimeMethod_var)));
	}

IL_0013:
	{
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::WriteObj(System.String,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_WriteObj_mA47C82F1271C9B5AA79327343DD34AF4D86C7C84 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_name, intptr_t ___1_obj, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (disposed)
		bool L_0 = __this->___disposed_7;
		if (!L_0)
		{
			goto IL_0013;
		}
	}
	{
		// throw new ObjectDisposedException("FileStorage");
		ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB* L_1 = (ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ObjectDisposedException_tC5FB29E8E980E2010A2F6A5B9B791089419F89EB_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ObjectDisposedException__ctor_mB2C8582279AF3F0C1CF9AA52DA7331BF848DFD48(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralAEAC27673A37AA98511BDEA0017EB30B000D5666)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_WriteObj_mA47C82F1271C9B5AA79327343DD34AF4D86C7C84_RuntimeMethod_var)));
	}

IL_0013:
	{
		// if (name == null)
		String_t* L_2 = ___0_name;
		if (L_2)
		{
			goto IL_0021;
		}
	}
	{
		// throw new ArgumentNullException("nameof(name)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_3 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral06EE6726823EC0809D607A02E5C8310F206646E9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_WriteObj_mA47C82F1271C9B5AA79327343DD34AF4D86C7C84_RuntimeMethod_var)));
	}

IL_0021:
	{
		// NativeMethods.core_FileStorage_writeObj(ptr, name, obj);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_5 = ___0_name;
		intptr_t L_6 = ___1_obj;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_writeObj_mF3BC62295B82CB677578772B259334A009F5F291(L_4, L_5, L_6, NULL);
		// }
		return;
	}
}
// System.String OpenCvSharp.FileStorage::GetDefaultObjectName(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* FileStorage_GetDefaultObjectName_mE66FF56E7B93148A01564442C8F0A85C5E0466AE (String_t* ___0_fileName, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&StringBuilder_t_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	StringBuilder_t* V_0 = NULL;
	{
		// if (fileName == null)
		String_t* L_0 = ___0_fileName;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(fileName)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral72BBD11044FC7AD5727FB44739D1A1DE080DC8A9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_GetDefaultObjectName_mE66FF56E7B93148A01564442C8F0A85C5E0466AE_RuntimeMethod_var)));
	}

IL_000e:
	{
		// if (!File.Exists(fileName))
		String_t* L_2 = ___0_fileName;
		bool L_3;
		L_3 = File_Exists_m95E329ABBE3EAD6750FE1989BBA6884457136D4A(L_2, NULL);
		if (L_3)
		{
			goto IL_0022;
		}
	}
	{
		// throw new FileNotFoundException("", fileName);
		String_t* L_4 = ___0_fileName;
		FileNotFoundException_t17F1B49AD996E4A60C87C7ADC9D3A25EB5808A9A* L_5 = (FileNotFoundException_t17F1B49AD996E4A60C87C7ADC9D3A25EB5808A9A*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileNotFoundException_t17F1B49AD996E4A60C87C7ADC9D3A25EB5808A9A_il2cpp_TypeInfo_var)));
		NullCheck(L_5);
		FileNotFoundException__ctor_mC4247CABF75A7B484A21790CD7F8EFA8AC101677(L_5, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralDA39A3EE5E6B4B0D3255BFEF95601890AFD80709)), L_4, NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_5, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_GetDefaultObjectName_mE66FF56E7B93148A01564442C8F0A85C5E0466AE_RuntimeMethod_var)));
	}

IL_0022:
	{
		// var buf = new StringBuilder(1 << 16);
		StringBuilder_t* L_6 = (StringBuilder_t*)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		NullCheck(L_6);
		StringBuilder__ctor_m2619CA8D2C3476DF1A302D9D941498BB1C6164C5(L_6, ((int32_t)65536), NULL);
		V_0 = L_6;
		// NativeMethods.core_FileStorage_getDefaultObjectName(fileName, buf, buf.Capacity);
		String_t* L_7 = ___0_fileName;
		StringBuilder_t* L_8 = V_0;
		StringBuilder_t* L_9 = V_0;
		NullCheck(L_9);
		int32_t L_10;
		L_10 = StringBuilder_get_Capacity_m9DBF3B3940BC0BB882CA26F0EDB53896A491AD1E(L_9, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_getDefaultObjectName_m87B45337F524D61F1507CD3BFEDBDD3EDCE4FDDF(L_7, L_8, L_10, NULL);
		// return buf.ToString();
		StringBuilder_t* L_11 = V_0;
		NullCheck(L_11);
		String_t* L_12;
		L_12 = VirtualFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_11);
		return L_12;
	}
}
// System.Void OpenCvSharp.FileStorage::Write(System.String,System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_Write_m885C4A42A3A2943CCCB3A318DC838C4D1D1860CE (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_name, int32_t ___1_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (name == null)
		String_t* L_0 = ___0_name;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(name)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral06EE6726823EC0809D607A02E5C8310F206646E9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_m885C4A42A3A2943CCCB3A318DC838C4D1D1860CE_RuntimeMethod_var)));
	}

IL_000e:
	{
		// NativeMethods.core_FileStorage_write_int(ptr, name, value);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_3 = ___0_name;
		int32_t L_4 = ___1_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_write_int_m8CE5C43A4CBC549B128FBD1C95DB418BD24EA069(L_2, L_3, L_4, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::Write(System.String,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_Write_m8CB7281153CD2C59090535107CC7F977A3D844D5 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_name, float ___1_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (name == null)
		String_t* L_0 = ___0_name;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(name)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral06EE6726823EC0809D607A02E5C8310F206646E9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_m8CB7281153CD2C59090535107CC7F977A3D844D5_RuntimeMethod_var)));
	}

IL_000e:
	{
		// NativeMethods.core_FileStorage_write_float(ptr, name, value);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_3 = ___0_name;
		float L_4 = ___1_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_write_float_m31A5B4979970CF2C2D5CAC53ACD28150818A69C1(L_2, L_3, L_4, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::Write(System.String,System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_Write_m3087C67DA0E06A9D46F6984EE26E734C78B5A25C (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_name, double ___1_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (name == null)
		String_t* L_0 = ___0_name;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(name)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral06EE6726823EC0809D607A02E5C8310F206646E9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_m3087C67DA0E06A9D46F6984EE26E734C78B5A25C_RuntimeMethod_var)));
	}

IL_000e:
	{
		// NativeMethods.core_FileStorage_write_double(ptr, name, value);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_3 = ___0_name;
		double L_4 = ___1_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_write_double_m7D32E50CE35D8AD64B1E78098465CC0C2713E94D(L_2, L_3, L_4, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::Write(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_Write_mE3EC56A2EF6939C6A58104712A1193D7F10B8891 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_name, String_t* ___1_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (name == null)
		String_t* L_0 = ___0_name;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(name)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral06EE6726823EC0809D607A02E5C8310F206646E9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_mE3EC56A2EF6939C6A58104712A1193D7F10B8891_RuntimeMethod_var)));
	}

IL_000e:
	{
		// if (value == null)
		String_t* L_2 = ___1_value;
		if (L_2)
		{
			goto IL_001c;
		}
	}
	{
		// throw new ArgumentNullException("nameof(value)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_3 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralD90AE71EBB34FF6A78254DE308A8EB5A61FF74D5)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_mE3EC56A2EF6939C6A58104712A1193D7F10B8891_RuntimeMethod_var)));
	}

IL_001c:
	{
		// NativeMethods.core_FileStorage_write_String(ptr, name, value);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_5 = ___0_name;
		String_t* L_6 = ___1_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_write_String_m98FF62AFB96DFCE1711C1A9C07C046F6278A7F06(L_4, L_5, L_6, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::Write(System.String,OpenCvSharp.Mat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_Write_m02B2365D0C07CF65ED8C89451C7ABDFF647C75C7 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_name, Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* ___1_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (name == null)
		String_t* L_0 = ___0_name;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(name)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral06EE6726823EC0809D607A02E5C8310F206646E9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_m02B2365D0C07CF65ED8C89451C7ABDFF647C75C7_RuntimeMethod_var)));
	}

IL_000e:
	{
		// if (value == null)
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_2 = ___1_value;
		if (L_2)
		{
			goto IL_001c;
		}
	}
	{
		// throw new ArgumentNullException("nameof(value)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_3 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralD90AE71EBB34FF6A78254DE308A8EB5A61FF74D5)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_m02B2365D0C07CF65ED8C89451C7ABDFF647C75C7_RuntimeMethod_var)));
	}

IL_001c:
	{
		// NativeMethods.core_FileStorage_write_Mat(ptr, name, value.CvPtr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_5 = ___0_name;
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_6 = ___1_value;
		NullCheck(L_6);
		intptr_t L_7;
		L_7 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_6, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_write_Mat_mB3A57275E3FDB91925FAE232920566D91489BA2F(L_4, L_5, L_7, NULL);
		// GC.KeepAlive(value);
		Mat_tA6670B61E48BB3D77E39E1299B8DAE00AAC1D4DE* L_8 = ___1_value;
		il2cpp_codegen_runtime_class_init_inline(GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		GC_KeepAlive_m53833ADCAF719294E5D1DA13B067E31472C762F9(L_8, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::Write(System.String,OpenCvSharp.SparseMat)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_Write_mF283254779A90A7CEB56FB3865FD34A9BB1AEB63 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_name, SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* ___1_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (name == null)
		String_t* L_0 = ___0_name;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(name)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral06EE6726823EC0809D607A02E5C8310F206646E9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_mF283254779A90A7CEB56FB3865FD34A9BB1AEB63_RuntimeMethod_var)));
	}

IL_000e:
	{
		// if (value == null)
		SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* L_2 = ___1_value;
		if (L_2)
		{
			goto IL_001c;
		}
	}
	{
		// throw new ArgumentNullException("nameof(value)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_3 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralD90AE71EBB34FF6A78254DE308A8EB5A61FF74D5)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_mF283254779A90A7CEB56FB3865FD34A9BB1AEB63_RuntimeMethod_var)));
	}

IL_001c:
	{
		// NativeMethods.core_FileStorage_write_SparseMat(ptr, name, value.CvPtr);
		intptr_t L_4 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_5 = ___0_name;
		SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* L_6 = ___1_value;
		NullCheck(L_6);
		intptr_t L_7;
		L_7 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_6, NULL);
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_write_SparseMat_mA56B88E1C0CCCF3201C3C13B64AFA10B2602BBB0(L_4, L_5, L_7, NULL);
		// GC.KeepAlive(value);
		SparseMat_t6835FF9ED2D49378ED78B452722948BBF8E8A4FB* L_8 = ___1_value;
		il2cpp_codegen_runtime_class_init_inline(GC_t920F9CF6EBB7C787E5010A4352E1B587F356DC58_il2cpp_TypeInfo_var);
		GC_KeepAlive_m53833ADCAF719294E5D1DA13B067E31472C762F9(L_8, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::Write(System.String,System.Collections.Generic.IEnumerable`1<OpenCvSharp.KeyPoint>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_Write_mC78F2F2E465BB6486ECD3100BDD97C9D58BFEF3D (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_name, RuntimeObject* ___1_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* V_0 = NULL;
	{
		// if (name == null)
		String_t* L_0 = ___0_name;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(name)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral06EE6726823EC0809D607A02E5C8310F206646E9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_mC78F2F2E465BB6486ECD3100BDD97C9D58BFEF3D_RuntimeMethod_var)));
	}

IL_000e:
	{
		// if (value == null)
		RuntimeObject* L_2 = ___1_value;
		if (L_2)
		{
			goto IL_001c;
		}
	}
	{
		// throw new ArgumentNullException("nameof(value)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_3 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralD90AE71EBB34FF6A78254DE308A8EB5A61FF74D5)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_mC78F2F2E465BB6486ECD3100BDD97C9D58BFEF3D_RuntimeMethod_var)));
	}

IL_001c:
	{
		// using (var valueVector = new VectorOfKeyPoint(value))
		RuntimeObject* L_4 = ___1_value;
		VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* L_5 = (VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242*)il2cpp_codegen_object_new(VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242_il2cpp_TypeInfo_var);
		NullCheck(L_5);
		VectorOfKeyPoint__ctor_m3CFD97CD91E425B95262AEF78FD65F7E4851D392(L_5, L_4, NULL);
		V_0 = L_5;
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0037:
			{// begin finally (depth: 1)
				{
					VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* L_6 = V_0;
					if (!L_6)
					{
						goto IL_0040;
					}
				}
				{
					VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* L_7 = V_0;
					NullCheck(L_7);
					InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var, L_7);
				}

IL_0040:
				{
					return;
				}
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			// NativeMethods.core_FileStorage_write_vectorOfKeyPoint(ptr, name, valueVector.CvPtr);
			intptr_t L_8 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
			String_t* L_9 = ___0_name;
			VectorOfKeyPoint_t8FEBC6A3CDCB604FAD212885BE297BE6E6F18242* L_10 = V_0;
			NullCheck(L_10);
			intptr_t L_11;
			L_11 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_10, NULL);
			il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
			NativeMethods_core_FileStorage_write_vectorOfKeyPoint_mD9BA00E63634CF3485B1C520994718E24FBCE91B(L_8, L_9, L_11, NULL);
			// }
			goto IL_0041;
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0041:
	{
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::Write(System.String,System.Collections.Generic.IEnumerable`1<OpenCvSharp.DMatch>)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_Write_m2F9F3DF5AF5EB48E0C070627CA55D4B1F89102BD (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_name, RuntimeObject* ___1_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* V_0 = NULL;
	{
		// if (name == null)
		String_t* L_0 = ___0_name;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(name)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteral06EE6726823EC0809D607A02E5C8310F206646E9)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_m2F9F3DF5AF5EB48E0C070627CA55D4B1F89102BD_RuntimeMethod_var)));
	}

IL_000e:
	{
		// if (value == null)
		RuntimeObject* L_2 = ___1_value;
		if (L_2)
		{
			goto IL_001c;
		}
	}
	{
		// throw new ArgumentNullException("nameof(value)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_3 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_3);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_3, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralD90AE71EBB34FF6A78254DE308A8EB5A61FF74D5)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_3, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_Write_m2F9F3DF5AF5EB48E0C070627CA55D4B1F89102BD_RuntimeMethod_var)));
	}

IL_001c:
	{
		// using (var valueVector = new VectorOfDMatch(value))
		RuntimeObject* L_4 = ___1_value;
		VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* L_5 = (VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35*)il2cpp_codegen_object_new(VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35_il2cpp_TypeInfo_var);
		NullCheck(L_5);
		VectorOfDMatch__ctor_mAE8690E0D5E863E32FD6EE888BC654131964650F(L_5, L_4, NULL);
		V_0 = L_5;
	}
	{
		auto __finallyBlock = il2cpp::utils::Finally([&]
		{

FINALLY_0037:
			{// begin finally (depth: 1)
				{
					VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* L_6 = V_0;
					if (!L_6)
					{
						goto IL_0040;
					}
				}
				{
					VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* L_7 = V_0;
					NullCheck(L_7);
					InterfaceActionInvoker0::Invoke(0 /* System.Void System.IDisposable::Dispose() */, IDisposable_t030E0496B4E0E4E4F086825007979AF51F7248C5_il2cpp_TypeInfo_var, L_7);
				}

IL_0040:
				{
					return;
				}
			}// end finally (depth: 1)
		});
		try
		{// begin try (depth: 1)
			// NativeMethods.core_FileStorage_write_vectorOfDMatch(ptr, name, valueVector.CvPtr);
			intptr_t L_8 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
			String_t* L_9 = ___0_name;
			VectorOfDMatch_tA9B3039BE7BCE725EB9EC9B1271702DFE8038E35* L_10 = V_0;
			NullCheck(L_10);
			intptr_t L_11;
			L_11 = DisposableCvObject_get_CvPtr_m26B8F96514503A925167538D5C4EE5099AC5AA02(L_10, NULL);
			il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
			NativeMethods_core_FileStorage_write_vectorOfDMatch_m8987B8C0E138C2F7CD5A3175BACC8D4BDC946574(L_8, L_9, L_11, NULL);
			// }
			goto IL_0041;
		}// end try (depth: 1)
		catch(Il2CppExceptionWrapper& e)
		{
			__finallyBlock.StoreException(e.ex);
		}
	}

IL_0041:
	{
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::WriteScalar(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_WriteScalar_m6C430A50362A31640F072F08AEB826E2BBEDC462 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, int32_t ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NativeMethods.core_FileStorage_writeScalar_int(ptr, value);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		int32_t L_1 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_writeScalar_int_m9FFA7E6FFC41D5082A83456CCC2E4E4E38C5110C(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::WriteScalar(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_WriteScalar_m9ABE0F6955B1EEB3D6DBA73F1356ED6503BACEFC (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, float ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NativeMethods.core_FileStorage_writeScalar_float(ptr, value);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		float L_1 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_writeScalar_float_m22DBA8827914E663283D1E32E83A9D9FF639024B(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::WriteScalar(System.Double)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_WriteScalar_m5998C65E7D95AE8ECC4107A55A47D11BD98CBE2C (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, double ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// NativeMethods.core_FileStorage_writeScalar_double(ptr, value);
		intptr_t L_0 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		double L_1 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_writeScalar_double_mC3ADB21E292A92073BD327397EB43A37D73A9CDA(L_0, L_1, NULL);
		// }
		return;
	}
}
// System.Void OpenCvSharp.FileStorage::WriteScalar(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void FileStorage_WriteScalar_mDEC3B95210E19D633F2DBD6EB015A7B80672F934 (FileStorage_tDC615858CCF423435BCBB3D7AC459311D9BB3058* __this, String_t* ___0_value, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// if (value == null)
		String_t* L_0 = ___0_value;
		if (L_0)
		{
			goto IL_000e;
		}
	}
	{
		// throw new ArgumentNullException("nameof(value)");
		ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129* L_1 = (ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129*)il2cpp_codegen_object_new(((RuntimeClass*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&ArgumentNullException_t327031E412FAB2351B0022DD5DAD47E67E597129_il2cpp_TypeInfo_var)));
		NullCheck(L_1);
		ArgumentNullException__ctor_m444AE141157E333844FC1A9500224C2F9FD24F4B(L_1, ((String_t*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&_stringLiteralD90AE71EBB34FF6A78254DE308A8EB5A61FF74D5)), NULL);
		IL2CPP_RAISE_MANAGED_EXCEPTION(L_1, ((RuntimeMethod*)il2cpp_codegen_initialize_runtime_metadata_inline((uintptr_t*)&FileStorage_WriteScalar_mDEC3B95210E19D633F2DBD6EB015A7B80672F934_RuntimeMethod_var)));
	}

IL_000e:
	{
		// NativeMethods.core_FileStorage_writeScalar_String(ptr, value);
		intptr_t L_2 = ((DisposableCvObject_tA8CD143EDE29DDF4EA4F227AD4A2609FE6081184*)__this)->___ptr_5;
		String_t* L_3 = ___0_value;
		il2cpp_codegen_runtime_class_init_inline(NativeMethods_tA5FC68142EC363060883C55A9C8DC33F106957EC_il2cpp_TypeInfo_var);
		NativeMethods_core_FileStorage_writeScalar_String_mFAC487563545263449C962881FD646B8D7763A71(L_2, L_3, NULL);
		// }
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* ARPlaneMeshVisualizer_get_mesh_m6C1A730CECE8AE0A0549ED615AB3B3D66E4A0FD8_inline (ARPlaneMeshVisualizer_t21838C8E2676AC524939E67CB965925E924E018F* __this, const RuntimeMethod* method) 
{
	{
		// public Mesh mesh { get; private set; }
		Mesh_t6D9C539763A09BC2B12AEAEF36F6DFFC98AE63D4* L_0 = __this->___U3CmeshU3Ek__BackingField_4;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, float ___0_x, float ___1_y, float ___2_z, const RuntimeMethod* method) 
{
	{
		float L_0 = ___0_x;
		__this->___x_2 = L_0;
		float L_1 = ___1_y;
		__this->___y_3 = L_1;
		float L_2 = ___2_z;
		__this->___z_4 = L_2;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Vector3_Distance_m2314DB9B8BD01157E013DF87BEA557375C7F9FF9_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_a, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___1_b, const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Math_tEB65DE7CA8B083C412C969C92981C030865486CE_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	float V_1 = 0.0f;
	float V_2 = 0.0f;
	float V_3 = 0.0f;
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___0_a;
		float L_1 = L_0.___x_2;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_2 = ___1_b;
		float L_3 = L_2.___x_2;
		V_0 = ((float)il2cpp_codegen_subtract(L_1, L_3));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_4 = ___0_a;
		float L_5 = L_4.___y_3;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___1_b;
		float L_7 = L_6.___y_3;
		V_1 = ((float)il2cpp_codegen_subtract(L_5, L_7));
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_8 = ___0_a;
		float L_9 = L_8.___z_4;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = ___1_b;
		float L_11 = L_10.___z_4;
		V_2 = ((float)il2cpp_codegen_subtract(L_9, L_11));
		float L_12 = V_0;
		float L_13 = V_0;
		float L_14 = V_1;
		float L_15 = V_1;
		float L_16 = V_2;
		float L_17 = V_2;
		il2cpp_codegen_runtime_class_init_inline(Math_tEB65DE7CA8B083C412C969C92981C030865486CE_il2cpp_TypeInfo_var);
		double L_18;
		L_18 = sqrt(((double)((float)il2cpp_codegen_add(((float)il2cpp_codegen_add(((float)il2cpp_codegen_multiply(L_12, L_13)), ((float)il2cpp_codegen_multiply(L_14, L_15)))), ((float)il2cpp_codegen_multiply(L_16, L_17))))));
		V_3 = ((float)L_18);
		goto IL_0040;
	}

IL_0040:
	{
		float L_19 = V_3;
		return L_19;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float ARFeatheredPlaneMeshVisualizer_get_featheringWidth_m14D3A8BE3E9A745E6FD525B19ADDC892B8399B4D_inline (ARFeatheredPlaneMeshVisualizer_t5B508CD2D37F908F4359D7DED031B3C357E34955* __this, const RuntimeMethod* method) 
{
	{
		// get { return m_FeatheringWidth; }
		float L_0 = __this->___m_FeatheringWidth_4;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR float Mathf_Max_mF5379E63D2BBAC76D090748695D833934F8AD051_inline (float ___0_a, float ___1_b, const RuntimeMethod* method) 
{
	float V_0 = 0.0f;
	float G_B3_0 = 0.0f;
	{
		float L_0 = ___0_a;
		float L_1 = ___1_b;
		if ((((float)L_0) > ((float)L_1)))
		{
			goto IL_0008;
		}
	}
	{
		float L_2 = ___1_b;
		G_B3_0 = L_2;
		goto IL_0009;
	}

IL_0008:
	{
		float L_3 = ___0_a;
		G_B3_0 = L_3;
	}

IL_0009:
	{
		V_0 = G_B3_0;
		goto IL_000c;
	}

IL_000c:
	{
		float L_4 = V_0;
		return L_4;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void Vector3_Set_m1C7E543216734FB513F9CEBA44C50E6FC2AFD49D_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2* __this, float ___0_newX, float ___1_newY, float ___2_newZ, const RuntimeMethod* method) 
{
	{
		float L_0 = ___0_newX;
		__this->___x_2 = L_0;
		float L_1 = ___1_newY;
		__this->___y_3 = L_1;
		float L_2 = ___2_newZ;
		__this->___z_4 = L_2;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_get_one_mC9B289F1E15C42C597180C9FE6FB492495B51D02_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ((Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_StaticFields*)il2cpp_codegen_static_fields_for(Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2_il2cpp_TypeInfo_var))->___oneVector_6;
		V_0 = L_0;
		goto IL_0009;
	}

IL_0009:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_1 = V_0;
		return L_1;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 Vector3_op_Multiply_m87BA7C578F96C8E49BB07088DAAC4649F83B0353_inline (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_a, float ___1_d, const RuntimeMethod* method) 
{
	Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 V_0;
	memset((&V_0), 0, sizeof(V_0));
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_0 = ___0_a;
		float L_1 = L_0.___x_2;
		float L_2 = ___1_d;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_3 = ___0_a;
		float L_4 = L_3.___y_3;
		float L_5 = ___1_d;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_6 = ___0_a;
		float L_7 = L_6.___z_4;
		float L_8 = ___1_d;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_9;
		memset((&L_9), 0, sizeof(L_9));
		Vector3__ctor_m376936E6B999EF1ECBE57D990A386303E2283DE0_inline((&L_9), ((float)il2cpp_codegen_multiply(L_1, L_2)), ((float)il2cpp_codegen_multiply(L_4, L_5)), ((float)il2cpp_codegen_multiply(L_7, L_8)), /*hidden argument*/NULL);
		V_0 = L_9;
		goto IL_0021;
	}

IL_0021:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_10 = V_0;
		return L_10;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* WindowsLibraryLoader_get_Instance_m11C2C03E0669B2812F5A54BE2630DC036A41BBFD_inline (const RuntimeMethod* method) 
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_runtime_metadata((uintptr_t*)&WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		s_Il2CppMethodInitialized = true;
	}
	{
		// public static WindowsLibraryLoader Instance { get { return instance; } }
		il2cpp_codegen_runtime_class_init_inline(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var);
		WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* L_0 = ((WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_StaticFields*)il2cpp_codegen_static_fields_for(WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7_il2cpp_TypeInfo_var))->___instance_0;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* WindowsLibraryLoader_get_AdditionalPaths_m3305759C5A1160F085A7B8E8842870B8D1E36E19_inline (WindowsLibraryLoader_t5C2DFEB9D4074C4B1AFBE7D5CB3CA6EE6A36B6B7* __this, const RuntimeMethod* method) 
{
	{
		// public List<string> AdditionalPaths { get; private set; }
		List_1_tF470A3BE5C1B5B68E1325EF3F109D172E60BD7CD* L_0 = __this->___U3CAdditionalPathsU3Ek__BackingField_7;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR Exception_t* Exception_get_InnerException_m0C1BDB339C786BA4DA7D2C1AD214571CFBBB1410_inline (Exception_t* __this, const RuntimeMethod* method) 
{
	{
		Exception_t* L_0 = __this->____innerException_4;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t OperatingSystem_get_Platform_m01AF3D6217E4031C3AA824481BBE9E2933347E26_inline (OperatingSystem_t08A94435A5C7D999B5553B6C58763A6F2E3C8557* __this, const RuntimeMethod* method) 
{
	{
		int32_t L_0 = __this->____platform_1;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void DisposableObject_set_IsDisposed_mA0005D0FD1A0BB5E8DA844657B2E152A8ECE3ADC_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, bool ___0_value, const RuntimeMethod* method) 
{
	{
		// public bool IsDisposed { get; protected set; }
		bool L_0 = ___0_value;
		__this->___U3CIsDisposedU3Ek__BackingField_0 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void DisposableObject_set_IsEnabledDispose_mB886867456A19E213A63A8707821F084F869C9DF_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, bool ___0_value, const RuntimeMethod* method) 
{
	{
		// public bool IsEnabledDispose { get; set; }
		bool L_0 = ___0_value;
		__this->___U3CIsEnabledDisposeU3Ek__BackingField_1 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void DisposableObject_set_AllocatedMemory_mC4FA83EBA3AC845682C433724E5BE2BE7F99204F_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, intptr_t ___0_value, const RuntimeMethod* method) 
{
	{
		// protected IntPtr AllocatedMemory { get; set; }
		intptr_t L_0 = ___0_value;
		__this->___U3CAllocatedMemoryU3Ek__BackingField_3 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void DisposableObject_set_AllocatedMemorySize_m7C716591244CD0B57AD7ACF322F30628E0C3736B_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, int64_t ___0_value, const RuntimeMethod* method) 
{
	{
		// protected long AllocatedMemorySize { get; set; }
		int64_t L_0 = ___0_value;
		__this->___U3CAllocatedMemorySizeU3Ek__BackingField_4 = L_0;
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool DisposableObject_get_IsDisposed_mF81D363015F20AD14CEE607DC64317A7FDCB3C5E_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		// public bool IsDisposed { get; protected set; }
		bool L_0 = __this->___U3CIsDisposedU3Ek__BackingField_0;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int64_t DisposableObject_get_AllocatedMemorySize_m89AE6049FB8157D330B952DCED0D83015BDF2784_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		// protected long AllocatedMemorySize { get; set; }
		int64_t L_0 = __this->___U3CAllocatedMemorySizeU3Ek__BackingField_4;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR intptr_t DisposableObject_get_AllocatedMemory_m3EB0D007AFC7D603BD7EB8047B3722AD3F5AFCB5_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		// protected IntPtr AllocatedMemory { get; set; }
		intptr_t L_0 = __this->___U3CAllocatedMemoryU3Ek__BackingField_3;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR bool DisposableObject_get_IsEnabledDispose_mFCE8D52E214E0DB33641495A16EB7A1131EA3CF4_inline (DisposableObject_t02C4093A95C57EBD24739E30A8DB4830C0CB9D41* __this, const RuntimeMethod* method) 
{
	{
		// public bool IsEnabledDispose { get; set; }
		bool L_0 = __this->___U3CIsEnabledDisposeU3Ek__BackingField_1;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void MatProxy_set_ImageData_m5EC27313F53BC18F0CA955F5E1852304963D700F_inline (MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8* __this, ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* ___0_value, const RuntimeMethod* method) 
{
	{
		// public byte[] ImageData { get; private set; }
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = ___0_value;
		__this->___U3CImageDataU3Ek__BackingField_0 = L_0;
		Il2CppCodeGenWriteBarrier((void**)(&__this->___U3CImageDataU3Ek__BackingField_0), (void*)L_0);
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* MatProxy_get_ImageData_m6CEDD6EEA6CA151909D5849120B047B3462CC049_inline (MatProxy_t6DC4CCFE1D1D7B9AB4B4CD91C5FDBFDBD26803B8* __this, const RuntimeMethod* method) 
{
	{
		// public byte[] ImageData { get; private set; }
		ByteU5BU5D_tA6237BF417AE52AD70CFB4EF24A7A82613DF9031* L_0 = __this->___U3CImageDataU3Ek__BackingField_0;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR RuntimeObject* Enumerator_get_Current_m6330F15D18EE4F547C05DF9BF83C5EB710376027_gshared_inline (Enumerator_t9473BAB568A27E2339D48C1F91319E0F6D244D7A* __this, const RuntimeMethod* method) 
{
	{
		RuntimeObject* L_0 = (RuntimeObject*)__this->____current_3;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Clear_m16C1F2C61FED5955F10EB36BC1CB2DF34B128994_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, const RuntimeMethod* method) 
{
	int32_t V_0 = 0;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		if (!true)
		{
			goto IL_0035;
		}
	}
	{
		int32_t L_1 = (int32_t)__this->____size_2;
		V_0 = L_1;
		__this->____size_2 = 0;
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) <= ((int32_t)0)))
		{
			goto IL_003c;
		}
	}
	{
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_3 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)__this->____items_1;
		int32_t L_4 = V_0;
		Array_Clear_m50BAA3751899858B097D3FF2ED31F284703FE5CB((RuntimeArray*)L_3, 0, L_4, NULL);
		return;
	}

IL_0035:
	{
		__this->____size_2 = 0;
	}

IL_003c:
	{
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_mEBCF994CC3814631017F46A387B1A192ED6C85C7_gshared_inline (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D* __this, RuntimeObject* ___0_item, const RuntimeMethod* method) 
{
	ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* V_0 = NULL;
	int32_t V_1 = 0;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_1 = (ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918*)__this->____items_1;
		V_0 = L_1;
		int32_t L_2 = (int32_t)__this->____size_2;
		V_1 = L_2;
		int32_t L_3 = V_1;
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_4 = V_0;
		NullCheck(L_4);
		if ((!(((uint32_t)L_3) < ((uint32_t)((int32_t)(((RuntimeArray*)L_4)->max_length))))))
		{
			goto IL_0034;
		}
	}
	{
		int32_t L_5 = V_1;
		__this->____size_2 = ((int32_t)il2cpp_codegen_add(L_5, 1));
		ObjectU5BU5D_t8061030B0A12A55D5AD8652A20C922FE99450918* L_6 = V_0;
		int32_t L_7 = V_1;
		RuntimeObject* L_8 = ___0_item;
		NullCheck(L_6);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(L_7), (RuntimeObject*)L_8);
		return;
	}

IL_0034:
	{
		RuntimeObject* L_9 = ___0_item;
		((  void (*) (List_1_tA239CB83DE5615F348BB0507E45F490F4F7C9A8D*, RuntimeObject*, const RuntimeMethod*))il2cpp_codegen_get_method_pointer(il2cpp_rgctx_method(method->klass->rgctx_data, 11)))(__this, L_9, il2cpp_rgctx_method(method->klass->rgctx_data, 11));
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Clear_m455780C5A45049F9BDC25EAD3BA10A681D16385D_gshared_inline (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, const RuntimeMethod* method) 
{
	int32_t V_0 = 0;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		if (!false)
		{
			goto IL_0035;
		}
	}
	{
		int32_t L_1 = (int32_t)__this->____size_2;
		V_0 = L_1;
		__this->____size_2 = 0;
		int32_t L_2 = V_0;
		if ((((int32_t)L_2) <= ((int32_t)0)))
		{
			goto IL_003c;
		}
	}
	{
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_3 = (Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C*)__this->____items_1;
		int32_t L_4 = V_0;
		Array_Clear_m50BAA3751899858B097D3FF2ED31F284703FE5CB((RuntimeArray*)L_3, 0, L_4, NULL);
		return;
	}

IL_0035:
	{
		__this->____size_2 = 0;
	}

IL_003c:
	{
		return;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m46EEFFA770BE665EA0CB3A5332E941DA4B3C1D37_gshared_inline (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, const RuntimeMethod* method) 
{
	{
		int32_t L_0 = (int32_t)__this->____size_2;
		return L_0;
	}
}
IL2CPP_MANAGED_FORCE_INLINE IL2CPP_METHOD_ATTR void List_1_Add_m79E50C4F592B1703F4B76A8BE7B4855515460CA1_gshared_inline (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B* __this, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 ___0_item, const RuntimeMethod* method) 
{
	Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* V_0 = NULL;
	int32_t V_1 = 0;
	{
		int32_t L_0 = (int32_t)__this->____version_3;
		__this->____version_3 = ((int32_t)il2cpp_codegen_add(L_0, 1));
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_1 = (Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C*)__this->____items_1;
		V_0 = L_1;
		int32_t L_2 = (int32_t)__this->____size_2;
		V_1 = L_2;
		int32_t L_3 = V_1;
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_4 = V_0;
		NullCheck(L_4);
		if ((!(((uint32_t)L_3) < ((uint32_t)((int32_t)(((RuntimeArray*)L_4)->max_length))))))
		{
			goto IL_0034;
		}
	}
	{
		int32_t L_5 = V_1;
		__this->____size_2 = ((int32_t)il2cpp_codegen_add(L_5, 1));
		Vector3U5BU5D_tFF1859CCE176131B909E2044F76443064254679C* L_6 = V_0;
		int32_t L_7 = V_1;
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_8 = ___0_item;
		NullCheck(L_6);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(L_7), (Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2)L_8);
		return;
	}

IL_0034:
	{
		Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2 L_9 = ___0_item;
		((  void (*) (List_1_t77B94703E05C519A9010DD0614F757F974E1CD8B*, Vector3_t24C512C7B96BBABAD472002D0BA2BDA40A5A80B2, const RuntimeMethod*))il2cpp_codegen_get_method_pointer(il2cpp_rgctx_method(method->klass->rgctx_data, 11)))(__this, L_9, il2cpp_rgctx_method(method->klass->rgctx_data, 11));
		return;
	}
}
